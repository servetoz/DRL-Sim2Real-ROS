{"version":3,"file":"studio-1343.js","mappings":"mFAOA,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,EAAK,CAAE,EAE7D,MAAMC,CAAW,CACb,YAAYC,EAAM,CACd,GAAI,EAAEA,aAAgB,MAClB,MAAM,IAAI,MAAM,qCAAqC,EAEzD,KAAK,MAAQA,EACb,KAAK,MAAQA,EAAK,IACtB,CAEA,MAAM,KAAKC,EAAQC,EAAQ,CACvB,MAAMC,EAAS,MAAM,KAAK,MAAM,MAAMF,EAAQA,EAASC,CAAM,EAAE,YAAY,EAC3E,OAAO,IAAI,WAAWC,CAAM,CAChC,CAEA,MAAO,CACH,OAAO,KAAK,KAChB,CACJ,CACAL,EAAA,QAAkBC,C,qFClBlB,MAAMK,EAAkB,IAAI,WAAW,CAAC,EACjC,SAASC,EAAcC,EAAQ,CAClC,GAAIA,EAAO,OAAS,EAChB,MAAM,IAAI,MAAM,uBAAuB,EAE3C,MAAMC,EAAO,IAAI,SAASD,EAAO,OAAQA,EAAO,WAAYA,EAAO,UAAU,EAC7E,IAAIL,EAAS,EACb,MAAMO,EAAS,CAAC,EAChB,KAAOP,EAASK,EAAO,QAAQ,CAC3B,MAAMJ,EAASK,EAAK,SAASN,EAAQ,EAAI,EAEzC,GADAA,GAAU,EACNA,EAASC,EAASI,EAAO,OACzB,MAAM,IAAI,MAAM,4BAA4B,EAEhD,MAAMG,EAAQH,EAAO,SAASL,EAAQA,EAASC,CAAM,EAC/CQ,EAAQD,EAAM,QAAQL,CAAe,EAC3C,GAAIM,IAAU,GACV,MAAM,IAAI,MAAM,sCAAsC,EAE1D,MAAMC,EAAY,IAAI,YAAY,EAAE,OAAOF,EAAM,SAAS,EAAGC,CAAK,CAAC,EACnEF,EAAOG,CAAS,EAAIF,EAAM,SAASC,EAAQ,CAAC,EAC5CT,GAAUC,CACd,CACA,OAAOM,CACX,CAEO,SAASI,EAAYN,EAAQL,EAAQ,CACxC,MAAMM,EAAO,IAAI,SAASD,EAAO,OAAQA,EAAO,WAAYA,EAAO,UAAU,EACvEO,EAAMN,EAAK,UAAUN,EAAQ,EAAI,EACjCa,EAAOP,EAAK,UAAUN,EAAS,EAAG,EAAI,EAC5C,MAAO,CAAE,IAAAY,EAAK,KAAAC,CAAK,CACvB,C,wBCjCA,SAASC,EAAOC,KAAQC,EAAW,CAC/B,MAAMC,EAAO,IAAI,KAAK,CAACC,EAAGC,IACfJ,EAAIG,EAAE,MAAOC,EAAE,KAAK,CAC9B,EACD,QAASC,EAAI,EAAGA,EAAIJ,EAAU,OAAQI,IAAK,CACvC,MAAMC,EAASL,EAAUI,CAAC,EAAE,KAAK,EAC7BC,EAAO,OAAS,IAChBJ,EAAK,KAAK,CAAE,EAAAG,EAAG,MAAOC,EAAO,KAAM,CAAC,CAE5C,CACA,MAAO,CACH,KAAM,IAAM,CACR,GAAIJ,EAAK,MAAM,EACX,MAAO,CAAE,KAAM,GAAM,MAAO,MAAU,EAE1C,KAAM,CAAE,EAAAG,CAAE,EAAIH,EAAK,MAAM,EACnBK,EAAON,EAAUI,CAAC,EAAE,KAAK,EAC/B,OAAIE,EAAK,OAAS,GACP,CAAE,MAAOL,EAAK,IAAI,EAAE,MAAO,KAAM,EAAM,EAE3C,CAAE,MAAOA,EAAK,QAAQ,CAAE,EAAAG,EAAG,MAAOE,EAAK,KAAM,CAAC,EAAE,MAAO,KAAM,EAAM,CAC9E,CACJ,CACJ,CACA,QAAeR,ECxBf,SAASS,EAAWC,EAAM,CAEtB,OADa,IAAI,SAASA,EAAK,OAAQA,EAAK,WAAYA,EAAK,UAAU,EAC3D,UAAU,EAAG,EAAI,CACjC,CACA,SAASC,EAAUD,EAAM,CAErB,OADa,IAAI,SAASA,EAAK,OAAQA,EAAK,WAAYA,EAAK,UAAU,EAC3D,SAAS,EAAG,EAAI,CAChC,CACA,SAASE,EAAcF,EAAM,CACzB,MAAMlB,EAAO,IAAI,SAASkB,EAAK,OAAQA,EAAK,WAAYA,EAAK,UAAU,EAEjEG,EAAS,OAAOrB,EAAK,UAAU,EAAG,EAAI,CAAC,EAAK,OAAOA,EAAK,UAAU,EAAG,EAAI,CAAC,GAAK,IACrF,GAAIqB,EAAS,OAAO,iBAChB,MAAM,IAAI,MAAM,oCAAoCA,GAAQ,EAEhE,OAAO,OAAOA,CAAM,CACxB,CACO,MAAMC,CAAO,CAChB,UAAUC,EAAS,CAEnB,CACJ,CACO,MAAMC,UAAkBF,CAAO,CAClC,YAAYrB,EAAQ,CAChB,MAAM,EACN,KAAK,cAAgBmB,EAAcnB,EAAO,SAAS,EACnD,KAAK,gBAAkBkB,EAAUlB,EAAO,UAAU,EAClD,KAAK,WAAakB,EAAUlB,EAAO,WAAW,CAClD,CACJ,CACAuB,EAAU,OAAS,EACZ,MAAMC,UAAcH,CAAO,CAC9B,YAAYrB,EAAQ,CAChB,MAAM,EACN,KAAK,YAAc,IAAI,YAAY,EAAE,OAAOA,EAAO,WAAW,EAC9D,KAAK,KAAOgB,EAAWhB,EAAO,IAAI,CACtC,CACA,UAAUF,EAAQ,CACd,KAAK,KAAOA,CAChB,CACJ,CACA0B,EAAM,OAAS,EACf,MAAMC,EAAW,CAACzB,EAAQQ,IAAQ,CAC9B,GAAIR,EAAOQ,CAAG,GAAK,KACf,MAAM,IAAI,MAAM,gCAAgCA,IAAM,EAE1D,OAAO,IAAI,YAAY,EAAE,OAAOR,EAAOQ,CAAG,CAAC,CAC/C,EACO,MAAMkB,UAAmBL,CAAO,CACnC,YAAYrB,EAAQ,CAChB,MAAM,EACN,KAAK,KAAOgB,EAAWhB,EAAO,IAAI,EAClC,KAAK,MAAQ,IAAI,YAAY,EAAE,OAAOA,EAAO,KAAK,EAClD,KAAK,KAAO,OACZ,KAAK,OAAS,OACd,KAAK,kBAAoB,EAC7B,CACA,UAAUF,EAAQ,CACd,MAAME,EAASH,EAAcC,CAAM,EACnC,KAAK,KAAO2B,EAASzB,EAAQ,MAAM,EACnC,KAAK,OAASyB,EAASzB,EAAQ,QAAQ,EACvC,KAAK,kBAAoByB,EAASzB,EAAQ,oBAAoB,EAC1DA,EAAO,UAAY,OACnB,KAAK,SAAW,IAAI,YAAY,EAAE,OAAOA,EAAO,QAAQ,GAExDA,EAAO,UAAY,OACnB,KAAK,SAAW,IAAI,YAAY,EAAE,OAAOA,EAAO,QAAQ,IAAM,IAEtE,CACJ,CACA0B,EAAW,OAAS,EACb,MAAMC,UAAoBN,CAAO,CACpC,YAAYrB,EAAQ,CAChB,MAAM,EACN,KAAK,KAAOgB,EAAWhB,EAAO,IAAI,EAClC,KAAK,KAAOI,EAAYJ,EAAO,KAAM,CAAC,CAC1C,CACA,UAAUF,EAAQ,CACd,KAAK,KAAOA,CAChB,CACJ,CACA6B,EAAY,OAAS,EACd,MAAMC,UAAkBP,CAAO,CAClC,YAAYrB,EAAQ,CAChB,MAAM,EACN,KAAK,IAAMgB,EAAWhB,EAAO,GAAG,EAChC,KAAK,KAAOgB,EAAWhB,EAAO,IAAI,EAClC,KAAK,MAAQgB,EAAWhB,EAAO,KAAK,CACxC,CACA,UAAUF,EAAQ,CACd,KAAK,QAAU,CAAC,EAChB,MAAMC,EAAO,IAAI,SAASD,EAAO,OAAQA,EAAO,WAAYA,EAAO,UAAU,EAC7E,QAASe,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC5B,KAAK,QAAQ,KAAK,CACd,KAAMT,EAAYN,EAAQe,EAAI,EAAE,EAChC,OAAQd,EAAK,UAAUc,EAAI,GAAK,EAAG,EAAI,CAC3C,CAAC,CAET,CACJ,CACAe,EAAU,OAAS,EACZ,MAAMC,UAAkBR,CAAO,CAClC,YAAYrB,EAAQ,CAChB,MAAM,EACN,KAAK,YAAc,CAAC,EACpB,KAAK,IAAMgB,EAAWhB,EAAO,GAAG,EAChC,KAAK,cAAgBmB,EAAcnB,EAAO,SAAS,EACnD,KAAK,UAAYI,EAAYJ,EAAO,WAAY,CAAC,EACjD,KAAK,QAAUI,EAAYJ,EAAO,SAAU,CAAC,EAC7C,KAAK,MAAQgB,EAAWhB,EAAO,KAAK,CACxC,CACA,UAAUF,EAAQ,CACd,KAAK,YAAc,CAAC,EACpB,MAAMC,EAAO,IAAI,SAASD,EAAO,OAAQA,EAAO,WAAYA,EAAO,UAAU,EAC7E,QAASe,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC5B,KAAK,YAAY,KAAK,CAClB,KAAMd,EAAK,UAAUc,EAAI,EAAG,EAAI,EAChC,MAAOd,EAAK,UAAUc,EAAI,EAAI,EAAG,EAAI,CACzC,CAAC,CAET,CACJ,CACAgB,EAAU,OAAS,ECtHnB,MAAMC,EAAgB,GAChBC,EAAmB,KACnBC,EAAgB,GAKP,MAAMC,CAAU,CAC3B,YAAYC,EAAU,CAClB,KAAK,MAAQA,CACjB,CACA,MAAM,iBAAkB,CACpB,MAAMpC,EAAS,MAAM,KAAK,MAAM,KAAK,EAAGkC,CAAa,EAErD,GADc,IAAI,YAAY,EAAE,OAAOlC,CAAM,IAC/B;AAAA,EACV,MAAM,IAAI,MAAM,6BAA6B,CAErD,CAIA,MAAM,YAAa,CACf,MAAM,KAAK,gBAAgB,EAC3B,MAAMA,EAAS,MAAM,KAAK,MAAM,KAAKkC,EAAeD,CAAgB,EAC9DhC,EAAO,IAAI,SAASD,EAAO,OAAQA,EAAO,WAAYA,EAAO,UAAU,EACvEqC,EAAOrC,EAAO,OACpB,GAAIqC,EAAO,EACP,MAAM,IAAI,MAAM,sBAAsBH,iBAA6B,EAEvE,MAAMI,EAAerC,EAAK,SAAS,EAAG+B,CAAa,EACnD,GAAIK,EAAOC,EAAe,EACtB,MAAM,IAAI,MAAM,sBAAsBJ,uBAAmCI,IAAe,EAE5F,OAAO,KAAK,qBAAqBtC,EAAQkC,EAAeT,CAAS,CACrE,CAKA,MAAM,4BAA4Bc,EAAYC,EAAiBC,EAAY,CACvE,MAAMzC,EAAS,MAAM,KAAK,MAAM,KAAKuC,EAAY,KAAK,MAAM,KAAK,EAAIA,CAAU,EAC/E,GAAIC,IAAoB,EACpB,MAAO,CAAE,YAAa,CAAC,EAAG,WAAY,CAAC,CAAE,EAE7C,MAAME,EAAc,KAAK,sBAAsB1C,EAAQwC,EAAiBD,EAAYX,CAAU,EACxFe,EAAwBD,EAAYF,EAAkB,CAAC,EAAE,IAAME,EAAY,CAAC,EAAE,OAC9EE,EAAa,KAAK,sBAAsB5C,EAAO,SAAS2C,CAAqB,EAAGF,EAAYF,EAAaI,EAAuBZ,CAAS,EAC/I,GAAIU,EAAa,EAAG,CAChB,QAAS1B,EAAI,EAAGA,EAAI0B,EAAa,EAAG1B,IAChC6B,EAAW7B,CAAC,EAAE,UAAY6B,EAAW7B,EAAI,CAAC,EAE9C6B,EAAWH,EAAa,CAAC,EAAE,UAAY,MAC3C,CACA,MAAO,CAAE,YAAAC,EAAa,WAAAE,CAAW,CACrC,CAIA,MAAM,kBAAkBC,EAAWH,EAAaI,EAAWC,EAASC,EAAY,CAC5E,MAAMC,EAAQH,GAAa,CAAE,IAAK,EAAG,KAAM,CAAE,EACvCI,EAAMH,GAAW,CAAE,IAAK,OAAO,UAAW,KAAM,OAAO,SAAU,EACjEI,EAAQT,GACVG,EAAU,YAAY,IAAKO,GAChBA,EAAW,IACrB,EACCpC,EAAS,MAAM,KAAK,UAAU6B,EAAWG,CAAU,EACnDK,EAAQrC,EAAO,MACfsC,EAAU,CAAC,EACjBtC,EAAO,QAAQ,QAASZ,GAAU,CAC9BkD,EAAQlD,EAAM,IAAI,EAAIA,CAC1B,CAAC,EAID,MAAMO,EAHqBwC,EAAM,OAAQI,GAC9BD,EAAQC,CAAI,GAAK,IAC3B,EACoC,IAAKA,GAC/BD,EAAQC,CAAI,EAAE,QAAQ,OAAO,QAAQ,EAAE,CACjD,EACKC,GAAO,EAAO,CAAC3C,EAAGC,QAAM,WAAQD,EAAE,KAAMC,GAAE,IAAI,EAAG,GAAGH,CAAS,EAC7D8C,GAAU,CAAC,EACjB,IAAIC,GAAOF,GAAK,KAAK,EACrB,KAAOE,GAAK,OAAS,IAAM,CACvB,KAAM,CAAE,MAAAC,CAAM,EAAID,GAElB,GADAA,GAAOF,GAAK,KAAK,EACb,EAAAG,GAAS,SAAQ,iBAAcV,EAAOU,EAAM,IAAI,GAGpD,OAAI,iBAAcA,EAAM,KAAMT,CAAG,EAC7B,MAEJO,GAAQ,KAAKE,CAAK,EACtB,CAIA,OAHiBF,GAAQ,IAAKG,GACnB,KAAK,qBAAqBP,EAAM,KAAK,SAASO,EAAM,MAAM,EAAGP,EAAM,WAAYxB,CAAW,CACpG,CAEL,CAEA,MAAM,UAAUgB,EAAWG,EAAY,CAInC,GAAIH,IAAc,KAAK,gBAAkB,KAAK,iBAAmB,KAC7D,OAAO,KAAK,gBAEhB,KAAM,CAAE,UAAAgB,CAAU,EAAIhB,EAChBiB,EAAaD,GAAa,KAC1BA,EAAU,cAAgBhB,EAAU,cACpC,KAAK,MAAM,KAAK,EAAIA,EAAU,cAC9B7C,EAAS,MAAM,KAAK,MAAM,KAAK6C,EAAU,cAAeiB,CAAU,EAClET,EAAQ,KAAK,qBAAqBrD,EAAQ6C,EAAU,cAAenB,CAAK,EACxE,CAAE,YAAAqC,CAAY,EAAIV,EACxB,GAAIU,IAAgB,OAAQ,CACxB,MAAMC,EAAehB,EAAWe,CAAW,EAC3C,GAAIC,GAAgB,KAChB,MAAM,IAAI,MAAM,gCAAgCX,EAAM,aAAa,EAEvE,MAAMrC,EAASgD,EAAaX,EAAM,KAAMA,EAAM,IAAI,EAClDA,EAAM,KAAOrC,CACjB,CACA,MAAMsC,EAAU,KAAK,sBAAsBtD,EAAO,SAASqD,EAAM,MAAM,EAAGR,EAAU,MAAOA,EAAU,cAAgBQ,EAAM,OAAQvB,CAAS,EAC5I,YAAK,eAAiBe,EACtB,KAAK,gBAAkB,CAAE,MAAAQ,EAAO,QAAAC,CAAQ,EACjC,KAAK,eAChB,CAEA,sBAAsBtD,EAAQiE,EAAO1B,EAAY2B,EAAK,CAClD,MAAMC,EAAU,CAAC,EACjB,IAAIC,EAAe,EACnB,QAASrD,EAAI,EAAGA,EAAIkD,EAAOlD,IAAK,CAC5B,MAAMsD,EAAS,KAAK,qBAAqBrE,EAAO,SAASoE,CAAY,EAAG7B,EAAa6B,EAAcF,CAAG,EAKtGE,GAAgBC,EAAO,IAAMA,EAAO,OACpCF,EAAQ,KAAKE,CAAM,CACvB,CACA,OAAOF,CACX,CAEA,qBAAqBnE,EAAQuC,EAAY2B,EAAK,CAC1C,MAAMjE,EAAO,IAAI,SAASD,EAAO,OAAQA,EAAO,WAAYA,EAAO,UAAU,EACvEsC,EAAerC,EAAK,SAAS,EAAG+B,CAAa,EAC7C9B,EAASH,EAAcC,EAAO,SAAS,EAAG,EAAIsC,CAAY,CAAC,EACjE,GAAIpC,EAAO,IAAM,KACb,MAAM,IAAI,MAAM,+BAA+B,EAGnD,MAAMoE,EADS,IAAI,SAASpE,EAAO,GAAG,OAAQA,EAAO,GAAG,WAAYA,EAAO,GAAG,UAAU,EAClE,SAAS,CAAC,EAChC,GAAIoE,IAAWJ,EAAI,OACf,MAAM,IAAI,MAAM,YAAYA,EAAI,SAASA,EAAI,qBAAqBI,GAAQ,EAE9E,MAAMD,EAAS,IAAIH,EAAIhE,CAAM,EACvBqE,EAAa,EAAIjC,EAAe,EAChCkC,EAAavE,EAAK,SAAS,EAAIqC,EAAcN,CAAa,EAO1DyC,GAAO,IAAI,WAAWzE,EAAO,OAAO,MAAMA,EAAO,WAAauE,EAAYvE,EAAO,WAAauE,EAAaC,CAAU,CAAC,EAC5H,OAAAH,EAAO,UAAUI,EAAI,EACrBJ,EAAO,OAAS9B,EAChB8B,EAAO,WAAaA,EAAO,OAAS,EAAI/B,EAAe,EACvD+B,EAAO,IAAMA,EAAO,WAAaG,EACjCH,EAAO,OAASA,EAAO,IAAMA,EAAO,OAC7BA,CACX,CACJ,CClLO,MAAMK,CAAa,CACtB,YAAYC,EAAMC,EAAS,CAWvB,GAVA,KAAK,uBAAyB,IAAI,IAClC,KAAK,YAAcD,EAAK,YACxB,KAAK,OAASA,EAAK,OACnB,KAAK,SAAWA,EAAK,SACrB,KAAK,WAAaA,EAAK,WACvB,KAAK,OAASA,EAAK,OACnB,KAAK,WAAaA,EAAK,WACvB,KAAK,KAAO,IAAI,KAAKC,CAAO,EAC5B,KAAK,MAAQD,EAAK,MAEdA,EAAK,OAAQ,CACb,MAAME,EAASF,EAAK,OACdG,EAAiB,KAAK,cAAgB,IAAI,IAChD,SAAW,CAACC,EAAI3B,CAAU,IAAKuB,EAAK,YAC5BE,EAAO,SAASzB,EAAW,KAAK,GAChC,KAAK,cAAc,IAAI2B,CAAE,EAKjC,KAAK,WAAaJ,EAAK,WAAW,OAAQK,GAC/BA,EAAK,YAAY,KAAMzB,GACnBuB,EAAc,IAAIvB,EAAK,IAAI,CACrC,CACJ,CACL,CACJ,CAIA,OAAQ,OAAO,aAAa,GAAI,CAC5B,OAAa,CACJ,KAAK,KAAK,MAAM,GACjB,MAAM,KAAK,SAAS,EAOnB,KAAK,KAAK,MAAM,GACjB,MAAM,KAAK,SAAS,EAExB,MAAMG,EAAO,KAAK,KAAK,IAAI,EAC3B,GAAI,CAACA,EACD,OAEJ,MAAML,EAAQK,EAAK,gBAAgB,MAC7BuB,EAAc,KAAK,OAAO,qBAAqB5B,EAAM,KAAK,SAASK,EAAK,MAAM,EAAGL,EAAM,WAAYxB,CAAW,EAC9GuB,EAAa,KAAK,YAAY,IAAI6B,EAAY,IAAI,EACxD,GAAI,CAAC7B,EACD,MAAM,IAAI,MAAM,qCAAqC6B,EAAY,MAAM,EAE3E,KAAM,CAAE,MAAAC,CAAM,EAAI9B,EACZ,CAAE,KAAAqB,EAAM,KAAAU,CAAK,EAAIF,EACvB,GAAI,CAACR,EACD,MAAM,IAAI,MAAM,iCAAiCS,GAAO,EAS5D,KAPc,CACV,MAAAA,EACA,aAAcD,EAAY,KAC1B,UAAWE,EACX,KAAAV,EACA,QAAS,KAAK,QAAQA,EAAMrB,CAAU,CAC1C,CAEJ,CACJ,CACJ,CCrEO,MAAMgC,UAAwBV,CAAa,CAC9C,YAAYC,EAAM,CAEd,MAAMA,EAAM,CAAC9D,EAAGC,OACL,WAAQD,EAAE,KAAMC,EAAE,IAAI,CAChC,EAID,KAAK,WAAa,KAAK,WAAW,OAAQkE,MAC/B,WAAQA,EAAK,QAAS,KAAK,QAAQ,GAAK,CAClD,EAED,MAAMK,EAAgB,IAAI,KAAK,CAACxE,EAAGC,OACxB,WAAQD,EAAE,UAAWC,EAAE,SAAS,CAC1C,EACD,UAAWkE,KAAQ,KAAK,WACpBK,EAAc,OAAOL,CAAI,EAG7B,IADA,KAAK,oBAAsB,CAAC,EACrBK,EAAc,KAAK,EAAI,GAC1B,KAAK,oBAAoB,KAAKA,EAAc,IAAI,CAAC,CAEzD,CACA,MAAM,UAAW,CACb,MAAMC,EAAQ,KAAK,SACbC,EAAiB,KAAK,oBAAoB,CAAC,EACjD,GAAI,CAACA,EACD,OAEJ,KAAK,oBAAoB,CAAC,EAAI,OAC9B,IAAIrC,EAAMqC,EAAe,QACzB,MAAMC,EAAe,CAACD,CAAc,EACpC,QAASE,EAAM,EAAGA,EAAM,KAAK,oBAAoB,OAAQ,EAAEA,EAAK,CAC5D,MAAMC,EAAgB,KAAK,oBAAoBD,CAAG,EAClD,GAAI,CAACC,EACD,SAGJ,MAAI,WAAQA,EAAc,UAAWxC,CAAG,EAAI,EACxC,MAGJsC,EAAa,KAAKE,CAAa,KAGZ,WAAQA,EAAc,QAASxC,CAAG,GACnC,IACd,KAAK,oBAAoBuC,CAAG,EAAI,OAExC,CAIA,GAFA,KAAK,oBAAsB,KAAK,oBAAoB,OAAO,OAAO,EAE9DD,EAAa,SAAW,EACxB,OAGJ,KAAK,SAAWtC,KAAM,OAAQA,EAAK,CAAE,IAAK,EAAG,KAAM,CAAE,CAAC,EACtD,MAAMtC,EAAO,KAAK,KACZ+E,EAAW,IAAI,IACrB,UAAW9C,KAAa2C,EAAc,CAClC,IAAIxE,EAAS,KAAK,uBAAuB,IAAI6B,EAAU,aAAa,EAC/D7B,IACDA,EAAS,MAAM,KAAK,OAAO,UAAU6B,EAAW,KAAK,UAAU,MAI/D,WAAQA,EAAU,UAAWK,CAAG,GAAK,MAAK,WAAQL,EAAU,QAASK,CAAG,GAAK,GAC7EyC,EAAS,IAAI9C,EAAU,cAAe7B,CAAM,EAEhD,UAAW4E,KAAa5E,EAAO,QAC3B,GAAI,OAAK,eAAiB,CAAC,KAAK,cAAc,IAAI4E,EAAU,IAAI,GAGhE,UAAWC,KAAcD,EAAU,SAAW,CAAC,KAEvC,WAAQC,EAAW,KAAMP,CAAK,EAAI,MAAK,WAAQO,EAAW,KAAM3C,CAAG,GAAK,GAG5EtC,EAAK,KAAK,CAAE,KAAMiF,EAAW,KAAM,OAAQA,EAAW,OAAQ,gBAAiB7E,CAAO,CAAC,CAGnG,CACA,KAAK,uBAAyB2E,CAClC,CACJ,CCjFe,MAAMG,CAAW,CAC5B,YAAYZ,EAAOa,EAASC,EAAWvB,EAAMwB,EAAaC,EAE1DC,EAAQ,CAEJ,KAAK,MAAQjB,EAEb,KAAK,QAAUa,EAEf,KAAK,UAAYC,EAEjB,KAAK,KAAOvB,EAEZ,KAAK,YAAcwB,EAEnB,KAAK,YAAcC,EACfC,IAAW,KACX,OAAO,OAAOH,CAAS,EACvB,OAAO,OAAO,IAAI,EAE1B,CACJ,CC1BO,MAAMI,UAAwB1B,CAAa,CAC9C,YAAYC,EAAM,CAEd,MAAMA,EAAM,CAAC9D,EAAGC,OACL,WAAQA,EAAE,KAAMD,EAAE,IAAI,CAChC,EAID,KAAK,WAAa,KAAK,WAAW,OAAQmE,MAC/B,WAAQA,EAAK,UAAW,KAAK,QAAQ,GAAK,CACpD,EAED,MAAMK,EAAgB,IAAI,KAAK,CAACxE,EAAGC,OACxB,WAAQA,EAAE,QAASD,EAAE,OAAO,CACtC,EACD,UAAWmE,KAAQ,KAAK,WACpBK,EAAc,OAAOL,CAAI,EAG7B,IADA,KAAK,oBAAsB,CAAC,EACrBK,EAAc,KAAK,EAAI,GAC1B,KAAK,oBAAoB,KAAKA,EAAc,IAAI,CAAC,CAEzD,CACA,MAAM,UAAW,CACb,MAAMC,EAAQ,KAAK,SACbC,EAAiB,KAAK,oBAAoB,CAAC,EACjD,GAAI,CAACA,EACD,OAEJ,KAAK,oBAAoB,CAAC,EAAI,OAC9B,IAAItC,EAAQsC,EAAe,UAC3B,MAAMC,EAAe,CAACD,CAAc,EACpC,QAASE,EAAM,EAAGA,EAAM,KAAK,oBAAoB,OAAQ,EAAEA,EAAK,CAC5D,MAAMC,EAAgB,KAAK,oBAAoBD,CAAG,EAClD,GAAI,CAACC,EACD,SAGJ,MAAI,WAAQA,EAAc,QAASzC,CAAK,EAAI,EACxC,MAGJuC,EAAa,KAAKE,CAAa,KAEV,WAAQA,EAAc,UAAWzC,CAAK,GACvC,IAChB,KAAK,oBAAoBwC,CAAG,EAAI,OAExC,CAIA,GAFA,KAAK,oBAAsB,KAAK,oBAAoB,OAAO,OAAO,EAE9DD,EAAa,SAAW,EACxB,OAGJ,KAAK,SAAWvC,KAAQ,YAAQA,EAAO,CAAE,IAAK,EAAG,KAAM,CAAE,CAAC,EAC1D,MAAMrC,EAAO,KAAK,KACZ+E,EAAW,IAAI,IACrB,UAAW9C,KAAa2C,EAAc,CAClC,IAAIxE,EAAS,KAAK,uBAAuB,IAAI6B,EAAU,aAAa,EAC/D7B,IACDA,EAAS,MAAM,KAAK,OAAO,UAAU6B,EAAW,KAAK,UAAU,MAI/D,WAAQA,EAAU,UAAWI,CAAK,GAAK,MAAK,WAAQJ,EAAU,QAASI,CAAK,GAAK,GACjF0C,EAAS,IAAI9C,EAAU,cAAe7B,CAAM,EAEhD,UAAW4E,KAAa5E,EAAO,QAC3B,GAAI,OAAK,eAAiB,CAAC,KAAK,cAAc,IAAI4E,EAAU,IAAI,GAGhE,UAAWC,KAAcD,EAAU,SAAW,CAAC,KAEvC,WAAQC,EAAW,KAAM5C,CAAK,GAAK,MAAK,WAAQ4C,EAAW,KAAMP,CAAK,EAAI,GAG9E1E,EAAK,KAAK,CAAE,KAAMiF,EAAW,KAAM,OAAQA,EAAW,OAAQ,gBAAiB7E,CAAO,CAAC,CAGnG,CACA,KAAK,uBAAyB2E,CAClC,CACJ,CC3Ee,MAAMU,CAAI,CACrB,YAAYjE,EAAUkE,EAAK,CACvB,KAAK,WAAa,CAAC,EACnB,KAAK,OAAS,IAAInE,EAAUC,CAAQ,EACpC,KAAK,YAAc,IAAI,IACvB,KAAK,OAASkE,GAAO,CAAC,CAC1B,CAGA,MAAM,MAAO,CACT,KAAK,OAAS,MAAM,KAAK,OAAO,WAAW,EAC3C,KAAM,CAAE,gBAAA9D,EAAiB,WAAAC,EAAY,cAAA8D,CAAc,EAAI,KAAK,OACtDvF,EAAS,MAAM,KAAK,OAAO,4BAA4BuF,EAAe/D,EAAiBC,CAAU,EACvG,KAAK,YAAc,IAAI,IACvBzB,EAAO,YAAY,QAASoC,GAAe,CACvC,KAAK,YAAY,IAAIA,EAAW,KAAMA,CAAU,CACpD,CAAC,EACD,KAAK,WAAapC,EAAO,WACrByB,EAAa,IACb,KAAK,UAAY,KAAK,WAAW,CAAC,EAAE,UACpC,KAAK,QAAU,KAAK,WAAWA,EAAa,CAAC,EAAE,QAEvD,CACA,gBAAgB6D,EAAK,CACjB,MAAMzB,EAASyB,GAAK,OACpB,IAAIE,EAQJ,GAPI,KAAK,OAAO,QAAU,KACtBA,EAAQ,CAAC/B,EAAMrB,KAEXA,EAAW,SAAWA,EAAW,OAAS,IAAI,mBAAc,SAAuBA,EAAW,iBAAiB,CAAC,GACzGA,EAAW,OAAO,YAAYqB,CAAI,IAG7C6B,GAAK,UAAY,GAAM,CACvB,MAAMG,EAAWH,GAAK,OAAS,KAAK,QACpC,GAAI,CAACG,EACD,MAAM,IAAI,MAAM,cAAc,EAElC,OAAO,IAAIL,EAAgB,CACvB,SAAAK,EACA,OAAA5B,EACA,OAAQ,KAAK,OACb,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,WAAY,KAAK,OAAO,YAAc,CAAC,EACvC,MAAA2B,CACJ,CAAC,CACL,KACK,CACD,MAAMC,EAAWH,GAAK,OAAS,KAAK,UACpC,GAAI,CAACG,EACD,MAAM,IAAI,MAAM,cAAc,EAElC,OAAO,IAAIrB,EAAgB,CACvB,SAAAqB,EACA,OAAA5B,EACA,OAAQ,KAAK,OACb,WAAY,KAAK,WACjB,YAAa,KAAK,YAClB,WAAY,KAAK,OAAO,YAAc,CAAC,EACvC,MAAA2B,CACJ,CAAC,CACL,CACJ,CAMA,MAAM,aAAaE,EAAMC,EAAU,CAC/B,MAAMjE,EAAc,KAAK,YACnBI,EAAY4D,EAAK,WAAa,CAAE,IAAK,EAAG,KAAM,CAAE,EAChD3D,EAAU2D,EAAK,SAAW,CAAE,IAAK,OAAO,UAAW,KAAM,OAAO,SAAU,EAC1E7B,EAAS6B,EAAK,QAAU,CAAC,GAAGhE,EAAY,OAAO,CAAC,EAAE,IAAKU,GAAeA,EAAW,KAAK,EACtFwD,EAAsB,CAAC,GAAGlE,EAAY,OAAO,CAAC,EAC/C,OAAQU,GACFyB,EAAO,SAASzB,EAAW,KAAK,CAC1C,EACI,IAAKA,GAAeA,EAAW,IAAI,EAClC,CAAE,WAAAJ,EAAa,CAAC,CAAE,EAAI0D,EAEtB9D,EAAa,KAAK,WAAW,OAAQoC,MAChC,WAAQA,EAAK,UAAWjC,CAAO,GAAK,MAAK,WAAQD,EAAWkC,EAAK,OAAO,GAAK,CACvF,EACD,SAAS6B,EAASC,EAAKb,GAAa,CAChC,MAAM7C,EAAaV,EAAY,IAAIoE,EAAI,IAAI,EAC3C,GAAI1D,GAAc,KACd,MAAM,IAAI,MAAM,qCAAqC0D,EAAI,MAAM,EAEnE,KAAM,CAAE,MAAA5B,EAAM,EAAI9B,EACZ,CAAE,KAAAqB,GAAM,KAAMuB,EAAU,EAAIc,EAClC,GAAIrC,IAAQ,KACR,MAAM,IAAI,MAAM,iCAAiCS,IAAO,EAE5D,IAAIa,GAAU,KACd,OAAIW,EAAK,UAAY,KAEjBtD,EAAW,OACPA,EAAW,QACP,IAAI,mBAAc,SAAuBA,EAAW,iBAAiB,EAAG,CACpE,OAAQsD,EAAK,MACjB,CAAC,EACTX,GAAU3C,EAAW,OAAO,YAAYqB,EAAI,GAEzC,IAAIqB,EAAWZ,GAAOa,GAASC,GAAWvB,GAAMwB,GAAarD,EAAW,OAAQ8D,EAAK,MAAM,CACtG,CACA,QAAS3F,EAAI,EAAGA,EAAI6B,EAAW,OAAQ7B,IAAK,CACxC,MAAMiE,GAAOpC,EAAW7B,CAAC,GACR,MAAM,KAAK,OAAO,kBAAkBiE,GAAM4B,EAAqB9D,EAAWC,EAASC,CAAU,GACrG,QAAS8D,IAAQH,EAASE,EAASC,GAAK/F,CAAC,CAAC,CAAC,CACxD,CACJ,CACJ,C,kBCzHA,KAAM,CAAE,QAAStB,CAAW,EAAI,EAAQ,KAA2B,EAEnEsH,EAAO,QAAU,CACf,WAAAtH,CACF,C,qCCPA,EAA6C,CAAE,MAAO,EAAK,EAE3D,MAAMuH,EADU,EAAQ,KAAO,EACN,gBAAgB,EAAQ,KAAgB,CAAC,EAClE,MAAMC,CAAM,CACR,YAAYF,EAAQ,CAChB,KAAK,OAASA,CAClB,CACA,aAAa,MAAO,CAChB,OAAO,IAAIE,EAAM,MAAMD,EAAS,QAAQ,CAAC,CAC7C,CACA,WAAWE,EAAKC,EAAU,CAAE,MAAAC,EAAQ,EAAM,EAAI,CAAC,EAAG,CAC9C,MAAMC,EAAS,KAAK,OAAO,QAAQH,EAAI,UAAU,EAC3CI,EAAS,KAAK,OAAO,QAAQH,CAAQ,EAC3C,KAAK,OAAO,OAAO,SAASE,EAAQA,EAASH,EAAI,UAAU,EAAE,IAAIA,CAAG,EACpE,GAAI,CACA,KAAM,CAAE,KAAAK,EAAM,MAAAC,EAAO,OAAAxH,CAAO,EAAI,KAAK,OAAO,WAAWsH,EAAQH,EAAUE,EAAQH,EAAI,WAAYE,EAAQ,EAAI,CAAC,EAC9G,GAAIG,IAAS,GAAKvH,GAAU,KACxB,MAAM,IAAI,MAAM,6BAA6BuH,MAASC,GAAS,YAAY,EAE/E,OAAO,IAAI,WAAWxH,CAAM,CAChC,QACA,CACI,KAAK,OAAO,MAAMqH,CAAM,EACxB,KAAK,OAAO,MAAMC,CAAM,CAC5B,CACJ,CACJ,CACA9H,EAAA,QAAkByH,C,oDCrBlB,MAAMQ,EADgB,EAAQ,KAAY,EACN,EAEpC,IAAIC,EACAC,EAEJ,SAASC,GAAe,CACtB,GAAI,CAACF,EACH,MAAM,IAAI,MACR,2GACF,CAEJ,CAEAX,EAAO,QAAU,SAAoBG,EAAKC,EAAU,CAClDS,EAAa,EACb,MAAMC,EAAUX,EAAI,WAEdY,EAAaJ,EAAO,QAAQG,CAAO,EACnCE,EAAcL,EAAO,QAAQP,CAAQ,EAGpB,IAAI,WAAWO,EAAO,OAAO,OAAQI,EAAYD,CAAO,EAEhE,IAAIX,CAAG,EAGtBS,EAAUA,GAAWD,EAAO,4BAA4B,EAGxD,MAAMM,EAAaN,EAAO,iBAAiBC,EAASI,EAAaZ,EAAUW,EAAYD,CAAO,EAE9F,GAAI,CACF,GAAIG,IAAe,GACjB,MAAM,IAAI,MAAM,4BAA4B,EAI9C,MAAMC,EAASC,EAAO,YAAYF,CAAU,EAC5C,OAAAE,EAAO,KAAKR,EAAO,OAAO,MAAM,EAAE,KAAKO,EAAQ,EAAGF,EAAaA,EAAcC,CAAU,EAChFC,CACT,QAAE,CAEAP,EAAO,MAAMI,CAAU,EAEvBJ,EAAO,MAAMK,CAAW,CAC1B,CACF,EAOAhB,EAAO,QAAQ,SAAWU,EAAc,KAAMU,GAAQA,EAAI,MAAS,KAAK,IAAM,CAAC,CAAC,CAAC,EAGjFV,EAAc,KAAMU,GAAQ,CAC1BT,EAASS,CAMX,CAAC,C,6ICrEGT,GAAU,IAAM,CAClB,IAAIU,EAAa,OAAO,SAAa,KAAe,SAAS,cAAgB,SAAS,cAAc,IAAM,OACnE,OAAAA,EAAaA,GAAcC,EAEpE,SAASX,EAAQ,CACfA,EAASA,GAAU,CAAC,EAEtB,IAAIA,EAAO,OAAOA,EAAQ,IAAYA,EAAO,CAAC,EAAMY,EAAoBC,EAAmBb,EAAO,MAAS,IAAI,QAAQ,SAASc,EAAQC,EAAO,CAACH,EAAoBE,EAAQD,EAAmBE,CAAM,CAAC,EAAE,IAAIC,EAAY,OAAOC,EAAU,MAAajB,EAAO,YAAeiB,EAAQ,IAAI,sBAAqBjB,EAAO,WAAW,SAASkB,EAAM,CAAC,OAAGC,GAAqBH,EAAS,CAAC,UAAU,SAASI,EAAI,CAAC,OAAOA,CAAG,CAAC,EAASC,EAAU,IAAIH,GAASA,EAAM,SAAS,OAAO,EAAmB,EAAQ,KAAiB,EAA0BA,CAAK,EAAE,IAAII,EAAgB,OAAO,OAAO,CAAC,EAAEtB,CAAM,EAAMuB,EAAW,CAAC,EAAMC,EAAY,iBAAqBC,EAAM,CAACC,EAAOC,IAAU,CAAC,MAAMA,CAAO,EAAMC,EAAmB,OAAO,QAAQ,SAAaC,EAAsB,OAAO,eAAe,WAAeV,EAAoB,OAAOF,GAAS,UAAU,OAAOA,EAAQ,UAAU,UAAU,OAAOA,EAAQ,SAAS,MAAM,SAAaa,EAAgB,GAAG,SAASC,EAAWC,EAAK,CAAC,OAAGhC,EAAO,WAAsBA,EAAO,WAAcgC,EAAKF,CAAe,EAASA,EAAgBE,CAAI,CAAC,IAAIC,EAAMC,EAAUC,EAAWC,EAAe,SAASC,EAAmBC,EAAE,CAAC,GAAGA,aAAaC,GAAW,OAAmBC,EAAI,6BAANF,CAAwC,CAAC,CAAC,GAAGnB,EAAoB,CAAIU,EAAuBC,EAAgB,iBAAwBA,CAAe,EAAE,IAASA,EAAgBT,EAAU,IAAI,IAAIoB,EAAGzB,EAAyCyB,EAAG,EAAQ,KAAI,EAAEzB,EAAS,EAAQ,KAAM,EAAEiB,EAAM,CAACS,EAASC,KAAUD,EAAS1B,EAAS,UAAa0B,CAAQ,EAASD,EAAG,aAAaC,EAASC,EAAO,OAAU,MAAM,GAAGR,EAAWO,GAAU,CAAC,IAAIE,EAAIX,EAAMS,EAAS,EAAI,EAAE,OAAIE,EAAI,SAAQA,EAAI,IAAI,WAAWA,CAAG,GAASA,CAAG,EAAEV,EAAU,CAACQ,EAASG,EAAOC,IAAU,CAACJ,EAAS1B,EAAS,UAAa0B,CAAQ,EAAED,EAAG,SAASC,EAAS,SAASF,GAAIzF,GAAK,CAAIyF,GAAIM,EAAQN,EAAG,EAAOK,EAAO9F,GAAK,MAAM,CAAC,CAAC,CAAC,EAAKkE,EAAQ,KAAQ,OAAO,IAAGO,EAAYP,EAAQ,KAAQ,CAAC,EAAE,QAAQ,MAAM,GAAG,GAAEM,EAAWN,EAAQ,KAAQ,MAAM,CAAC,EAAEQ,EAAM,CAACC,EAAOC,IAAU,CAAC,GAAGoB,EAAiB,EAAG,MAAA9B,EAAQ,SAAYS,EAAaC,EAAQU,EAAmBV,CAAO,EAAEV,EAAQ,KAAQS,CAAM,CAAC,EAAE1B,EAAO,QAAW,UAAU,CAAC,MAAM,4BAA4B,CAAC,MAAS4B,GAAoBC,KAA0BA,EAAuBC,EAAgB,KAAK,SAAS,KAAa,OAAO,SAAU,KAAa,SAAS,gBAAeA,EAAgB,SAAS,cAAc,KAAOpB,IAAYoB,EAAgBpB,GAAcoB,EAAgB,QAAQ,OAAO,IAAI,EAAGA,EAAgBA,EAAgB,OAAO,EAAEA,EAAgB,QAAQ,SAAS,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,EAAOA,EAAgB,GAAIG,EAAMe,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,KAAK,IAAI,EAASA,EAAI,YAAY,EAAKpB,IAAuBM,EAAWa,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,aAAa,cAAcA,EAAI,KAAK,IAAI,EAAS,IAAI,WAAWA,EAAI,QAAQ,CAAC,GAAEf,EAAU,CAACc,EAAIH,EAAOC,IAAU,CAAC,IAAIG,EAAI,IAAI,eAAeA,EAAI,KAAK,MAAMD,EAAI,EAAI,EAAEC,EAAI,aAAa,cAAcA,EAAI,OAAO,IAAI,CAAC,GAAGA,EAAI,QAAQ,KAAKA,EAAI,QAAQ,GAAGA,EAAI,SAAS,CAACJ,EAAOI,EAAI,QAAQ,EAAE,MAAM,CAACH,EAAQ,CAAC,EAAEG,EAAI,QAAQH,EAAQG,EAAI,KAAK,IAAI,CAAC,EAAEb,EAAec,GAAO,SAAS,MAAMA,GAAY,IAAIC,EAAInD,EAAO,OAAU,QAAQ,IAAI,KAAK,OAAO,EAAMwC,EAAIxC,EAAO,UAAa,QAAQ,KAAK,KAAK,OAAO,EAAE,OAAO,OAAOA,EAAOsB,CAAe,EAAEA,EAAgB,KAAQtB,EAAO,YAAauB,EAAWvB,EAAO,WAAgBA,EAAO,cAAewB,EAAYxB,EAAO,aAAkBA,EAAO,OAAQyB,EAAMzB,EAAO,MAAQ,IAAIoD,EAAcpD,EAAO,aAAcoD,EAAWpD,EAAO,YAAc,IAAIqD,EAAcrD,EAAO,eAAkB,GAAQ,OAAO,aAAa,UAAUsD,GAAM,iCAAiC,EAAE,IAAIC,EAAeC,EAAM,GAAUC,EAAenL,EAAOoL,EAAMC,EAAOC,EAAOC,EAAQC,EAAOC,EAAQC,EAAQC,EAAQ,SAASC,EAA2BC,EAAI,CAAC7L,EAAO6L,EAAInE,EAAO,MAAS0D,EAAM,IAAI,UAAUS,CAAG,EAAEnE,EAAO,OAAU4D,EAAO,IAAI,WAAWO,CAAG,EAAEnE,EAAO,OAAU8D,EAAO,IAAI,WAAWK,CAAG,EAAEnE,EAAO,OAAU2D,EAAO,IAAI,WAAWQ,CAAG,EAAEnE,EAAO,QAAW6D,EAAQ,IAAI,YAAYM,CAAG,EAAEnE,EAAO,QAAW+D,EAAQ,IAAI,YAAYI,CAAG,EAAEnE,EAAO,QAAWgE,EAAQ,IAAI,aAAaG,CAAG,EAAEnE,EAAO,QAAWiE,EAAQ,IAAI,aAAaE,CAAG,CAAC,CAAC,IAAIC,GAAepE,EAAO,gBAAmB,QAAYqE,EAAcC,GAAa,CAAC,EAAMC,GAAW,CAAC,EAAMC,GAAc,CAAC,EAAMC,GAAmB,GAAM,SAAS1B,GAAkB,CAAC,OAAOM,CAAa,CAAC,SAASqB,IAAQ,CAAC,GAAG1E,EAAO,OAAsF,IAAxE,OAAOA,EAAO,QAAW,aAAWA,EAAO,OAAU,CAACA,EAAO,MAAS,GAAQA,EAAO,OAAU,QAAQ2E,GAAY3E,EAAO,OAAU,MAAM,CAAC,EAAG4E,GAAqBN,EAAY,CAAC,CAAC,SAASO,IAAa,CAACJ,GAAmB,GAAKG,GAAqBL,EAAU,CAAC,CAAC,SAASO,IAAS,CAAC,GAAG9E,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,QAAQ+E,GAAa/E,EAAO,QAAW,MAAM,CAAC,EAAG4E,GAAqBJ,EAAa,CAAC,CAAC,SAASG,GAAYK,EAAG,CAACV,GAAa,QAAQU,CAAE,CAAC,CAAC,SAASC,GAAUD,EAAG,CAACT,GAAW,QAAQS,CAAE,CAAC,CAAC,SAASD,GAAaC,EAAG,CAACR,GAAc,QAAQQ,CAAE,CAAC,CAAC,IAAIE,GAAgB,EAAMC,GAAqB,KAASC,GAAsB,KAAK,SAASC,GAAiBhI,EAAG,CAAC6H,KAAqBlF,EAAO,wBAA2BA,EAAO,uBAA0BkF,EAAe,CAAE,CAAC,SAASI,GAAoBjI,EAAG,CAA0G,GAAzG6H,KAAqBlF,EAAO,wBAA2BA,EAAO,uBAA0BkF,EAAe,EAAKA,IAAiB,IAAMC,KAAuB,OAAM,cAAcA,EAAoB,EAAEA,GAAqB,MAAQC,IAAsB,CAAC,IAAInG,EAASmG,GAAsBA,GAAsB,KAAKnG,EAAS,CAAC,CAAE,CAAC,SAASqE,GAAMiC,EAAK,CAAIvF,EAAO,SAAYA,EAAO,QAAWuF,CAAI,EAAEA,EAAK,WAAWA,EAAK,IAAI/C,EAAI+C,CAAI,EAAE/B,EAAM,GAAKC,EAAW,EAAE8B,GAAM,2CAA2C,IAAIjD,EAAE,IAAI,YAAY,aAAaiD,CAAI,EAAE,MAAA1E,EAAmByB,CAAC,EAAQA,CAAC,CAAC,IAAIkD,GAAc,wCAAwC,SAASC,GAAU/C,EAAS,CAAC,OAAOA,EAAS,WAAW8C,EAAa,CAAC,CAAC,SAASE,GAAUhD,EAAS,CAAC,OAAOA,EAAS,WAAW,SAAS,CAAC,CAAC,IAAIiD,EAAeA,EAAe,gBAAoBF,GAAUE,CAAc,IAAGA,EAAe5D,EAAW4D,CAAc,GAAE,SAASC,GAAUC,EAAK,CAAC,GAAG,CAAC,GAAGA,GAAMF,GAAgBvC,EAAY,OAAO,IAAI,WAAWA,CAAU,EAAE,GAAGjB,EAAY,OAAOA,EAAW0D,CAAI,EAAE,KAAK,iDAAiD,OAAOrD,EAAN,CAAWc,GAAMd,CAAG,CAAC,CAAC,CAAC,SAASsD,IAAkB,CAAC,GAAG,CAAC1C,IAAaxB,GAAoBC,GAAuB,CAAC,GAAG,OAAO,OAAO,YAAY,CAAC6D,GAAUC,CAAc,EAAG,OAAO,MAAMA,EAAe,CAAC,YAAY,aAAa,CAAC,EAAE,KAAK,SAASI,EAAS,CAAC,GAAG,CAACA,EAAS,GAAO,KAAK,uCAAuCJ,EAAe,IAAI,OAAOI,EAAS,YAAe,CAAC,CAAC,EAAE,MAAM,UAAU,CAAC,OAAOH,GAAUD,CAAc,CAAC,CAAC,EAAO,GAAGzD,EAAW,OAAO,IAAI,QAAQ,SAASpB,EAAQC,EAAO,CAACmB,EAAUyD,EAAe,SAASI,EAAS,CAACjF,EAAQ,IAAI,WAAWiF,CAAQ,CAAC,CAAC,EAAEhF,CAAM,CAAC,CAAC,CAAG,CAAC,OAAO,QAAQ,QAAQ,EAAE,KAAK,UAAU,CAAC,OAAO6E,GAAUD,CAAc,CAAC,CAAC,CAAC,CAAC,SAASK,IAAY,CAAC,IAAI1I,EAAK,CAAC,EAAI2I,EAAa,EAAE,SAASC,EAAgBC,EAAS9G,EAAO,CAAC,IAAIvH,GAAQqO,EAAS,QAAQnG,EAAO,IAAOlI,GAAQyL,EAAWvD,EAAO,IAAO,EAAKkE,EAA2BX,EAAW,MAAM,EAAEc,EAAUrE,EAAO,IAAO,EAAKiF,GAAUjF,EAAO,IAAO,CAAI,EAAEsF,GAAoB,kBAAkB,CAAC,CAACD,GAAiB,kBAAkB,EAAE,SAASe,EAA2B9M,EAAO,CAAC4M,EAAgB5M,EAAO,QAAW,CAAC,CAAC,SAAS+M,EAAuBC,EAAS,CAAC,OAAOR,GAAiB,EAAE,KAAK,SAASnD,EAAO,CAAC,OAAO,YAAY,YAAYA,EAAOrF,CAAI,CAAC,CAAC,EAAE,KAAK,SAAS6I,EAAS,CAAC,OAAOA,CAAQ,CAAC,EAAE,KAAKG,EAAS,SAASC,EAAO,CAAC/D,EAAI,0CAA0C+D,CAAM,EAAEjD,GAAMiD,CAAM,CAAC,CAAC,CAAC,CAAC,SAASC,IAAkB,CAAC,MAAG,CAACpD,GAAY,OAAO,YAAY,sBAAsB,YAAY,CAACqC,GAAUE,CAAc,GAAG,CAACD,GAAUC,CAAc,GAAG,CAACxE,GAAqB,OAAO,OAAO,WAAmB,MAAMwE,EAAe,CAAC,YAAY,aAAa,CAAC,EAAE,KAAK,SAASI,EAAS,CAAC,IAAIzM,EAAO,YAAY,qBAAqByM,EAASzI,CAAI,EAAE,OAAOhE,EAAO,KAAK8M,EAA2B,SAASG,GAAO,CAAC,OAAA/D,EAAI,kCAAkC+D,EAAM,EAAE/D,EAAI,2CAA2C,EAAS6D,EAAuBD,CAA0B,CAAC,CAAC,CAAC,CAAC,EAAcC,EAAuBD,CAA0B,CAAE,CAAC,GAAGpG,EAAO,gBAAoB,GAAG,CAAC,IAAIlI,GAAQkI,EAAO,gBAAmB1C,EAAK4I,CAAe,EAAE,OAAOpO,EAAO,OAAOwK,EAAN,CAASE,EAAI,sDAAsDF,CAAC,EAAEzB,EAAmByB,CAAC,CAAC,CAAE,OAAAkE,GAAiB,EAAE,MAAM3F,CAAkB,EAAQ,CAAC,CAAC,CAAC,SAAS0B,GAAWb,EAAO,CAAC,KAAK,KAAK,aAAa,KAAK,QAAQ,gCAAgCA,EAAO,IAAI,KAAK,OAAOA,CAAM,CAAC,SAASkD,GAAqB6B,EAAU,CAAC,KAAMA,EAAU,OAAO,GAAGA,EAAU,MAAM,EAAEzG,CAAM,CAAE,CAAC,SAAS0G,GAAuBC,EAAKnH,EAAIoH,EAAI,CAACjD,EAAO,WAAWgD,EAAKnH,EAAIA,EAAIoH,CAAG,CAAC,CAAC,SAASC,IAAY,CAAC,MAAO,WAAU,CAAC,SAASC,GAA0BC,EAAK,CAAC,GAAG,CAAC,OAAAxD,EAAW,KAAKwD,EAAKzO,EAAO,WAAW,QAAQ,EAAE,EAAE4L,EAA2BX,EAAW,MAAM,EAAS,CAAC,MAAC,CAAS,CAAC,CAAC,SAASyD,GAAwBC,EAAc,CAAC,IAAIC,EAAQvD,EAAO,OAAOsD,EAAcA,IAAgB,EAAE,IAAIE,EAAYN,GAAW,EAAE,GAAGI,EAAcE,EAAa,MAAO,GAAM,IAAIC,EAAQ,CAACC,GAAEC,KAAWD,IAAGC,GAASD,GAAEC,IAAUA,GAAS,QAAQC,GAAQ,EAAEA,IAAS,EAAEA,IAAS,EAAE,CAAC,IAAIC,GAAkBN,GAAS,EAAE,GAAGK,IAASC,GAAkB,KAAK,IAAIA,GAAkBP,EAAc,SAAS,EAAE,IAAIQ,EAAQ,KAAK,IAAIN,EAAYC,EAAQ,KAAK,IAAIH,EAAcO,EAAiB,EAAE,KAAK,CAAC,EAAME,EAAYZ,GAA0BW,CAAO,EAAE,GAAGC,EAAa,MAAO,EAAK,CAAC,MAAO,EAAK,CAAC,IAAIzB,GAAc,CAAC,EAAIS,GAAuB,EAAIM,EAAuB,EAAMW,GAAI3B,GAAW,EAAM4B,GAAmB5H,EAAO,mBAAsB,UAAU,CAAC,OAAO4H,GAAmB5H,EAAO,mBAAsBA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAM6H,GAAQ7H,EAAO,QAAW,UAAU,CAAC,OAAO6H,GAAQ7H,EAAO,QAAWA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAM8H,GAAM9H,EAAO,MAAS,UAAU,CAAC,OAAO8H,GAAM9H,EAAO,MAASA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAM+H,GAAiB/H,EAAO,iBAAoB,UAAU,CAAC,OAAO+H,GAAiB/H,EAAO,iBAAoBA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMgI,GAA4BhI,EAAO,4BAA+B,UAAU,CAAC,OAAOgI,GAA4BhI,EAAO,4BAA+BA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMiI,GAAU7C,GAAsB,SAAS8C,GAAW,CAAKD,IAAUE,GAAI,EAAMF,KAAU7C,GAAsB8C,EAAS,EAAE,SAASC,GAAIlL,EAAK,CAA6D,GAA5DA,EAAKA,GAAMsE,EAAc2D,GAAgB,IAAUR,GAAO,EAAKQ,GAAgB,GAAG,OAAO,SAASkD,GAAO,CAAIH,KAAiBA,GAAU,GAAKjI,EAAO,UAAa,GAAQ,CAAAwD,IAAaqB,GAAY,EAAEjE,EAAoBZ,CAAM,EAAKA,EAAO,sBAAwBA,EAAO,qBAAwB,EAAE8E,GAAQ,GAAC,CAAI9E,EAAO,WAAcA,EAAO,UAAa,YAAY,EAAE,WAAW,UAAU,CAAC,WAAW,UAAU,CAACA,EAAO,UAAa,EAAE,CAAC,EAAE,CAAC,EAAEoI,EAAM,CAAC,EAAE,CAAC,GAAOA,EAAM,CAAE,CAAC,GAAGpI,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,OAAO,GAAGA,EAAO,QAAW,IAAI,EAAE,EAAG,OAAAmI,GAAI,EAG3lWnI,EAAO,KAChB,CAEA,GAAG,EAEDX,EAAO,QAAUW,C,kBChBnBX,EAAO,QAAU,EAAjB,M,sBCAA,WACC,UAAW,CACV,IAAIgJ,EAAMC,EAAYC,EAAOC,EAASC,EAASC,EAAUC,EAAaC,EAAaC,EAAQC,EAAKC,EAAUC,EAAWC,EAAYC,EAAWC,EAE5IZ,EAAQ,KAAK,MAAOO,EAAM,KAAK,IAO/BR,EAAa,SAASjB,EAAG+B,EAAG,CAC1B,OAAI/B,EAAI+B,EACC,GAEL/B,EAAI+B,EACC,EAEF,CACT,EAYAP,EAAS,SAAS1P,EAAGkO,EAAGgC,EAAIC,EAAIC,EAAK,CACnC,IAAIC,EAOJ,GANIH,GAAM,OACRA,EAAK,GAEHE,GAAO,OACTA,EAAMjB,GAEJe,EAAK,EACP,MAAM,IAAI,MAAM,yBAAyB,EAK3C,IAHIC,GAAM,OACRA,EAAKnQ,EAAE,QAEFkQ,EAAKC,GACVE,EAAMjB,GAAOc,EAAKC,GAAM,CAAC,EACrBC,EAAIlC,EAAGlO,EAAEqQ,CAAG,CAAC,EAAI,EACnBF,EAAKE,EAELH,EAAKG,EAAM,EAGf,MAAQ,CAAC,EAAE,OAAO,MAAMrQ,EAAG,CAACkQ,EAAIA,EAAKA,CAAE,EAAE,OAAOhC,CAAC,CAAC,EAAGA,CACvD,EAOAqB,EAAW,SAASe,EAAOzN,EAAMuN,EAAK,CACpC,OAAIA,GAAO,OACTA,EAAMjB,GAERmB,EAAM,KAAKzN,CAAI,EACRkN,EAAUO,EAAO,EAAGA,EAAM,OAAS,EAAGF,CAAG,CAClD,EAOAd,EAAU,SAASgB,EAAOF,EAAK,CAC7B,IAAIG,EAASC,EACb,OAAIJ,GAAO,OACTA,EAAMjB,GAERoB,EAAUD,EAAM,IAAI,EAChBA,EAAM,QACRE,EAAaF,EAAM,CAAC,EACpBA,EAAM,CAAC,EAAIC,EACXP,EAAQM,EAAO,EAAGF,CAAG,GAErBI,EAAaD,EAERC,CACT,EAcAf,EAAc,SAASa,EAAOzN,EAAMuN,EAAK,CACvC,IAAII,EACJ,OAAIJ,GAAO,OACTA,EAAMjB,GAERqB,EAAaF,EAAM,CAAC,EACpBA,EAAM,CAAC,EAAIzN,EACXmN,EAAQM,EAAO,EAAGF,CAAG,EACdI,CACT,EAOAhB,EAAc,SAASc,EAAOzN,EAAMuN,EAAK,CACvC,IAAIK,EACJ,OAAIL,GAAO,OACTA,EAAMjB,GAEJmB,EAAM,QAAUF,EAAIE,EAAM,CAAC,EAAGzN,CAAI,EAAI,IACxC4N,EAAO,CAACH,EAAM,CAAC,EAAGzN,CAAI,EAAGA,EAAO4N,EAAK,CAAC,EAAGH,EAAM,CAAC,EAAIG,EAAK,CAAC,EAC1DT,EAAQM,EAAO,EAAGF,CAAG,GAEhBvN,CACT,EAOAwM,EAAU,SAASiB,EAAOF,EAAK,CAC7B,IAAIlQ,EAAGwQ,EAAIC,EAAIC,EAAMH,EAAMI,EAAOC,EAAUC,EAU5C,IATIX,GAAO,OACTA,EAAMjB,GAER0B,EAAS,UAAW,CAClBE,EAAY,CAAC,EACb,QAASJ,EAAK,EAAGF,EAAOrB,EAAMkB,EAAM,OAAS,CAAC,EAAG,GAAKG,EAAOE,EAAKF,EAAOE,EAAKF,EAAM,GAAKA,EAAOE,IAAOA,IAAOI,EAAU,KAAKJ,CAAE,EAC/H,OAAOI,CACT,EAAG,MAAM,IAAI,EAAE,QAAQ,EACvBD,EAAW,CAAC,EACPJ,EAAK,EAAGE,EAAOC,EAAM,OAAQH,EAAKE,EAAMF,IAC3CxQ,EAAI2Q,EAAMH,CAAE,EACZI,EAAS,KAAKd,EAAQM,EAAOpQ,EAAGkQ,CAAG,CAAC,EAEtC,OAAOU,CACT,EAQAhB,EAAa,SAASQ,EAAOzN,EAAMuN,EAAK,CACtC,IAAIY,EAKJ,GAJIZ,GAAO,OACTA,EAAMjB,GAER6B,EAAMV,EAAM,QAAQzN,CAAI,EACpBmO,IAAQ,GAGZ,OAAAjB,EAAUO,EAAO,EAAGU,EAAKZ,CAAG,EACrBJ,EAAQM,EAAOU,EAAKZ,CAAG,CAChC,EAOAR,EAAW,SAASU,EAAOW,EAAGb,EAAK,CACjC,IAAIc,EAAM/Q,EAAQuQ,EAAIE,EAAMH,EAK5B,GAJIL,GAAO,OACTA,EAAMjB,GAERhP,EAASmQ,EAAM,MAAM,EAAGW,CAAC,EACrB,CAAC9Q,EAAO,OACV,OAAOA,EAIT,IAFAkP,EAAQlP,EAAQiQ,CAAG,EACnBK,EAAOH,EAAM,MAAMW,CAAC,EACfP,EAAK,EAAGE,EAAOH,EAAK,OAAQC,EAAKE,EAAMF,IAC1CQ,EAAOT,EAAKC,CAAE,EACdlB,EAAYrP,EAAQ+Q,EAAMd,CAAG,EAE/B,OAAOjQ,EAAO,KAAKiQ,CAAG,EAAE,QAAQ,CAClC,EAOAP,EAAY,SAASS,EAAOW,EAAGb,EAAK,CAClC,IAAIc,EAAMhR,EAAGiR,EAAKhR,EAAQuQ,EAAIC,EAAIC,EAAMH,EAAMI,EAAOC,EAIrD,GAHIV,GAAO,OACTA,EAAMjB,GAEJ8B,EAAI,IAAMX,EAAM,OAAQ,CAE1B,GADAnQ,EAASmQ,EAAM,MAAM,EAAGW,CAAC,EAAE,KAAKb,CAAG,EAC/B,CAACjQ,EAAO,OACV,OAAOA,EAIT,IAFAgR,EAAMhR,EAAOA,EAAO,OAAS,CAAC,EAC9BsQ,EAAOH,EAAM,MAAMW,CAAC,EACfP,EAAK,EAAGE,EAAOH,EAAK,OAAQC,EAAKE,EAAMF,IAC1CQ,EAAOT,EAAKC,CAAE,EACVN,EAAIc,EAAMC,CAAG,EAAI,IACnBzB,EAAOvP,EAAQ+Q,EAAM,EAAG,KAAMd,CAAG,EACjCjQ,EAAO,IAAI,EACXgR,EAAMhR,EAAOA,EAAO,OAAS,CAAC,GAGlC,OAAOA,CACT,CAGA,IAFAkP,EAAQiB,EAAOF,CAAG,EAClBU,EAAW,CAAC,EACP5Q,EAAIyQ,EAAK,EAAGE,EAAQlB,EAAIsB,EAAGX,EAAM,MAAM,EAAG,GAAKO,EAAQF,EAAKE,EAAQF,EAAKE,EAAO3Q,EAAI,GAAK2Q,EAAQ,EAAEF,EAAK,EAAEA,EAC7GG,EAAS,KAAKxB,EAAQgB,EAAOF,CAAG,CAAC,EAEnC,OAAOU,CACT,EAEAf,EAAY,SAASO,EAAOc,EAAUJ,EAAKZ,EAAK,CAC9C,IAAIiB,EAASC,EAAQC,EAKrB,IAJInB,GAAO,OACTA,EAAMjB,GAERkC,EAAUf,EAAMU,CAAG,EACZA,EAAMI,GAAU,CAGrB,GAFAG,EAAaP,EAAM,GAAM,EACzBM,EAAShB,EAAMiB,CAAS,EACpBnB,EAAIiB,EAASC,CAAM,EAAI,EAAG,CAC5BhB,EAAMU,CAAG,EAAIM,EACbN,EAAMO,EACN,QACF,CACA,KACF,CACA,OAAOjB,EAAMU,CAAG,EAAIK,CACtB,EAEArB,EAAU,SAASM,EAAOU,EAAKZ,EAAK,CAClC,IAAIoB,EAAUC,EAAQJ,EAASK,EAAUN,EAQzC,IAPIhB,GAAO,OACTA,EAAMjB,GAERsC,EAASnB,EAAM,OACfc,EAAWJ,EACXK,EAAUf,EAAMU,CAAG,EACnBQ,EAAW,EAAIR,EAAM,EACdQ,EAAWC,GAChBC,EAAWF,EAAW,EAClBE,EAAWD,GAAU,EAAErB,EAAIE,EAAMkB,CAAQ,EAAGlB,EAAMoB,CAAQ,CAAC,EAAI,KACjEF,EAAWE,GAEbpB,EAAMU,CAAG,EAAIV,EAAMkB,CAAQ,EAC3BR,EAAMQ,EACNA,EAAW,EAAIR,EAAM,EAEvB,OAAAV,EAAMU,CAAG,EAAIK,EACNtB,EAAUO,EAAOc,EAAUJ,EAAKZ,CAAG,CAC5C,EAEAlB,EAAQ,UAAW,CACjBA,EAAK,KAAOK,EAEZL,EAAK,IAAMI,EAEXJ,EAAK,QAAUO,EAEfP,EAAK,QAAUM,EAEfN,EAAK,QAAUG,EAEfH,EAAK,WAAaY,EAElBZ,EAAK,SAAWU,EAEhBV,EAAK,UAAYW,EAEjB,SAASX,EAAKkB,EAAK,CACjB,KAAK,IAAMA,GAAoBjB,EAC/B,KAAK,MAAQ,CAAC,CAChB,CAEA,OAAAD,EAAK,UAAU,KAAO,SAAShB,EAAG,CAChC,OAAOqB,EAAS,KAAK,MAAOrB,EAAG,KAAK,GAAG,CACzC,EAEAgB,EAAK,UAAU,IAAM,UAAW,CAC9B,OAAOI,EAAQ,KAAK,MAAO,KAAK,GAAG,CACrC,EAEAJ,EAAK,UAAU,KAAO,UAAW,CAC/B,OAAO,KAAK,MAAM,CAAC,CACrB,EAEAA,EAAK,UAAU,SAAW,SAAShB,EAAG,CACpC,OAAO,KAAK,MAAM,QAAQA,CAAC,IAAM,EACnC,EAEAgB,EAAK,UAAU,QAAU,SAAShB,EAAG,CACnC,OAAOuB,EAAY,KAAK,MAAOvB,EAAG,KAAK,GAAG,CAC5C,EAEAgB,EAAK,UAAU,QAAU,SAAShB,EAAG,CACnC,OAAOsB,EAAY,KAAK,MAAOtB,EAAG,KAAK,GAAG,CAC5C,EAEAgB,EAAK,UAAU,QAAU,UAAW,CAClC,OAAOG,EAAQ,KAAK,MAAO,KAAK,GAAG,CACrC,EAEAH,EAAK,UAAU,WAAa,SAAShB,EAAG,CACtC,OAAO4B,EAAW,KAAK,MAAO5B,EAAG,KAAK,GAAG,CAC3C,EAEAgB,EAAK,UAAU,MAAQ,UAAW,CAChC,OAAO,KAAK,MAAQ,CAAC,CACvB,EAEAA,EAAK,UAAU,MAAQ,UAAW,CAChC,OAAO,KAAK,MAAM,SAAW,CAC/B,EAEAA,EAAK,UAAU,KAAO,UAAW,CAC/B,OAAO,KAAK,MAAM,MACpB,EAEAA,EAAK,UAAU,MAAQ,UAAW,CAChC,IAAInP,EACJ,OAAAA,EAAO,IAAImP,EACXnP,EAAK,MAAQ,KAAK,MAAM,MAAM,CAAC,EACxBA,CACT,EAEAmP,EAAK,UAAU,QAAU,UAAW,CAClC,OAAO,KAAK,MAAM,MAAM,CAAC,CAC3B,EAEAA,EAAK,UAAU,OAASA,EAAK,UAAU,KAEvCA,EAAK,UAAU,IAAMA,EAAK,UAAU,KAEpCA,EAAK,UAAU,MAAQA,EAAK,UAAU,KAEtCA,EAAK,UAAU,IAAMA,EAAK,UAAU,SAEpCA,EAAK,UAAU,KAAOA,EAAK,UAAU,MAE9BA,CAET,EAAG,EAEF,SAASyC,EAAMC,EAAS,CAErB,OAAO,EAAO,CAAC,EAAG,EAAAA,EAAO,kEAM7B,EAAG,KAAM,UAAW,CAClB,OAAO1C,CACT,CAAC,CAEH,GAAG,KAAK,IAAI,C","sources":["webpack:///../../node_modules/@foxglove/rosbag/dist/cjs/web/BlobReader.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/fields.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/nmerge.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/record.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/BagReader.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/BaseIterator.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/ForwardIterator.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/ReadResult.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/ReverseIterator.js","webpack:///../../node_modules/@foxglove/rosbag/dist/esm/Bag.js","webpack:///../../node_modules/@foxglove/rosbag/web.js","webpack:///../../node_modules/@foxglove/wasm-bz2/dist/index.js","webpack:///../../node_modules/@foxglove/wasm-lz4/dist/index.js","webpack:///../../node_modules/@foxglove/wasm-lz4/dist/wasm-lz4.js","webpack:///../../node_modules/heap/index.js","webpack:///../../node_modules/heap/lib/heap.js"],"sourcesContent":["\"use strict\";\n// Copyright 2018-2020 Cruise LLC\n// Copyright 2021 Foxglove Technologies Inc\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browser reader for Blob|File objects\nclass BlobReader {\n    constructor(blob) {\n        if (!(blob instanceof Blob)) {\n            throw new Error(\"Expected file to be a File or Blob.\");\n        }\n        this._blob = blob;\n        this._size = blob.size;\n    }\n    // read length (bytes) starting from offset (bytes)\n    async read(offset, length) {\n        const arrBuf = await this._blob.slice(offset, offset + length).arrayBuffer();\n        return new Uint8Array(arrBuf);\n    }\n    // return the size of the file\n    size() {\n        return this._size;\n    }\n}\nexports.default = BlobReader;\n//# sourceMappingURL=BlobReader.js.map","// Copyright 2018-2020 Cruise LLC\n// Copyright 2021 Foxglove Technologies Inc\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\n// reads through a buffer and extracts { [key: string]: value: string }\n// pairs - the buffer is expected to have length prefixed utf8 strings\n// with a '=' separating the key and value\nconst EQUALS_CHARCODE = \"=\".charCodeAt(0);\nexport function extractFields(buffer) {\n    if (buffer.length < 4) {\n        throw new Error(\"fields are truncated.\");\n    }\n    const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    let offset = 0;\n    const fields = {};\n    while (offset < buffer.length) {\n        const length = view.getInt32(offset, true);\n        offset += 4;\n        if (offset + length > buffer.length) {\n            throw new Error(\"Header fields are corrupt.\");\n        }\n        const field = buffer.subarray(offset, offset + length);\n        const index = field.indexOf(EQUALS_CHARCODE);\n        if (index === -1) {\n            throw new Error(\"Header field is missing equals sign.\");\n        }\n        const fieldName = new TextDecoder().decode(field.subarray(0, index));\n        fields[fieldName] = field.subarray(index + 1);\n        offset += length;\n    }\n    return fields;\n}\n// reads a Time object out of a buffer at the given offset\nexport function extractTime(buffer, offset) {\n    const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    const sec = view.getUint32(offset, true);\n    const nsec = view.getUint32(offset + 4, true);\n    return { sec, nsec };\n}\n//# sourceMappingURL=fields.js.map","// Copyright 2018-2020 Cruise LLC\n// Copyright 2021 Foxglove Technologies Inc\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nimport Heap from \"heap\";\nfunction nmerge(key, ...iterables) {\n    const heap = new Heap((a, b) => {\n        return key(a.value, b.value);\n    });\n    for (let i = 0; i < iterables.length; i++) {\n        const result = iterables[i].next();\n        if (result.done !== true) {\n            heap.push({ i, value: result.value });\n        }\n    }\n    return {\n        next: () => {\n            if (heap.empty()) {\n                return { done: true, value: undefined };\n            }\n            const { i } = heap.front();\n            const next = iterables[i].next();\n            if (next.done === true) {\n                return { value: heap.pop().value, done: false };\n            }\n            return { value: heap.replace({ i, value: next.value }).value, done: false };\n        },\n    };\n}\nexport default nmerge;\n//# sourceMappingURL=nmerge.js.map","// Copyright 2018-2020 Cruise LLC\n// Copyright 2021 Foxglove Technologies Inc\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nimport { extractFields, extractTime } from \"./fields\";\nfunction readUint32(buff) {\n    const view = new DataView(buff.buffer, buff.byteOffset, buff.byteLength);\n    return view.getUint32(0, true);\n}\nfunction readInt32(buff) {\n    const view = new DataView(buff.buffer, buff.byteOffset, buff.byteLength);\n    return view.getInt32(0, true);\n}\nfunction readBigUInt64(buff) {\n    const view = new DataView(buff.buffer, buff.byteOffset, buff.byteLength);\n    // Avoid using DataView.getBigUint64 for improved browser compatibility\n    const bigint = BigInt(view.getUint32(0, true)) | (BigInt(view.getUint32(4, true)) << 32n);\n    if (bigint > Number.MAX_SAFE_INTEGER) {\n        throw new Error(`Read a bigint larger than 2**53: ${bigint}`);\n    }\n    return Number(bigint);\n}\nexport class Record {\n    parseData(_buffer) {\n        /* no-op */\n    }\n}\nexport class BagHeader extends Record {\n    constructor(fields) {\n        super();\n        this.indexPosition = readBigUInt64(fields.index_pos);\n        this.connectionCount = readInt32(fields.conn_count);\n        this.chunkCount = readInt32(fields.chunk_count);\n    }\n}\nBagHeader.opcode = 3;\nexport class Chunk extends Record {\n    constructor(fields) {\n        super();\n        this.compression = new TextDecoder().decode(fields.compression);\n        this.size = readUint32(fields.size);\n    }\n    parseData(buffer) {\n        this.data = buffer;\n    }\n}\nChunk.opcode = 5;\nconst getField = (fields, key) => {\n    if (fields[key] == undefined) {\n        throw new Error(`Connection header is missing ${key}.`);\n    }\n    return new TextDecoder().decode(fields[key]);\n};\nexport class Connection extends Record {\n    constructor(fields) {\n        super();\n        this.conn = readUint32(fields.conn);\n        this.topic = new TextDecoder().decode(fields.topic);\n        this.type = undefined;\n        this.md5sum = undefined;\n        this.messageDefinition = \"\";\n    }\n    parseData(buffer) {\n        const fields = extractFields(buffer);\n        this.type = getField(fields, \"type\");\n        this.md5sum = getField(fields, \"md5sum\");\n        this.messageDefinition = getField(fields, \"message_definition\");\n        if (fields.callerid != undefined) {\n            this.callerid = new TextDecoder().decode(fields.callerid);\n        }\n        if (fields.latching != undefined) {\n            this.latching = new TextDecoder().decode(fields.latching) === \"1\";\n        }\n    }\n}\nConnection.opcode = 7;\nexport class MessageData extends Record {\n    constructor(fields) {\n        super();\n        this.conn = readUint32(fields.conn);\n        this.time = extractTime(fields.time, 0);\n    }\n    parseData(buffer) {\n        this.data = buffer;\n    }\n}\nMessageData.opcode = 2;\nexport class IndexData extends Record {\n    constructor(fields) {\n        super();\n        this.ver = readUint32(fields.ver);\n        this.conn = readUint32(fields.conn);\n        this.count = readUint32(fields.count);\n    }\n    parseData(buffer) {\n        this.indices = [];\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        for (let i = 0; i < this.count; i++) {\n            this.indices.push({\n                time: extractTime(buffer, i * 12),\n                offset: view.getUint32(i * 12 + 8, true),\n            });\n        }\n    }\n}\nIndexData.opcode = 4;\nexport class ChunkInfo extends Record {\n    constructor(fields) {\n        super();\n        this.connections = [];\n        this.ver = readUint32(fields.ver);\n        this.chunkPosition = readBigUInt64(fields.chunk_pos);\n        this.startTime = extractTime(fields.start_time, 0);\n        this.endTime = extractTime(fields.end_time, 0);\n        this.count = readUint32(fields.count);\n    }\n    parseData(buffer) {\n        this.connections = [];\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        for (let i = 0; i < this.count; i++) {\n            this.connections.push({\n                conn: view.getUint32(i * 8, true),\n                count: view.getUint32(i * 8 + 4, true),\n            });\n        }\n    }\n}\nChunkInfo.opcode = 6;\n//# sourceMappingURL=record.js.map","// Copyright 2018-2020 Cruise LLC\n// Copyright 2021 Foxglove Technologies Inc\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nimport { compare, isGreaterThan } from \"@foxglove/rostime\";\nimport { extractFields } from \"./fields\";\nimport nmerge from \"./nmerge\";\nimport { BagHeader, Chunk, ChunkInfo, Connection, IndexData, MessageData } from \"./record\";\n// Use little endian to read values in dataview\nconst LITTLE_ENDIAN = true;\nconst HEADER_READAHEAD = 4096;\nconst HEADER_OFFSET = 13;\n// BagReader is a lower level interface for reading specific sections & chunks\n// from a rosbag file - generally it is consumed through the Bag class, but\n// can be useful to use directly for efficiently accessing raw pieces from\n// within the bag\nexport default class BagReader {\n    constructor(filelike) {\n        this._file = filelike;\n    }\n    async verifyBagHeader() {\n        const buffer = await this._file.read(0, HEADER_OFFSET);\n        const magic = new TextDecoder().decode(buffer);\n        if (magic !== \"#ROSBAG V2.0\\n\") {\n            throw new Error(\"Cannot identify bag format.\");\n        }\n    }\n    // reads the header block from the rosbag file\n    // generally you call this first\n    // because you need the header information to call readConnectionsAndChunkInfo\n    async readHeader() {\n        await this.verifyBagHeader();\n        const buffer = await this._file.read(HEADER_OFFSET, HEADER_READAHEAD);\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        const read = buffer.length;\n        if (read < 8) {\n            throw new Error(`Record at position ${HEADER_OFFSET} is truncated.`);\n        }\n        const headerLength = view.getInt32(0, LITTLE_ENDIAN);\n        if (read < headerLength + 8) {\n            throw new Error(`Record at position ${HEADER_OFFSET} header too large: ${headerLength}.`);\n        }\n        return this.readRecordFromBuffer(buffer, HEADER_OFFSET, BagHeader);\n    }\n    // reads connection and chunk information from the bag\n    // you'll generally call this after reading the header so you can get\n    // connection metadata and chunkInfos which allow you to seek to individual\n    // chunks & read them\n    async readConnectionsAndChunkInfo(fileOffset, connectionCount, chunkCount) {\n        const buffer = await this._file.read(fileOffset, this._file.size() - fileOffset);\n        if (connectionCount === 0) {\n            return { connections: [], chunkInfos: [] };\n        }\n        const connections = this.readRecordsFromBuffer(buffer, connectionCount, fileOffset, Connection);\n        const connectionBlockLength = connections[connectionCount - 1].end - connections[0].offset;\n        const chunkInfos = this.readRecordsFromBuffer(buffer.subarray(connectionBlockLength), chunkCount, fileOffset + connectionBlockLength, ChunkInfo);\n        if (chunkCount > 0) {\n            for (let i = 0; i < chunkCount - 1; i++) {\n                chunkInfos[i].nextChunk = chunkInfos[i + 1];\n            }\n            chunkInfos[chunkCount - 1].nextChunk = undefined;\n        }\n        return { connections, chunkInfos };\n    }\n    // read individual raw messages from the bag at a given chunk\n    // filters to a specific set of connection ids, start time, & end time\n    // generally the records will be of type MessageData\n    async readChunkMessages(chunkInfo, connections, startTime, endTime, decompress) {\n        const start = startTime ?? { sec: 0, nsec: 0 };\n        const end = endTime ?? { sec: Number.MAX_VALUE, nsec: Number.MAX_VALUE };\n        const conns = connections ??\n            chunkInfo.connections.map((connection) => {\n                return connection.conn;\n            });\n        const result = await this.readChunk(chunkInfo, decompress);\n        const chunk = result.chunk;\n        const indices = {};\n        result.indices.forEach((index) => {\n            indices[index.conn] = index;\n        });\n        const presentConnections = conns.filter((conn) => {\n            return indices[conn] != undefined;\n        });\n        const iterables = presentConnections.map((conn) => {\n            return indices[conn].indices[Symbol.iterator]();\n        });\n        const iter = nmerge((a, b) => compare(a.time, b.time), ...iterables);\n        const entries = [];\n        let item = iter.next();\n        while (item.done !== true) {\n            const { value } = item;\n            item = iter.next();\n            if (value == null || isGreaterThan(start, value.time)) {\n                continue;\n            }\n            if (isGreaterThan(value.time, end)) {\n                break;\n            }\n            entries.push(value);\n        }\n        const messages = entries.map((entry) => {\n            return this.readRecordFromBuffer(chunk.data.subarray(entry.offset), chunk.dataOffset, MessageData);\n        });\n        return messages;\n    }\n    // reads a single chunk record && its index records given a chunkInfo\n    async readChunk(chunkInfo, decompress) {\n        // if we're reading the same chunk a second time return the cached version\n        // to avoid doing decompression on the same chunk multiple times which is\n        // expensive\n        if (chunkInfo === this._lastChunkInfo && this._lastReadResult != null) {\n            return this._lastReadResult;\n        }\n        const { nextChunk } = chunkInfo;\n        const readLength = nextChunk != null\n            ? nextChunk.chunkPosition - chunkInfo.chunkPosition\n            : this._file.size() - chunkInfo.chunkPosition;\n        const buffer = await this._file.read(chunkInfo.chunkPosition, readLength);\n        const chunk = this.readRecordFromBuffer(buffer, chunkInfo.chunkPosition, Chunk);\n        const { compression } = chunk;\n        if (compression !== \"none\") {\n            const decompressFn = decompress[compression];\n            if (decompressFn == null) {\n                throw new Error(`Unsupported compression type ${chunk.compression}`);\n            }\n            const result = decompressFn(chunk.data, chunk.size);\n            chunk.data = result;\n        }\n        const indices = this.readRecordsFromBuffer(buffer.subarray(chunk.length), chunkInfo.count, chunkInfo.chunkPosition + chunk.length, IndexData);\n        this._lastChunkInfo = chunkInfo;\n        this._lastReadResult = { chunk, indices };\n        return this._lastReadResult;\n    }\n    // reads count records from a buffer starting at fileOffset\n    readRecordsFromBuffer(buffer, count, fileOffset, cls) {\n        const records = [];\n        let bufferOffset = 0;\n        for (let i = 0; i < count; i++) {\n            const record = this.readRecordFromBuffer(buffer.subarray(bufferOffset), fileOffset + bufferOffset, cls);\n            // We know that .end and .offset are set by readRecordFromBuffer\n            // A future enhancement is to remove the non-null assertion\n            // Maybe record doesn't need to store these internall and we can return that from readRecordFromBuffer?\n            // Maybe record should be an interface where these are required and the actual record is inside it?\n            bufferOffset += record.end - record.offset;\n            records.push(record);\n        }\n        return records;\n    }\n    // read an individual record from a buffer\n    readRecordFromBuffer(buffer, fileOffset, cls) {\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        const headerLength = view.getInt32(0, LITTLE_ENDIAN);\n        const fields = extractFields(buffer.subarray(4, 4 + headerLength));\n        if (fields.op == undefined) {\n            throw new Error(\"Record is missing 'op' field.\");\n        }\n        const opView = new DataView(fields.op.buffer, fields.op.byteOffset, fields.op.byteLength);\n        const opcode = opView.getUint8(0);\n        if (opcode !== cls.opcode) {\n            throw new Error(`Expected ${cls.name} (${cls.opcode}) but found ${opcode}`);\n        }\n        const record = new cls(fields);\n        const dataOffset = 4 + headerLength + 4;\n        const dataLength = view.getInt32(4 + headerLength, LITTLE_ENDIAN);\n        // Take a data slice of the underlying array buffer so we don't hold on to the rest of the chunk\n        // when we store `data` on the record (happens in parseData)\n        //\n        // Note: using slice on the Uint8Array does not slice the underlying array buffer and can result\n        // in the `data` still having a reference to the entire underlying array buffer which we do not\n        // want.\n        const data = new Uint8Array(buffer.buffer.slice(buffer.byteOffset + dataOffset, buffer.byteOffset + dataOffset + dataLength));\n        record.parseData(data);\n        record.offset = fileOffset;\n        record.dataOffset = record.offset + 4 + headerLength + 4;\n        record.end = record.dataOffset + dataLength;\n        record.length = record.end - record.offset;\n        return record;\n    }\n}\n//# sourceMappingURL=BagReader.js.map","import Heap from \"heap\";\nimport { MessageData } from \"./record\";\nexport class BaseIterator {\n    constructor(args, compare) {\n        this.cachedChunkReadResults = new Map();\n        this.connections = args.connections;\n        this.reader = args.reader;\n        this.position = args.position;\n        this.decompress = args.decompress;\n        this.reader = args.reader;\n        this.chunkInfos = args.chunkInfos;\n        this.heap = new Heap(compare);\n        this.parse = args.parse;\n        // if we want to filter by topic, make a list of connection ids to allow\n        if (args.topics) {\n            const topics = args.topics;\n            const connectionIds = (this.connectionIds = new Set());\n            for (const [id, connection] of args.connections) {\n                if (topics.includes(connection.topic)) {\n                    this.connectionIds.add(id);\n                }\n            }\n            // When filtering to topics, limit the chunkInfos to the chunks containing\n            // the topic. We can do this filter once during construction\n            this.chunkInfos = args.chunkInfos.filter((info) => {\n                return info.connections.find((conn) => {\n                    return connectionIds.has(conn.conn);\n                });\n            });\n        }\n    }\n    /**\n     * @returns An AsyncIterator of MessageEvents\n     */\n    async *[Symbol.asyncIterator]() {\n        while (true) {\n            if (!this.heap.front()) {\n                await this.loadNext();\n            }\n            // The first load may place us in the middle of a chunk. The topic messages we care\n            // about may already be \"behind\" us.\n            //\n            // When that happens, we end up with an empty heap and need to try loading one more time.\n            // This next load will access the next chunks with messages for our topic (or EOF).\n            if (!this.heap.front()) {\n                await this.loadNext();\n            }\n            const item = this.heap.pop();\n            if (!item) {\n                return;\n            }\n            const chunk = item.chunkReadResult.chunk;\n            const messageData = this.reader.readRecordFromBuffer(chunk.data.subarray(item.offset), chunk.dataOffset, MessageData);\n            const connection = this.connections.get(messageData.conn);\n            if (!connection) {\n                throw new Error(`Unable to find connection with id ${messageData.conn}`);\n            }\n            const { topic } = connection;\n            const { data, time } = messageData;\n            if (!data) {\n                throw new Error(`No data in message for topic: ${topic}`);\n            }\n            const event = {\n                topic,\n                connectionId: messageData.conn,\n                timestamp: time,\n                data,\n                message: this.parse?.(data, connection),\n            };\n            yield event;\n        }\n    }\n}\n//# sourceMappingURL=BaseIterator.js.map","import { compare, add as addTime } from \"@foxglove/rostime\";\nimport Heap from \"heap\";\nimport { BaseIterator } from \"./BaseIterator\";\nexport class ForwardIterator extends BaseIterator {\n    constructor(args) {\n        // Sort by smallest timestamp first\n        super(args, (a, b) => {\n            return compare(a.time, b.time);\n        });\n        // These are all chunks that we can consider for iteration.\n        // Only consider chunks with an endTime after or equal to our position.\n        // Chunks before our position are not part of forward iteration.\n        this.chunkInfos = this.chunkInfos.filter((info) => {\n            return compare(info.endTime, this.position) >= 0;\n        });\n        // The chunk info heap sorts chunk infos by increasing start time\n        const chunkInfoHeap = new Heap((a, b) => {\n            return compare(a.startTime, b.startTime);\n        });\n        for (const info of this.chunkInfos) {\n            chunkInfoHeap.insert(info);\n        }\n        this.remainingChunkInfos = [];\n        while (chunkInfoHeap.size() > 0) {\n            this.remainingChunkInfos.push(chunkInfoHeap.pop());\n        }\n    }\n    async loadNext() {\n        const stamp = this.position;\n        const firstChunkInfo = this.remainingChunkInfos[0];\n        if (!firstChunkInfo) {\n            return;\n        }\n        this.remainingChunkInfos[0] = undefined;\n        let end = firstChunkInfo.endTime;\n        const chunksToLoad = [firstChunkInfo];\n        for (let idx = 1; idx < this.remainingChunkInfos.length; ++idx) {\n            const nextChunkInfo = this.remainingChunkInfos[idx];\n            if (!nextChunkInfo) {\n                continue;\n            }\n            // The chunk starts after our selected end time, we end chunk selection\n            if (compare(nextChunkInfo.startTime, end) > 0) {\n                break;\n            }\n            // The chunk starts after our start, but before end so we will load it.\n            chunksToLoad.push(nextChunkInfo);\n            // If the chunk ends before or at the end time, we have fully consumed it.\n            // Remove it from the remainingChunkInfos.\n            const endCompare = compare(nextChunkInfo.endTime, end);\n            if (endCompare <= 0) {\n                this.remainingChunkInfos[idx] = undefined;\n            }\n        }\n        // filter out undefined chunk infos\n        this.remainingChunkInfos = this.remainingChunkInfos.filter(Boolean);\n        // End of file or no more candidates\n        if (chunksToLoad.length === 0) {\n            return;\n        }\n        // Add 1 nsec to make end 1 past the end for the next read\n        this.position = end = addTime(end, { sec: 0, nsec: 1 });\n        const heap = this.heap;\n        const newCache = new Map();\n        for (const chunkInfo of chunksToLoad) {\n            let result = this.cachedChunkReadResults.get(chunkInfo.chunkPosition);\n            if (!result) {\n                result = await this.reader.readChunk(chunkInfo, this.decompress);\n            }\n            // Keep chunk read results for chunks where end is in the chunk\n            // End is the next position we will read so we don't need to re-read the chunk\n            if (compare(chunkInfo.startTime, end) <= 0 && compare(chunkInfo.endTime, end) >= 0) {\n                newCache.set(chunkInfo.chunkPosition, result);\n            }\n            for (const indexData of result.indices) {\n                if (this.connectionIds && !this.connectionIds.has(indexData.conn)) {\n                    continue;\n                }\n                for (const indexEntry of indexData.indices ?? []) {\n                    // ensure: stamp <= entry time < end\n                    if (compare(indexEntry.time, stamp) < 0 || compare(indexEntry.time, end) >= 0) {\n                        continue;\n                    }\n                    heap.push({ time: indexEntry.time, offset: indexEntry.offset, chunkReadResult: result });\n                }\n            }\n        }\n        this.cachedChunkReadResults = newCache;\n    }\n}\n//# sourceMappingURL=ForwardIterator.js.map","// Copyright 2018-2020 Cruise LLC\n// Copyright 2021 Foxglove Technologies Inc\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\n// represents a result passed to the callback from the high-level call:\n// bag.readMessages({ opts: any }, callback: (ReadResult) => void) => Promise<void>\nexport default class ReadResult {\n    constructor(topic, message, timestamp, data, chunkOffset, totalChunks, \n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    freeze) {\n        // string: the topic the message was on\n        this.topic = topic;\n        // any: the parsed body of the message based on connection.messageDefinition\n        this.message = message;\n        // time: the timestamp of the message\n        this.timestamp = timestamp;\n        // buffer: raw buffer data of the message\n        this.data = data;\n        // the offset of the currently read chunk\n        this.chunkOffset = chunkOffset;\n        // the total number of chunks in the read operation\n        this.totalChunks = totalChunks;\n        if (freeze === true) {\n            Object.freeze(timestamp);\n            Object.freeze(this);\n        }\n    }\n}\n//# sourceMappingURL=ReadResult.js.map","import { compare, subtract as subTime } from \"@foxglove/rostime\";\nimport Heap from \"heap\";\nimport { BaseIterator } from \"./BaseIterator\";\nexport class ReverseIterator extends BaseIterator {\n    constructor(args) {\n        // Sort by largest timestamp first\n        super(args, (a, b) => {\n            return compare(b.time, a.time);\n        });\n        // These are all chunks that we can consider for iteration.\n        // Only consider chunks with a start before or equal to our position.\n        // Chunks starting after our position are not part of reverse iteration\n        this.chunkInfos = this.chunkInfos.filter((info) => {\n            return compare(info.startTime, this.position) <= 0;\n        });\n        // The chunk info heap sorts chunk infos by decreasing end time\n        const chunkInfoHeap = new Heap((a, b) => {\n            return compare(b.endTime, a.endTime);\n        });\n        for (const info of this.chunkInfos) {\n            chunkInfoHeap.insert(info);\n        }\n        this.remainingChunkInfos = [];\n        while (chunkInfoHeap.size() > 0) {\n            this.remainingChunkInfos.push(chunkInfoHeap.pop());\n        }\n    }\n    async loadNext() {\n        const stamp = this.position;\n        const firstChunkInfo = this.remainingChunkInfos[0];\n        if (!firstChunkInfo) {\n            return;\n        }\n        this.remainingChunkInfos[0] = undefined;\n        let start = firstChunkInfo.startTime;\n        const chunksToLoad = [firstChunkInfo];\n        for (let idx = 1; idx < this.remainingChunkInfos.length; ++idx) {\n            const nextChunkInfo = this.remainingChunkInfos[idx];\n            if (!nextChunkInfo) {\n                continue;\n            }\n            // The chunk ends before our selected start, we end chunk selection\n            if (compare(nextChunkInfo.endTime, start) < 0) {\n                break;\n            }\n            // The chunk ends after our start so we will load it\n            chunksToLoad.push(nextChunkInfo);\n            // If the chunk starts after or at the start time, we have fully consumed it\n            const startCompare = compare(nextChunkInfo.startTime, start);\n            if (startCompare >= 0) {\n                this.remainingChunkInfos[idx] = undefined;\n            }\n        }\n        // filter out undefined chunk infos\n        this.remainingChunkInfos = this.remainingChunkInfos.filter(Boolean);\n        // End of file or no more candidates\n        if (chunksToLoad.length === 0) {\n            return;\n        }\n        // Subtract 1 nsec to make the next position 1 before\n        this.position = start = subTime(start, { sec: 0, nsec: 1 });\n        const heap = this.heap;\n        const newCache = new Map();\n        for (const chunkInfo of chunksToLoad) {\n            let result = this.cachedChunkReadResults.get(chunkInfo.chunkPosition);\n            if (!result) {\n                result = await this.reader.readChunk(chunkInfo, this.decompress);\n            }\n            // Keep chunk read results for chunks where end is in the chunk\n            // End is the next position we will read so we don't need to re-read the chunk\n            if (compare(chunkInfo.startTime, start) <= 0 && compare(chunkInfo.endTime, start) >= 0) {\n                newCache.set(chunkInfo.chunkPosition, result);\n            }\n            for (const indexData of result.indices) {\n                if (this.connectionIds && !this.connectionIds.has(indexData.conn)) {\n                    continue;\n                }\n                for (const indexEntry of indexData.indices ?? []) {\n                    // skip any time that is before our current timestamp or after end, we will never iterate to those\n                    if (compare(indexEntry.time, start) <= 0 || compare(indexEntry.time, stamp) > 0) {\n                        continue;\n                    }\n                    heap.push({ time: indexEntry.time, offset: indexEntry.offset, chunkReadResult: result });\n                }\n            }\n        }\n        this.cachedChunkReadResults = newCache;\n    }\n}\n//# sourceMappingURL=ReverseIterator.js.map","// Copyright 2018-2020 Cruise LLC\n// Copyright 2021 Foxglove Technologies Inc\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nimport { parse as parseMessageDefinition } from \"@foxglove/rosmsg\";\nimport { MessageReader } from \"@foxglove/rosmsg-serialization\";\nimport { compare } from \"@foxglove/rostime\";\nimport BagReader from \"./BagReader\";\nimport { ForwardIterator } from \"./ForwardIterator\";\nimport ReadResult from \"./ReadResult\";\nimport { ReverseIterator } from \"./ReverseIterator\";\nexport default class Bag {\n    constructor(filelike, opt) {\n        this.chunkInfos = [];\n        this.reader = new BagReader(filelike);\n        this.connections = new Map();\n        this.bagOpt = opt ?? {};\n    }\n    // if the bag is manually created with the constructor, you must call `await open()` on the bag\n    // generally this is called for you if you're using `const bag = await Bag.open()`\n    async open() {\n        this.header = await this.reader.readHeader();\n        const { connectionCount, chunkCount, indexPosition } = this.header;\n        const result = await this.reader.readConnectionsAndChunkInfo(indexPosition, connectionCount, chunkCount);\n        this.connections = new Map();\n        result.connections.forEach((connection) => {\n            this.connections.set(connection.conn, connection);\n        });\n        this.chunkInfos = result.chunkInfos;\n        if (chunkCount > 0) {\n            this.startTime = this.chunkInfos[0].startTime;\n            this.endTime = this.chunkInfos[chunkCount - 1].endTime;\n        }\n    }\n    messageIterator(opt) {\n        const topics = opt?.topics;\n        let parse;\n        if (this.bagOpt.parse !== false) {\n            parse = (data, connection) => {\n                // lazily create a reader for this connection if it doesn't exist\n                connection.reader ?? (connection.reader = new MessageReader(parseMessageDefinition(connection.messageDefinition)));\n                return connection.reader.readMessage(data);\n            };\n        }\n        if (opt?.reverse === true) {\n            const position = opt?.start ?? this.endTime;\n            if (!position) {\n                throw new Error(\"no timestamp\");\n            }\n            return new ReverseIterator({\n                position,\n                topics,\n                reader: this.reader,\n                connections: this.connections,\n                chunkInfos: this.chunkInfos,\n                decompress: this.bagOpt.decompress ?? {},\n                parse,\n            });\n        }\n        else {\n            const position = opt?.start ?? this.startTime;\n            if (!position) {\n                throw new Error(\"no timestamp\");\n            }\n            return new ForwardIterator({\n                position,\n                topics,\n                reader: this.reader,\n                chunkInfos: this.chunkInfos,\n                connections: this.connections,\n                decompress: this.bagOpt.decompress ?? {},\n                parse,\n            });\n        }\n    }\n    /**\n     * @deprecated Prefer the messageIterator method instead.\n     * @param opts\n     * @param callback\n     */\n    async readMessages(opts, callback) {\n        const connections = this.connections;\n        const startTime = opts.startTime ?? { sec: 0, nsec: 0 };\n        const endTime = opts.endTime ?? { sec: Number.MAX_VALUE, nsec: Number.MAX_VALUE };\n        const topics = opts.topics ?? [...connections.values()].map((connection) => connection.topic);\n        const filteredConnections = [...connections.values()]\n            .filter((connection) => {\n            return topics.includes(connection.topic);\n        })\n            .map((connection) => connection.conn);\n        const { decompress = {} } = opts;\n        // filter chunks to those which fall within the time range we're attempting to read\n        const chunkInfos = this.chunkInfos.filter((info) => {\n            return compare(info.startTime, endTime) <= 0 && compare(startTime, info.endTime) <= 0;\n        });\n        function parseMsg(msg, chunkOffset) {\n            const connection = connections.get(msg.conn);\n            if (connection == null) {\n                throw new Error(`Unable to find connection with id ${msg.conn}`);\n            }\n            const { topic } = connection;\n            const { data, time: timestamp } = msg;\n            if (data == null) {\n                throw new Error(`No data in message for topic: ${topic}`);\n            }\n            let message = null;\n            if (opts.noParse !== true) {\n                // lazily create a reader for this connection if it doesn't exist\n                connection.reader =\n                    connection.reader ??\n                        new MessageReader(parseMessageDefinition(connection.messageDefinition), {\n                            freeze: opts.freeze,\n                        });\n                message = connection.reader.readMessage(data);\n            }\n            return new ReadResult(topic, message, timestamp, data, chunkOffset, chunkInfos.length, opts.freeze);\n        }\n        for (let i = 0; i < chunkInfos.length; i++) {\n            const info = chunkInfos[i];\n            const messages = await this.reader.readChunkMessages(info, filteredConnections, startTime, endTime, decompress);\n            messages.forEach((msg) => callback(parseMsg(msg, i)));\n        }\n    }\n}\n//# sourceMappingURL=Bag.js.map","// Typescript and vscode don't yet support named exports.\n// For now we \"fake\" them by having this top level js file\n// https://nodejs.org/api/packages.html#packages_conditional_exports\n\nconst { default: BlobReader } = require(\"./dist/cjs/web/BlobReader\");\n\nmodule.exports = {\n  BlobReader,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst module_1 = tslib_1.__importDefault(require(\"../wasm/module\"));\nclass Bzip2 {\n    constructor(module) {\n        this.module = module;\n    }\n    static async init() {\n        return new Bzip2(await module_1.default());\n    }\n    decompress(src, destSize, { small = false } = {}) {\n        const srcBuf = this.module._malloc(src.byteLength); // eslint-disable-line no-underscore-dangle\n        const dstBuf = this.module._malloc(destSize); // eslint-disable-line no-underscore-dangle\n        this.module.HEAPU8.subarray(srcBuf, srcBuf + src.byteLength).set(src);\n        try {\n            const { code, error, buffer } = this.module.decompress(dstBuf, destSize, srcBuf, src.byteLength, small ? 1 : 0);\n            if (code !== 0 || buffer == undefined) {\n                throw new Error(`BZ2 decompression failed: ${code} (${error ?? \"unknown\"})`);\n            }\n            return new Uint8Array(buffer); // copy out of emscripten heap before freeing\n        }\n        finally {\n            this.module._free(srcBuf); // eslint-disable-line no-underscore-dangle\n            this.module._free(dstBuf); // eslint-disable-line no-underscore-dangle\n        }\n    }\n}\nexports.default = Bzip2;\n//# sourceMappingURL=index.js.map","//  Copyright (c) 2018-present, Cruise LLC\n//\n//  This source code is licensed under the Apache License, Version 2.0,\n//  found in the LICENSE file in the root directory of this source tree.\n//  You may not use this file except in compliance with the License.\n\nconst ModuleFactory = require(\"./wasm-lz4\");\nconst ModulePromise = ModuleFactory();\n\nlet Module;\nlet context;\n\nfunction ensureLoaded() {\n  if (!Module) {\n    throw new Error(\n      `wasm-lz4 has not finished loading. Please wait with \"await decompress.isLoaded\" before calling decompress`\n    );\n  }\n}\n\nmodule.exports = function decompress(src, destSize) {\n  ensureLoaded();\n  const srcSize = src.byteLength;\n\n  const srcPointer = Module._malloc(srcSize);\n  const destPointer = Module._malloc(destSize);\n\n  // create a view into the heap for our source buffer\n  const compressedHeap = new Uint8Array(Module.HEAPU8.buffer, srcPointer, srcSize);\n  // copy source buffer into the heap\n  compressedHeap.set(src);\n\n  // initialize the decompression context only once - its reusable\n  context = context || Module._createDecompressionContext();\n\n  // call the C function to decompress the frame\n  const resultSize = Module._decompressFrame(context, destPointer, destSize, srcPointer, srcSize);\n\n  try {\n    if (resultSize === -1) {\n      throw new Error(\"Error during decompression\");\n    }\n\n    // copy destination buffer out of the heap back into js land\n    const output = Buffer.allocUnsafe(resultSize);\n    Buffer.from(Module.HEAPU8.buffer).copy(output, 0, destPointer, destPointer + resultSize);\n    return output;\n  } finally {\n    // free the source buffer memory\n    Module._free(srcPointer);\n    // free destination buffer on the heap\n    Module._free(destPointer);\n  }\n};\n\n// export a promise a consumer can listen to to wait\n// for the module to finish loading\n// module loading is async and can take\n// several hundred milliseconds...accessing the module\n// before it is loaded will throw an error\nmodule.exports.isLoaded = ModulePromise.then((mod) => mod[\"ready\"].then(() => {}));\n\n// Wait for the promise returned from ModuleFactory to resolve\nModulePromise.then((mod) => {\n  Module = mod;\n\n  // export the Module object for testing purposes _only_\n  if (typeof process === \"object\" && process.env.NODE_ENV === \"test\") {\n    module.exports.__module = Module;\n  }\n});\n","\nvar Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module=typeof Module!=\"undefined\"?Module:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var nodePath;if(typeof process!==\"undefined\"){Module[\"ENVIRONMENT\"]=process.env.WASM_LZ4_ENVIRONMENT}Module.locateFile=function(input){if(ENVIRONMENT_IS_NODE){nodePath={normalize:function(any){return any}};return __dirname+\"/\"+input}if(input.endsWith(\".wasm\")){const wasm_path=require(\"./wasm-lz4.wasm\");return wasm_path}return input};var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}var fs,nodePath;if(typeof require===\"function\"){fs=require(\"fs\");nodePath=require(\"path\")}read_=(filename,binary)=>{filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||2097152;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"wasm-lz4.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"c\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"g\"];addOnInit(Module[\"asm\"][\"d\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var asmLibraryArg={\"b\":_emscripten_memcpy_big,\"a\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"d\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"e\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"f\"]).apply(null,arguments)};var _decompressFrame=Module[\"_decompressFrame\"]=function(){return(_decompressFrame=Module[\"_decompressFrame\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _createDecompressionContext=Module[\"_createDecompressionContext\"]=function(){return(_createDecompressionContext=Module[\"_createDecompressionContext\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return Module.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = Module;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return Module; });\nelse if (typeof exports === 'object')\n  exports[\"Module\"] = Module;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n"],"names":["exports","BlobReader","blob","offset","length","arrBuf","EQUALS_CHARCODE","extractFields","buffer","view","fields","field","index","fieldName","extractTime","sec","nsec","nmerge","key","iterables","heap","a","b","i","result","next","readUint32","buff","readInt32","readBigUInt64","bigint","Record","_buffer","BagHeader","Chunk","getField","Connection","MessageData","IndexData","ChunkInfo","LITTLE_ENDIAN","HEADER_READAHEAD","HEADER_OFFSET","BagReader","filelike","read","headerLength","fileOffset","connectionCount","chunkCount","connections","connectionBlockLength","chunkInfos","chunkInfo","startTime","endTime","decompress","start","end","conns","connection","chunk","indices","conn","iter","entries","item","value","entry","nextChunk","readLength","compression","decompressFn","count","cls","records","bufferOffset","record","opcode","dataOffset","dataLength","data","BaseIterator","args","compare","topics","connectionIds","id","info","messageData","topic","time","ForwardIterator","chunkInfoHeap","stamp","firstChunkInfo","chunksToLoad","idx","nextChunkInfo","newCache","indexData","indexEntry","ReadResult","message","timestamp","chunkOffset","totalChunks","freeze","ReverseIterator","Bag","opt","indexPosition","parse","position","opts","callback","filteredConnections","parseMsg","msg","module","module_1","Bzip2","src","destSize","small","srcBuf","dstBuf","code","error","ModulePromise","Module","context","ensureLoaded","srcSize","srcPointer","destPointer","resultSize","output","Buffer","mod","_scriptDir","__filename","readyPromiseResolve","readyPromiseReject","resolve","reject","nodePath","process","input","ENVIRONMENT_IS_NODE","any","__dirname","moduleOverrides","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","scriptDirectory","locateFile","path","read_","readAsync","readBinary","setWindowTitle","logExceptionOnExit","e","ExitStatus","err","fs","filename","binary","ret","onload","onerror","keepRuntimeAlive","url","xhr","title","out","wasmBinary","noExitRuntime","abort","wasmMemory","ABORT","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferAndViews","buf","INITIAL_MEMORY","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeInitialized","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","what","dataURIPrefix","isDataURI","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","response","createWasm","asmLibraryArg","receiveInstance","instance","receiveInstantiationResult","instantiateArrayBuffer","receiver","reason","instantiateAsync","callbacks","_emscripten_memcpy_big","dest","num","getHeapMax","emscripten_realloc_buffer","size","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","newSize","replacement","asm","___wasm_call_ctors","_malloc","_free","_decompressFrame","_createDecompressionContext","calledRun","runCaller","run","doRun","Heap","defaultCmp","floor","heapify","heappop","heappush","heappushpop","heapreplace","insort","min","nlargest","nsmallest","updateItem","_siftdown","_siftup","y","lo","hi","cmp","mid","array","lastelt","returnitem","_ref","_i","_j","_len","_ref1","_results","_results1","pos","n","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","root","factory"],"sourceRoot":""}