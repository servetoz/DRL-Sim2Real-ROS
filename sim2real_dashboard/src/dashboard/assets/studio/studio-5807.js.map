{"version":3,"file":"studio-5807.js","mappings":"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","sources":["webpack:///../../packages/studio-base/src/components/CaptureErrorBoundary.tsx","webpack:///../../packages/studio-base/src/components/MessagePathSyntax/filterMatches.ts","webpack:///../../packages/studio-base/src/components/MessagePathSyntax/simpleGetMessagePathDataItems.ts","webpack:///../../packages/studio-base/src/panels/Indicator/getMatchingRule.ts","webpack:///../../packages/studio-base/src/panels/Indicator/settings.ts","webpack:///../../packages/studio-base/src/panels/Indicator/Indicator.tsx","webpack:///../../packages/studio-base/src/panels/Indicator/index.tsx","webpack:///../../packages/studio-base/src/types/isTypedArray.ts"],"sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport { Component, PropsWithChildren, ReactNode } from \"react\";\n\ntype Props = {\n  onError: (err: Error) => void;\n};\n\ntype State = {\n  hadError: boolean;\n};\n\n/** An error boundary that calls an onError function when it captures an error */\nexport class CaptureErrorBoundary extends Component<PropsWithChildren<Props>, State> {\n  public override state: State = {\n    hadError: false,\n  };\n\n  public override componentDidCatch(error: Error): void {\n    this.setState({ hadError: true });\n    this.props.onError(error);\n  }\n\n  public override render(): ReactNode {\n    // Avoid rendering children since the children are what caused the error\n    if (this.state.hadError) {\n      return <></>;\n    }\n\n    return this.props.children;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { MessagePathFilter } from \"./constants\";\n\nexport function filterMatches(filter: MessagePathFilter, value: unknown): boolean {\n  if (typeof filter.value === \"object\") {\n    throw new Error(\"filterMatches only works on paths where global variables have been filled in\");\n  }\n  if (filter.value == undefined) {\n    return false;\n  }\n\n  let currentValue = value;\n  for (const name of filter.path) {\n    if (typeof currentValue !== \"object\" || currentValue == undefined) {\n      return false;\n    }\n    currentValue = (currentValue as Record<string, unknown>)[name];\n    if (currentValue == undefined) {\n      return false;\n    }\n  }\n\n  // Test equality using `==` so we can be forgiving for comparing booleans with integers,\n  // comparing numbers with strings, bigints with numbers, and so on.\n  // eslint-disable-next-line @foxglove/strict-equality\n  return currentValue != undefined && currentValue == filter.value;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { MessageEvent } from \"@foxglove/studio-base/players/types\";\nimport { isTypedArray } from \"@foxglove/studio-base/types/isTypedArray\";\n\nimport { RosPath } from \"./constants\";\nimport { filterMatches } from \"./filterMatches\";\n\n/**\n * Execute the given message path to extract item(s) from the message.\n */\nexport function simpleGetMessagePathDataItems(\n  message: MessageEvent,\n  filledInPath: RosPath,\n): unknown[] {\n  // We don't care about messages that don't match the topic we're looking for.\n  if (message.topic !== filledInPath.topicName) {\n    return [];\n  }\n\n  const results: unknown[] = [];\n\n  function traverse(value: unknown, pathIndex: number): void {\n    const pathPart = filledInPath.messagePath[pathIndex];\n    if (pathPart == undefined) {\n      results.push(value);\n      return;\n    }\n    if (value == undefined) {\n      return;\n    }\n    switch (pathPart.type) {\n      case \"slice\": {\n        if (!Array.isArray(value) && !isTypedArray(value)) {\n          return;\n        }\n        if (typeof pathPart.start === \"object\" || typeof pathPart.end === \"object\") {\n          throw new Error(\"Variables in slices are not supported\");\n        }\n        const { start, end } = pathPart;\n        for (let i = start; i < value.length && i <= end; i++) {\n          traverse(value[i], pathIndex + 1);\n        }\n        return;\n      }\n      case \"filter\":\n        if (!filterMatches(pathPart, value)) {\n          return undefined;\n        }\n        return traverse(value, pathIndex + 1);\n      case \"name\":\n        if (typeof value !== \"object\") {\n          return undefined;\n        }\n        return traverse((value as Record<string, unknown>)[pathPart.name], pathIndex + 1);\n    }\n  }\n  traverse(message.message, 0);\n\n  return results;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { assertNever } from \"@foxglove/studio-base/util/assertNever\";\n\nimport { Rule } from \"./types\";\n\nexport function getMatchingRule(\n  rawValue:\n    | undefined\n    | boolean\n    | bigint\n    | number\n    | string\n    | { data?: boolean | bigint | number | string },\n  rules: readonly Rule[],\n): Rule | undefined {\n  const value = typeof rawValue === \"object\" ? rawValue.data : rawValue;\n  if (value == undefined) {\n    return undefined;\n  }\n  for (const rule of rules) {\n    let rhs: boolean | number | string | bigint;\n    try {\n      if (typeof value === \"boolean\" || typeof value === \"number\") {\n        rhs = JSON.parse(rule.rawValue);\n        if (typeof rhs !== \"boolean\" && typeof rhs !== \"number\") {\n          continue;\n        }\n      } else if (typeof value === \"string\") {\n        rhs = rule.rawValue;\n      } else if (typeof value === \"bigint\") {\n        rhs = BigInt(rule.rawValue);\n      } else {\n        assertNever(value, \"Unsupported rule value\");\n      }\n    } catch (error) {\n      continue;\n    }\n\n    if (rule.operator === \"=\" && value === rhs) {\n      return rule;\n    } else if (rule.operator === \"<\" && value < rhs) {\n      return rule;\n    } else if (rule.operator === \"<=\" && value <= rhs) {\n      return rule;\n    } else if (rule.operator === \">\" && value > rhs) {\n      return rule;\n    } else if (rule.operator === \">=\" && value >= rhs) {\n      return rule;\n    }\n  }\n  return undefined;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { produce } from \"immer\";\nimport { set } from \"lodash\";\nimport memoizeWeak from \"memoize-weak\";\nimport { useMemo } from \"react\";\n\nimport { useShallowMemo } from \"@foxglove/hooks\";\nimport {\n  SettingsTreeAction,\n  SettingsTreeNode,\n  SettingsTreeNodeAction,\n  SettingsTreeNodes,\n} from \"@foxglove/studio\";\n\nimport { Config, Rule } from \"./types\";\n\nfunction ruleToString(rule: Rule): string {\n  const operator = {\n    \"=\": \"=\",\n    \"<\": \"<\",\n    \"<=\": \"≤\",\n    \">\": \">\",\n    \">=\": \"≥\",\n  }[rule.operator];\n  return `data ${operator} ${rule.rawValue}`;\n}\n\nexport function settingsActionReducer(prevConfig: Config, action: SettingsTreeAction): Config {\n  return produce(prevConfig, (draft) => {\n    switch (action.action) {\n      case \"perform-node-action\":\n        if (action.payload.path[0] === \"rules\") {\n          if (action.payload.id === \"delete-rule\") {\n            const ruleIndex = +action.payload.path[1]!;\n            draft.rules.splice(ruleIndex, 1);\n          } else if (\n            action.payload.id === \"add-rule\" ||\n            action.payload.id === \"add-rule-above\" ||\n            action.payload.id === \"add-rule-below\"\n          ) {\n            let insertIndex = draft.rules.length;\n            if (action.payload.id === \"add-rule-above\" && action.payload.path[1] !== \"default\") {\n              insertIndex = +action.payload.path[1]!;\n            } else if (action.payload.id === \"add-rule-below\") {\n              insertIndex = +action.payload.path[1]! + 1;\n            }\n            draft.rules.splice(insertIndex, 0, {\n              operator: \"=\",\n              rawValue: \"true\",\n              color: `#${Math.floor(Math.random() * 0x1000000).toString(16)}`,\n              label: \"Label\",\n            });\n          } else if (action.payload.id === \"move-up\") {\n            const ruleIndex = +action.payload.path[1]!;\n            const [rule] = draft.rules.splice(ruleIndex, 1);\n            draft.rules.splice(ruleIndex - 1, 0, rule!);\n          } else if (action.payload.id === \"move-down\") {\n            const ruleIndex = +action.payload.path[1]!;\n            const [rule] = draft.rules.splice(ruleIndex, 1);\n            draft.rules.splice(ruleIndex + 1, 0, rule!);\n          }\n        }\n        break;\n      case \"update\":\n        switch (action.payload.path[0]) {\n          case \"general\":\n            set(draft, [action.payload.path[1]!], action.payload.value);\n            break;\n          case \"rules\":\n            if (action.payload.path[1] === \"default\") {\n              set(draft, [action.payload.path[2]!], action.payload.value);\n            } else {\n              const ruleIndex = +action.payload.path[1]!;\n              set(draft.rules[ruleIndex]!, [action.payload.path[2]!], action.payload.value);\n            }\n            break;\n          default:\n            throw new Error(`Unexpected payload.path[0]: ${action.payload.path[0]}`);\n        }\n        break;\n    }\n  });\n}\n\nconst memoizedCreateRuleNode = memoizeWeak(\n  (rule: Rule, i: number, rules: readonly Rule[]): SettingsTreeNode => {\n    const actions: (SettingsTreeNodeAction | false)[] = [\n      { type: \"action\", id: \"delete-rule\", label: \"Delete rule\", icon: \"Delete\" },\n      i > 0 && { type: \"action\", id: \"move-up\", label: \"Move up\", icon: \"MoveUp\" },\n      i < rules.length - 1 && {\n        type: \"action\",\n        id: \"move-down\",\n        label: \"Move down\",\n        icon: \"MoveDown\",\n      },\n      { type: \"action\", id: \"add-rule-above\", label: \"Add rule above\", icon: \"Add\" },\n      { type: \"action\", id: \"add-rule-below\", label: \"Add rule below\", icon: \"Add\" },\n    ];\n    return {\n      label: ruleToString(rule),\n      actions: actions.filter((action): action is SettingsTreeNodeAction => action !== false),\n      fields: {\n        operator: {\n          label: \"Comparison\",\n          input: \"select\",\n          value: rule.operator,\n          options: [\n            { label: \"Equal to\", value: \"=\" },\n            { label: \"Less than\", value: \"<\" },\n            { label: \"Less than or equal to\", value: \"<=\" },\n            { label: \"Greater than\", value: \">\" },\n            { label: \"Greater than or equal to\", value: \">=\" },\n          ],\n        },\n        rawValue: {\n          label: \"Compare with\",\n          input: \"string\",\n          value: rule.rawValue,\n        },\n        color: {\n          label: \"Color\",\n          input: \"rgb\",\n          value: rule.color,\n        },\n        label: {\n          label: \"Label\",\n          input: \"string\",\n          value: rule.label,\n        },\n      },\n    };\n  },\n);\n\nexport function useSettingsTree(\n  config: Config,\n  pathParseError: string | undefined,\n  error: string | undefined,\n): SettingsTreeNodes {\n  const { path, style, rules } = config;\n  const generalSettings: SettingsTreeNode = useMemo(\n    () => ({\n      error,\n      fields: {\n        path: {\n          label: \"Message path\",\n          input: \"messagepath\",\n          value: path,\n          error: pathParseError,\n        },\n        style: {\n          label: \"Style\",\n          input: \"select\",\n          value: style,\n          options: [\n            { label: \"Bulb\", value: \"bulb\" },\n            { label: \"Background\", value: \"background\" },\n          ],\n        },\n      },\n    }),\n    [error, path, pathParseError, style],\n  );\n\n  const { fallbackColor, fallbackLabel } = config;\n  const ruleSettings: SettingsTreeNode = useMemo(\n    () => ({\n      label: \"Rules (first matching rule wins)\",\n      actions: [{ type: \"action\", id: \"add-rule\", label: \"Add rule\", icon: \"Add\" }],\n      children: Object.fromEntries(\n        rules\n          .map((rule, i) => [i.toString(), memoizedCreateRuleNode(rule, i, rules)])\n          .concat([\n            [\n              \"default\",\n              {\n                label: \"Otherwise\",\n                fields: {\n                  fallbackColor: {\n                    label: \"Color\",\n                    input: \"rgb\",\n                    value: fallbackColor,\n                    help: \"Color to use when no other rules match\",\n                  },\n                  fallbackLabel: {\n                    label: \"Label\",\n                    input: \"string\",\n                    value: fallbackLabel,\n                    help: \"Label to use when no other rules match\",\n                  },\n                },\n                actions: [\n                  { type: \"action\", id: \"add-rule-above\", label: \"Add rule above\", icon: \"Add\" },\n                ],\n              },\n            ],\n          ]),\n      ),\n    }),\n    [fallbackColor, fallbackLabel, rules],\n  );\n\n  return useShallowMemo({\n    general: generalSettings,\n    rules: ruleSettings,\n  });\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Typography, useTheme } from \"@mui/material\";\nimport { last } from \"lodash\";\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useReducer, useState } from \"react\";\nimport { withStyles } from \"tss-react/mui\";\n\nimport { MessageEvent, PanelExtensionContext, SettingsTreeAction } from \"@foxglove/studio\";\nimport { RosPath } from \"@foxglove/studio-base/components/MessagePathSyntax/constants\";\nimport parseRosPath from \"@foxglove/studio-base/components/MessagePathSyntax/parseRosPath\";\nimport { simpleGetMessagePathDataItems } from \"@foxglove/studio-base/components/MessagePathSyntax/simpleGetMessagePathDataItems\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { fonts } from \"@foxglove/studio-base/util/sharedStyleConstants\";\n\nimport { getMatchingRule } from \"./getMatchingRule\";\nimport { settingsActionReducer, useSettingsTree } from \"./settings\";\nimport { Config } from \"./types\";\n\ntype Props = {\n  context: PanelExtensionContext;\n};\n\nconst defaultConfig: Config = {\n  path: \"\",\n  style: \"bulb\",\n  fallbackColor: \"#a0a0a0\",\n  fallbackLabel: \"False\",\n  rules: [{ operator: \"=\", rawValue: \"true\", color: \"#68e24a\", label: \"True\" }],\n};\n\nconst IndicatorBulb = withStyles(\"div\", {\n  root: {\n    width: 40,\n    height: 40,\n    borderRadius: \"50%\",\n    position: \"relative\",\n    backgroundImage: [\n      `radial-gradient(transparent, transparent 55%, rgba(255,255,255,0.4) 80%, rgba(255,255,255,0.4))`,\n      `radial-gradient(circle at 38% 35%, rgba(255,255,255,0.8), transparent 30%, transparent)`,\n      `radial-gradient(circle at 46% 44%, transparent, transparent 61%, rgba(0,0,0,0.7) 74%, rgba(0,0,0,0.7))`,\n    ].join(\",\"),\n  },\n});\n\ntype State = {\n  path: string;\n  parsedPath: RosPath | undefined;\n  latestMessage: MessageEvent | undefined;\n  latestMatchingQueriedData: unknown | undefined;\n  error: Error | undefined;\n  pathParseError: string | undefined;\n};\n\ntype Action =\n  | { type: \"frame\"; messages: readonly MessageEvent[] }\n  | { type: \"path\"; path: string }\n  | { type: \"seek\" };\n\nfunction getSingleDataItem(results: unknown[]) {\n  if (results.length <= 1) {\n    return results[0];\n  }\n  throw new Error(\"Message path produced multiple results\");\n}\n\nfunction reducer(state: State, action: Action): State {\n  try {\n    switch (action.type) {\n      case \"frame\": {\n        if (state.pathParseError != undefined) {\n          return { ...state, latestMessage: last(action.messages), error: undefined };\n        }\n        let latestMatchingQueriedData = state.latestMatchingQueriedData;\n        let latestMessage = state.latestMessage;\n        if (state.parsedPath) {\n          for (const message of action.messages) {\n            if (message.topic !== state.parsedPath.topicName) {\n              continue;\n            }\n            const data = getSingleDataItem(\n              simpleGetMessagePathDataItems(message, state.parsedPath),\n            );\n            if (data != undefined) {\n              latestMatchingQueriedData = data;\n              latestMessage = message;\n            }\n          }\n        }\n        return { ...state, latestMessage, latestMatchingQueriedData, error: undefined };\n      }\n      case \"path\": {\n        const newPath = parseRosPath(action.path);\n        let pathParseError: string | undefined;\n        if (\n          newPath?.messagePath.some(\n            (part) =>\n              (part.type === \"filter\" && typeof part.value === \"object\") ||\n              (part.type === \"slice\" &&\n                (typeof part.start === \"object\" || typeof part.end === \"object\")),\n          ) === true\n        ) {\n          pathParseError = \"Message paths using variables are not currently supported\";\n        }\n        let latestMatchingQueriedData: unknown | undefined;\n        let error: Error | undefined;\n        try {\n          latestMatchingQueriedData =\n            newPath && pathParseError == undefined && state.latestMessage\n              ? getSingleDataItem(simpleGetMessagePathDataItems(state.latestMessage, newPath))\n              : undefined;\n        } catch (err) {\n          error = err;\n        }\n        return {\n          ...state,\n          path: action.path,\n          parsedPath: newPath,\n          latestMatchingQueriedData,\n          error,\n          pathParseError,\n        };\n      }\n      case \"seek\":\n        return {\n          ...state,\n          latestMessage: undefined,\n          latestMatchingQueriedData: undefined,\n          error: undefined,\n        };\n    }\n  } catch (error) {\n    return { ...state, latestMatchingQueriedData: undefined, error };\n  }\n}\n\nexport function Indicator({ context }: Props): JSX.Element {\n  // panel extensions must notify when they've completed rendering\n  // onRender will setRenderDone to a done callback which we can invoke after we've rendered\n  const [renderDone, setRenderDone] = useState<() => void>(() => () => {});\n  const {\n    palette: { augmentColor },\n  } = useTheme();\n\n  const [config, setConfig] = useState(() => ({\n    ...defaultConfig,\n    ...(context.initialState as Partial<Config>),\n  }));\n\n  const [state, dispatch] = useReducer(\n    reducer,\n    config,\n    ({ path }): State => ({\n      path,\n      parsedPath: parseRosPath(path),\n      latestMessage: undefined,\n      latestMatchingQueriedData: undefined,\n      pathParseError: undefined,\n      error: undefined,\n    }),\n  );\n\n  useLayoutEffect(() => {\n    dispatch({ type: \"path\", path: config.path });\n  }, [config.path]);\n\n  useEffect(() => {\n    context.saveState(config);\n    context.setDefaultPanelTitle(config.path === \"\" ? undefined : config.path);\n  }, [config, context]);\n\n  useEffect(() => {\n    context.onRender = (renderState, done) => {\n      setRenderDone(() => done);\n\n      if (renderState.didSeek === true) {\n        dispatch({ type: \"seek\" });\n      }\n\n      if (renderState.currentFrame) {\n        dispatch({ type: \"frame\", messages: renderState.currentFrame });\n      }\n    };\n    context.watch(\"currentFrame\");\n    context.watch(\"didSeek\");\n\n    return () => {\n      context.onRender = undefined;\n    };\n  }, [context]);\n\n  const settingsActionHandler = useCallback(\n    (action: SettingsTreeAction) =>\n      setConfig((prevConfig) => settingsActionReducer(prevConfig, action)),\n    [setConfig],\n  );\n\n  const settingsTree = useSettingsTree(config, state.pathParseError, state.error?.message);\n  useEffect(() => {\n    context.updatePanelSettingsEditor({\n      actionHandler: settingsActionHandler,\n      nodes: settingsTree,\n    });\n  }, [context, settingsActionHandler, settingsTree]);\n\n  useEffect(() => {\n    if (state.parsedPath?.topicName != undefined) {\n      context.subscribe([state.parsedPath.topicName]);\n    }\n    return () => context.unsubscribeAll();\n  }, [context, state.parsedPath?.topicName]);\n\n  // Indicate render is complete - the effect runs after the dom is updated\n  useEffect(() => {\n    renderDone();\n  }, [renderDone]);\n\n  const rawValue =\n    typeof state.latestMatchingQueriedData === \"boolean\" ||\n    typeof state.latestMatchingQueriedData === \"bigint\" ||\n    typeof state.latestMatchingQueriedData === \"string\" ||\n    typeof state.latestMatchingQueriedData === \"number\"\n      ? state.latestMatchingQueriedData\n      : undefined;\n\n  const { style, rules, fallbackColor, fallbackLabel } = config;\n  const matchingRule = useMemo(() => getMatchingRule(rawValue, rules), [rawValue, rules]);\n  return (\n    <Stack fullHeight>\n      <Stack\n        flexGrow={1}\n        justifyContent=\"space-around\"\n        alignItems=\"center\"\n        overflow=\"hidden\"\n        padding={1}\n        style={{\n          backgroundColor:\n            style === \"background\" ? matchingRule?.color ?? fallbackColor : undefined,\n        }}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" gap={2}>\n          {style === \"bulb\" && (\n            <IndicatorBulb style={{ backgroundColor: matchingRule?.color ?? fallbackColor }} />\n          )}\n          <Typography\n            color={\n              style === \"background\"\n                ? augmentColor({\n                    color: { main: matchingRule?.color ?? fallbackColor },\n                  }).contrastText\n                : matchingRule?.color ?? fallbackColor\n            }\n            fontFamily={fonts.MONOSPACE}\n            variant=\"h1\"\n            whiteSpace=\"pre\"\n          >\n            {matchingRule?.label ?? fallbackLabel}\n          </Typography>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { StrictMode, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { useCrash } from \"@foxglove/hooks\";\nimport { PanelExtensionContext } from \"@foxglove/studio\";\nimport { CaptureErrorBoundary } from \"@foxglove/studio-base/components/CaptureErrorBoundary\";\nimport Panel from \"@foxglove/studio-base/components/Panel\";\nimport { PanelExtensionAdapter } from \"@foxglove/studio-base/components/PanelExtensionAdapter\";\nimport ThemeProvider from \"@foxglove/studio-base/theme/ThemeProvider\";\nimport { SaveConfig } from \"@foxglove/studio-base/types/panels\";\n\nimport { Indicator } from \"./Indicator\";\nimport { Config } from \"./types\";\n\nfunction initPanel(crash: ReturnType<typeof useCrash>, context: PanelExtensionContext) {\n  ReactDOM.render(\n    <StrictMode>\n      <CaptureErrorBoundary onError={crash}>\n        <ThemeProvider isDark>\n          <Indicator context={context} />\n        </ThemeProvider>\n      </CaptureErrorBoundary>\n    </StrictMode>,\n    context.panelElement,\n  );\n  return () => {\n    ReactDOM.unmountComponentAtNode(context.panelElement);\n  };\n}\n\ntype Props = {\n  config: Config;\n  saveConfig: SaveConfig<Config>;\n};\n\nfunction IndicatorLightPanelAdapter(props: Props) {\n  const crash = useCrash();\n  const boundInitPanel = useMemo(() => initPanel.bind(undefined, crash), [crash]);\n\n  return (\n    <PanelExtensionAdapter\n      config={props.config}\n      saveConfig={props.saveConfig}\n      initPanel={boundInitPanel}\n      highestSupportedConfigVersion={1}\n    />\n  );\n}\n\nIndicatorLightPanelAdapter.panelType = \"Indicator\";\nIndicatorLightPanelAdapter.defaultConfig = {};\n\nexport default Panel(IndicatorLightPanelAdapter);\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { isTypedArray as lodashIsTypedArray } from \"lodash\";\n\ntype TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | BigInt64Array\n  | BigUint64Array\n  | Uint8ClampedArray;\n\nexport function isTypedArray(value: unknown): value is TypedArray {\n  return lodashIsTypedArray(value);\n}\n"],"names":["CaptureErrorBoundary","error","filterMatches","filter","value","currentValue","name","simpleGetMessagePathDataItems","message","filledInPath","results","traverse","pathIndex","pathPart","start","end","i","getMatchingRule","rawValue","rules","rule","rhs","assertNever","ruleToString","settingsActionReducer","prevConfig","action","draft","ruleIndex","insertIndex","memoizedCreateRuleNode","actions","useSettingsTree","config","pathParseError","path","style","generalSettings","fallbackColor","fallbackLabel","ruleSettings","defaultConfig","IndicatorBulb","getSingleDataItem","reducer","state","latestMatchingQueriedData","latestMessage","data","newPath","parseRosPath","part","err","Indicator","context","renderDone","setRenderDone","augmentColor","useTheme","setConfig","dispatch","renderState","done","settingsActionHandler","settingsTree","matchingRule","Stack","Typography","initPanel","crash","ThemeProvider","IndicatorLightPanelAdapter","props","boundInitPanel","PanelExtensionAdapter","Panel","isTypedArray"],"sourceRoot":""}