{"version":3,"file":"studio-6291.js","mappings":"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","sources":["webpack:///../../packages/studio-base/src/components/CaptureErrorBoundary.tsx","webpack:///../../packages/studio-base/src/components/ExpandingToolbar.tsx","webpack:///../../packages/studio-base/src/components/PanelContextMenu.tsx","webpack:///../../packages/studio-base/src/components/ForwardAnalyticsContextProvider.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Renderable.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/foxglove.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/math.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/color.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/pointClouds/colors.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/ros.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/pointClouds/fieldReaders.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/normalizeMessages.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/topicIsConvertibleToSchema.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/FoxgloveGrid.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/IRenderer.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Input.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/ModelCache.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Picker.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/ScreenOverlay.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/LayerErrors.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/SettingsManager.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/SharedGeometry.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/lod.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/settings.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/CameraStateSettings.ts","webpack:///../../packages/den/image/decodings.ts","webpack:///../../packages/den/image/PinholeCameraModel.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableMarker.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/LineMaterialWithAlphaVertex.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/materials.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableLineList.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/projections.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Cameras.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Axis.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/SceneSettings.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/FrameAxes.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Grids.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images/WorkerImageDecoder.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images/decodeImage.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images/ImageRenderable.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images/ImageTypes.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/ImageModeCamera.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images/imageNormalizers.ts","webpack:///../../packages/studio-base/src/types/Messages.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/annotations/normalizeAnnotations.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/MessageHandler.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/annotations/annotationRenderOrder.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/annotations/RenderableLineAnnotation.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/DynamicBufferGeometry.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/annotations/RenderablePointsAnnotation.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/annotations/RenderableTextAnnotation.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/annotations/RenderableTopicAnnotations.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images/topicPrefixMatching.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/annotations/ImageAnnotations.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/ImageMode/ImageMode.ts","webpack:///../../packages/den/collection/MultiMap.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/pointExtensionUtils.ts","webpack:///../../packages/studio-base/src/util/Pose.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/LaserScans.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/TopicMarkers.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Markers.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/MeasurementTool.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/OccupancyGrids.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/PointClouds.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableLineStrip.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Polygons.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableArrow.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableSphere.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Poses.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/PoseArrays.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/PublishClickTool.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/types.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/TopicEntities.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderablePrimitive.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/materials/MeshStandardMaterialWithInstanceOpacity.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableArrows.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableCubes.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableCylinders.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableLines.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/dispose.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/models.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableModels.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableSpheres.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableTexts.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/RenderableTriangles.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/primitives/PrimitivePool.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/SceneEntities.ts","webpack:///../../packages/den/urdf/parser.ts","webpack:///../../packages/den/urdf/index.ts","webpack:///../../packages/studio-base/src/util/geometry.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableCube.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableCylinder.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableMeshResource.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Urdfs.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/VelodyneScans.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/DynamicInstancedMesh.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableCubeList.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderablePoints.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableSphereList.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableTextViewFacing.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/RenderableTriangleList.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/markers/MarkerPool.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/SceneEditor.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Renderer.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/RendererContext.ts","webpack:///../../packages/studio-base/src/components/PublishGoalIcon.tsx","webpack:///../../packages/studio-base/src/components/PublishPointIcon.tsx","webpack:///../../packages/studio-base/src/components/PublishPoseEstimateIcon.tsx","webpack:///../../packages/studio-base/src/hooks/usePanelMousePresence.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Interactions/ObjectDetails.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Interactions/TopicLink.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Interactions/Interactions.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Interactions/InteractionContextMenu.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/Stats.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/CanvasRecorder.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/RendererOverlay.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/publish.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/ThreeDeeRender.tsx","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/index.tsx","webpack:///../../packages/studio-base/src/util/quatToEuler.ts","webpack:///../../packages/studio-base/src/util/getItemString.tsx"],"sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport { Component, PropsWithChildren, ReactNode } from \"react\";\n\ntype Props = {\n  onError: (err: Error) => void;\n};\n\ntype State = {\n  hadError: boolean;\n};\n\n/** An error boundary that calls an onError function when it captures an error */\nexport class CaptureErrorBoundary extends Component<PropsWithChildren<Props>, State> {\n  public override state: State = {\n    hadError: false,\n  };\n\n  public override componentDidCatch(error: Error): void {\n    this.setState({ hadError: true });\n    this.props.onError(error);\n  }\n\n  public override render(): ReactNode {\n    // Avoid rendering children since the children are what caused the error\n    if (this.state.hadError) {\n      return <></>;\n    }\n\n    return this.props.children;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { ArrowMinimize24Filled } from \"@fluentui/react-icons\";\nimport {\n  Paper,\n  IconButton,\n  Tabs,\n  Tab,\n  svgIconClasses,\n  tabClasses,\n  tabsClasses,\n} from \"@mui/material\";\nimport { ReactElement, ReactNode } from \"react\";\nimport { makeStyles } from \"tss-react/mui\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\n\nconst PANE_HEIGHT = 240;\n\nconst useStyles = makeStyles()((theme) => ({\n  root: {\n    pointerEvents: \"auto\",\n    backgroundColor: theme.palette.background.default,\n    width: 280,\n  },\n  content: {\n    position: \"relative\",\n  },\n  iconButton: {\n    fontSize: \"1rem !important\",\n\n    [`& svg:not(.${svgIconClasses.root})`]: {\n      fontSize: \"1rem !important\",\n    },\n  },\n  tabs: {\n    minHeight: \"auto\",\n\n    [`.${tabsClasses.indicator}`]: {\n      transform: \"scaleX(0.75)\",\n      height: 2,\n    },\n    [`.${tabClasses.root}`]: {\n      minHeight: \"auto\",\n      minWidth: \"auto\",\n      padding: theme.spacing(1, 1.5, 1.125),\n      color: theme.palette.text.secondary,\n\n      \"&.Mui-selected\": {\n        color: theme.palette.text.primary,\n      },\n    },\n  },\n}));\n\nexport function ToolGroup<T>({ children }: { name: T; children: React.ReactElement }): JSX.Element {\n  return children;\n}\n\nexport function ToolGroupFixedSizePane({ children }: { children: ReactNode }): JSX.Element {\n  return (\n    <Stack padding={1} overflowX=\"hidden\" overflowY=\"auto\" style={{ maxHeight: PANE_HEIGHT }}>\n      {children}\n    </Stack>\n  );\n}\n\ntype Props<T extends string> = {\n  checked?: boolean;\n  children: React.ReactElement<typeof ToolGroup>[] | React.ReactElement<typeof ToolGroup>;\n  icon: ReactNode;\n  onSelectTab: (name: T | undefined) => void;\n  selectedTab?: T; // collapse the toolbar if selectedTab is undefined\n  tooltip: string;\n  dataTest?: string;\n};\n\nexport default function ExpandingToolbar<T extends string>({\n  children,\n  checked,\n  icon,\n  onSelectTab,\n  selectedTab,\n  tooltip,\n  dataTest,\n}: Props<T>): JSX.Element {\n  const { classes } = useStyles();\n  const expanded = selectedTab != undefined;\n\n  if (!expanded) {\n    let selectedTabLocal: T | undefined = selectedTab;\n    // default to the first child's name if no tab is selected\n    React.Children.forEach(children, (child) => {\n      if (selectedTabLocal == undefined) {\n        selectedTabLocal = child.props.name as T;\n      }\n    });\n\n    return (\n      <Paper square={false} elevation={4} style={{ pointerEvents: \"auto\" }}>\n        <IconButton\n          className={classes.iconButton}\n          color={checked === true ? \"info\" : \"default\"}\n          title={tooltip}\n          data-testid={`ExpandingToolbar-${tooltip}`}\n          onClick={() => onSelectTab(selectedTabLocal)}\n        >\n          {icon}\n        </IconButton>\n      </Paper>\n    );\n  }\n  let selectedChild: ReactElement | undefined;\n\n  React.Children.forEach(children, (child) => {\n    if (!selectedChild || child.props.name === selectedTab) {\n      selectedChild = child;\n    }\n  });\n\n  const handleChange = (_event: React.SyntheticEvent, value: T | undefined) => {\n    if (value != undefined) {\n      onSelectTab(value);\n    }\n  };\n\n  return (\n    <Paper className={classes.root} data-testid={dataTest} square={false} elevation={4}>\n      <Paper>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Tabs\n            className={classes.tabs}\n            textColor=\"inherit\"\n            value={selectedTab}\n            onChange={handleChange}\n          >\n            {React.Children.map(children, (child) => (\n              <Tab label={child.props.name} value={child.props.name} />\n            ))}\n          </Tabs>\n          <IconButton className={classes.iconButton} onClick={() => onSelectTab(undefined)}>\n            <ArrowMinimize24Filled />\n          </IconButton>\n        </Stack>\n      </Paper>\n      <div className={classes.content}>{selectedChild}</div>\n    </Paper>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Divider, Menu, MenuItem } from \"@mui/material\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { Immutable } from \"@foxglove/studio\";\nimport { PANEL_ROOT_CLASS_NAME } from \"@foxglove/studio-base/components/PanelRoot\";\n\n/**\n * Types of items that can be included in a context menu. Either a clickable item\n * or a divider.\n */\nexport type PanelContextMenuItem =\n  | {\n      /** Type of selectable menu items. */\n      type: \"item\";\n\n      /** True if the item should be shown but disabled. */\n      disabled?: boolean;\n\n      /** Label shown for the menu item. */\n      label: string;\n\n      /** Callback triggered by clicking the item. */\n      onclick: () => void;\n    }\n  | {\n      /** Type of item dividers. */\n      type: \"divider\";\n    };\n\ntype PanelContextMenuProps = {\n  /** @returns List of menu items */\n  getItems: () => Immutable<PanelContextMenuItem[]>;\n};\n\n/**\n * This is a convenience component for attaching a context menu to a panel. It\n * must be a child of a Panel component to work.\n */\nexport function PanelContextMenu(props: PanelContextMenuProps): JSX.Element {\n  const { getItems } = props;\n\n  const rootRef = useRef<HTMLDivElement>(ReactNull);\n\n  const [position, setPosition] = useState<undefined | { x: number; y: number }>();\n\n  const handleClose = useCallback(() => setPosition(undefined), []);\n\n  const [items, setItems] = useState<Immutable<PanelContextMenuItem[]>>([]);\n\n  useEffect(() => {\n    const parent = rootRef.current?.closest<HTMLElement>(`.${PANEL_ROOT_CLASS_NAME}`);\n    if (!parent) {\n      return;\n    }\n\n    // Trigger the menu when the right mouse button is released, but not if the mouse moved in\n    // between press & release\n    let rightClickState: \"none\" | \"down\" | \"canceled\" = \"none\";\n    const handleMouseUp = (event: MouseEvent) => {\n      if (event.button === 2 && rightClickState === \"down\") {\n        setPosition({ x: event.clientX, y: event.clientY });\n        setItems(getItems());\n        rightClickState = \"none\";\n      }\n    };\n    const handleMouseMove = (_event: MouseEvent) => {\n      rightClickState = \"canceled\";\n    };\n    const handleMouseDown = (event: MouseEvent) => {\n      if (event.button === 2) {\n        rightClickState = \"down\";\n      }\n    };\n    const handleContextMenu = (event: MouseEvent) => {\n      event.preventDefault();\n    };\n\n    parent.addEventListener(\"mousedown\", handleMouseDown);\n    parent.addEventListener(\"mousemove\", handleMouseMove);\n    parent.addEventListener(\"mouseup\", handleMouseUp);\n    parent.addEventListener(\"contextmenu\", handleContextMenu);\n    return () => {\n      parent.removeEventListener(\"mousedown\", handleMouseDown);\n      parent.removeEventListener(\"mousemove\", handleMouseMove);\n      parent.removeEventListener(\"mouseup\", handleMouseUp);\n      parent.removeEventListener(\"contextmenu\", handleContextMenu);\n    };\n  }, [getItems]);\n\n  return (\n    <div ref={rootRef} onContextMenu={(event) => event.preventDefault()}>\n      <Menu\n        open={position != undefined}\n        onClose={handleClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={position ? { top: position.y, left: position.x } : undefined}\n        MenuListProps={{\n          dense: true,\n        }}\n      >\n        {items.map((item, index) => {\n          if (item.type === \"divider\") {\n            return <Divider variant=\"middle\" key={`divider_${index}`} />;\n          }\n\n          return (\n            <MenuItem\n              onClick={() => {\n                handleClose();\n                item.onclick();\n              }}\n              key={`item_${index}_${item.label}`}\n              disabled={item.disabled}\n            >\n              {item.label}\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </div>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { useContext, useEffect, useLayoutEffect, useState } from \"react\";\nimport { StoreApi, createStore, useStore } from \"zustand\";\n\nimport { useMustNotChange } from \"@foxglove/hooks\";\nimport AnalyticsContext from \"@foxglove/studio-base/context/AnalyticsContext\";\nimport IAnalytics from \"@foxglove/studio-base/services/IAnalytics\";\n\nexport type ForwardedAnalytics = StoreApi<{ value: IAnalytics }>;\n\n/**\n * Returns a store for forwarding the given context's value, which can be passed to\n * `ForwardAnalyticsContextProvider`.\n */\nexport function useForwardAnalytics(): ForwardedAnalytics {\n  const value = useContext(AnalyticsContext);\n  const [store] = useState(() => createStore(() => ({ value })));\n  useLayoutEffect(() => {\n    store.setState({ value });\n  }, [store, value]);\n  return store;\n}\n\n/**\n * Forwards React context values for analytics between separate React trees. This is used for\n * exposing the Studio internal analytics context to internal extension panels, which are in their\n * own React trees and otherwise can't access context values from the rest of Studio.\n *\n * This component should be rendered in the destination tree, with the `forwardedAnalytics` prop\n * constructed from the `useForwardAnalytics()` hook rendered in the source tree.\n */\nexport function ForwardAnalyticsContextProvider({\n  /** Context to forward. Should be the return value from useForwardAnalytics in the outer tree. */\n  forwardedAnalytics,\n  children,\n}: React.PropsWithChildren<{ forwardedAnalytics: ForwardedAnalytics }>): JSX.Element {\n  useMustNotChange(forwardedAnalytics);\n  const [store] = useState(() =>\n    createStore(() => ({ value: forwardedAnalytics.getState().value })),\n  );\n  useEffect(() => {\n    const unsubscribe = forwardedAnalytics.subscribe(() =>\n      store.setState({ value: forwardedAnalytics.getState().value }),\n    );\n    return unsubscribe;\n  }, [forwardedAnalytics, store]);\n  const { value } = useStore(store);\n  return <AnalyticsContext.Provider value={value}>{children}</AnalyticsContext.Provider>;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport type { IRenderer } from \"./IRenderer\";\nimport type { BaseSettings } from \"./settings\";\nimport type { Pose } from \"./transforms\";\n\nexport const SELECTED_ID_VARIABLE = \"selected_id\";\n\nexport type BaseUserData = {\n  /** Timestamp when the associated `MessageEvent` was received */\n  receiveTime: bigint;\n  /** Timestamp extracted from a field in the associated message, such as `header.stamp` */\n  messageTime: bigint;\n  /** Coordinate frame this Renderable exists in */\n  frameId: string;\n  /** Local position and orientation of the Renderable */\n  pose: Pose;\n  /** Settings tree path where errors will be displayed */\n  settingsPath: ReadonlyArray<string>;\n  /** User-customizable settings for this Renderable */\n  settings: BaseSettings;\n  /** Topic that the Renderable belongs to, if applicable*/\n  topic?: string;\n};\n\n/**\n * Renderables are generic THREE.js scene graph entities with additional\n * properties from `BaseUserData` that allow coordinate frame transforms to\n * automatically be applied and settings tree errors to be displayed.\n *\n * TRenderer may be set to `undefined` to opt out of access to the bloated IRenderer interface.\n */\nexport class Renderable<\n  TUserData extends BaseUserData = BaseUserData,\n  TRenderer extends IRenderer | undefined = IRenderer,\n> extends THREE.Object3D {\n  /** Identifies this class as inheriting from `Renderable` */\n  public readonly isRenderable = true;\n  /** Allow this Renderable to be selected during picking and shown in the Object Details view */\n  public readonly pickable: boolean = true;\n  /**\n   * Use a second picking pass for this Renderable to select a single numeric instanceId. This\n   * instanceId can be passed to `instanceDetails()` to get more information about the instance.\n   */\n  public readonly pickableInstances: boolean = false;\n  /** A reference to the parent `Renderer` that owns the scene graph containing this object */\n  protected readonly renderer: TRenderer;\n  /** Additional data associated with this entity */\n  public override userData: TUserData;\n\n  public constructor(name: string, renderer: TRenderer, userData: TUserData) {\n    super();\n    this.name = name;\n    this.renderer = renderer;\n    this.userData = userData;\n  }\n\n  /**\n   * Dispose of any unmanaged resources uniquely associated with this Renderable\n   * such as GPU buffers.\n   */\n  public dispose(): void {\n    this.children.length = 0;\n  }\n\n  /**\n   * A unique identifier for this Renderable, taken from the associated message.\n   */\n  public idFromMessage(): number | string | undefined {\n    return undefined;\n  }\n\n  /**\n   * The name of the variable that will be set to `idFromMessage()` on user selection.\n   */\n  public selectedIdVariable(): string | undefined {\n    return undefined;\n  }\n\n  /**\n   * Return a Plain Old JavaScript Object (POJO) representation of this Renderable.\n   */\n  public details(): Record<string, RosValue> {\n    return {};\n  }\n\n  /**\n   * Return topic if one exists on the userData.\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  public get topic(): TUserData[\"topic\"] {\n    return this.userData.topic;\n  }\n\n  /**\n   * Return pose as defined in userData\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  public get pose(): Pose {\n    return this.userData.pose;\n  }\n  /**\n   * Return a Plain Old JavaScript Object (POJO) representation of a specific\n   * visual instance rendered by this Renderable.\n   */\n  public instanceDetails(instanceId: number): Record<string, RosValue> | undefined {\n    void instanceId;\n    return undefined;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nexport const FRAME_TRANSFORM_DATATYPES = new Set<string>();\naddFoxgloveSchema(FRAME_TRANSFORM_DATATYPES, \"foxglove.FrameTransform\");\n\nexport const FRAME_TRANSFORMS_DATATYPES = new Set<string>();\naddFoxgloveSchema(FRAME_TRANSFORMS_DATATYPES, \"foxglove.FrameTransforms\");\n\nexport const POINTCLOUD_DATATYPES = new Set<string>();\naddFoxgloveSchema(POINTCLOUD_DATATYPES, \"foxglove.PointCloud\");\n\nexport const LASERSCAN_DATATYPES = new Set<string>();\naddFoxgloveSchema(LASERSCAN_DATATYPES, \"foxglove.LaserScan\");\n\nexport const RAW_IMAGE_DATATYPES = new Set<string>();\naddFoxgloveSchema(RAW_IMAGE_DATATYPES, \"foxglove.RawImage\");\n\nexport const COMPRESSED_IMAGE_DATATYPES = new Set<string>();\naddFoxgloveSchema(COMPRESSED_IMAGE_DATATYPES, \"foxglove.CompressedImage\");\n\nexport const CAMERA_CALIBRATION_DATATYPES = new Set<string>();\naddFoxgloveSchema(CAMERA_CALIBRATION_DATATYPES, \"foxglove.CameraCalibration\");\n\nexport const SCENE_UPDATE_DATATYPES = new Set<string>();\naddFoxgloveSchema(SCENE_UPDATE_DATATYPES, \"foxglove.SceneUpdate\");\n\nexport const POSE_IN_FRAME_DATATYPES = new Set<string>();\naddFoxgloveSchema(POSE_IN_FRAME_DATATYPES, \"foxglove.PoseInFrame\");\n\nexport const POSES_IN_FRAME_DATATYPES = new Set<string>();\naddFoxgloveSchema(POSES_IN_FRAME_DATATYPES, \"foxglove.PosesInFrame\");\n\nexport const GRID_DATATYPES = new Set<string>();\naddFoxgloveSchema(GRID_DATATYPES, \"foxglove.Grid\");\n\nexport const IMAGE_ANNOTATIONS_DATATYPES = new Set<string>();\naddFoxgloveSchema(IMAGE_ANNOTATIONS_DATATYPES, \"foxglove.ImageAnnotations\");\n\n// Expand a single Foxglove dataType into variations for ROS1 and ROS2 then add\n// them to the given output set\nfunction addFoxgloveSchema(output: Set<string>, dataType: string): Set<string> {\n  // Add the Foxglove variation: foxglove.PointCloud\n  output.add(dataType);\n\n  const parts = dataType.split(\".\");\n  if (parts.length < 2) {\n    throw new Error(`Invalid Foxglove schema: ${dataType}`);\n  }\n  const leaf = parts.slice(1).join(\"/\");\n\n  // Add the ROS1 variation: foxglove_msgs/PointCloud\n  output.add(`foxglove_msgs/${leaf}`);\n\n  // Add the ROS2 variation: foxglove_msgs/msg/PointCloud\n  output.add(`foxglove_msgs/msg/${leaf}`);\n\n  return output;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nconst UNIT_X = new THREE.Vector3(1, 0, 0);\nconst UNIT_Y = new THREE.Vector3(0, 1, 0);\n\nconst v0 = new THREE.Vector3();\nconst v1 = new THREE.Vector3();\nconst c = new THREE.Vector3();\n\nexport function getRotationTo(src: THREE.Vector3, dest: THREE.Vector3): THREE.Quaternion {\n  // Adapted from <https://www.ogre3d.org/docs/api/1.8/_ogre_vector3_8h_source.html>\n  // Based on Stan Melax's article in Game Programming Gems\n  const q = new THREE.Quaternion(0, 0, 0, 1);\n  v0.copy(src).normalize();\n  v1.copy(dest).normalize();\n\n  const d = v0.dot(v1);\n  // If dot == 1, vectors are the same\n  if (d >= 1.0) {\n    return q;\n  }\n  if (d < 1e-6 - 1.0) {\n    // Generate an axis\n    let axis = c.copy(UNIT_X).cross(src);\n    if (isZeroLength(axis)) {\n      // Pick another if collinear\n      axis = c.copy(UNIT_Y).cross(src);\n    }\n    axis.normalize();\n    q.setFromAxisAngle(axis, Math.PI);\n  } else {\n    const s = Math.sqrt((1 + d) * 2);\n    const invs = 1 / s;\n\n    c.copy(v0).cross(v1);\n\n    q.x = c.x * invs;\n    q.y = c.y * invs;\n    q.z = c.z * invs;\n    q.w = s * 0.5;\n    q.normalize();\n  }\n  return q;\n}\n\nexport function isZeroLength(vec: THREE.Vector3): boolean {\n  return vec.lengthSq() < 1e-6 * 1e-6;\n}\n\nexport function approxEquals(a: number, b: number, epsilon = 0.00001): boolean {\n  return Math.abs(a - b) < epsilon;\n}\n\nexport function vecEqual<T>(a: T[], b: T[]): boolean {\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function vec3TupleApproxEquals(\n  a: THREE.Vector3Tuple,\n  b: THREE.Vector3Tuple,\n  epsilon = 0.00001,\n): boolean {\n  return (\n    approxEquals(a[0], b[0], epsilon) &&\n    approxEquals(a[1], b[1], epsilon) &&\n    approxEquals(a[2], b[2], epsilon)\n  );\n}\n\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(max, value));\n}\n\nexport function lerp(a: number, b: number, t: number): number {\n  return a + (b - a) * t;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport tinycolor from \"tinycolor2\";\n\nimport { lerp } from \"./math\";\nimport { ColorRGB, ColorRGBA } from \"./ros\";\n\nexport const LIGHT_OUTLINE = new THREE.Color(0x000000).convertSRGBToLinear();\nexport const DARK_OUTLINE = new THREE.Color(0xffffff).convertSRGBToLinear();\n\n// From https://github.com/mrdoob/three.js/blob/dev/src/math/ColorManagement.js\n// which is not exported\nexport function SRGBToLinear(c: number): number {\n  return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n}\n\nexport function stringToRgba(output: ColorRGBA, colorStr: string): ColorRGBA {\n  const color = tinycolor(colorStr);\n  if (!color.isValid()) {\n    output.r = output.g = output.b = output.a = 1;\n    return output;\n  }\n  const rgb = color.toRgb();\n  output.r = rgb.r / 255;\n  output.g = rgb.g / 255;\n  output.b = rgb.b / 255;\n  output.a = rgb.a;\n  return output;\n}\n\nexport function makeRgba(): ColorRGBA {\n  return { r: 0, g: 0, b: 0, a: 0 };\n}\n\nexport function stringToRgb<T extends ColorRGB | THREE.Color>(output: T, colorStr: string): T {\n  const color = tinycolor(colorStr);\n  if (!color.isValid()) {\n    output.r = output.g = output.b = 1;\n    return output;\n  }\n  const rgb = color.toRgb();\n  output.r = rgb.r / 255;\n  output.g = rgb.g / 255;\n  output.b = rgb.b / 255;\n  return output;\n}\n\n/** Converts a ColorRGB to THREE.Color and converts from sRGB to linear RGB. */\nexport function rgbToThreeColor(output: THREE.Color, rgb: ColorRGB): THREE.Color {\n  return output.setRGB(rgb.r, rgb.g, rgb.b).convertSRGBToLinear();\n}\n\n// ts-prune-ignore-next\nexport function rgbaToHexString(color: ColorRGBA): string {\n  const rgba =\n    (THREE.MathUtils.clamp(color.r * 255, 0, 255) << 24) ^\n    (THREE.MathUtils.clamp(color.g * 255, 0, 255) << 16) ^\n    (THREE.MathUtils.clamp(color.b * 255, 0, 255) << 8) ^\n    (THREE.MathUtils.clamp(color.a * 255, 0, 255) << 0);\n  return (\"00000000\" + rgba.toString(16)).slice(-8);\n}\n\nexport function rgbaToCssString(color: ColorRGBA): string {\n  const r = Math.trunc(color.r * 255);\n  const g = Math.trunc(color.g * 255);\n  const b = Math.trunc(color.b * 255);\n  return `rgba(${r}, ${g}, ${b}, ${color.a})`;\n}\n\nexport function rgbaToLinear(output: ColorRGBA, color: ColorRGBA): ColorRGBA {\n  output.r = SRGBToLinear(color.r);\n  output.g = SRGBToLinear(color.g);\n  output.b = SRGBToLinear(color.b);\n  output.a = color.a;\n  return output;\n}\n\n// https://stackoverflow.com/a/596243\nexport function getLuminance(r: number, g: number, b: number): number {\n  return Math.hypot(0.5468 * r, 0.7662 * g, 0.3376 * b);\n}\n\n/**\n * Computes a gradient step from colors `a` to `b` using pre-multiplied alpha to\n * match CSS linear gradients. The inputs are assumed to not have pre-multiplied\n * alpha, and the output will have pre-multiplied alpha.\n */\nexport function rgbaGradient(output: ColorRGBA, a: ColorRGBA, b: ColorRGBA, t: number): ColorRGBA {\n  const aR = a.r * a.a;\n  const aG = a.g * a.a;\n  const aB = a.b * a.a;\n  const bR = b.r * b.a;\n  const bG = b.g * b.a;\n  const bB = b.b * b.a;\n\n  output.r = lerp(aR, bR, t);\n  output.g = lerp(aG, bG, t);\n  output.b = lerp(aB, bB, t);\n  output.a = lerp(a.a, b.a, t);\n  return output;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { SettingsTreeFields, SettingsTreeNode, Topic } from \"@foxglove/studio\";\nimport { BaseSettings } from \"@foxglove/studio-base/panels/ThreeDeeRender/settings\";\n\nimport { rgbaGradient, rgbaToLinear, SRGBToLinear, stringToRgba } from \"../../color\";\nimport { clamp } from \"../../math\";\nimport type { ColorRGBA } from \"../../ros\";\n\nexport type ColorConverter = (output: ColorRGBA, colorValue: number) => void;\n\nconst tempColor1 = { r: 0, g: 0, b: 0, a: 0 };\nconst tempColor2 = { r: 0, g: 0, b: 0, a: 0 };\nexport const NEEDS_MIN_MAX = [\"gradient\", \"colormap\"];\n\nexport interface ColorModeSettings {\n  colorMode: \"flat\" | \"gradient\" | \"colormap\" | \"rgb\" | \"rgba\" | \"rgba-fields\";\n  flatColor: string;\n  colorField?: string;\n  gradient: [string, string];\n  colorMap: \"turbo\" | \"rainbow\";\n  explicitAlpha: number;\n  minValue?: number;\n  maxValue?: number;\n}\n\nexport function getColorConverter<\n  Settings extends ColorModeSettings & {\n    readonly colorMode: Exclude<ColorModeSettings[\"colorMode\"], \"rgba-fields\">;\n  },\n>(settings: Settings, minValue: number, maxValue: number): ColorConverter {\n  switch (settings.colorMode) {\n    case \"flat\": {\n      const flatColor = stringToRgba(tempColor1, settings.flatColor);\n      rgbaToLinear(flatColor, flatColor);\n      return (output: ColorRGBA, _colorValue: number) => {\n        output.r = flatColor.r;\n        output.g = flatColor.g;\n        output.b = flatColor.b;\n        output.a = flatColor.a;\n      };\n    }\n    case \"gradient\": {\n      const valueDelta = Math.max(maxValue - minValue, Number.EPSILON);\n      const minColor = stringToRgba(tempColor1, settings.gradient[0]);\n      const maxColor = stringToRgba(tempColor2, settings.gradient[1]);\n      rgbaToLinear(minColor, minColor);\n      rgbaToLinear(maxColor, maxColor);\n      return (output: ColorRGBA, colorValue: number) => {\n        const t = Math.max(0, Math.min((colorValue - minValue) / valueDelta, 1));\n        rgbaGradient(output, minColor, maxColor, t);\n      };\n    }\n    case \"colormap\": {\n      const valueDelta = Math.max(maxValue - minValue, Number.EPSILON);\n      switch (settings.colorMap) {\n        case \"turbo\":\n          return (output: ColorRGBA, colorValue: number) => {\n            const t = Math.max(0, Math.min((colorValue - minValue) / valueDelta, 1));\n            turboLinearCached(output, t);\n            output.a = settings.explicitAlpha;\n          };\n        case \"rainbow\":\n          return (output: ColorRGBA, colorValue: number) => {\n            const t = Math.max(0, Math.min((colorValue - minValue) / valueDelta, 1));\n            rainbowLinear(output, t);\n            output.a = settings.explicitAlpha;\n          };\n      }\n      throw new Error(`Unrecognized color map: ${settings.colorMap}`);\n    }\n    case \"rgb\":\n      return (output: ColorRGBA, colorValue: number) => {\n        getColorBgra(output, colorValue);\n        output.a = settings.explicitAlpha;\n      };\n    case \"rgba\":\n      return getColorBgra;\n  }\n}\n\n// 0xaarrggbb\n// Matches rviz behavior:\n// https://github.com/ros-visualization/rviz/blob/a60b334fd10785a6b74893189fcebbd419d468e4/src/rviz/default_plugin/point_cloud_transformers.cpp#L383-L406\nfunction getColorBgra(output: ColorRGBA, colorValue: number): void {\n  const num = colorValue >>> 0;\n  output.a = ((num & 0xff000000) >>> 24) / 255;\n  output.r = ((num & 0x00ff0000) >>> 16) / 255;\n  output.g = ((num & 0x0000ff00) >>> 8) / 255;\n  output.b = ((num & 0x000000ff) >>> 0) / 255;\n}\n\n// taken from http://docs.ros.org/jade/api/rviz/html/c++/point__cloud__transformers_8cpp_source.html\n// line 47\nfunction rainbowLinear(output: ColorRGBA, pct: number): void {\n  const h = (1.0 - clamp(pct, 0, 1)) * 5.0 + 1.0;\n  const i = Math.floor(h);\n  let f = h % 1;\n  // if i is even\n  if (i % 2 < 1) {\n    f = 1.0 - f;\n  }\n  const n = SRGBToLinear(1.0 - f);\n  if (i <= 1) {\n    output.r = n;\n    output.g = 0;\n    output.b = 1;\n  } else if (i === 2) {\n    output.r = 0;\n    output.g = n;\n    output.b = 1;\n  } else if (i === 3) {\n    output.r = 0;\n    output.g = 1;\n    output.b = n;\n  } else if (i === 4) {\n    output.r = n;\n    output.g = 1;\n    output.b = 0;\n  } else {\n    output.r = 1;\n    output.g = n;\n    output.b = 0;\n  }\n  output.a = 1;\n}\n\nconst kRedVec4 = new THREE.Vector4(0.13572138, 4.6153926, -42.66032258, 132.13108234);\nconst kGreenVec4 = new THREE.Vector4(0.09140261, 2.19418839, 4.84296658, -14.18503333);\nconst kBlueVec4 = new THREE.Vector4(0.1066733, 12.64194608, -60.58204836, 110.36276771);\nconst kRedVec2 = new THREE.Vector2(-152.94239396, 59.28637943);\nconst kGreenVec2 = new THREE.Vector2(4.27729857, 2.82956604);\nconst kBlueVec2 = new THREE.Vector2(-89.90310912, 27.34824973);\nconst v4 = new THREE.Vector4();\nconst v2 = new THREE.Vector2();\n\n// adapted from https://gist.github.com/mikhailov-work/0d177465a8151eb6ede1768d51d476c7\nfunction turboLinear(output: ColorRGBA, pct: number): void {\n  // Clamp the input between [0.0, 1.0], then scale to the range [0.01, 1.0]\n  const x = clamp(pct, 0.0, 1.0) * 0.99 + 0.01;\n  v4.set(1, x, x * x, x * x * x);\n  v2.set(v4.z, v4.w);\n  v2.multiplyScalar(v4.z);\n  output.r = SRGBToLinear(clamp(v4.dot(kRedVec4) + v2.dot(kRedVec2), 0, 1));\n  output.g = SRGBToLinear(clamp(v4.dot(kGreenVec4) + v2.dot(kGreenVec2), 0, 1));\n  output.b = SRGBToLinear(clamp(v4.dot(kBlueVec4) + v2.dot(kBlueVec2), 0, 1));\n  output.a = 1;\n}\n\n// A lookup table for the turbo() function\nlet TurboLookup: Float32Array | undefined;\nconst TURBO_LOOKUP_SIZE = 65535;\n\n// Builds a one-time lookup table for the turbo() function then uses it to\n// convert `pct` to a color\nfunction turboLinearCached(output: ColorRGBA, pct: number): void {\n  if (!TurboLookup) {\n    TurboLookup = new Float32Array(TURBO_LOOKUP_SIZE * 3);\n    const tempColor = { r: 0, g: 0, b: 0, a: 0 };\n    for (let i = 0; i < TURBO_LOOKUP_SIZE; i++) {\n      turboLinear(tempColor, i / (TURBO_LOOKUP_SIZE - 1));\n      const offset = i * 3;\n      TurboLookup[offset + 0] = tempColor.r;\n      TurboLookup[offset + 1] = tempColor.g;\n      TurboLookup[offset + 2] = tempColor.b;\n    }\n  }\n\n  const offset = Math.trunc(pct * (TURBO_LOOKUP_SIZE - 1)) * 3;\n  output.r = TurboLookup[offset + 0]!;\n  output.g = TurboLookup[offset + 1]!;\n  output.b = TurboLookup[offset + 2]!;\n  output.a = 1;\n}\nexport const RGBA_PACKED_FIELDS = new Set<string>([\"rgb\", \"rgba\"]);\nexport const INTENSITY_FIELDS = new Set<string>([\"intensity\", \"i\"]);\n\nfunction bestColorByField(\n  fields: string[],\n  { supportsPackedRgbModes }: { supportsPackedRgbModes: boolean },\n): string {\n  if (supportsPackedRgbModes) {\n    for (const field of fields) {\n      if (RGBA_PACKED_FIELDS.has(field)) {\n        return field;\n      }\n    }\n  }\n  for (const field of fields) {\n    if (INTENSITY_FIELDS.has(field)) {\n      return field;\n    }\n  }\n  return fields.find((field) => field === \"x\") || fields[0] ? fields[0]! : \"\";\n}\n\nexport function hasSeparateRgbaFields(fields: string[]): boolean {\n  let r = false;\n  let g = false;\n  let b = false;\n  let a = false;\n  for (const field of fields) {\n    switch (field) {\n      case \"red\":\n        r = true;\n        break;\n      case \"green\":\n        g = true;\n        break;\n      case \"blue\":\n        b = true;\n        break;\n      case \"alpha\":\n        a = true;\n        break;\n    }\n  }\n  return r && g && b && a;\n}\n\nexport function baseColorModeSettingsNode<Settings extends ColorModeSettings & BaseSettings>(\n  msgFields: string[],\n  config: Partial<Settings>,\n  topic: Topic,\n  defaults: Settings,\n  {\n    supportsPackedRgbModes,\n    supportsRgbaFieldsMode,\n  }: { supportsPackedRgbModes: boolean; supportsRgbaFieldsMode: boolean },\n): SettingsTreeNode & { fields: NonNullable<SettingsTreeNode[\"fields\"]> } {\n  const colorMode = config.colorMode ?? \"flat\";\n  const flatColor = config.flatColor ?? \"#ffffff\";\n  const colorField = config.colorField ?? bestColorByField(msgFields, { supportsPackedRgbModes });\n  const colorFieldOptions = msgFields.map((field) => ({ label: field, value: field }));\n  const gradient = config.gradient;\n  const colorMap = config.colorMap ?? \"turbo\";\n  const explicitAlpha = config.explicitAlpha ?? 1;\n  const minValue = config.minValue;\n  const maxValue = config.maxValue;\n\n  const fields: SettingsTreeFields = {};\n\n  fields.colorMode = {\n    label: \"Color mode\",\n    input: \"select\",\n    options: [\n      { label: \"Flat\", value: \"flat\" },\n      { label: \"Color map\", value: \"colormap\" },\n      { label: \"Gradient\", value: \"gradient\" },\n    ]\n      .concat(\n        supportsPackedRgbModes\n          ? [\n              { label: \"BGR (packed)\", value: \"rgb\" },\n              { label: \"BGRA (packed)\", value: \"rgba\" },\n            ]\n          : [],\n      )\n      .concat(\n        supportsRgbaFieldsMode && hasSeparateRgbaFields(msgFields)\n          ? [{ label: \"RGBA (separate fields)\", value: \"rgba-fields\" }]\n          : [],\n      ),\n    value: colorMode,\n  };\n  if (colorMode === \"flat\") {\n    fields.flatColor = { label: \"Flat color\", input: \"rgba\", value: flatColor };\n  } else if (colorMode !== \"rgba-fields\") {\n    fields.colorField = {\n      label: \"Color by\",\n      input: \"select\",\n      options: colorFieldOptions,\n      value: colorField,\n    };\n\n    switch (colorMode) {\n      case \"gradient\":\n        fields.gradient = {\n          label: \"Gradient\",\n          input: \"gradient\",\n          value: gradient ?? defaults.gradient,\n        };\n        break;\n      case \"colormap\":\n        fields.colorMap = {\n          label: \"Color map\",\n          input: \"select\",\n          options: [\n            { label: \"Turbo\", value: \"turbo\" },\n            { label: \"Rainbow\", value: \"rainbow\" },\n          ],\n          value: colorMap,\n        };\n        break;\n      default:\n        break;\n    }\n\n    if (colorMode === \"colormap\" || colorMode === \"rgb\") {\n      fields.explicitAlpha = {\n        label: \"Opacity\",\n        input: \"number\",\n        step: 0.1,\n        placeholder: \"1\",\n        precision: 3,\n        min: 0,\n        max: 1,\n        value: explicitAlpha,\n      };\n    }\n\n    if (NEEDS_MIN_MAX.includes(colorMode)) {\n      fields.minValue = {\n        label: \"Value min\",\n        input: \"number\",\n        placeholder: \"auto\",\n        precision: 4,\n        value: minValue,\n      };\n      fields.maxValue = {\n        label: \"Value max\",\n        input: \"number\",\n        placeholder: \"auto\",\n        precision: 4,\n        value: maxValue,\n      };\n    }\n  }\n\n  return {\n    fields,\n    order: topic.name.toLocaleLowerCase(),\n    visible: config.visible ?? defaults.visible,\n  };\n}\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\nexport function colorHasTransparency<Settings extends ColorModeSettings>(\n  settings: Settings,\n): boolean {\n  switch (settings.colorMode) {\n    case \"flat\":\n      return stringToRgba(tempColor, settings.flatColor).a < 1.0;\n    case \"gradient\":\n      return (\n        stringToRgba(tempColor, settings.gradient[0]).a < 1.0 ||\n        stringToRgba(tempColor, settings.gradient[1]).a < 1.0\n      );\n    case \"colormap\":\n    case \"rgb\":\n      return settings.explicitAlpha < 1.0;\n    case \"rgba\":\n    case \"rgba-fields\":\n      // It's too expensive to check the alpha value of each color. Just assume it's transparent\n      return true;\n  }\n}\n\n// Fragment shader chunk to convert sRGB to linear RGB. This is used by some\n// PointCloud materials to avoid expensive per-point colorspace conversion on\n// the CPU. Source: <https://github.com/mrdoob/three.js/blob/13b67d96/src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.js#L16-L18>\nexport const FS_SRGB_TO_LINEAR = /* glsl */ `\nvec3 sRGBToLinear(in vec3 value) {\n\treturn vec3(mix(\n    pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)),\n    value.rgb * 0.0773993808,\n    vec3(lessThanEqual(value.rgb, vec3(0.04045)))\n  ));\n}\n\nvec4 sRGBToLinear(in vec4 value) {\n  return vec4(sRGBToLinear(value.rgb), value.a);\n}\n`;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { Time } from \"@foxglove/rostime\";\n\nimport type { Pose } from \"./transforms\";\n\nexport type Matrix3 = [number, number, number, number, number, number, number, number, number];\n\n// prettier-ignore\nexport type Matrix3x4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number\n];\n\n// prettier-ignore\nexport type Matrix6 = [\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n  number, number, number, number, number, number,\n];\n\nexport enum MarkerType {\n  ARROW = 0,\n  CUBE = 1,\n  SPHERE = 2,\n  CYLINDER = 3,\n  LINE_STRIP = 4,\n  LINE_LIST = 5,\n  CUBE_LIST = 6,\n  SPHERE_LIST = 7,\n  POINTS = 8,\n  TEXT_VIEW_FACING = 9,\n  MESH_RESOURCE = 10,\n  TRIANGLE_LIST = 11,\n}\n\nexport enum MarkerAction {\n  ADD = 0,\n  MODIFY = 0,\n  DELETE = 2,\n  DELETEALL = 3,\n}\n\nexport enum PointFieldType {\n  UNKNOWN = 0,\n  INT8 = 1,\n  UINT8 = 2,\n  INT16 = 3,\n  UINT16 = 4,\n  INT32 = 5,\n  UINT32 = 6,\n  FLOAT32 = 7,\n  FLOAT64 = 8,\n}\n\nexport type RosTime = Time;\n\nexport type RosDuration = RosTime;\n\nexport type Vector2 = {\n  x: number;\n  y: number;\n};\n\nexport type Vector3 = {\n  x: number;\n  y: number;\n  z: number;\n};\n\nexport type Point = Vector3;\nexport type Point32 = Vector3;\n\nexport type Quaternion = {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n};\n\nexport type ColorRGB = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type ColorRGBA = {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n};\n\nexport type PoseWithCovariance = {\n  pose: Pose;\n  covariance: Matrix6;\n};\n\nexport type Polygon = {\n  points: Point32[];\n};\n\nexport type Header = {\n  frame_id: string;\n  stamp: RosTime;\n  seq?: number;\n};\n\nexport type Transform = {\n  translation: Vector3;\n  rotation: Quaternion;\n};\n\nexport type TransformStamped = {\n  header: Header;\n  child_frame_id: string;\n  transform: Transform;\n};\n\nexport type TFMessage = { transforms: TransformStamped[] };\n\nexport type Marker = {\n  header: Header;\n  ns: string;\n  id: number;\n  type: number;\n  action: number;\n  pose: Pose;\n  scale: Vector3;\n  color: ColorRGBA;\n  lifetime: RosDuration;\n  frame_locked: boolean;\n  points: Vector3[];\n  colors: ColorRGBA[];\n  text: string;\n  mesh_resource: string;\n  mesh_use_embedded_materials: boolean;\n};\n\nexport type MarkerArray = {\n  markers: Marker[];\n};\n\nexport type PointField = {\n  name: string;\n  offset: number;\n  datatype: number;\n  count: number;\n};\n\nexport type PointCloud2 = {\n  header: Header;\n  height: number;\n  width: number;\n  fields: PointField[];\n  is_bigendian: boolean;\n  point_step: number;\n  row_step: number;\n  data: Uint8Array;\n  is_dense: boolean;\n};\n\nexport type LaserScan = {\n  header: Header;\n  angle_min: number;\n  angle_max: number;\n  angle_increment: number;\n  time_increment: number;\n  scan_time: number;\n  range_min: number;\n  range_max: number;\n  ranges: Float32Array;\n  intensities: Float32Array;\n};\n\nexport type MapMetaData = {\n  map_load_time: RosTime;\n  resolution: number;\n  width: number;\n  height: number;\n  origin: Pose;\n};\n\nexport type OccupancyGrid = {\n  header: Header;\n  info: MapMetaData;\n  data: Int8Array | number[];\n};\n\nexport type PoseStamped = {\n  header: Header;\n  pose: Pose;\n};\n\nexport type PoseArray = Readonly<{\n  header: Header;\n  poses: Pose[];\n}>;\n\nexport type NavPath = Readonly<{\n  header: Header;\n  poses: PoseStamped[];\n}>;\n\nexport type PolygonStamped = {\n  header: Header;\n  polygon: Polygon;\n};\n\nexport type PoseWithCovarianceStamped = {\n  header: Header;\n  pose: PoseWithCovariance;\n};\n\nexport type RegionOfInterest = {\n  x_offset: number;\n  y_offset: number;\n  height: number;\n  width: number;\n  do_rectify: boolean;\n};\n\nexport type CameraInfo = {\n  header: Header;\n  height: number;\n  width: number;\n  distortion_model: string;\n  D: number[];\n  K: Matrix3 | [];\n  R: Matrix3 | [];\n  P: Matrix3x4 | [];\n  binning_x: number;\n  binning_y: number;\n  roi: RegionOfInterest;\n};\n\n// The capitalization of the single-letter matrix names is different between\n// ROS 1 and ROS 2. This type represents that ambiguity, before normalizing into\n// the CameraInfo type\nexport type IncomingCameraInfo = {\n  header: Header;\n  height: number;\n  width: number;\n  distortion_model: string;\n  D: number[] | undefined;\n  K: Matrix3 | [] | undefined;\n  R: Matrix3 | [] | undefined;\n  P: Matrix3x4 | [] | undefined;\n  d: number[] | undefined;\n  k: Matrix3 | [] | undefined;\n  r: Matrix3 | [] | undefined;\n  p: Matrix3x4 | [] | undefined;\n  binning_x: number;\n  binning_y: number;\n  roi: RegionOfInterest;\n};\n\nexport type Image = {\n  header: Header;\n  height: number;\n  width: number;\n  encoding: string;\n  is_bigendian: boolean;\n  step: number;\n  data: Int8Array | Uint8Array;\n};\n\nexport type CompressedImage = {\n  header: Header;\n  format: string;\n  data: Uint8Array;\n};\n\nexport type JointState = {\n  header: Header;\n  name: string[];\n  position: number[];\n  velocity: number[];\n  effort: number[];\n};\n\nexport const TIME_ZERO = { sec: 0, nsec: 0 };\n\nexport const TRANSFORM_STAMPED_DATATYPES = new Set<string>();\naddRosDataType(TRANSFORM_STAMPED_DATATYPES, \"geometry_msgs/TransformStamped\");\n\nexport const TF_DATATYPES = new Set<string>();\naddRosDataType(TF_DATATYPES, \"tf/tfMessage\");\naddRosDataType(TF_DATATYPES, \"tf2_msgs/TFMessage\");\n\nexport const MARKER_DATATYPES = new Set<string>();\naddRosDataType(MARKER_DATATYPES, \"visualization_msgs/Marker\");\n\nexport const MARKER_ARRAY_DATATYPES = new Set<string>();\naddRosDataType(MARKER_ARRAY_DATATYPES, \"visualization_msgs/MarkerArray\");\n// Support the legacy \"studio_msgs/MarkerArray\" datatype name\naddRosDataType(MARKER_ARRAY_DATATYPES, \"studio_msgs/MarkerArray\");\n\nexport const OCCUPANCY_GRID_DATATYPES = new Set<string>();\naddRosDataType(OCCUPANCY_GRID_DATATYPES, \"nav_msgs/OccupancyGrid\");\n\nexport const POINTCLOUD_DATATYPES = new Set<string>();\naddRosDataType(POINTCLOUD_DATATYPES, \"sensor_msgs/PointCloud2\");\n\nexport const LASERSCAN_DATATYPES = new Set<string>();\naddRosDataType(LASERSCAN_DATATYPES, \"sensor_msgs/LaserScan\");\n\nexport const VELODYNE_SCAN_DATATYPES = new Set<string>();\naddRosDataType(VELODYNE_SCAN_DATATYPES, \"velodyne_msgs/VelodyneScan\");\n\nexport const POSE_STAMPED_DATATYPES = new Set<string>();\naddRosDataType(POSE_STAMPED_DATATYPES, \"geometry_msgs/PoseStamped\");\n\nexport const POSE_WITH_COVARIANCE_STAMPED_DATATYPES = new Set<string>();\naddRosDataType(POSE_WITH_COVARIANCE_STAMPED_DATATYPES, \"geometry_msgs/PoseWithCovarianceStamped\");\n\nexport const POSE_ARRAY_DATATYPES = new Set<string>();\naddRosDataType(POSE_ARRAY_DATATYPES, \"geometry_msgs/PoseArray\");\n\nexport const NAV_PATH_DATATYPES = new Set<string>();\naddRosDataType(NAV_PATH_DATATYPES, \"nav_msgs/Path\");\n\nexport const CAMERA_INFO_DATATYPES = new Set<string>();\naddRosDataType(CAMERA_INFO_DATATYPES, \"sensor_msgs/CameraInfo\");\n\nexport const IMAGE_DATATYPES = new Set<string>();\naddRosDataType(IMAGE_DATATYPES, \"sensor_msgs/Image\");\n\nexport const COMPRESSED_IMAGE_DATATYPES = new Set<string>();\naddRosDataType(COMPRESSED_IMAGE_DATATYPES, \"sensor_msgs/CompressedImage\");\n\nexport const POLYGON_STAMPED_DATATYPES = new Set<string>();\naddRosDataType(POLYGON_STAMPED_DATATYPES, \"geometry_msgs/PolygonStamped\");\n\nexport const JOINTSTATE_DATATYPES = new Set<string>();\naddRosDataType(JOINTSTATE_DATATYPES, \"sensor_msgs/JointState\");\n\nexport const IMAGE_MARKER_DATATYPES = new Set<string>();\naddRosDataType(IMAGE_MARKER_DATATYPES, \"visualization_msgs/ImageMarker\");\n\n/** Not a real type offered by ROS, but historically Studio has supported it */\nexport const IMAGE_MARKER_ARRAY_DATATYPES = new Set<string>();\naddRosDataType(IMAGE_MARKER_ARRAY_DATATYPES, \"visualization_msgs/ImageMarkerArray\");\n\n// Expand a single ROS1 dataType into variations for ROS2 and protobufs,\n// then add them to the given output set\nfunction addRosDataType(output: Set<string>, dataType: string): Set<string> {\n  // Add the ROS1 variation: tf2_msgs/TFMessage\n  output.add(dataType);\n\n  // Add the ROS2 variation: tf2_msgs/msg/TFMessage\n  const parts = dataType.split(\"/\");\n  if (parts.length > 1) {\n    const base = parts[0];\n    const leaf = parts.slice(1).join(\"/\");\n    output.add(`${base}/msg/${leaf}`);\n  }\n\n  // Add the protobuf variation: ros.tf2_msgs.TFMessage\n  output.add(\"ros.\" + dataType.split(\"/\").join(\".\"));\n\n  return output;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { NumericType, PackedElementField } from \"@foxglove/schemas\";\n\nimport { PointField, PointFieldType } from \"../../ros\";\n\nexport type FieldReader = (view: DataView, pointOffset: number) => number;\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction int8Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getInt8(pointOffset + fieldOffset);\n    if (normalize) {\n      return Math.max(value / 0x7f, -1);\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction uint8Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getUint8(pointOffset + fieldOffset);\n    if (normalize) {\n      return value / 0xff;\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction int16Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getInt16(pointOffset + fieldOffset, true);\n    if (normalize) {\n      return Math.max(value / 0x7fff, -1);\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction uint16Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getUint16(pointOffset + fieldOffset, true);\n    if (normalize) {\n      return value / 0xffff;\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction int32Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getInt32(pointOffset + fieldOffset, true);\n    if (normalize) {\n      return Math.max(value / 0x7fffffff, -1);\n    }\n    return value;\n  };\n}\n\n// eslint-disable-next-line @foxglove/no-boolean-parameters\nfunction uint32Reader(fieldOffset: number, normalize: boolean): FieldReader {\n  return (view: DataView, pointOffset: number) => {\n    const value = view.getUint32(pointOffset + fieldOffset, true);\n    if (normalize) {\n      return value / 0xffffffff;\n    }\n    return value;\n  };\n}\n\nfunction float32Reader(fieldOffset: number): FieldReader {\n  return (view: DataView, pointOffset: number) => view.getFloat32(pointOffset + fieldOffset, true);\n}\n\nfunction float64Reader(fieldOffset: number): FieldReader {\n  return (view: DataView, pointOffset: number) => view.getFloat64(pointOffset + fieldOffset, true);\n}\n\nexport function isSupportedField(field: PackedElementField | PointField): boolean {\n  // Only PointFields with count === 1 are supported (doesn't apply to PackedElementFields)\n  if (\"count\" in field && field.count !== 1) {\n    return false;\n  }\n  return true;\n}\n\nexport function getReader(\n  field: PackedElementField | PointField,\n  stride: number,\n  /** @see https://www.khronos.org/opengl/wiki/Normalized_Integer */\n  // Performance-sensitive: this code is called for every point cloud message\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  normalize = false,\n  forceType?: PointFieldType | NumericType,\n): FieldReader | undefined {\n  if (!isSupportedField(field)) {\n    return undefined;\n  }\n\n  const numericType = (field as Partial<PackedElementField>).type;\n  if (numericType == undefined) {\n    const type = forceType ?? (field as PointField).datatype;\n    switch (type) {\n      case PointFieldType.INT8:\n        return field.offset + 1 <= stride ? int8Reader(field.offset, normalize) : undefined;\n      case PointFieldType.UINT8:\n        return field.offset + 1 <= stride ? uint8Reader(field.offset, normalize) : undefined;\n      case PointFieldType.INT16:\n        return field.offset + 2 <= stride ? int16Reader(field.offset, normalize) : undefined;\n      case PointFieldType.UINT16:\n        return field.offset + 2 <= stride ? uint16Reader(field.offset, normalize) : undefined;\n      case PointFieldType.INT32:\n        return field.offset + 4 <= stride ? int32Reader(field.offset, normalize) : undefined;\n      case PointFieldType.UINT32:\n        return field.offset + 4 <= stride ? uint32Reader(field.offset, normalize) : undefined;\n      case PointFieldType.FLOAT32:\n        return field.offset + 4 <= stride ? float32Reader(field.offset) : undefined;\n      case PointFieldType.FLOAT64:\n        return field.offset + 8 <= stride ? float64Reader(field.offset) : undefined;\n      default:\n        return undefined;\n    }\n  } else {\n    const type = (forceType ?? numericType) as NumericType;\n    switch (type) {\n      case NumericType.INT8:\n        return field.offset + 1 <= stride ? int8Reader(field.offset, normalize) : undefined;\n      case NumericType.UINT8:\n        return field.offset + 1 <= stride ? uint8Reader(field.offset, normalize) : undefined;\n      case NumericType.INT16:\n        return field.offset + 2 <= stride ? int16Reader(field.offset, normalize) : undefined;\n      case NumericType.UINT16:\n        return field.offset + 2 <= stride ? uint16Reader(field.offset, normalize) : undefined;\n      case NumericType.INT32:\n        return field.offset + 4 <= stride ? int32Reader(field.offset, normalize) : undefined;\n      case NumericType.UINT32:\n        return field.offset + 4 <= stride ? uint32Reader(field.offset, normalize) : undefined;\n      case NumericType.FLOAT32:\n        return field.offset + 4 <= stride ? float32Reader(field.offset) : undefined;\n      case NumericType.FLOAT64:\n        return field.offset + 8 <= stride ? float64Reader(field.offset) : undefined;\n      default:\n        return undefined;\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { Time } from \"@foxglove/rostime\";\nimport { FrameTransform, FrameTransforms, NumericType } from \"@foxglove/schemas\";\n\nimport type { PartialMessage } from \"./SceneExtension\";\nimport {\n  ColorRGBA,\n  Header,\n  Matrix6,\n  PointFieldType,\n  Quaternion,\n  TFMessage,\n  Transform,\n  TransformStamped,\n  Vector3,\n} from \"./ros\";\nimport type { Pose } from \"./transforms\";\n\n// Legacy foxglove.Transform type -- see https://github.com/foxglove/schemas/pull/46\ntype LegacyTransform = {\n  timestamp: Time;\n  translation: Vector3;\n  rotation: Quaternion;\n};\n// Legacy foxglove.FrameTransform type -- see https://github.com/foxglove/schemas/pull/46\nexport type LegacyFrameTransform = {\n  timestamp: Time;\n  parent_frame_id: string;\n  child_frame_id: string;\n  transform: LegacyTransform;\n};\n\nexport function normalizeTime(time: Partial<Time> | undefined): Time {\n  if (!time) {\n    return { sec: 0, nsec: 0 };\n  }\n  return { sec: time.sec ?? 0, nsec: time.nsec ?? 0 };\n}\n\nexport function normalizeByteArray(byteArray: unknown): Uint8Array {\n  if (byteArray == undefined) {\n    return new Uint8Array(0);\n  } else if (byteArray instanceof Uint8Array) {\n    return byteArray;\n  } else if (Array.isArray(byteArray) || byteArray instanceof ArrayBuffer) {\n    return new Uint8Array(byteArray);\n  } else {\n    return new Uint8Array(0);\n  }\n}\n\nexport function normalizeInt8Array(int8Array: unknown): Int8Array {\n  if (int8Array == undefined) {\n    return new Int8Array(0);\n  } else if (int8Array instanceof Int8Array) {\n    return int8Array;\n  } else if (Array.isArray(int8Array) || int8Array instanceof ArrayBuffer) {\n    return new Int8Array(int8Array);\n  } else {\n    return new Int8Array(0);\n  }\n}\n\nexport function normalizeFloat32Array(array: unknown): Float32Array {\n  if (array == undefined) {\n    return new Float32Array(0);\n  } else if (array instanceof Float32Array) {\n    return array;\n  } else if (\n    Array.isArray(array) ||\n    array instanceof ArrayBuffer ||\n    array instanceof Float64Array\n  ) {\n    return new Float32Array(array);\n  } else {\n    return new Float32Array(0);\n  }\n}\n\nexport function normalizeVector3(vector: Partial<Vector3> | undefined): Vector3 {\n  if (!vector) {\n    return { x: 0, y: 0, z: 0 };\n  }\n  return { x: vector.x ?? 0, y: vector.y ?? 0, z: vector.z ?? 0 };\n}\n\nexport function normalizeVector3s(\n  vectors: (Partial<Vector3> | undefined)[] | undefined,\n): Vector3[] {\n  if (!vectors) {\n    return [];\n  }\n  return vectors.map(normalizeVector3);\n}\n\nexport function normalizeMatrix6(mat: number[] | undefined): Matrix6 {\n  if (!mat || mat.length !== 36 || typeof mat[0] !== \"number\") {\n    // prettier-ignore\n    return [\n      1, 0, 0, 0, 0, 0,\n      0, 1, 0, 0, 0, 0,\n      0, 0, 1, 0, 0, 0,\n      0, 0, 0, 1, 0, 0,\n      0, 0, 0, 0, 1, 0,\n      0, 0, 0, 0, 0, 1\n    ];\n  }\n  return mat as Matrix6;\n}\n\nexport function normalizeQuaternion(quat: Partial<Quaternion> | undefined): Quaternion {\n  if (!quat) {\n    return { x: 0, y: 0, z: 0, w: 1 };\n  }\n  return { x: quat.x ?? 0, y: quat.y ?? 0, z: quat.z ?? 0, w: quat.w ?? 0 };\n}\n\nexport function normalizeColorRGBA(color: Partial<ColorRGBA> | undefined): ColorRGBA {\n  if (!color) {\n    return { r: 0, g: 0, b: 0, a: 1 };\n  }\n  // alpha defaults to 1 if unspecified\n  return { r: color.r ?? 0, g: color.g ?? 0, b: color.b ?? 0, a: color.a ?? 1 };\n}\n\nexport function normalizeColorRGBAs(\n  colors: (Partial<ColorRGBA> | undefined)[] | undefined,\n): ColorRGBA[] {\n  if (!colors) {\n    return [];\n  }\n  return colors.map(normalizeColorRGBA);\n}\n\nexport function normalizePose(pose: PartialMessage<Pose> | undefined): Pose {\n  return {\n    position: normalizeVector3(pose?.position),\n    orientation: normalizeQuaternion(pose?.orientation),\n  };\n}\n\nexport function normalizeHeader(header: PartialMessage<Header> | undefined): Header {\n  return {\n    frame_id: header?.frame_id ?? \"\",\n    stamp: normalizeTime(header?.stamp),\n    seq: header?.seq,\n  };\n}\n\nexport function normalizeTransform(transform: PartialMessage<Transform> | undefined): Transform {\n  return {\n    translation: normalizeVector3(transform?.translation),\n    rotation: normalizeQuaternion(transform?.rotation),\n  };\n}\n\nexport function normalizeTransformStamped(\n  transform: PartialMessage<TransformStamped> | undefined,\n): TransformStamped {\n  return {\n    header: normalizeHeader(transform?.header),\n    child_frame_id: transform?.child_frame_id ?? \"\",\n    transform: normalizeTransform(transform?.transform),\n  };\n}\n\nexport function normalizeTFMessage(tfMessage: PartialMessage<TFMessage> | undefined): TFMessage {\n  return {\n    transforms: (tfMessage?.transforms ?? []).map(normalizeTransformStamped),\n  };\n}\n\nexport function normalizeFrameTransform(\n  frameTransform:\n    | (PartialMessage<FrameTransform> & PartialMessage<LegacyFrameTransform>)\n    | undefined,\n): FrameTransform {\n  return {\n    timestamp: normalizeTime(frameTransform?.timestamp),\n    parent_frame_id: frameTransform?.parent_frame_id ?? \"\",\n    child_frame_id: frameTransform?.child_frame_id ?? \"\",\n    translation: normalizeVector3(\n      frameTransform?.translation ?? frameTransform?.transform?.translation,\n    ),\n    rotation: normalizeQuaternion(frameTransform?.rotation ?? frameTransform?.transform?.rotation),\n  };\n}\n\nexport function normalizeFrameTransforms(\n  frameTransforms: PartialMessage<FrameTransforms> | undefined,\n): FrameTransforms {\n  return {\n    transforms: (frameTransforms?.transforms ?? []).map(normalizeFrameTransform),\n  };\n}\n\nexport function numericTypeToPointFieldType(type: NumericType): PointFieldType {\n  switch (type) {\n    case NumericType.UINT8:\n      return PointFieldType.UINT8;\n    case NumericType.INT8:\n      return PointFieldType.INT8;\n    case NumericType.UINT16:\n      return PointFieldType.UINT16;\n    case NumericType.INT16:\n      return PointFieldType.INT16;\n    case NumericType.UINT32:\n      return PointFieldType.UINT32;\n    case NumericType.INT32:\n      return PointFieldType.INT32;\n    case NumericType.FLOAT32:\n      return PointFieldType.FLOAT32;\n    case NumericType.FLOAT64:\n      return PointFieldType.FLOAT64;\n    default:\n      return PointFieldType.UNKNOWN;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Topic } from \"@foxglove/studio\";\n\n/**\n * Determines whether `topic` has a supported schema from the set of `supportedSchemaNames`, either\n * as the original schema or one of the `convertibleTo` schemas.\n */\nexport function topicIsConvertibleToSchema(\n  topic: Topic,\n  supportedSchemaNames: Set<string>,\n): boolean {\n  return (\n    supportedSchemaNames.has(topic.schemaName) ||\n    (topic.convertibleTo?.some((name) => supportedSchemaNames.has(name)) ?? false)\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { Grid, NumericType, PackedElementField } from \"@foxglove/schemas\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\nimport { GRID_DATATYPES } from \"@foxglove/studio-base/panels/ThreeDeeRender/foxglove\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport {\n  baseColorModeSettingsNode,\n  ColorModeSettings,\n  getColorConverter,\n  NEEDS_MIN_MAX,\n  FS_SRGB_TO_LINEAR,\n  RGBA_PACKED_FIELDS,\n  hasSeparateRgbaFields,\n} from \"./pointClouds/colors\";\nimport { FieldReader, getReader } from \"./pointClouds/fieldReaders\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { rgbaToCssString, rgbaToLinear, stringToRgba } from \"../color\";\nimport { normalizePose, normalizeTime, normalizeByteArray } from \"../normalizeMessages\";\nimport { BaseSettings } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\n\ntype GridColorModeSettings = ColorModeSettings & {\n  // rgba packed modes are only supported for sensor_msgs/PointCloud2\n  colorMode: Exclude<ColorModeSettings[\"colorMode\"], \"rgb\" | \"rgba\">;\n};\n\nexport type LayerSettingsFoxgloveGrid = BaseSettings &\n  GridColorModeSettings & {\n    frameLocked: boolean;\n  };\nfunction zeroReader(): number {\n  return 0;\n}\n\nconst floatTextureColorModes: GridColorModeSettings[\"colorMode\"][] = [\"gradient\", \"colormap\"];\n\nconst INVALID_FOXGLOVE_GRID = \"INVALID_FOXGLOVE_GRID\";\n\nconst DEFAULT_COLOR_MAP = \"turbo\";\nconst DEFAULT_FLAT_COLOR = { r: 1, g: 1, b: 1, a: 1 };\nconst DEFAULT_MIN_COLOR = { r: 100 / 255, g: 47 / 255, b: 105 / 255, a: 1 };\nconst DEFAULT_MAX_COLOR = { r: 227 / 255, g: 177 / 255, b: 135 / 255, a: 1 };\n\nconst COLOR_MODE_TO_GLSL: {\n  [K in GridColorModeSettings[\"colorMode\"] as `COLOR_MODE_${K extends \"rgba-fields\"\n    ? \"RGBA\"\n    : Uppercase<K>}`]: number;\n} = {\n  COLOR_MODE_FLAT: 0,\n  COLOR_MODE_RGBA: 1,\n  COLOR_MODE_GRADIENT: 2,\n  COLOR_MODE_COLORMAP: 3,\n};\n\nconst COLOR_MAP_TO_GLSL: {\n  [K in ColorModeSettings[\"colorMap\"] as `COLOR_MAP_${Uppercase<K>}`]: number;\n} = {\n  COLOR_MAP_TURBO: 0,\n  COLOR_MAP_RAINBOW: 1,\n};\n\nconst DEFAULT_SETTINGS: LayerSettingsFoxgloveGrid = {\n  visible: false,\n  frameLocked: false,\n  colorMode: \"flat\",\n  minValue: undefined,\n  maxValue: undefined,\n  flatColor: rgbaToCssString(DEFAULT_FLAT_COLOR),\n  colorField: undefined,\n  gradient: [rgbaToCssString(DEFAULT_MIN_COLOR), rgbaToCssString(DEFAULT_MAX_COLOR)],\n  colorMap: DEFAULT_COLOR_MAP,\n  explicitAlpha: 1,\n};\n\ninterface GridShaderMaterial extends THREE.ShaderMaterial {\n  uniforms: {\n    map: THREE.IUniform<THREE.DataTexture>;\n\n    colorMode: THREE.IUniform<number>;\n    minValue: THREE.IUniform<number>;\n    maxValue: THREE.IUniform<number>;\n\n    colorMap: THREE.IUniform<number>;\n    colorMapOpacity: THREE.IUniform<number>;\n\n    minGradientColorLinear: THREE.IUniform<THREE.Vector4>;\n    maxGradientColorLinear: THREE.IUniform<THREE.Vector4>;\n  };\n  defines: typeof COLOR_MODE_TO_GLSL &\n    typeof COLOR_MAP_TO_GLSL & {\n      PICKING: number;\n    };\n}\n\nexport type FoxgloveGridUserData = BaseUserData & {\n  settings: LayerSettingsFoxgloveGrid;\n  topic: string;\n  foxgloveGrid: Grid;\n  mesh: THREE.Mesh;\n  texture: THREE.DataTexture;\n  material: GridShaderMaterial;\n  pickingMaterial: THREE.ShaderMaterial;\n};\n\ntype RgbaFieldReaders = {\n  redReader: FieldReader;\n  greenReader: FieldReader;\n  blueReader: FieldReader;\n  alphaReader: FieldReader;\n};\nconst tempRgbaFieldReaders: RgbaFieldReaders = {\n  redReader: zeroReader,\n  greenReader: zeroReader,\n  blueReader: zeroReader,\n  alphaReader: zeroReader,\n};\n\nfunction numericTypeName(type: NumericType): string {\n  return NumericType[type as number] ?? `${type}`;\n}\n\nfunction getTextureEncoding(settings: GridColorModeSettings) {\n  switch (settings.colorMode) {\n    case \"flat\":\n      // color is converted to linear by getColorConverter before being written to the texture\n      return THREE.LinearEncoding;\n    case \"gradient\":\n    case \"colormap\":\n      // color value is raw numeric value\n      return THREE.LinearEncoding;\n    case \"rgba-fields\":\n      return THREE.sRGBEncoding;\n  }\n}\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 1 };\nconst tempMinMaxColor: THREE.Vector2Tuple = [0, 0];\nexport class FoxgloveGridRenderable extends Renderable<FoxgloveGridUserData> {\n  public override dispose(): void {\n    this.userData.texture.dispose();\n    this.userData.material.dispose();\n    this.userData.pickingMaterial.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.foxgloveGrid;\n  }\n\n  public syncPickingMaterial(): void {\n    const { pickingMaterial, material } = this.userData;\n    pickingMaterial.uniforms = material.uniforms;\n    pickingMaterial.needsUpdate = true;\n  }\n\n  #getRgbaFieldReaders(out: RgbaFieldReaders, foxgloveGrid: Grid) {\n    const { cell_stride } = foxgloveGrid;\n    for (const field of foxgloveGrid.fields) {\n      const { name } = field;\n      if (name === \"red\") {\n        out.redReader = getReader(field, cell_stride, /*normalize*/ true) ?? zeroReader;\n      } else if (name === \"green\") {\n        out.greenReader = getReader(field, cell_stride, /*normalize*/ true) ?? zeroReader;\n      } else if (name === \"blue\") {\n        out.blueReader = getReader(field, cell_stride, /*normalize*/ true) ?? zeroReader;\n      } else if (name === \"alpha\") {\n        out.alphaReader = getReader(field, cell_stride, /*normalize*/ true) ?? zeroReader;\n      }\n    }\n  }\n\n  #getColorByFieldReader(\n    foxgloveGrid: Grid,\n    settings: LayerSettingsFoxgloveGrid,\n  ): FieldReader | undefined {\n    const { cell_stride } = foxgloveGrid;\n\n    for (const field of foxgloveGrid.fields) {\n      const { type, offset, name } = field;\n\n      if (name === settings.colorField) {\n        const fieldReader = getReader(field, cell_stride);\n        if (!fieldReader) {\n          const typeName = NumericType[type];\n          const message = `Grid field \"${name}\" is invalid. type=${typeName}, offset=${offset}, stride=${cell_stride}`;\n          invalidFoxgloveGridError(this.renderer, this.userData.topic, message);\n          return undefined;\n        }\n        return fieldReader;\n      }\n    }\n\n    return zeroReader;\n  }\n\n  public updateMaterial(settings: LayerSettingsFoxgloveGrid): void {\n    const { colorMode } = settings;\n    const { material } = this.userData;\n    let updated = false;\n    let transparent = false;\n    if (colorMode === \"flat\") {\n      stringToRgba(tempColor, settings.flatColor);\n      transparent = tempColor.a < 1.0;\n    } else if (colorMode === \"gradient\") {\n      stringToRgba(tempColor, settings.gradient[0]);\n      transparent = tempColor.a < 1.0;\n\n      stringToRgba(tempColor, settings.gradient[1]);\n      transparent = transparent || tempColor.a < 1.0;\n    } else if (colorMode === \"colormap\") {\n      transparent = settings.explicitAlpha < 1.0;\n    }\n    if (transparent !== material.transparent) {\n      material.depthWrite = !transparent;\n      material.transparent = transparent;\n      updated = true;\n    }\n    if (updated) {\n      material.needsUpdate = true;\n    }\n  }\n\n  public updateUniforms(foxgloveGrid: Grid, settings: LayerSettingsFoxgloveGrid): void {\n    const { material } = this.userData;\n    const {\n      uniforms: {\n        colorMode,\n        colorMap,\n        colorMapOpacity,\n        minValue,\n        maxValue,\n        minGradientColorLinear,\n        maxGradientColorLinear,\n      },\n    } = material;\n\n    if (settings.colorMode === \"rgba-fields\") {\n      colorMode.value = COLOR_MODE_TO_GLSL.COLOR_MODE_RGBA;\n    } else {\n      colorMode.value = COLOR_MODE_TO_GLSL[`COLOR_MODE_${settings.colorMode.toUpperCase()}`];\n    }\n\n    colorMap.value = COLOR_MAP_TO_GLSL[`COLOR_MAP_${settings.colorMap.toUpperCase()}`];\n\n    colorMapOpacity.value = settings.explicitAlpha;\n\n    minMaxColorValues(\n      tempMinMaxColor,\n      settings,\n      foxgloveGrid.fields.find((field) => settings.colorField === field.name)?.type ??\n        NumericType.UNKNOWN,\n    );\n\n    const [minColorValue, maxColorValue] = tempMinMaxColor;\n    minValue.value = minColorValue;\n    maxValue.value = maxColorValue;\n\n    const minColor = stringToRgba(tempColor, settings.gradient[0]);\n    rgbaToLinear(minColor, minColor);\n    minGradientColorLinear.value.set(minColor.r, minColor.g, minColor.b, minColor.a);\n\n    const maxColor = stringToRgba(tempColor, settings.gradient[1]);\n    rgbaToLinear(maxColor, maxColor);\n    maxGradientColorLinear.value.set(maxColor.r, maxColor.g, maxColor.b, maxColor.a);\n    // unnecessary to update material because all uniforms are sent to GPU every frame\n  }\n\n  public updateTexture(foxgloveGrid: Grid, settings: LayerSettingsFoxgloveGrid): void {\n    let texture = this.userData.texture;\n    const fieldReader = this.#getColorByFieldReader(foxgloveGrid, settings);\n    if (!fieldReader) {\n      return;\n    }\n\n    const view = new DataView(\n      foxgloveGrid.data.buffer,\n      foxgloveGrid.data.byteOffset,\n      foxgloveGrid.data.byteLength,\n    );\n\n    const { column_count: cols, row_stride, cell_stride } = foxgloveGrid;\n    const rows = foxgloveGrid.data.length / row_stride;\n    const sizeChanged = cols !== texture.image.width || rows !== texture.image.height;\n    const floatMode = floatTextureColorModes.includes(settings.colorMode);\n    const formatChanged = floatMode\n      ? texture.format !== THREE.RedFormat\n      : texture.format !== THREE.RGBAFormat;\n    if (formatChanged || sizeChanged) {\n      // The image dimensions or format changed, regenerate the texture\n      texture.dispose();\n      texture = createTexture(foxgloveGrid, settings);\n      texture.generateMipmaps = false;\n      this.userData.texture = texture;\n      this.userData.material.uniforms.map.value = texture;\n    }\n\n    const encoding = getTextureEncoding(settings);\n    if (encoding !== texture.encoding) {\n      texture.encoding = encoding;\n      texture.needsUpdate = true;\n    }\n\n    if (floatMode) {\n      // FLOAT texture handling (gradient & colorMap)\n      // type of image.data is Uint8ClampedArray, but it is in fact the raw texture data even thought it's\n      // meant to be used as an RGBA image data array\n      const valueData = texture.image.data as unknown as Float32Array;\n      for (let y = 0; y < rows; y++) {\n        for (let x = 0; x < cols; x++) {\n          const offset = y * row_stride + x * cell_stride;\n          const colorValue = fieldReader(view, offset);\n          const i = y * cols + x;\n          valueData[i] = colorValue;\n        }\n      }\n    } else {\n      // RGBA textures (flat & rgba modes)\n      const rgba = texture.image.data;\n      let hasTransparency = false;\n      if (settings.colorMode === \"rgba-fields\") {\n        this.#getRgbaFieldReaders(tempRgbaFieldReaders, foxgloveGrid);\n        const { redReader, greenReader, blueReader, alphaReader } = tempRgbaFieldReaders;\n        for (let y = 0; y < rows; y++) {\n          for (let x = 0; x < cols; x++) {\n            const offset = y * row_stride + x * cell_stride;\n            const i = y * cols + x;\n            const rgbaOffset = i * 4;\n            const alpha = alphaReader(view, offset);\n            rgba[rgbaOffset + 0] = (redReader(view, offset) * 255) | 0;\n            rgba[rgbaOffset + 1] = (greenReader(view, offset) * 255) | 0;\n            rgba[rgbaOffset + 2] = (blueReader(view, offset) * 255) | 0;\n            rgba[rgbaOffset + 3] = (alpha * 255) | 0;\n\n            // We cheat a little with transparency: alpha 0 will be handled by the alphaTest setting, so\n            // we don't need to set material.transparent = true.\n            if (alpha !== 0 && alpha !== 1) {\n              hasTransparency = true;\n            }\n          }\n        }\n      } else if (settings.colorMode === \"flat\") {\n        // flat\n        const colorConverter = getColorConverter(\n          settings as typeof settings & { colorMode: typeof settings.colorMode },\n          0,\n          1,\n        );\n        for (let y = 0; y < rows; y++) {\n          for (let x = 0; x < cols; x++) {\n            const offset = y * row_stride + x * cell_stride;\n            const colorValue = fieldReader(view, offset);\n            colorConverter(tempColor, colorValue);\n            const i = y * cols + x;\n            const rgbaOffset = i * 4;\n            rgba[rgbaOffset + 0] = Math.floor(tempColor.r * 255);\n            rgba[rgbaOffset + 1] = Math.floor(tempColor.g * 255);\n            rgba[rgbaOffset + 2] = Math.floor(tempColor.b * 255);\n            rgba[rgbaOffset + 3] = Math.floor(tempColor.a * 255);\n\n            // We cheat a little with transparency: alpha 0 will be handled by the alphaTest setting, so\n            // we don't need to set material.transparent = true.\n            if (tempColor.a !== 0 && tempColor.a !== 1) {\n              hasTransparency = true;\n            }\n          }\n        }\n      }\n      if (this.userData.material.transparent !== hasTransparency) {\n        this.userData.material.transparent = hasTransparency;\n        this.userData.material.depthWrite = !hasTransparency;\n        this.userData.material.needsUpdate = true;\n      }\n    }\n    this.userData.material.uniforms.map.value.needsUpdate = true;\n  }\n}\n\nexport class FoxgloveGrid extends SceneExtension<FoxgloveGridRenderable> {\n  #fieldsByTopic = new Map<string, string[]>();\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.Grid\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: GRID_DATATYPES,\n        subscription: { handler: this.#handleFoxgloveGrid },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, GRID_DATATYPES)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsFoxgloveGrid>;\n\n      const node = baseColorModeSettingsNode(\n        this.#fieldsByTopic.get(topic.name) ?? [],\n        config,\n        topic,\n        DEFAULT_SETTINGS,\n        { supportsPackedRgbModes: false, supportsRgbaFieldsMode: true },\n      );\n      node.icon = \"Cells\";\n      node.fields.frameLocked = {\n        label: \"Frame lock\",\n        input: \"boolean\",\n        value: config.frameLocked ?? DEFAULT_SETTINGS.frameLocked,\n      };\n      (node as SettingsTreeNodeWithActionHandler).handler = handler;\n      entries.push({\n        path: [\"topics\", topic.name],\n        node,\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsFoxgloveGrid>\n        | undefined;\n      renderable.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n\n      renderable.updateMaterial(renderable.userData.settings);\n      renderable.updateUniforms(renderable.userData.foxgloveGrid, renderable.userData.settings);\n      if (\n        action.payload.path[2] === \"colorMode\" ||\n        action.payload.path[2] === \"colorField\" ||\n        action.payload.path[2] === \"flatColor\"\n      ) {\n        // needs to recalculate texture when colorMode or colorField changes\n        // technically it doesn't if it's going between gradient and colorMap, but since it's an infrequent user-action it's not a big hit\n        renderable.updateTexture(renderable.userData.foxgloveGrid, renderable.userData.settings);\n      }\n      renderable.syncPickingMaterial();\n    }\n  };\n\n  #handleFoxgloveGrid = (messageEvent: PartialMessageEvent<Grid>): void => {\n    const topic = messageEvent.topic;\n    const foxgloveGrid = normalizeFoxgloveGrid(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n\n    if (!this.#validateFoxgloveGrid(foxgloveGrid, messageEvent.topic)) {\n      if (renderable) {\n        renderable.visible = false;\n      }\n      return;\n    }\n\n    if (renderable) {\n      renderable.visible = true;\n    } else {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsFoxgloveGrid>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n      // only want to autoselect if it's in flatcolor mode (without colorfield) and previously didn't have fields\n      if (settings.colorField == undefined && this.#fieldsByTopic.get(topic) == undefined) {\n        autoSelectColorField(settings, foxgloveGrid.fields, { supportsPackedRgbModes: false });\n        // Update user settings with the newly selected color field\n        this.renderer.updateConfig((draft) => {\n          const updatedUserSettings = { ...userSettings };\n          updatedUserSettings.colorField = settings.colorField;\n          updatedUserSettings.colorMode = settings.colorMode;\n          updatedUserSettings.colorMap = settings.colorMap;\n          draft.topics[topic] = updatedUserSettings;\n        });\n      }\n\n      // Check color\n      const texture = createTexture(foxgloveGrid, settings);\n      const geometry = this.renderer.sharedGeometry.getGeometry(\n        this.constructor.name,\n        createGridGeometry,\n      );\n      const mesh = createMesh(topic, texture, geometry);\n      const material = mesh.material as GridShaderMaterial;\n      const pickingMaterial = mesh.userData.pickingMaterial as THREE.ShaderMaterial;\n\n      // Create the renderable\n      renderable = new FoxgloveGridRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(foxgloveGrid.timestamp),\n        frameId: this.renderer.normalizeFrameId(foxgloveGrid.frame_id),\n        pose: foxgloveGrid.pose,\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        foxgloveGrid,\n        mesh,\n        texture,\n        material,\n        pickingMaterial,\n      });\n      renderable.add(mesh);\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    let fields = this.#fieldsByTopic.get(topic);\n    if (!fields || fields.length !== foxgloveGrid.fields.length) {\n      fields = foxgloveGrid.fields.map((field) => field.name);\n      this.#fieldsByTopic.set(topic, fields);\n      this.updateSettingsTree();\n    }\n\n    this.#updateFoxgloveGridRenderable(\n      renderable,\n      foxgloveGrid,\n      receiveTime,\n      renderable.userData.settings,\n    );\n  };\n\n  #validateFoxgloveGrid(foxgloveGrid: Grid, topic: string): boolean {\n    const { cell_stride, row_stride, column_count: cols } = foxgloveGrid;\n    const rows = foxgloveGrid.data.byteLength / row_stride;\n\n    if (foxgloveGrid.fields.length === 0) {\n      invalidFoxgloveGridError(\n        this.renderer,\n        topic,\n        `Grid has no fields. At least one field is required for the Grid to be displayed.`,\n      );\n      return false;\n    }\n\n    if (Math.floor(cols) !== cols || Math.floor(rows) !== rows) {\n      const message = `Grid column count (${foxgloveGrid.column_count}) or row count (${rows} = data.byteLength ${foxgloveGrid.data.byteLength} / row_stride ${row_stride}) is not an integer.`;\n      invalidFoxgloveGridError(this.renderer, topic, message);\n      return false;\n    }\n\n    if (cell_stride * cols > row_stride) {\n      const message = `Grid row_stride (${row_stride}) does not allow for requisite column_count (${cols}) with cell stride (${cell_stride}). Minimum requisite bytes in row_stride needed: (${\n        cols * cell_stride\n      }) `;\n      invalidFoxgloveGridError(this.renderer, topic, message);\n      return false;\n    }\n\n    // Determine the minimum bytes needed per cell based on offset/size of each\n    // field, so we can ensure cell_stride is >= this value\n    let minBytesPerCell = 0;\n    let maxField: PackedElementField | undefined;\n    for (const field of foxgloveGrid.fields) {\n      const byteWidth = numericTypeWidth(field.type);\n      if (field.offset + byteWidth > minBytesPerCell) {\n        minBytesPerCell = field.offset + byteWidth;\n        maxField = field;\n      }\n    }\n    if (minBytesPerCell > cell_stride) {\n      let message = `Grid cell_stride (${cell_stride}) is less than minimum bytes per cell (${minBytesPerCell})`;\n      if (maxField) {\n        message += ` required by “${maxField.name}” field, type=${numericTypeName(\n          maxField.type,\n        )}, offset=${maxField.offset}`;\n      }\n      invalidFoxgloveGridError(this.renderer, topic, message);\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @param foxgloveGrid must be validated already */\n  #updateFoxgloveGridRenderable(\n    renderable: FoxgloveGridRenderable,\n    foxgloveGrid: Grid,\n    receiveTime: bigint,\n    settings: LayerSettingsFoxgloveGrid,\n  ): void {\n    renderable.userData.foxgloveGrid = foxgloveGrid;\n    renderable.userData.pose = foxgloveGrid.pose;\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(foxgloveGrid.timestamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(foxgloveGrid.frame_id);\n    const { row_stride, column_count: cols } = foxgloveGrid;\n    const rows = foxgloveGrid.data.byteLength / row_stride;\n\n    renderable.updateMaterial(settings);\n    renderable.updateUniforms(foxgloveGrid, settings);\n    renderable.updateTexture(foxgloveGrid, settings);\n\n    renderable.scale.set(foxgloveGrid.cell_size.x * cols, foxgloveGrid.cell_size.y * rows, 1);\n\n    renderable.syncPickingMaterial();\n  }\n}\nfunction createGridGeometry(): THREE.PlaneGeometry {\n  const geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n  geometry.translate(0.5, 0.5, 0);\n  geometry.computeBoundingSphere();\n  return geometry;\n}\n\nfunction invalidFoxgloveGridError(renderer: IRenderer, topic: string, message: string): void {\n  renderer.settings.errors.addToTopic(topic, INVALID_FOXGLOVE_GRID, message);\n}\n\nfunction createTexture(foxgloveGrid: Grid, settings: GridColorModeSettings): THREE.DataTexture {\n  const { column_count: cols, row_stride } = foxgloveGrid;\n  const rows = foxgloveGrid.data.byteLength / row_stride;\n  const size = isFinite(cols * rows) ? cols * rows : 0;\n  const isFloatType = floatTextureColorModes.includes(settings.colorMode);\n  const data = isFloatType ? new Float32Array(size) : new Uint8ClampedArray(size * 4);\n  const format = isFloatType ? THREE.RedFormat : THREE.RGBAFormat;\n  const type = isFloatType ? THREE.FloatType : THREE.UnsignedByteType;\n  const texture = new THREE.DataTexture(\n    data,\n    cols,\n    rows,\n    format,\n    type,\n    THREE.UVMapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.NearestFilter,\n    THREE.LinearFilter,\n    1,\n    getTextureEncoding(settings),\n  );\n  texture.generateMipmaps = false;\n  return texture;\n}\n\nfunction createMesh(\n  topic: string,\n  texture: THREE.DataTexture,\n  geometry: THREE.PlaneGeometry,\n): THREE.Mesh {\n  // Create the texture, material, and mesh\n  const material = createMaterial(texture, topic);\n  const pickingMaterial = createPickingMaterial(material);\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.castShadow = true;\n  mesh.receiveShadow = true;\n  // This overrides the picking material used for `mesh`. See Picker.ts\n  mesh.userData.pickingMaterial = pickingMaterial;\n  return mesh;\n}\n\nfunction numericTypeWidth(type: NumericType): number {\n  switch (type) {\n    case NumericType.INT8:\n    case NumericType.UINT8:\n      return 1;\n    case NumericType.INT16:\n    case NumericType.UINT16:\n      return 2;\n    case NumericType.INT32:\n    case NumericType.UINT32:\n    case NumericType.FLOAT32:\n      return 4;\n    case NumericType.FLOAT64:\n      return 8;\n    default:\n      return 0;\n  }\n}\n\nfunction createMaterial(texture: THREE.DataTexture, topic: string): GridShaderMaterial {\n  return new THREE.ShaderMaterial({\n    name: `${topic}:Material`,\n    // Enable alpha clipping. Fully transparent (alpha=0) pixels are skipped\n    // even when transparency is disabled\n    alphaTest: 1e-4,\n    side: THREE.DoubleSide,\n    uniforms: {\n      objectId: { value: [NaN, NaN, NaN, NaN] },\n      colorMode: { value: COLOR_MODE_TO_GLSL.COLOR_MODE_RGBA },\n      colorMap: { value: COLOR_MAP_TO_GLSL.COLOR_MAP_TURBO },\n      colorMapOpacity: { value: 1.0 },\n      minValue: { value: 0.0 },\n      maxValue: { value: 1.0 },\n      minGradientColorLinear: { value: new THREE.Vector4() },\n      maxGradientColorLinear: { value: new THREE.Vector4() },\n      map: { value: texture },\n    },\n    vertexShader: /* glsl */ `\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    `,\n    defines: {\n      ...COLOR_MODE_TO_GLSL,\n      ...COLOR_MAP_TO_GLSL,\n      PICKING: 0,\n    },\n    fragmentShader: /* glsl */ `\n      uniform vec4 objectId;\n\n      uniform sampler2D map;\n\n      uniform int colorMode;\n      uniform float minValue;\n      uniform float maxValue;\n\n      uniform int colorMap;\n      uniform float colorMapOpacity;\n\n      uniform vec4 minGradientColorLinear;\n      uniform vec4 maxGradientColorLinear;\n\n      varying vec2 vUv;\n\n      ${FS_SRGB_TO_LINEAR}\n\n      // adapted from https://gist.github.com/mikhailov-work/0d177465a8151eb6ede1768d51d476c7\n      vec3 turboLinear(float x) {\n        const vec4 kRedVec4 = vec4(0.13572138, 4.61539260, -42.66032258, 132.13108234);\n        const vec4 kGreenVec4 = vec4(0.09140261, 2.19418839, 4.84296658, -14.18503333);\n        const vec4 kBlueVec4 = vec4(0.10667330, 12.64194608, -60.58204836, 110.36276771);\n        const vec2 kRedVec2 = vec2(-152.94239396, 59.28637943);\n        const vec2 kGreenVec2 = vec2(4.27729857, 2.82956604);\n        const vec2 kBlueVec2 = vec2(-89.90310912, 27.34824973);\n\n        vec4 v4 = vec4(1.0, x, x * x, x * x * x);\n        vec2 v2 = v4.zw * v4.z;\n        return sRGBToLinear(vec3(\n          (dot(v4, kRedVec4)   + dot(v2, kRedVec2)),\n          (dot(v4, kGreenVec4) + dot(v2, kGreenVec2)),\n          (dot(v4, kBlueVec4)  + dot(v2, kBlueVec2))\n        ));\n      }\n\n\n      // taken from http://docs.ros.org/jade/api/rviz/html/c++/point__cloud__transformers_8cpp_source.html\n      // line 47\n      vec3 rainbowLinear(float pct) {\n        vec3 colorOut = vec3(0.0);\n        float h = (1.0 - clamp(pct, 0.0, 1.0)) * 5.0 + 1.0;\n        float i = floor(h);\n        float f = mod(h, 1.0);\n        // if i is even\n        if (mod(i, 2.0) < 1.0) {\n          f = 1.0 - f;\n        }\n        float n = (1.0 - f);\n\n        if (i <= 1.0) {\n          colorOut.r = n;\n          colorOut.g = 0.0;\n          colorOut.b = 1.0;\n        } else if (i == 2.0) {\n          colorOut.r = 0.0;\n          colorOut.g = n;\n          colorOut.b = 1.0;\n        } else if (i == 3.0) {\n          colorOut.r = 0.0;\n          colorOut.g = 1.0;\n          colorOut.b = n;\n        } else if (i == 4.0) {\n          colorOut.r = n;\n          colorOut.g = 1.0;\n          colorOut.b = 0.0;\n        } else {\n          colorOut.r = 1.0;\n          colorOut.g = n;\n          colorOut.b = 0.0;\n        }\n        return sRGBToLinear(colorOut);\n      }\n\n      void main() {\n        vec4 color = texture2D(map, vUv);\n        if(colorMode == COLOR_MODE_RGBA) {\n          // input color is in sRGB, texture.encoding is sRGB, so no conversion is needed\n          gl_FragColor = color;\n        } else if (colorMode == COLOR_MODE_FLAT) {\n          // input color was already converted to linear by getColorConverter\n          gl_FragColor = color;\n        } else {\n          // input color was already converted to linear by getColorConverter\n          float delta = max(maxValue - minValue, 0.00001);\n          float colorValue = color.r;\n          float normalizedColorValue = clamp((colorValue - minValue) / delta, 0.0, 1.0);\n          if(colorMode == COLOR_MODE_GRADIENT) {\n            /**\n            * Computes a gradient step from colors a to b using pre-multiplied alpha to\n            * match CSS linear gradients. The inputs are assumed to not have pre-multiplied\n            * alpha, and the output will have pre-multiplied alpha.\n            */\n            vec4 weightedMinColor = vec4(minGradientColorLinear.rgb * minGradientColorLinear.a, minGradientColorLinear.a);\n            vec4 weightedMaxColor = vec4(maxGradientColorLinear.rgb * maxGradientColorLinear.a, maxGradientColorLinear.a);\n            vec4 finalColor = mix(weightedMinColor, weightedMaxColor, normalizedColorValue);\n            // gradient computation takes place in linear colorspace\n            gl_FragColor = finalColor;\n          } else if(colorMode == COLOR_MODE_COLORMAP) {\n            // colormap\n            if(colorMap == COLOR_MAP_TURBO) {\n              gl_FragColor = vec4(turboLinear(normalizedColorValue), colorMapOpacity);\n            } else if(colorMap == COLOR_MAP_RAINBOW) {\n              gl_FragColor = vec4(rainbowLinear(normalizedColorValue), colorMapOpacity);\n            }\n          }\n        }\n        if(gl_FragColor.a < 0.00001) {\n          discard;\n        }\n        if(PICKING == 1) {\n          gl_FragColor = objectId;\n        } else {\n          #include <encodings_fragment>\n        }\n      }\n    `,\n  }) as GridShaderMaterial;\n}\n\nfunction createPickingMaterial(originalMaterial: GridShaderMaterial): THREE.ShaderMaterial {\n  const material = new THREE.ShaderMaterial();\n  material.copy(originalMaterial);\n  material.name = \"\";\n  material.defines.PICKING = 1;\n  material.uniformsNeedUpdate = true;\n  material.needsUpdate = true;\n  return material;\n}\n\nfunction normalizePackedElementField(\n  field: PartialMessage<PackedElementField> | undefined,\n): PackedElementField {\n  return {\n    name: field?.name ?? \"\",\n    offset: field?.offset ?? 0,\n    type: field?.type ?? 0,\n  };\n}\n\nfunction normalizeFoxgloveGrid(message: PartialMessage<Grid>): Grid {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    pose: normalizePose(message.pose),\n    frame_id: message.frame_id ?? \"\",\n    row_stride: message.row_stride ?? 0,\n    cell_stride: message.cell_stride ?? 0,\n    column_count: message.column_count ?? 0,\n    cell_size: {\n      x: message.cell_size?.x ?? 1,\n      y: message.cell_size?.y ?? 1,\n    },\n    fields: message.fields?.map(normalizePackedElementField) ?? [],\n    data: normalizeByteArray(message.data),\n  };\n}\n\nfunction minMaxColorValues(\n  output: THREE.Vector2Tuple,\n  settings: LayerSettingsFoxgloveGrid,\n  numericType: NumericType,\n): void {\n  if (!NEEDS_MIN_MAX.includes(settings.colorMode)) {\n    return;\n  }\n\n  const [numericMin, numericMax] = NumericTypeMinMaxValueMap[numericType];\n  const minColorValue = settings.minValue ?? numericMin;\n  const maxColorValue = settings.maxValue ?? numericMax;\n  output[0] = minColorValue;\n  output[1] = maxColorValue;\n}\n\nconst NumericTypeMinMaxValueMap: Record<NumericType, [number, number]> = {\n  [NumericType.UNKNOWN]: [0, 1.0],\n  [NumericType.UINT8]: [0, 255],\n  [NumericType.UINT16]: [0, 65535],\n  [NumericType.UINT32]: [0, Math.pow(2, 32) - 1],\n  [NumericType.INT8]: [-128, 127],\n  [NumericType.INT16]: [-Math.pow(2, 16 - 1), -Math.pow(2, 16 - 1) - 1],\n  [NumericType.INT32]: [-Math.pow(2, 32 - 1), -Math.pow(2, 32 - 1) - 1],\n  [NumericType.FLOAT32]: [0, 1.0],\n  [NumericType.FLOAT64]: [0, 1.0],\n};\n\nfunction autoSelectColorField<Settings extends ColorModeSettings>(\n  output: Settings,\n  fields: PackedElementField[],\n  { supportsPackedRgbModes }: { supportsPackedRgbModes: boolean },\n): void {\n  // Prefer color fields first\n  if (supportsPackedRgbModes) {\n    for (const field of fields) {\n      const fieldNameLower = field.name.toLowerCase();\n      if (RGBA_PACKED_FIELDS.has(fieldNameLower)) {\n        output.colorField = field.name;\n        switch (fieldNameLower) {\n          case \"rgb\":\n            output.colorMode = \"rgb\";\n            break;\n          default:\n          case \"rgba\":\n            output.colorMode = \"rgba\";\n            break;\n        }\n        return;\n      }\n    }\n  }\n\n  if (hasSeparateRgbaFields(fields.map((f) => f.name))) {\n    output.colorMode = \"rgba-fields\";\n    return;\n  }\n\n  // Fall back to using the first field\n  if (fields.length > 0) {\n    const firstField = fields[0]!;\n    output.colorField = firstField.name;\n    output.colorMode = \"colormap\";\n    output.colorMap = \"turbo\";\n    return;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport * as THREE from \"three\";\n\nimport {\n  Immutable,\n  MessageEvent,\n  ParameterValue,\n  SettingsIcon,\n  Topic,\n  VariableValue,\n} from \"@foxglove/studio\";\nimport { ICameraHandler } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/ICameraHandler\";\nimport { LabelPool } from \"@foxglove/three-text\";\n\nimport { Input } from \"./Input\";\nimport { MeshUpAxis, ModelCache } from \"./ModelCache\";\nimport { PickedRenderable } from \"./Picker\";\nimport { SceneExtension } from \"./SceneExtension\";\nimport { SettingsManager } from \"./SettingsManager\";\nimport { SharedGeometry } from \"./SharedGeometry\";\nimport { CameraState } from \"./camera\";\nimport { DetailLevel } from \"./lod\";\nimport { LayerSettingsTransform } from \"./renderables/FrameAxes\";\nimport { DownloadImageInfo } from \"./renderables/Images/ImageTypes\";\nimport { MeasurementTool } from \"./renderables/MeasurementTool\";\nimport { PublishClickTool, PublishClickType } from \"./renderables/PublishClickTool\";\nimport { MarkerPool } from \"./renderables/markers/MarkerPool\";\nimport { Quaternion, Vector3 } from \"./ros\";\nimport { BaseSettings, CustomLayerSettings, SelectEntry } from \"./settings\";\nimport { TransformTree } from \"./transforms\";\nimport { InterfaceMode } from \"./types\";\n\nexport type RendererEvents = {\n  startFrame: (currentTime: bigint, renderer: IRenderer) => void;\n  endFrame: (currentTime: bigint, renderer: IRenderer) => void;\n  cameraMove: (renderer: IRenderer) => void;\n  renderablesClicked: (\n    selections: PickedRenderable[],\n    cursorCoords: { x: number; y: number },\n    renderer: IRenderer,\n  ) => void;\n  selectedRenderable: (selection: PickedRenderable | undefined, renderer: IRenderer) => void;\n  parametersChange: (\n    parameters: ReadonlyMap<string, ParameterValue> | undefined,\n    renderer: IRenderer,\n  ) => void;\n  /** Fired when the structure of the transform tree changes ie: new frame added/removed or frame assigned new parent */\n  transformTreeUpdated: (renderer: IRenderer) => void;\n  settingsTreeChange: (renderer: IRenderer) => void;\n  configChange: (renderer: IRenderer) => void;\n  schemaHandlersChanged: (renderer: IRenderer) => void;\n  topicHandlersChanged: (renderer: IRenderer) => void;\n  topicsChanged: (renderer: IRenderer) => void;\n  resetViewChanged: (renderer: IRenderer) => void;\n  resetAllFramesCursor: (renderer: IRenderer) => void;\n};\n\nexport type FollowMode = \"follow-pose\" | \"follow-position\" | \"follow-none\";\n\nexport type ImageAnnotationSettings = {\n  visible: boolean;\n};\n\n/** Settings pertaining to Image mode */\nexport type ImageModeConfig = {\n  /** Image topic to display */\n  imageTopic?: string;\n  /** Topic containing CameraCalibration or CameraInfo */\n  calibrationTopic?: string;\n  /** Annotation topicName -> settings, analogous to {@link RendererConfig.topics} */\n  annotations?: Record<string, Partial<ImageAnnotationSettings> | undefined>;\n  synchronize?: boolean;\n  /** Rotation */\n  rotation?: 0 | 90 | 180 | 270;\n  flipHorizontal?: boolean;\n  flipVertical?: boolean;\n  /** Minimum (black) value for single-channel images */\n  minValue?: number;\n  /** Maximum (white) value for single-channel images */\n  maxValue?: number;\n};\n\nexport type RendererConfig = {\n  /** Camera settings for the currently rendering scene */\n  cameraState: CameraState;\n  /** Coordinate frameId of the rendering frame */\n  followTf: string | undefined;\n  /** Camera follow mode */\n  followMode: FollowMode;\n  scene: {\n    /** Show rendering metrics in a DOM overlay */\n    enableStats?: boolean;\n    /** Background color override for the scene, sent to `glClearColor()` */\n    backgroundColor?: string;\n    /* Scale factor to apply to all labels */\n    labelScaleFactor?: number;\n    /** Ignore the <up_axis> tag in COLLADA files (matching rviz behavior) */\n    ignoreColladaUpAxis?: boolean;\n    meshUpAxis?: MeshUpAxis;\n    transforms?: {\n      /** Toggles translation and rotation offset controls for frames */\n      editable?: boolean;\n      /** Toggles visibility of frame axis labels */\n      showLabel?: boolean;\n      /** Size of frame axis labels */\n      labelSize?: number;\n      /** Size of coordinate frame axes */\n      axisScale?: number;\n      /** Width of the connecting line between child and parent frames */\n      lineWidth?: number;\n      /** Color of the connecting line between child and parent frames */\n      lineColor?: string;\n      /** Enable transform preloading */\n      enablePreloading?: boolean;\n    };\n    /** Sync camera with other 3d panels */\n    syncCamera?: boolean;\n    /** Toggles visibility of all topics */\n    topicsVisible?: boolean;\n  };\n  publish: {\n    /** The type of message to publish when clicking in the scene */\n    type: PublishClickType;\n    /** The topic on which to publish poses */\n    poseTopic: string;\n    /** The topic on which to publish points */\n    pointTopic: string;\n    /** The topic on which to publish pose estimates */\n    poseEstimateTopic: string;\n    /** The X standard deviation to publish with poses */\n    poseEstimateXDeviation: number;\n    /** The Y standard deviation to publish with poses */\n    poseEstimateYDeviation: number;\n    /** The theta standard deviation to publish with poses */\n    poseEstimateThetaDeviation: number;\n  };\n  /** frameId -> settings */\n  transforms: Record<string, Partial<LayerSettingsTransform> | undefined>;\n  /** topicName -> settings */\n  topics: Record<string, Partial<BaseSettings> | undefined>;\n  /** instanceId -> settings */\n  layers: Record<string, Partial<CustomLayerSettings> | undefined>;\n\n  /** Settings pertaining to Image mode */\n  imageMode: ImageModeConfig;\n};\n\nexport type RendererSubscription<T = unknown> = {\n  /** Preload the full history of topic messages as a best effort */\n  preload?: boolean;\n  /**\n   * By default, topic subscriptions are only created when the topic visibility\n   * has been toggled on by the user in the settings sidebar. Override this\n   * behavior with a custom shouldSubscribe callback. This callback will be\n   * called whenever the list of available topics changes or when any 3D panel\n   * settings are changed.\n   */\n  shouldSubscribe?: (topic: string) => boolean;\n  /** Callback that will be fired for each matching incoming message */\n  handler: (messageEvent: MessageEvent<T>) => void;\n};\n\nexport type AnyRendererSubscription = Immutable<\n  | {\n      type: \"schema\";\n      schemaNames: Set<string>;\n      // any is used here to allow storing heterogeneous arrays of subscriptions\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      subscription: RendererSubscription<any>;\n    }\n  | {\n      type: \"topic\";\n      topicName: string;\n      // any is used here to allow storing heterogeneous arrays of subscriptions\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      subscription: RendererSubscription<any>;\n    }\n>;\n\nexport class InstancedLineMaterial extends THREE.LineBasicMaterial {\n  public constructor(...args: ConstructorParameters<typeof THREE.LineBasicMaterial>) {\n    super(...args);\n    this.defines ??= {};\n    this.defines.USE_INSTANCING = true;\n  }\n}\n\nexport interface IRenderer extends EventEmitter<RendererEvents> {\n  readonly interfaceMode: InterfaceMode;\n  readonly gl: THREE.WebGLRenderer;\n  maxLod: DetailLevel;\n  config: Immutable<RendererConfig>;\n  settings: SettingsManager;\n  debugPicking: boolean;\n  // [{ name, datatype }]\n  topics: ReadonlyArray<Topic> | undefined;\n  // topicName -> { name, datatype }\n  topicsByName: ReadonlyMap<string, Topic> | undefined;\n  // parameterKey -> parameterValue\n  parameters: ReadonlyMap<string, ParameterValue> | undefined;\n  // variableName -> variableValue\n  variables: ReadonlyMap<string, VariableValue>;\n  // extensionId -> SceneExtension\n  sceneExtensions: Map<string, SceneExtension>;\n  // datatype -> RendererSubscription[]\n  schemaHandlers: Map<string, RendererSubscription[]>;\n  // topicName -> RendererSubscription[]\n  topicHandlers: Map<string, RendererSubscription[]>;\n  // layerId -> { action, handler }\n  input: Input;\n  readonly outlineMaterial: THREE.LineBasicMaterial;\n  readonly instancedOutlineMaterial: InstancedLineMaterial;\n\n  measurementTool: MeasurementTool;\n  publishClickTool: PublishClickTool;\n\n  /** only public for testing - prefer to use `getCameraState` instead */\n  cameraHandler: ICameraHandler;\n\n  // Are we connected to a ROS data source? Normalize coordinate frames if so by\n  // stripping any leading \"/\" prefix. See `normalizeFrameId()` for details.\n  ros: boolean;\n\n  colorScheme: \"dark\" | \"light\";\n  modelCache: ModelCache;\n  transformTree: TransformTree;\n  coordinateFrameList: SelectEntry[];\n  currentTime: bigint;\n  /** Coordinate frame that transforms are applied through to the follow frame. Should be unchanging. */\n  fixedFrameId: string | undefined;\n  /**\n   * The frameId that we _want_ to follow and render in if it exists.\n   */\n  readonly followFrameId: string | undefined;\n\n  labelPool: LabelPool;\n  markerPool: MarkerPool;\n  sharedGeometry: SharedGeometry;\n\n  dispose(): void;\n  cameraSyncError(): undefined | string;\n  setCameraSyncError(error: undefined | string): void;\n  getPixelRatio(): number;\n\n  /**\n   *\n   * @param currentTime what renderer.currentTime will be set to\n   */\n  setCurrentTime(newTimeNs: bigint): void;\n\n  /**\n   * Updates renderer state according to seek delta. Handles clearing of future state and resetting of allFrames cursor if seeked backwards\n   * Should be called after `setCurrentTime` as been called\n   * @param oldTime used to determine if seeked backwards\n   */\n  handleSeek(oldTimeNs: bigint): void;\n\n  /**\n   * Clears:\n   *  - Rendered objects (a backfill is performed to ensure that they are regenerated with new messages from current frame)\n   *  - Errors in settings. Messages that caused errors in the past are cleared, but will be re-added if they are still causing errors when read in.\n   *  - [Optional] Transform tree. This should be set to true when a seek to a previous time is performed in order to flush potential future state to the newly set time.\n   *  - [Optional] allFramesCursor. This is the cursor that iterates through allFrames up to currentTime. It should be reset when seeking backwards to avoid keeping future state.\n   * @param {Object} params - modifiers to the clear operation\n   * @param {boolean} params.clearTransforms - whether to clear the transform tree. This should be set to true when a seek to a previous time is performed in order\n   * order to flush potential future state to the newly set time.\n   * @param {boolean} params.resetAllFramesCursor - whether to reset the cursor for the allFrames array.\n   */\n  clear(args: { clearTransforms?: boolean; resetAllFramesCursor?: boolean }): void;\n\n  /**\n   * Iterates through allFrames and handles messages with a receiveTime <= currentTime\n   * @param allFrames - array of all preloaded messages\n   * @returns {boolean} - whether the allFramesCursor has been updated and new messages were read in\n   */\n  handleAllFramesMessages(allFrames?: readonly MessageEvent[]): boolean;\n\n  updateConfig(updateHandler: (draft: RendererConfig) => void): void;\n\n  addCustomLayerAction(options: {\n    layerId: string;\n    label: string;\n    icon?: SettingsIcon;\n    handler: (instanceId: string) => void;\n  }): void;\n\n  /** Enable or disable object selection mode */\n  setPickingEnabled(enabled: boolean): void;\n\n  /** Update the color scheme and background color, rebuilding any materials as necessary */\n  setColorScheme(colorScheme: \"dark\" | \"light\", backgroundColor: string | undefined): void;\n\n  /** Update the list of topics and rebuild all settings nodes when the identity\n   * of the topics list changes */\n  setTopics(topics: ReadonlyArray<Topic> | undefined): void;\n\n  setParameters(parameters: Immutable<Map<string, ParameterValue>> | undefined): void;\n\n  updateCustomLayersCount(): void;\n\n  setCameraState(cameraState: CameraState): void;\n\n  getCameraState(): CameraState | undefined;\n\n  /** Whether the view has been modified and a reset button should be shown (image mode only). */\n  canResetView(): boolean;\n  /** Reset any manual view modifications (image mode only). */\n  resetView(): void;\n\n  /** Return the currently displayed image (image mode only). */\n  getCurrentImage(): DownloadImageInfo | undefined;\n\n  setSelectedRenderable(selection: PickedRenderable | undefined): void;\n\n  addMessageEvent(messageEvent: Readonly<MessageEvent>): void;\n\n  /**  Set desired render/display frame, will render using fallback if id is undefined or frame does not exist */\n  setFollowFrameId(frameId: string | undefined): void;\n\n  /** Match the behavior of `tf::Transformer` by stripping leading slashes from\n   * frame_ids. This preserves compatibility with earlier versions of ROS while\n   * not breaking any current versions where:\n   * > tf2 does not accept frame_ids starting with \"/\"\n   * Source: <http://wiki.ros.org/tf2/Migration#tf_prefix_backwards_compatibility>\n   */\n  normalizeFrameId(frameId: string): string;\n\n  addCoordinateFrame(frameId: string): void;\n\n  // Create a new transform and add it to the renderer's TransformTree\n  addTransform(\n    parentFrameId: string,\n    childFrameId: string,\n    stamp: bigint,\n    translation: Vector3,\n    rotation: Quaternion,\n    errorSettingsPath?: string[],\n  ): void;\n\n  removeTransform(childFrameId: string, parentFrameId: string, stamp: bigint): void;\n\n  // Callback handlers\n  animationFrame: () => void;\n  queueAnimationFrame: () => void;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport { debounce } from \"lodash\";\nimport * as THREE from \"three\";\nimport { Key } from \"ts-key-enum\";\n\nconst MAX_DIST = 1;\n\nconst tempVec2 = new THREE.Vector2();\n\nconst XY_PLANE = new THREE.Plane(new THREE.Vector3(0, 0, 1), 0);\n\nexport type InputEvents = {\n  resize: (windowSize: THREE.Vector2) => void;\n  click: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: MouseEvent,\n  ) => void;\n  mousedown: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: MouseEvent,\n  ) => void;\n  mousemove: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: MouseEvent,\n  ) => void;\n  mouseup: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: MouseEvent,\n  ) => void;\n  wheel: (\n    cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    event: WheelEvent,\n  ) => void;\n  keydown: (key: Key, event: KeyboardEvent) => void;\n};\n\nexport class Input extends EventEmitter<InputEvents> {\n  readonly #canvas: HTMLCanvasElement;\n  /** Size in CSS pixels */\n  public canvasSize: THREE.Vector2;\n  readonly #resizeObserver: ResizeObserver;\n  #startClientPos?: THREE.Vector2;\n  #cursorCoords = new THREE.Vector2();\n  #worldSpaceCursorCoords?: THREE.Vector3;\n  #raycaster = new THREE.Raycaster();\n\n  public constructor(canvas: HTMLCanvasElement, private getCamera: () => THREE.Camera) {\n    super();\n\n    const parentEl = canvas.parentElement;\n    if (!parentEl) {\n      throw new Error(\"<canvas> must be parented to a DOM element\");\n    }\n\n    this.#canvas = canvas;\n    this.canvasSize = new THREE.Vector2();\n    this.#onResize([]);\n\n    // Calling the resize observer too often causes Chrome to throw an exception\n    // so we debounce it.\n    const debouncedOnResize = debounce(this.#onResize);\n    this.#resizeObserver = new ResizeObserver(debouncedOnResize);\n    this.#resizeObserver.observe(parentEl);\n\n    canvas.addEventListener(\"mousedown\", this.#onMouseDown);\n    canvas.addEventListener(\"mousemove\", this.#onMouseMove);\n    canvas.addEventListener(\"mouseup\", this.#onMouseUp);\n    canvas.addEventListener(\"click\", this.#onClick);\n    canvas.addEventListener(\"wheel\", this.#onWheel);\n    canvas.addEventListener(\"touchstart\", this.#onTouchStart, { passive: false });\n    canvas.addEventListener(\"touchend\", this.#onTouchEnd, { passive: false });\n    canvas.addEventListener(\"touchmove\", this.#onTouchMove, { passive: false });\n    canvas.addEventListener(\"touchcancel\", this.#onTouchCancel, { passive: false });\n  }\n\n  public dispose(): void {\n    const canvas = this.#canvas;\n\n    this.removeAllListeners();\n    this.#resizeObserver.disconnect();\n\n    canvas.removeEventListener(\"mousedown\", this.#onMouseDown);\n    canvas.removeEventListener(\"mousemove\", this.#onMouseMove);\n    canvas.removeEventListener(\"mouseup\", this.#onMouseUp);\n    canvas.removeEventListener(\"click\", this.#onClick);\n    canvas.removeEventListener(\"wheel\", this.#onWheel);\n    canvas.removeEventListener(\"touchstart\", this.#onTouchStart);\n    canvas.removeEventListener(\"touchend\", this.#onTouchEnd);\n    canvas.removeEventListener(\"touchmove\", this.#onTouchMove);\n    canvas.removeEventListener(\"touchcancel\", this.#onTouchCancel);\n  }\n\n  /**\n   * Call this from mousedown to activate event tracking for a drag. mousemove events will be\n   * handled on the window and `onUpdate()` will be called until mouseup occurs.\n   */\n  public trackDrag(onUpdate: (cursorCoords: THREE.Vector2) => void): void {\n    const listener = (event: MouseEvent) => {\n      event.preventDefault();\n      this.#updateCursorCoords(event);\n      onUpdate(this.#cursorCoords);\n    };\n    window.addEventListener(\"mousemove\", listener);\n    window.addEventListener(\n      \"mouseup\",\n      () => {\n        window.removeEventListener(\"mousemove\", listener);\n      },\n      { once: true },\n    );\n  }\n\n  #onResize = (_entries: ResizeObserverEntry[]): void => {\n    if (this.#canvas.parentElement) {\n      const newSize = innerSize(this.#canvas.parentElement);\n      if (isNaN(newSize.width) || isNaN(newSize.height)) {\n        return;\n      }\n      if (newSize.width !== this.canvasSize.width || newSize.height !== this.canvasSize.height) {\n        this.canvasSize.width = newSize.width;\n        this.canvasSize.height = newSize.height;\n        this.emit(\"resize\", this.canvasSize);\n      }\n    }\n  };\n\n  #onMouseDown = (event: MouseEvent): void => {\n    this.#startClientPos = new THREE.Vector2(event.offsetX, event.offsetY);\n    this.#updateCursorCoords(event);\n    this.emit(\"mousedown\", this.#cursorCoords, this.#worldSpaceCursorCoords, event);\n  };\n\n  #onMouseMove = (event: MouseEvent): void => {\n    this.#updateCursorCoords(event);\n    this.emit(\"mousemove\", this.#cursorCoords, this.#worldSpaceCursorCoords, event);\n  };\n\n  #onMouseUp = (event: MouseEvent): void => {\n    this.#updateCursorCoords(event);\n    this.emit(\"mouseup\", this.#cursorCoords, this.#worldSpaceCursorCoords, event);\n  };\n\n  #onClick = (event: MouseEvent): void => {\n    if (!this.#startClientPos) {\n      return;\n    }\n\n    const dist = this.#startClientPos.distanceTo(tempVec2.set(event.offsetX, event.offsetY));\n    this.#startClientPos = undefined;\n\n    if (dist > MAX_DIST) {\n      return;\n    }\n\n    this.#updateCursorCoords(event);\n    this.emit(\"click\", this.#cursorCoords, this.#worldSpaceCursorCoords, event);\n  };\n\n  #onWheel = (event: WheelEvent): void => {\n    this.#updateCursorCoords(event);\n    this.emit(\"wheel\", this.#cursorCoords, this.#worldSpaceCursorCoords, event);\n  };\n\n  #onTouchStart = (event: TouchEvent): void => {\n    const touch = event.touches[0];\n    if (touch) {\n      this.#startClientPos = new THREE.Vector2(touch.clientX, touch.clientY);\n    }\n    event.preventDefault();\n  };\n\n  #onTouchEnd = (event: TouchEvent): void => {\n    event.preventDefault();\n  };\n\n  #onTouchMove = (event: TouchEvent): void => {\n    event.preventDefault();\n  };\n\n  #onTouchCancel = (event: TouchEvent): void => {\n    event.preventDefault();\n  };\n\n  #updateCursorCoords(event: MouseEvent): void {\n    const canvasRect = this.#canvas.getBoundingClientRect();\n    const offsetX = event.clientX - canvasRect.left;\n    const offsetY = event.clientY - canvasRect.top;\n\n    this.#cursorCoords.x = offsetX;\n    this.#cursorCoords.y = offsetY;\n\n    this.#raycaster.setFromCamera(\n      // Cursor position in NDC\n      tempVec2.set(\n        (offsetX / this.canvasSize.width) * 2 - 1,\n        -((offsetY / this.canvasSize.height) * 2 - 1),\n      ),\n      this.getCamera(),\n    );\n    this.#worldSpaceCursorCoords =\n      this.#raycaster.ray.intersectPlane(\n        XY_PLANE,\n        this.#worldSpaceCursorCoords ?? new THREE.Vector3(),\n      ) ?? undefined;\n  }\n}\n\nfunction innerSize(node: HTMLElement) {\n  const cs = getComputedStyle(node);\n\n  const paddingX = parseFloat(cs.paddingLeft) + parseFloat(cs.paddingRight);\n  const paddingY = parseFloat(cs.paddingTop) + parseFloat(cs.paddingBottom);\n\n  const borderX = parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth);\n  const borderY = parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth);\n\n  const width = node.clientWidth - paddingX - borderX;\n  const height = node.clientHeight - paddingY - borderY;\n\n  return { width, height };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { MeshoptDecoder } from \"meshoptimizer\";\nimport * as THREE from \"three\";\nimport dracoDecoderWasmUrl from \"three/examples/jsm/libs/draco/draco_decoder.wasm\";\nimport dracoWasmWrapperJs from \"three/examples/jsm/libs/draco/draco_wasm_wrapper.js?raw\";\nimport { ColladaLoader } from \"three/examples/jsm/loaders/ColladaLoader\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { STLLoader } from \"three/examples/jsm/loaders/STLLoader\";\n\nimport Logger from \"@foxglove/log\";\n\nconst log = Logger.getLogger(__filename);\n\nexport type MeshUpAxis = \"y_up\" | \"z_up\";\nexport const DEFAULT_MESH_UP_AXIS: MeshUpAxis = \"y_up\";\n\nexport type ModelCacheOptions = {\n  edgeMaterial: THREE.Material;\n  ignoreColladaUpAxis: boolean;\n  meshUpAxis: MeshUpAxis;\n};\n\ntype LoadModelOptions = {\n  overrideMediaType?: string;\n};\n\nexport type LoadedModel = THREE.Group | THREE.Scene;\n\ntype ErrorCallback = (err: Error) => void;\n\nconst DEFAULT_COLOR = new THREE.Color(0x248eff).convertSRGBToLinear();\n\nconst GLTF_MIME_TYPES = [\"model/gltf\", \"model/gltf-binary\", \"model/gltf+json\"];\n// Sourced from <https://github.com/Ultimaker/Cura/issues/4141>\nconst STL_MIME_TYPES = [\"model/stl\", \"model/x.stl-ascii\", \"model/x.stl-binary\", \"application/sla\"];\nconst DAE_MIME_TYPES = [\"model/vnd.collada+xml\"];\nconst OBJ_MIME_TYPES = [\"model/obj\", \"text/prs.wavefront-obj\"];\n\nexport class ModelCache {\n  #textDecoder = new TextDecoder();\n  #models = new Map<string, Promise<LoadedModel | undefined>>();\n  #edgeMaterial: THREE.Material;\n\n  #dracoLoader?: DRACOLoader;\n\n  public constructor(public readonly options: ModelCacheOptions) {\n    this.#edgeMaterial = options.edgeMaterial;\n  }\n\n  public async load(\n    url: string,\n    opts: LoadModelOptions,\n    reportError: ErrorCallback,\n  ): Promise<LoadedModel | undefined> {\n    let promise = this.#models.get(url);\n    if (promise) {\n      return await promise;\n    }\n\n    promise = this.#loadModel(url, opts, reportError)\n      .then((model) => addEdges(model, this.#edgeMaterial))\n      .catch(async (err) => {\n        reportError(err as Error);\n        return undefined;\n      });\n\n    this.#models.set(url, promise);\n    return await promise;\n  }\n\n  async #loadModel(\n    url: string,\n    options: LoadModelOptions,\n    reportError: ErrorCallback,\n  ): Promise<LoadedModel> {\n    const GLB_MAGIC = 0x676c5446; // \"glTF\"\n\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errMsg = response.statusText;\n      throw new Error(`Error ${response.status}${errMsg ? ` (${errMsg})` : ``}`);\n    }\n\n    const buffer = await response.arrayBuffer();\n    if (buffer.byteLength < 4) {\n      throw new Error(`${buffer.byteLength} bytes received`);\n    }\n    const view = new DataView(buffer);\n    const contentType = options.overrideMediaType ?? response.headers.get(\"content-type\") ?? \"\";\n\n    // Check if this is a glTF .glb or .gltf file\n    if (\n      GLB_MAGIC === view.getUint32(0, false) ||\n      GLTF_MIME_TYPES.includes(contentType) ||\n      /\\.glb$/i.test(url) ||\n      /\\.gltf$/i.test(url)\n    ) {\n      return await this.#loadGltf(url, reportError);\n    }\n\n    // Check if this is a STL file based on content-type or file extension\n    if (STL_MIME_TYPES.includes(contentType) || /\\.stl$/i.test(url)) {\n      return this.#loadSTL(url, buffer, this.options.meshUpAxis);\n    }\n\n    // Check if this is a COLLADA file based on content-type or file extension\n    if (DAE_MIME_TYPES.includes(contentType) || /\\.dae$/i.test(url)) {\n      const text = this.#textDecoder.decode(buffer);\n      return await this.#loadCollada(url, text, this.options.ignoreColladaUpAxis, reportError);\n    }\n\n    // Check if this is an OBJ file based on content-type or file extension\n    if (OBJ_MIME_TYPES.includes(contentType) || /\\.obj$/i.test(url)) {\n      const text = this.#textDecoder.decode(buffer);\n      return await this.#loadOBJ(url, text, this.options.meshUpAxis, reportError);\n    }\n\n    throw new Error(`Unknown ${buffer.byteLength} byte mesh (content-type: \"${contentType}\")`);\n  }\n\n  async #loadGltf(url: string, reportError: ErrorCallback): Promise<LoadedModel> {\n    const onError = (assetUrl: string) => {\n      const originalUrl = unrewriteUrl(assetUrl);\n      log.error(`Failed to load GLTF asset \"${originalUrl}\" for \"${url}\"`);\n      reportError(new Error(`Failed to load GLTF asset \"${originalUrl}\"`));\n    };\n\n    const manager = new THREE.LoadingManager(undefined, undefined, onError);\n    manager.setURLModifier(rewriteUrl);\n    const gltfLoader = new GLTFLoader(manager);\n    gltfLoader.setMeshoptDecoder(MeshoptDecoder);\n    gltfLoader.setDRACOLoader(this.#getDracoLoader(manager));\n\n    manager.itemStart(url);\n    const gltf = await gltfLoader.loadAsync(url);\n    manager.itemEnd(url);\n\n    // THREE.js uses Y-up, while Studio follows the ROS\n    // [REP-0103](https://www.ros.org/reps/rep-0103.html) convention of Z-up\n    gltf.scene.rotateX(Math.PI / 2);\n\n    return gltf.scene;\n  }\n\n  #loadSTL(url: string, buffer: ArrayBuffer, meshUpAxis: MeshUpAxis): LoadedModel {\n    // STL files do not reference any external assets, no LoadingManager needed\n    const stlLoader = new STLLoader();\n    const bufferGeometry = stlLoader.parse(buffer);\n    log.debug(`Finished loading STL from ${url}`);\n    const material = new THREE.MeshStandardMaterial({\n      name: url.slice(-32), // truncate to 32 characters\n      color: DEFAULT_COLOR,\n      metalness: 0,\n      roughness: 1,\n      dithering: true,\n    });\n    const mesh = new THREE.Mesh(bufferGeometry, material);\n    const group = new THREE.Group();\n    group.add(mesh);\n\n    // THREE.js uses Y-up, while Studio follows the ROS\n    // [REP-0103](https://www.ros.org/reps/rep-0103.html) convention of Z-up\n    if (meshUpAxis === \"y_up\") {\n      group.rotateX(Math.PI / 2);\n    }\n\n    return group;\n  }\n\n  async #loadCollada(\n    url: string,\n    text: string,\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    ignoreUpAxis: boolean,\n    reportError: ErrorCallback,\n  ): Promise<LoadedModel> {\n    const onError = (assetUrl: string) => {\n      const originalUrl = unrewriteUrl(assetUrl);\n      log.error(`Failed to load COLLADA asset \"${originalUrl}\" for \"${url}\"`);\n      reportError(new Error(`Failed to load COLLADA asset \"${originalUrl}\"`));\n    };\n\n    // The three.js ColladaLoader handles <up_axis> by detecting Z_UP and simply\n    // applying a scene rotation. Since Studio is already Z_UP, we do our own\n    // <up_axis> handling and skip rotation entirely for the Z_UP case\n    const xml = new DOMParser().parseFromString(text, \"application/xml\");\n    const upAxis = ignoreUpAxis\n      ? \"Z_UP\"\n      : (xml.querySelector(\"up_axis\")?.textContent ?? \"Y_UP\").trim().toUpperCase();\n    xml.querySelectorAll(\"up_axis\").forEach((node) => node.remove());\n    const xmlText = xml.documentElement.outerHTML;\n\n    const manager = new THREE.LoadingManager(undefined, undefined, onError);\n    manager.setURLModifier(rewriteUrl);\n    const daeLoader = new ColladaLoader(manager);\n\n    manager.itemStart(url);\n    const dae = daeLoader.parse(xmlText, baseUrl(url));\n    manager.itemEnd(url);\n\n    // If the <up_axis> is Y_UP, rotate to the Studio convention of Z-up following\n    // ROS [REP-0103](https://www.ros.org/reps/rep-0103.html)\n    if (upAxis === \"Y_UP\") {\n      dae.scene.rotateX(Math.PI / 2);\n    }\n\n    return fixDaeMaterials(dae.scene);\n  }\n\n  async #loadOBJ(\n    url: string,\n    text: string,\n    meshUpAxis: MeshUpAxis,\n    reportError: ErrorCallback,\n  ): Promise<LoadedModel> {\n    const onError = (assetUrl: string) => {\n      const originalUrl = unrewriteUrl(assetUrl);\n      log.error(`Failed to load OBJ asset \"${originalUrl}\" for \"${url}\"`);\n      reportError(new Error(`Failed to load OBJ asset \"${originalUrl}\"`));\n    };\n\n    const manager = new THREE.LoadingManager(undefined, undefined, onError);\n    manager.setURLModifier(rewriteUrl);\n    const objLoader = new OBJLoader(manager);\n\n    manager.itemStart(url);\n    const group = objLoader.parse(text);\n    manager.itemEnd(url);\n\n    // THREE.js uses Y-up, while Studio follows the ROS\n    // [REP-0103](https://www.ros.org/reps/rep-0103.html) convention of Z-up\n    if (meshUpAxis === \"y_up\") {\n      group.rotateX(Math.PI / 2);\n    }\n\n    return fixObjMaterials(group);\n  }\n\n  // singleton dracoloader\n  #getDracoLoader(manager: THREE.LoadingManager): DRACOLoader {\n    let dracoLoader = this.#dracoLoader;\n    if (!dracoLoader) {\n      dracoLoader = new DRACOLoader(manager);\n      // Hack in a replacement function to load assets from the webpack bundle\n      (dracoLoader as { _loadLibrary?: (url: string, responseType: string) => unknown })[\n        \"_loadLibrary\"\n      ] = async function (url: string, responseType: string) {\n        if (url === \"draco_wasm_wrapper.js\" && responseType === \"text\") {\n          return dracoWasmWrapperJs;\n        } else if (url === \"draco_decoder.wasm\" && responseType === \"arraybuffer\") {\n          return await (await fetch(dracoDecoderWasmUrl)).arrayBuffer();\n        } else {\n          throw new Error(\n            `DRACOLoader attempt to load non-bundled asset: ${url} as ${responseType}`,\n          );\n        }\n      };\n      this.#dracoLoader = dracoLoader;\n    }\n\n    dracoLoader.manager = manager;\n    return dracoLoader;\n  }\n\n  public dispose(): void {\n    // DRACOLoader is only loader that needs to be disposed because it uses a webworker\n    this.#dracoLoader?.dispose();\n    this.#dracoLoader = undefined;\n  }\n}\n\nexport const EDGE_LINE_SEGMENTS_NAME = \"edges\";\nfunction addEdges(model: LoadedModel, edgeMaterial: THREE.Material): LoadedModel {\n  const edgesToAdd: [edges: THREE.LineSegments, parent: THREE.Object3D][] = [];\n\n  model.traverse((child) => {\n    if (!(child instanceof THREE.Mesh)) {\n      return;\n    }\n\n    // Enable shadows for all meshes\n    child.castShadow = true;\n    child.receiveShadow = true;\n\n    // Draw edges for all meshes\n    const edgesGeometry = new THREE.EdgesGeometry(child.geometry, 40);\n    const line = new THREE.LineSegments(edgesGeometry, edgeMaterial);\n    line.name = EDGE_LINE_SEGMENTS_NAME;\n    edgesToAdd.push([line, child]);\n  });\n\n  for (const [line, parent] of edgesToAdd) {\n    parent.add(line);\n  }\n  return model;\n}\n\nfunction fixDaeMaterials(model: LoadedModel): LoadedModel {\n  model.traverse((child) => {\n    if (!(child instanceof THREE.Mesh)) {\n      return;\n    }\n\n    if (child.material instanceof THREE.MeshLambertMaterial) {\n      const material = toStandard(child.material);\n      child.material.dispose();\n      child.material = material;\n    } else if (child.material instanceof THREE.MeshStandardMaterial) {\n      child.material.dithering = true;\n    }\n  });\n  return model;\n}\n\nfunction fixObjMaterials(model: LoadedModel): LoadedModel {\n  model.traverse((child) => {\n    if (!(child instanceof THREE.Mesh)) {\n      return;\n    }\n\n    if (child.material instanceof THREE.MeshPhongMaterial) {\n      const material = toStandard(child.material);\n      child.material.dispose();\n      child.material = material;\n    } else if (child.material instanceof THREE.MeshStandardMaterial) {\n      child.material.metalness = 0;\n      child.material.roughness = 1;\n      child.material.dithering = true;\n    }\n  });\n  return model;\n}\n\nfunction toStandard(\n  material: THREE.MeshPhongMaterial | THREE.MeshLambertMaterial,\n): THREE.MeshStandardMaterial {\n  const standard = new THREE.MeshStandardMaterial({ name: material.name });\n  const shininess = (material as Partial<THREE.MeshPhongMaterial>).shininess ?? 0; // [0-100]\n\n  // MeshStandardMaterial.copy() assumes the normalScale property exists, which\n  // is true for other MeshStandardMaterials or MeshPhongMaterial but not\n  // MeshLambertMaterial. Default initialize this property if needed so the\n  // `standard.copy(material)` below succeeds\n  const maybePhong = material as Partial<THREE.MeshPhongMaterial>;\n  maybePhong.normalScale ??= new THREE.Vector2(1, 1);\n\n  standard.copy(material);\n  standard.metalness = 0;\n  standard.roughness = 1 - shininess / 100;\n  standard.dithering = true;\n  return standard;\n}\n\n// The THREE.TextureLoader does not support loading .tiff files into textures. To work around\n// this we rewrite any `package://` url pointing at a .tiff file into a url which returns a png.\n// The x-foxglove-converted-tiff protocol is used because the electron protocol handler for\n// package:// uses registerFileProtocol and for converted tiff we need registerBufferProtocol\nfunction rewriteUrl(url: string): string {\n  if (url.startsWith(\"package://\") && /\\.tiff?$/i.test(url)) {\n    return url.replace(\"package://\", \"x-foxglove-converted-tiff://\");\n  }\n  return url;\n}\n\nfunction unrewriteUrl(url: string): string {\n  if (url.startsWith(\"x-foxglove-converted-tiff://\")) {\n    return url.replace(\"x-foxglove-converted-tiff://\", \"package://\");\n  }\n  return url;\n}\n\nfunction baseUrl(url: string): string {\n  return url.slice(0, url.lastIndexOf(\"/\") + 1);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// Adapted from <https://github.com/bzztbomb/three_js_gpu_picking/blob/main/src/gpupicker.js>\n// released under the public domain. Original authors:\n// - bzztbomb https://github.com/bzztbomb\n// - jfaust https://github.com/jfaust\n\nimport * as THREE from \"three\";\nimport { assert } from \"ts-essentials\";\n\nimport type { Renderable } from \"./Renderable\";\n\ntype Camera = THREE.PerspectiveCamera | THREE.OrthographicCamera;\n\n// The width and height of the output viewport. This could be 1 to sample a\n// single pixel, but GL_POINTS with a >1 point size would be clipped\nconst PIXEL_WIDTH = 31;\nconst tempResolution = new THREE.Vector2(0, 0);\n\nconst WHITE_COLOR = new THREE.Color(0xffffff);\n\n// This works around an incorrect method definition, where passing null is valid\nconst NullScene = ReactNull as unknown as THREE.Scene;\n\nexport type PickedRenderable = {\n  renderable: Renderable;\n  instanceIndex?: number;\n};\n\nexport type PickerOptions = {\n  debug?: boolean;\n  /**\n   * Disable the setting of the projection matrix in the picking pass.\n   * Use this if you are setting the projection matrix of the camera manually elsewhere\n   */\n  disableSetViewOffset?: boolean;\n};\n\n/**\n * Handles picking of objects in a scene (detecting 3D objects at a given screen\n * coordinate). This works by performing a second rendering pass after\n * `WebGLRenderer.renderLists` has been populated from a normal rendering pass.\n * In the second pass, objectIds are written as colors to a small offscreen\n * rendering target surrounding the sample point. The color at the sample point\n * is then read back and used to determine which object was picked.\n *\n * Objects can set their own `userData.pickingMaterial` to override the default\n * shader used for picking.\n */\nexport class Picker {\n  #gl: THREE.WebGLRenderer;\n  #scene: THREE.Scene;\n  #camera?: Camera;\n  #materialCache = new Map<number, THREE.ShaderMaterial>();\n  #emptyScene: THREE.Scene;\n  #pixelBuffer: Uint8Array;\n  #currClearColor = new THREE.Color();\n  #pickingTarget: THREE.WebGLRenderTarget;\n  #isDebugPass = false;\n\n  public constructor(gl: THREE.WebGLRenderer, scene: THREE.Scene) {\n    this.#gl = gl;\n    this.#scene = scene;\n\n    // This is the PIXEL_WIDTH x PIXEL_WIDTH render target we use to do the picking\n    this.#pickingTarget = new THREE.WebGLRenderTarget(PIXEL_WIDTH, PIXEL_WIDTH, {\n      minFilter: THREE.NearestFilter,\n      magFilter: THREE.NearestFilter,\n      format: THREE.RGBAFormat, // stores objectIds as uint32\n      encoding: THREE.LinearEncoding,\n      generateMipmaps: false,\n    });\n    this.#pixelBuffer = new Uint8Array(4);\n    // We need to be inside of .render in order to call renderBufferDirect in\n    // renderList() so create an empty scene\n    this.#emptyScene = new THREE.Scene();\n  }\n\n  public dispose(): void {\n    for (const material of this.#materialCache.values()) {\n      material.dispose();\n    }\n    this.#materialCache.clear();\n    this.#pickingTarget.dispose();\n  }\n\n  public pick(\n    x: number,\n    y: number,\n    camera: THREE.OrthographicCamera | THREE.PerspectiveCamera,\n    options: PickerOptions = {},\n  ): number {\n    // Use the onAfterRender callback to actually render geometry for picking\n    this.#emptyScene.onAfterRender = this.#handleAfterRender;\n\n    this.#camera = camera;\n    const { xInView, yInView } = this.#updateCameraForPickAndGetPickCoordsInView(x, y, options);\n\n    const originalRenderState = this.#prepareGLRendererForPick();\n\n    this.#gl.render(this.#emptyScene, camera);\n    this.#gl.readRenderTargetPixels(this.#pickingTarget, xInView, yInView, 1, 1, this.#pixelBuffer);\n\n    this.#cleanUpGlRendererFromPick(originalRenderState);\n    this.#resetCameraFromPick(options);\n\n    const val =\n      (this.#pixelBuffer[0]! << 24) +\n      (this.#pixelBuffer[1]! << 16) +\n      (this.#pixelBuffer[2]! << 8) +\n      this.#pixelBuffer[3]!;\n\n    if (options.debug === true) {\n      this.pickDebugRender(camera);\n    }\n\n    return val;\n  }\n\n  public pickInstance(\n    x: number,\n    y: number,\n    camera: THREE.OrthographicCamera | THREE.PerspectiveCamera,\n    renderable: Renderable,\n    options: PickerOptions = {},\n  ): number {\n    this.#emptyScene.onAfterRender = this.#makeHandleInstanceAfterRender(renderable);\n\n    this.#camera = camera;\n    const { xInView, yInView } = this.#updateCameraForPickAndGetPickCoordsInView(x, y, options);\n\n    const originalRenderState = this.#prepareGLRendererForPick();\n\n    this.#gl.render(this.#emptyScene, this.#camera);\n    this.#gl.readRenderTargetPixels(this.#pickingTarget, xInView, yInView, 1, 1, this.#pixelBuffer);\n\n    this.#cleanUpGlRendererFromPick(originalRenderState);\n    this.#resetCameraFromPick(options);\n\n    if (options.debug === true) {\n      this.pickInstanceDebugRender(camera, renderable);\n    }\n\n    return (\n      (this.#pixelBuffer[0]! << 24) +\n      (this.#pixelBuffer[1]! << 16) +\n      (this.#pixelBuffer[2]! << 8) +\n      this.#pixelBuffer[3]!\n    );\n  }\n\n  #updateCameraForPickAndGetPickCoordsInView(\n    x: number,\n    y: number,\n    options: PickerOptions,\n  ): { xInView: number; yInView: number } {\n    assert(this.#camera, \"camera must be set before updating for pick\");\n    const w = this.#gl.domElement.width;\n    const h = this.#gl.domElement.height;\n    const pixelRatio = this.#gl.getPixelRatio();\n\n    if (options.disableSetViewOffset !== true) {\n      const hw = (PIXEL_WIDTH / 2) | 0;\n      const xi = Math.max(0, x * pixelRatio - hw);\n      const yi = Math.max(0, y * pixelRatio - hw);\n      // Set the projection matrix to only look at the pixels we are interested in\n      this.#camera.setViewOffset(w, h, xi, yi, PIXEL_WIDTH, PIXEL_WIDTH);\n      return { xInView: hw, yInView: hw };\n    } else {\n      if (this.#pickingTarget.width !== w || this.#pickingTarget.height !== h) {\n        this.#pickingTarget.setSize(w, h);\n      }\n      const xi = Math.max(0, x * pixelRatio);\n      // Flip y coordinate to match WebGL coordinate system\n      const yi = Math.max(0, h - y * pixelRatio);\n      return { xInView: xi, yInView: yi };\n    }\n  }\n\n  #resetCameraFromPick(options: PickerOptions): void {\n    assert(this.#camera, \"camera must be set before resetting from pick\");\n    if (options.disableSetViewOffset !== true) {\n      this.#camera.clearViewOffset();\n    }\n  }\n\n  #prepareGLRendererForPick(): {\n    originalRenderTarget: THREE.WebGLRenderTarget | ReactNull;\n    originalAlpha: number;\n  } {\n    const originalRenderTarget = this.#gl.getRenderTarget();\n    const originalAlpha = this.#gl.getClearAlpha();\n    this.#gl.getClearColor(this.#currClearColor);\n    this.#gl.setRenderTarget(this.#pickingTarget);\n    this.#gl.setClearColor(WHITE_COLOR, 1);\n    this.#gl.clear();\n    return { originalRenderTarget, originalAlpha };\n  }\n\n  #cleanUpGlRendererFromPick({\n    originalRenderTarget,\n    originalAlpha,\n  }: {\n    originalRenderTarget: THREE.WebGLRenderTarget | ReactNull;\n    originalAlpha: number;\n  }): void {\n    this.#gl.setRenderTarget(originalRenderTarget);\n    this.#gl.setClearColor(this.#currClearColor, originalAlpha);\n  }\n\n  public pickDebugRender(camera: THREE.OrthographicCamera | THREE.PerspectiveCamera): void {\n    this.#isDebugPass = true;\n    this.#emptyScene.onAfterRender = this.#handleAfterRender;\n    const currAlpha = this.#gl.getClearAlpha();\n    this.#gl.getClearColor(this.#currClearColor);\n    this.#gl.setClearColor(WHITE_COLOR, 1);\n    this.#gl.clear();\n    this.#gl.render(this.#emptyScene, camera);\n    this.#gl.setClearColor(this.#currClearColor, currAlpha);\n    this.#isDebugPass = false;\n  }\n\n  public pickInstanceDebugRender(\n    camera: THREE.OrthographicCamera | THREE.PerspectiveCamera,\n    renderable: Renderable,\n  ): void {\n    this.#isDebugPass = true;\n    this.#emptyScene.onAfterRender = this.#makeHandleInstanceAfterRender(renderable);\n    const currAlpha = this.#gl.getClearAlpha();\n    this.#gl.getClearColor(this.#currClearColor);\n    this.#gl.setClearColor(WHITE_COLOR, 1);\n    this.#gl.clear();\n    this.#gl.render(this.#emptyScene, camera);\n    this.#gl.setClearColor(this.#currClearColor, currAlpha);\n    this.#isDebugPass = false;\n  }\n\n  #handleAfterRender = (): void => {\n    // This is the magic, these render lists are still filled with valid data.\n    // So we can submit them again for picking and save lots of work!\n    const renderList = this.#gl.renderLists.get(this.#scene, 0);\n    renderList.opaque.forEach(this.#processItem);\n    renderList.transmissive.forEach(this.#processItem);\n    renderList.transparent.forEach(this.#processItem);\n  };\n\n  #makeHandleInstanceAfterRender(renderable: Renderable): () => void {\n    return (): void => {\n      // Note that no attempt is made to define a sensible sort order. Since the\n      // instanced picking pass should only be rendering opaque pixels, the\n      // worst that will happen is some overdraw\n      renderable.traverseVisible((object) => {\n        const maybeRender = object as Partial<THREE.Mesh>;\n        if (maybeRender.id != undefined && maybeRender.geometry && maybeRender.material) {\n          const renderItem: THREE.RenderItem = {\n            id: maybeRender.id,\n            object,\n            geometry: maybeRender.geometry,\n            material: maybeRender.material as THREE.Material,\n            // `program` is not used by WebGLRenderer even though it is defined in RenderItem\n            program: undefined as unknown as THREE.WebGLProgram,\n            groupOrder: 0,\n            renderOrder: 0,\n            z: 0,\n            group: ReactNull,\n          };\n          this.#processInstancedItem(renderItem);\n        }\n      });\n    };\n  }\n\n  #processItem = (renderItem: THREE.RenderItem): void => {\n    if (!this.#camera) {\n      return;\n    }\n    const object = renderItem.object;\n    const objId = this.#isDebugPass ? hashInt(object.id) : object.id;\n    const material = renderItem.material;\n    const geometry = renderItem.geometry;\n    if (\n      !geometry || // Skip if geometry is not defined\n      renderItem.object.userData.picking === false // Skip if object is marked no picking\n    ) {\n      return;\n    }\n\n    const sprite = material.type === \"SpriteMaterial\" ? 1 : 0;\n\n    const pickResolution = tempResolution.set(\n      this.#pickingTarget.width,\n      this.#pickingTarget.height,\n    );\n    const sizeAttenuation =\n      (material as Partial<THREE.PointsMaterial>).sizeAttenuation === true ? 1 : 0;\n    const pickingMaterial = renderItem.object.userData.pickingMaterial as\n      | THREE.ShaderMaterial\n      | undefined;\n    // scale picking material to picking target size\n    if (pickingMaterial?.uniforms.resolution != undefined) {\n      pickingMaterial.uniforms.resolution.value.copy(pickResolution);\n    }\n    const renderMaterial = pickingMaterial ?? this.#renderMaterial(sprite, sizeAttenuation);\n    if (sprite === 1) {\n      renderMaterial.uniforms.rotation = { value: (material as THREE.SpriteMaterial).rotation };\n      renderMaterial.uniforms.center = { value: (object as THREE.Sprite).center };\n    }\n    setObjectId(renderMaterial, objId);\n    renderMaterial.uniformsNeedUpdate = true;\n    this.#gl.renderBufferDirect(\n      this.#camera,\n      NullScene,\n      geometry,\n      renderMaterial,\n      object,\n      ReactNull,\n    );\n  };\n\n  #processInstancedItem = (renderItem: THREE.RenderItem): void => {\n    if (!this.#camera) {\n      return;\n    }\n    const object = renderItem.object;\n    const geometry = renderItem.geometry;\n    if (\n      !geometry || // Skip if geometry is not defined\n      renderItem.object.userData.picking === false // Skip if object is marked no picking\n    ) {\n      return;\n    }\n\n    const instancePickingMaterial = renderItem.object.userData.instancePickingMaterial as\n      | THREE.ShaderMaterial\n      | undefined;\n    const renderMaterial = instancePickingMaterial ?? this.#instanceRenderMaterial();\n    this.#gl.renderBufferDirect(\n      this.#camera,\n      NullScene,\n      geometry,\n      renderMaterial,\n      object,\n      ReactNull,\n    );\n  };\n\n  #renderMaterial(sprite: 0 | 1, sizeAttenuation: 0 | 1): THREE.ShaderMaterial {\n    const index = (sprite << 0) | (sizeAttenuation << 1);\n    let renderMaterial = this.#materialCache.get(index);\n    if (renderMaterial) {\n      return renderMaterial;\n    }\n\n    let vertexShader = THREE.ShaderChunk.meshbasic_vert;\n    if (sprite === 1) {\n      vertexShader = THREE.ShaderChunk.sprite_vert!;\n    }\n    if (sizeAttenuation === 1) {\n      vertexShader = \"#define USE_SIZEATTENUATION\\n\\n\" + vertexShader;\n    }\n    renderMaterial = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader: /* glsl */ `\n          uniform vec4 objectId;\n          void main() {\n            gl_FragColor = objectId;\n          }\n        `,\n      side: THREE.DoubleSide,\n      uniforms: { objectId: { value: [NaN, NaN, NaN, NaN] } },\n    });\n    this.#materialCache.set(index, renderMaterial);\n    return renderMaterial;\n  }\n\n  #instanceRenderMaterial(): THREE.ShaderMaterial {\n    const index = -1; // special materialCache index used for the instanced picking material\n    let renderMaterial = this.#materialCache.get(index);\n    if (renderMaterial) {\n      return renderMaterial;\n    }\n\n    let vertexShader = THREE.ShaderChunk.meshbasic_vert;\n    vertexShader = vertexShader.replace(\n      \"void main() {\",\n      /* glsl */ `\n      varying vec4 objectId;\n\n      void main() {\n        objectId = vec4(\n          float((gl_InstanceID >> 24) & 255) / 255.0,\n          float((gl_InstanceID >> 16) & 255) / 255.0,\n          float((gl_InstanceID >> 8) & 255) / 255.0,\n          float(gl_InstanceID & 255) / 255.0);\n      `,\n    );\n    renderMaterial = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader: /* glsl */ `\n          varying vec4 objectId;\n          void main() {\n            gl_FragColor = objectId;\n          }\n        `,\n      side: THREE.DoubleSide,\n      uniforms: { objectId: { value: [NaN, NaN, NaN, NaN] } },\n    });\n    this.#materialCache.set(index, renderMaterial);\n    return renderMaterial;\n  }\n}\n\nfunction setObjectId(material: THREE.ShaderMaterial, objectId: number): void {\n  const iObjectId = material.uniforms.objectId;\n  if (!iObjectId) {\n    throw new Error(`objectId uniform not found in picking material`);\n  }\n  iObjectId.value = [\n    ((objectId >> 24) & 255) / 255,\n    ((objectId >> 16) & 255) / 255,\n    ((objectId >> 8) & 255) / 255,\n    (objectId & 255) / 255,\n  ];\n}\n\n// Used for debug colors, this remaps objectIds to pseudo-random 32-bit integers\nconst A = new Uint32Array(1);\nfunction hashInt(x: number): number {\n  A[0] = x | 0;\n  A[0] -= A[0] << 6;\n  A[0] ^= A[0] >>> 17;\n  A[0] -= A[0] << 9;\n  A[0] ^= A[0] << 4;\n  A[0] -= A[0] << 3;\n  A[0] ^= A[0] << 10;\n  A[0] ^= A[0] >>> 15;\n  return A[0];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport type { IRenderer } from \"./IRenderer\";\n\ntype vec4 = [number, number, number, number];\n\nexport class ScreenOverlay extends THREE.Object3D {\n  #material: THREE.ShaderMaterial;\n\n  public constructor(renderer: IRenderer) {\n    super();\n\n    this.#material = new THREE.ShaderMaterial({\n      transparent: true,\n      uniforms: { color: { value: [1, 0, 1, 1] } },\n      vertexShader: /* glsl */ `\n        void main() {\n          gl_Position = vec4(position.xy, 0.0, 1.0);\n        }`,\n      fragmentShader: /* glsl */ `\n        uniform vec4 color;\n        void main() {\n          gl_FragColor = color;\n        }\n      `,\n    });\n\n    const geometry = renderer.sharedGeometry.getGeometry(this.constructor.name, createGeometry);\n    const mesh = new THREE.Mesh(geometry, this.#material);\n    mesh.frustumCulled = false;\n    this.add(mesh);\n  }\n\n  public setColor(color: THREE.Color, opacity: number): void {\n    const colorUniform = this.#material.uniforms.color!.value as vec4;\n    colorUniform[0] = color.r;\n    colorUniform[1] = color.g;\n    colorUniform[2] = color.b;\n    colorUniform[3] = opacity;\n  }\n}\n\nfunction createGeometry(): THREE.PlaneGeometry {\n  const geometry = new THREE.PlaneGeometry(2, 2, 1, 1);\n  return geometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\n\nimport Logger from \"@foxglove/log\";\n\nexport type Path = ReadonlyArray<string>;\n\nconst TOPIC_PATH: [string, string] = [\"topics\", \"\"];\n\nexport class NodeError {\n  public path: Path;\n  public errorsById?: Map<string, string>;\n  public children?: Map<string, NodeError>;\n\n  public constructor(path: Path) {\n    this.path = path;\n  }\n\n  public errorMessage(): string | undefined {\n    if (this.errorsById && this.errorsById.size > 0) {\n      const errorMessages = Array.from(this.errorsById.values());\n      return errorMessages.join(`, `);\n    } else {\n      return undefined;\n    }\n  }\n\n  public errorAtPath(path: Path): string | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let node: NodeError | undefined = this;\n    for (const segment of path) {\n      node = node.children?.get(segment);\n      if (!node) {\n        return undefined;\n      }\n    }\n    return node.errorMessage();\n  }\n\n  public clone(): NodeError {\n    const clone = new NodeError(this.path);\n    clone.errorsById = this.errorsById;\n    clone.children = this.children;\n    return clone;\n  }\n}\n\nexport type LayerErrorEvents = {\n  update: (path: Path, errorId: string, errorMessage: string) => void;\n  remove: (path: Path, errorId: string) => void;\n  clear: (path: Path) => void;\n};\n\nconst log = Logger.getLogger(__filename);\n\nexport class LayerErrors extends EventEmitter<LayerErrorEvents> {\n  public errors = new NodeError([]);\n\n  public add(path: Path, errorId: string, errorMessage: string): void {\n    // Get or create the node for the given path\n    let node = this.errors;\n    for (const segment of path) {\n      if (!node.children) {\n        node.children = new Map();\n      }\n      if (!node.children.has(segment)) {\n        node.children.set(segment, new NodeError([...node.path, segment]));\n      }\n      node = node.children.get(segment)!;\n    }\n\n    // Create the error map if it does not already exist\n    node.errorsById ??= new Map();\n\n    // Onlu log the first error message per path+id for performance\n    const prevErrorMessage = node.errorsById.get(errorId);\n    if (prevErrorMessage == undefined) {\n      log.warn(`[${path.join(\" > \")}] ${errorMessage}`);\n    }\n\n    // Add or update the error\n    if (errorMessage !== prevErrorMessage) {\n      node.errorsById.set(errorId, errorMessage);\n      this.emit(\"update\", path, errorId, errorMessage);\n    }\n  }\n\n  public addToTopic(topicId: string, errorId: string, errorMessage: string): void {\n    TOPIC_PATH[1] = topicId;\n    this.add(TOPIC_PATH, errorId, errorMessage);\n  }\n\n  public hasError(path: Path, errorId: string): boolean {\n    const node = this.#getNode(path);\n    return node?.errorsById?.has(errorId) === true;\n  }\n\n  public remove(path: Path, errorId: string): void {\n    const node = this.#getNode(path);\n    if (node?.errorsById?.has(errorId) === true) {\n      node.errorsById.delete(errorId);\n      this.emit(\"remove\", path, errorId);\n    }\n  }\n\n  public removeFromTopic(topicId: string, errorId: string): void {\n    TOPIC_PATH[1] = topicId;\n    this.remove(TOPIC_PATH, errorId);\n  }\n\n  public clearPath(path: Path): void {\n    const node = this.#getNode(path);\n    if (!node) {\n      return;\n    }\n    let cleared = false;\n    if (node.children && node.children.size > 0) {\n      node.children.clear();\n      cleared = true;\n    }\n    if (node.errorsById && node.errorsById.size > 0) {\n      node.errorsById.clear();\n      cleared = true;\n    }\n    if (cleared) {\n      this.emit(\"clear\", path);\n    }\n  }\n\n  public clearTopic(topicId: string): void {\n    TOPIC_PATH[1] = topicId;\n    this.clearPath(TOPIC_PATH);\n  }\n\n  public clear(): void {\n    this.clearPath([]);\n  }\n\n  #getNode(path: Path): NodeError | undefined {\n    let node: NodeError | undefined = this.errors;\n    for (const segment of path) {\n      node = node.children?.get(segment);\n      if (!node) {\n        return undefined;\n      }\n    }\n    return node;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport { produce } from \"immer\";\n\nimport { SettingsTreeAction, SettingsTreeNode, SettingsTreeNodes } from \"@foxglove/studio\";\n\nimport { LayerErrors, Path } from \"./LayerErrors\";\n\nexport type ActionHandler = (action: SettingsTreeAction) => void;\n\nexport type SettingsTreeNodeWithActionHandler = SettingsTreeNode & { handler?: ActionHandler };\n\nexport type SettingsTreeEntry = { path: Path; node: SettingsTreeNodeWithActionHandler };\n\nexport type SettingsManagerEvents = {\n  update: () => void;\n};\n\ntype NodeValidator = (entry: SettingsTreeEntry, errorState: LayerErrors) => void;\n\nexport class SettingsManager extends EventEmitter<SettingsManagerEvents> {\n  public errors = new LayerErrors();\n\n  #nodesByKey = new Map<string, SettingsTreeEntry[]>();\n  #root: SettingsTreeNodeWithActionHandler = { children: {} };\n\n  #globalSettingsEntryValidators: NodeValidator[] = [];\n\n  public constructor(baseTree: SettingsTreeNodes) {\n    super();\n\n    this.#root = { children: baseTree };\n    this.errors.on(\"update\", this.handleErrorUpdate);\n    this.errors.on(\"remove\", this.handleErrorUpdate);\n    this.errors.on(\"clear\", this.handleErrorUpdate);\n  }\n\n  public setNodesForKey(key: string, nodes: SettingsTreeEntry[]): void {\n    nodes.forEach((entry) =>\n      this.#globalSettingsEntryValidators.forEach((validator) => validator(entry, this.errors)),\n    );\n\n    this.#root = produce(this.#root, (draft) => {\n      // Delete all previous nodes for this key\n      const prevNodes = this.#nodesByKey.get(key);\n      if (prevNodes) {\n        for (const { path } of prevNodes) {\n          removeNodeAtPath(draft, path);\n        }\n      }\n      // Add the new nodes\n      for (const { path, node } of nodes) {\n        node.error ??= this.errors.errors.errorAtPath(path);\n        node.label ??= path[path.length - 1];\n        node.defaultExpansionState ??= \"collapsed\";\n        addNodeAtPath(draft, path, node);\n      }\n    });\n\n    // Update the map of nodes by key\n    this.#nodesByKey.set(key, nodes);\n\n    this.emit(\"update\");\n  }\n\n  public setLabel(path: Path, label: string): void {\n    this.#root = produce(this.#root, (draft) => {\n      setLabelAtPath(draft, path, label);\n    });\n\n    this.emit(\"update\");\n  }\n\n  public clearChildren(path: Path): void {\n    this.#root = produce(this.#root, (draft) => {\n      clearChildren(draft, path);\n    });\n\n    this.emit(\"update\");\n  }\n\n  public tree(): SettingsTreeNodes {\n    return this.#root.children!;\n  }\n\n  public handleAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    // Walk the settings tree down to the end of the path, firing any action\n    // handlers along the way\n    let curNode = this.#root;\n    curNode.handler?.(action);\n    for (const segment of path) {\n      const nextNode: SettingsTreeNodeWithActionHandler | undefined = curNode.children?.[segment];\n      if (!nextNode) {\n        return;\n      }\n      nextNode.handler?.(action);\n      curNode = nextNode;\n    }\n  };\n\n  /** Add Validator function that can run over nodes `set` on the tree and update error state accordingly */\n  public addNodeValidator = (nodeValidator: NodeValidator): void => {\n    this.#globalSettingsEntryValidators.push(nodeValidator);\n  };\n\n  public removeNodeValidator = (nodeValidator: NodeValidator): void => {\n    this.#globalSettingsEntryValidators = this.#globalSettingsEntryValidators.filter(\n      (v) => v !== nodeValidator,\n    );\n  };\n\n  public handleErrorUpdate = (path: Path): void => {\n    this.#root = produce(this.#root, (draft) => {\n      if (path.length === 0) {\n        return { ...draft };\n      }\n\n      let curNode = draft;\n      for (const segment of path) {\n        const nextNode = curNode.children?.[segment];\n        if (!nextNode) {\n          curNode.children = { ...curNode.children };\n          return draft;\n        }\n        curNode = nextNode;\n      }\n\n      curNode.error = this.errors.errors.errorAtPath(path);\n      return draft;\n    });\n\n    this.emit(\"update\");\n  };\n}\n\nfunction removeNodeAtPath(root: SettingsTreeNode, path: Path): boolean {\n  if (path.length === 0) {\n    return false;\n  }\n\n  const segment = path[0]!;\n  const nextNode = root.children?.[segment];\n  if (!nextNode) {\n    return false;\n  }\n\n  if (path.length === 1) {\n    const hasEntry = root.children?.[segment] != undefined;\n    if (hasEntry) {\n      root.children![segment] = undefined;\n    }\n    return hasEntry;\n  }\n\n  return removeNodeAtPath(nextNode, path.slice(1));\n}\n\nfunction clearChildren(root: SettingsTreeNode, path: Path): void {\n  if (path.length === 0) {\n    return;\n  }\n\n  const segment = path[0]!;\n  const nextNode = root.children?.[segment];\n  if (!nextNode) {\n    return;\n  }\n\n  if (path.length === 1) {\n    nextNode.children = undefined;\n    return;\n  }\n\n  clearChildren(nextNode, path.slice(1));\n}\n\nfunction addNodeAtPath(root: SettingsTreeNode, path: Path, node: SettingsTreeNode): void {\n  if (path.length === 0) {\n    throw new Error(`Empty path for settings node \"${node.label}\"`);\n  }\n\n  // Recursively walk/build the settings tree down to the end of the path except\n  // for the last segment, which is the node to add\n  let curNode = root;\n  for (let i = 0; i < path.length - 1; i++) {\n    const segment = path[i]!;\n    if (!curNode.children) {\n      curNode.children = {};\n    }\n    if (!curNode.children[segment]) {\n      curNode.children[segment] = {};\n    }\n    curNode = curNode.children[segment]!;\n  }\n\n  // Assign the node to the last segment of the path\n  const lastSegment = path[path.length - 1]!;\n  if (!curNode.children) {\n    curNode.children = {};\n  }\n  curNode.children[lastSegment] = node;\n}\n\nfunction setLabelAtPath(root: SettingsTreeNode, path: Path, label: string): void {\n  if (path.length === 0) {\n    throw new Error(`Empty path for settings label \"${label}\"`);\n  }\n\n  // Recursively walk/build the settings tree down to the end of the path\n  let curNode = root;\n  for (let i = 0; i < path.length; i++) {\n    const segment = path[i]!;\n    if (!curNode.children) {\n      curNode.children = {};\n    }\n    if (!curNode.children[segment]) {\n      curNode.children[segment] = {};\n    }\n    curNode = curNode.children[segment]!;\n  }\n\n  curNode.label = label;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\n/**\n * Class for storing a single instance of each geometry to reuse across scene extensions\n * Callers of `getGeometry` will need to specify a unique key from which to extract the\n * singleton geometry.\n */\nexport class SharedGeometry {\n  #geometryMap = new Map<string, THREE.BufferGeometry>();\n\n  /**\n   * Get a geometry from the map, or create it if it doesn't exist.\n   * Note that this map will not allow overwriting of existing geometries.\n   * @param key unique key to identify the geometry\n   * @param createGeometry - function to create the geometry if it does not exist\n   * @returns - created geometry if it doesn't exist or the existing geometry from the map\n   */\n  public getGeometry<T extends THREE.BufferGeometry>(key: string, createGeometry: () => T): T {\n    let geometry = this.#geometryMap.get(key);\n    if (!geometry) {\n      geometry = createGeometry();\n      this.#geometryMap.set(key, geometry);\n    }\n    return geometry as T;\n  }\n  // disposes of all geometries and clears the map\n  public dispose(): void {\n    for (const geometry of this.#geometryMap.values()) {\n      geometry.dispose();\n    }\n    this.#geometryMap.clear();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { WebGLCapabilities } from \"three\";\n\nexport enum DetailLevel {\n  Low,\n  Medium,\n  High,\n}\n\n/** Returns the number of samples used for Multi-Sample Anti-Aliasing (MSAA) */\nexport function msaaSamples(capabilities: WebGLCapabilities): number {\n  // NOTE: Type definition workaround\n  return (capabilities as { maxSamples?: number }).maxSamples ?? 0;\n}\n\nexport function arrowShaftSubdivisions(lod: DetailLevel): number {\n  switch (lod) {\n    case DetailLevel.Low:\n      return 12;\n    case DetailLevel.Medium:\n      return 20;\n    case DetailLevel.High:\n      return 32;\n  }\n}\n\nexport function arrowHeadSubdivisions(lod: DetailLevel): number {\n  switch (lod) {\n    case DetailLevel.Low:\n      return 12;\n    case DetailLevel.Medium:\n      return 20;\n    case DetailLevel.High:\n      return 32;\n  }\n}\n\nexport function cylinderSubdivisions(lod: DetailLevel): number {\n  switch (lod) {\n    case DetailLevel.Low:\n      return 12;\n    case DetailLevel.Medium:\n      return 20;\n    case DetailLevel.High:\n      return 32;\n  }\n}\n\nexport function sphereSubdivisions(lod: DetailLevel): number {\n  switch (lod) {\n    case DetailLevel.Low:\n      return 10;\n    case DetailLevel.Medium:\n      return 24;\n    case DetailLevel.High:\n      return 32;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { SettingsTreeField } from \"@foxglove/studio\";\n\nexport type SelectEntry = { label: string; value: string };\n\nexport type TwoColors = [string, string];\nexport type Vec3 = [number, number, number];\n\n/**\n * Common settings for all persisted SceneExtension settings.\n */\nexport type BaseSettings = {\n  /** Visibility for any associated scene renderables and settings tree nodes. */\n  visible: boolean;\n  /** If true, always use `currentTime` for pose updates. This means objects in a coordinate frame\n   * will move as the coordinate frame moves. */\n  frameLocked?: boolean;\n};\n\nexport type LayerSettingsEntity = BaseSettings & {\n  showOutlines: boolean | undefined;\n  color: string | undefined;\n  selectedIdVariable: string | undefined;\n};\n\n/**\n * Settings for a \"Custom Layer\", a user-added collection of one or more renderables such as a Grid.\n */\nexport type CustomLayerSettings = BaseSettings & {\n  /** An identifier for a unique instance of a layer. */\n  instanceId: string;\n  /** An identifier for a type of layer, such as `\"foxglove.Grid\"`. */\n  layerId: string;\n  /** The label to use for this layer in the settings tree, under \"Custom Layers\". */\n  label: string;\n  /** Optional value specifying order in the custom layer list */\n  order?: number;\n};\n\nexport const PRECISION_DISTANCE = 3; // [1mm]\nexport const PRECISION_DEGREES = 1;\n\nexport function fieldSize(\n  label: string,\n  value: number | undefined,\n  placeholder?: string | number,\n): SettingsTreeField {\n  return {\n    label,\n    input: \"number\",\n    min: 0,\n    step: 0.5,\n    precision: PRECISION_DISTANCE,\n    value,\n    placeholder: String(placeholder),\n  };\n}\n\nexport function fieldScaleVec3(label: string, value: Vec3): SettingsTreeField {\n  return {\n    label,\n    input: \"vec3\",\n    labels: [\"X\", \"Y\", \"Z\"],\n    step: 0.5,\n    precision: PRECISION_DISTANCE,\n    value,\n  };\n}\n\nexport function fieldLineWidth(\n  label: string,\n  value: number | undefined,\n  placeholder?: string | number,\n): SettingsTreeField {\n  return {\n    label,\n    input: \"number\",\n    min: 0,\n    step: 0.005,\n    precision: 4,\n    value,\n    placeholder: String(placeholder),\n  };\n}\n\nexport function fieldGradient(label: string, value: TwoColors): SettingsTreeField {\n  return { label, input: \"gradient\", value };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport { cloneDeep, set } from \"lodash\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nimport { SettingsTreeAction } from \"@foxglove/studio\";\nimport { ICameraHandler } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/ICameraHandler\";\nimport {\n  AnyFrameId,\n  CoordinateFrame,\n  Pose,\n  UserFrameId,\n  makePose,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/transforms\";\n\nimport type { FollowMode, IRenderer } from \"../IRenderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { CameraState, DEFAULT_CAMERA_STATE } from \"../camera\";\nimport { PRECISION_DEGREES, PRECISION_DISTANCE } from \"../settings\";\n\nconst DISPLAY_FRAME_NOT_FOUND = \"DISPLAY_FRAME_NOT_FOUND\";\n\nconst UNIT_X = new THREE.Vector3(1, 0, 0);\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst PI_2 = Math.PI / 2;\n\n// used for holding unfollowPoseSnapshot in render frame every new frame\nconst snapshotInRenderFrame = makePose();\n\nconst tempVec3 = new THREE.Vector3();\n\nconst tempSpherical = new THREE.Spherical();\nconst tempEuler = new THREE.Euler();\nconst FOLLOW_TF_PATH = [\"general\", \"followTf\"];\nexport class CameraStateSettings extends SceneExtension implements ICameraHandler {\n  // The frameId's of the fixed and render frames used to create the current unfollowPoseSnapshot\n  #unfollowSnapshotFrameIds:\n    | {\n        render: UserFrameId;\n        fixed: UserFrameId;\n      }\n    | undefined;\n\n  // The pose of the render frame in the fixed frame when following was disabled\n  // This is used to position and orient the camera from the fixed frame in the render frame\n  public unfollowPoseSnapshot: Pose | undefined;\n\n  #controls: OrbitControls;\n  #isUpdatingCameraState = false;\n  #canvas: HTMLCanvasElement;\n\n  // This group is used to transform the cameras based on the Frame follow mode\n  // quaternion is affected in stationary and position-only follow modes\n  // both position and quaternion of the group are affected in stationary mode\n  #cameraGroup: THREE.Group;\n  #perspectiveCamera: THREE.PerspectiveCamera;\n  #orthographicCamera: THREE.OrthographicCamera;\n  #aspect: number;\n\n  public constructor(renderer: IRenderer, canvas: HTMLCanvasElement, aspect: number) {\n    super(\"foxglove.CameraStateSettings\", renderer);\n\n    // for Frame settings, we need to listen to the transform tree to update settings when new possible display frames are present\n    renderer.on(\"transformTreeUpdated\", this.#handleTransformTreeUpdated);\n\n    renderer.on(\"cameraMove\", this.#handleCameraMove);\n\n    renderer.settings.errors.on(\"update\", this.#handleErrorChange);\n    renderer.settings.errors.on(\"clear\", this.#handleErrorChange);\n    renderer.settings.errors.on(\"remove\", this.#handleErrorChange);\n\n    this.#canvas = canvas;\n    this.#perspectiveCamera = new THREE.PerspectiveCamera();\n    this.#orthographicCamera = new THREE.OrthographicCamera();\n    this.#cameraGroup = new THREE.Group();\n\n    this.#cameraGroup.add(this.#perspectiveCamera);\n    this.#cameraGroup.add(this.#orthographicCamera);\n    this.add(this.#cameraGroup);\n\n    this.#controls = new OrbitControls(this.#perspectiveCamera, this.#canvas);\n    this.#controls.screenSpacePanning = false; // only allow panning in the XY plane\n    this.#controls.mouseButtons.LEFT = THREE.MOUSE.PAN;\n    this.#controls.mouseButtons.RIGHT = THREE.MOUSE.ROTATE;\n    this.#controls.touches.ONE = THREE.TOUCH.PAN;\n    this.#controls.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n    this.#controls.addEventListener(\"change\", () => {\n      if (!this.#isUpdatingCameraState) {\n        renderer.emit(\"cameraMove\", renderer);\n      }\n    });\n\n    // Make the canvas able to receive keyboard events and setup WASD controls\n    canvas.tabIndex = 1000;\n    this.#aspect = aspect;\n    this.#controls.keys = { LEFT: \"KeyA\", RIGHT: \"KeyD\", UP: \"KeyW\", BOTTOM: \"KeyS\" };\n    this.#controls.listenToKeyEvents(canvas);\n  }\n\n  public override dispose(): void {\n    // for camera settings\n    this.renderer.off(\"cameraMove\", this.#handleCameraMove);\n\n    // for frame settings\n    this.renderer.off(\"transformTreeUpdated\", this.#handleTransformTreeUpdated);\n\n    this.renderer.settings.errors.off(\"update\", this.#handleErrorChange);\n    this.renderer.settings.errors.off(\"clear\", this.#handleErrorChange);\n    this.renderer.settings.errors.off(\"remove\", this.#handleErrorChange);\n\n    super.dispose();\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    return [this.#cameraSettingsNode(), this.#frameSettingsNode()];\n  }\n\n  #cameraSettingsNode(): SettingsTreeEntry {\n    const config = this.renderer.config;\n    const { cameraState: camera } = config;\n    const handler = this.handleSettingsAction;\n\n    return {\n      path: [\"cameraState\"],\n      node: {\n        label: t(\"threeDee:view\"),\n        actions: [{ type: \"action\", id: \"reset-camera\", label: t(\"threeDee:reset\") }],\n        handler,\n        fields: {\n          syncCamera: {\n            label: t(\"threeDee:syncCamera\"),\n            input: \"boolean\",\n            error: this.renderer.cameraSyncError(),\n            value: config.scene.syncCamera ?? false,\n            help: t(\"threeDee:syncCameraHelp\"),\n          },\n          distance: {\n            label: t(\"threeDee:distance\"),\n            input: \"number\",\n            step: 1,\n            precision: PRECISION_DISTANCE,\n            value: camera.distance,\n          },\n          perspective: {\n            label: t(\"threeDee:perspective\"),\n            input: \"boolean\",\n            value: camera.perspective,\n          },\n          targetOffset: {\n            label: t(\"threeDee:target\"),\n            input: \"vec3\",\n            labels: [\"X\", \"Y\", \"Z\"],\n            precision: PRECISION_DISTANCE,\n            value: [...camera.targetOffset],\n          },\n          thetaOffset: {\n            label: t(\"threeDee:theta\"),\n            input: \"number\",\n            step: 1,\n            precision: PRECISION_DEGREES,\n            value: camera.thetaOffset,\n          },\n          ...(camera.perspective && {\n            phi: {\n              label: t(\"threeDee:phi\"),\n              input: \"number\",\n              step: 1,\n              precision: PRECISION_DEGREES,\n              value: camera.phi,\n            },\n            fovy: {\n              label: t(\"threeDee:fovy\"),\n              input: \"number\",\n              step: 1,\n              precision: PRECISION_DEGREES,\n              value: camera.fovy,\n            },\n          }),\n          near: {\n            label: t(\"threeDee:near\"),\n            input: \"number\",\n            step: DEFAULT_CAMERA_STATE.near,\n            precision: PRECISION_DISTANCE,\n            value: camera.near,\n          },\n          far: {\n            label: t(\"threeDee:far\"),\n            input: \"number\",\n            step: 1,\n            precision: PRECISION_DISTANCE,\n            value: camera.far,\n          },\n        },\n      },\n    };\n  }\n\n  #frameSettingsNode(): SettingsTreeEntry {\n    const config = this.renderer.config;\n    const handler = this.handleSettingsAction;\n\n    // If the user-selected frame does not exist, show it in the dropdown\n    // anyways. A settings node error will be displayed\n    let followTfOptions = this.renderer.coordinateFrameList;\n    const followFrameId = this.renderer.followFrameId;\n\n    this.#updateFollowTfError();\n\n    // always show current config value if it exists\n    const followTfValue = config.followTf ?? followFrameId;\n    if (followTfValue != undefined && !this.renderer.transformTree.hasFrame(followTfValue)) {\n      followTfOptions = [\n        { label: CoordinateFrame.DisplayName(followTfValue), value: followTfValue },\n        ...followTfOptions,\n      ];\n    }\n\n    const followTfError = this.renderer.settings.errors.errors.errorAtPath(FOLLOW_TF_PATH);\n\n    const followModeOptions = [\n      { label: t(\"threeDee:pose\"), value: \"follow-pose\" },\n      { label: t(\"threeDee:position\"), value: \"follow-position\" },\n      { label: t(\"threeDee:fixed\"), value: \"follow-none\" },\n    ];\n    const followModeValue = this.renderer.config.followMode;\n\n    return {\n      path: [\"general\"],\n      node: {\n        label: t(\"threeDee:frame\"),\n        fields: {\n          followTf: {\n            label: t(\"threeDee:displayFrame\"),\n            help: t(\"threeDee:displayFrameHelp\"),\n            input: \"select\",\n            options: followTfOptions,\n            value: followTfValue,\n            error: followTfError,\n          },\n          followMode: {\n            label: t(\"threeDee:followMode\"),\n            help: t(\"threeDee:followModeHelp\"),\n            input: \"select\",\n            options: followModeOptions,\n            value: followModeValue,\n          },\n        },\n        defaultExpansionState: \"expanded\",\n        handler,\n      },\n    };\n  }\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action === \"perform-node-action\" && action.payload.id === \"reset-camera\") {\n      this.renderer.updateConfig((draft) => {\n        draft.cameraState = cloneDeep(DEFAULT_CAMERA_STATE);\n      });\n      this.updateSettingsTree();\n      return;\n    }\n\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n\n    const {\n      path: [category],\n      path,\n      value,\n    } = action.payload;\n\n    // camera settings\n    if (category === \"cameraState\") {\n      if (path[1] === \"syncCamera\") {\n        // Update the configuration. This is done manually since syncCamera is under `scene`, not `cameraState`\n        this.renderer.updateConfig((draft) => {\n          draft.scene.syncCamera = value as boolean;\n        });\n      } else {\n        this.renderer.updateConfig((draft) => set(draft, path, value));\n      }\n\n      this.updateSettingsTree();\n    }\n\n    // frame settings\n    if (category === \"general\") {\n      if (path[1] === \"followTf\") {\n        const followTf = value as string | undefined;\n        // Update the configuration. This is done manually since followTf is at the top level of\n        // config, not under `general`\n        this.renderer.updateConfig((draft) => {\n          draft.followTf = followTf;\n        });\n\n        this.#updateFollowFrameId();\n        this.renderer.settings.errors.clearPath([\"general\", \"followTf\"]);\n      } else if (path[1] === \"followMode\") {\n        const followMode = value as FollowMode;\n        // Update the configuration. This is done manually since followMode is at the top level of\n        // config, not under `general`\n        this.renderer.updateConfig((draft) => {\n          // any follow -> stationary no clear\n          // stationary -> any follow clear offset (center on frame)\n          if (draft.followMode === \"follow-none\") {\n            draft.cameraState.targetOffset = [...DEFAULT_CAMERA_STATE.targetOffset];\n            draft.cameraState.thetaOffset = DEFAULT_CAMERA_STATE.thetaOffset;\n          } else if (followMode === \"follow-pose\") {\n            draft.cameraState.thetaOffset = DEFAULT_CAMERA_STATE.thetaOffset;\n          }\n          draft.followMode = followMode;\n        });\n      }\n\n      this.updateSettingsTree();\n    }\n  };\n\n  // this extension has  NO RENDERABLES so the parent startFrame would do nothing\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: AnyFrameId,\n    fixedFrameId: AnyFrameId,\n  ): void {\n    const followMode = this.renderer.config.followMode;\n\n    if (\n      followMode === \"follow-pose\" ||\n      // we don't need the unfollow pose snapshot when there are no transforms\n      fixedFrameId === CoordinateFrame.FALLBACK_FRAME_ID ||\n      renderFrameId === CoordinateFrame.FALLBACK_FRAME_ID\n    ) {\n      this.#unfollowSnapshotFrameIds = undefined;\n      this.unfollowPoseSnapshot = undefined;\n      this.#cameraGroup.position.set(0, 0, 0);\n      this.#cameraGroup.quaternion.set(0, 0, 0, 1);\n      return;\n    }\n\n    const poseSnapshot = this.#getUnfollowPoseSnapshot(fixedFrameId, renderFrameId, currentTime);\n\n    const transformTree = this.renderer.transformTree;\n\n    if (poseSnapshot) {\n      // transform position of snapshot in fixed frame to the render frame\n      const appliedTransform = Boolean(\n        transformTree.apply(\n          snapshotInRenderFrame,\n          poseSnapshot,\n          renderFrameId,\n          fixedFrameId,\n          fixedFrameId,\n          currentTime,\n          currentTime,\n        ),\n      );\n\n      if (!appliedTransform) {\n        return;\n      }\n      /**\n       * the application of the unfollowPoseSnapshot position and orientation\n       * components makes the camera position and rotation static relative to the fixed frame.\n       * So when the display frame changes the angle of the camera relative\n       * to the scene will not change because only the snapshotPose orientation is applied\n       */\n      if (followMode === \"follow-position\") {\n        // only make orientation static/stationary in this mode\n        // the position still follows the frame\n        this.#cameraGroup.position.set(0, 0, 0);\n      } else {\n        this.#cameraGroup.position.set(\n          snapshotInRenderFrame.position.x,\n          snapshotInRenderFrame.position.y,\n          snapshotInRenderFrame.position.z,\n        );\n      }\n      // this negates the rotation of the changes in renderFrame\n      this.#cameraGroup.quaternion.set(\n        snapshotInRenderFrame.orientation.x,\n        snapshotInRenderFrame.orientation.y,\n        snapshotInRenderFrame.orientation.z,\n        snapshotInRenderFrame.orientation.w,\n      );\n    }\n  }\n\n  #handleCameraMove = (): void => {\n    this.updateSettingsTree();\n  };\n\n  #handleTransformTreeUpdated = (): void => {\n    this.#updateFollowFrameId();\n    this.updateSettingsTree();\n  };\n\n  #updateFollowFrameId() {\n    const { followTf } = this.renderer.config;\n    const { transformTree } = this.renderer;\n    this.#updateFollowTfError();\n\n    const followTfFrameExists = followTf != undefined && transformTree.hasFrame(followTf);\n    if (followTfFrameExists) {\n      this.renderer.setFollowFrameId(followTf);\n      return;\n    }\n\n    // No valid renderFrameId set, or new frames have been added, fall back to selecting the\n    // heuristically most valid frame (if any frames are present)\n    const followFrameId = transformTree.getDefaultFollowFrameId();\n    this.renderer.setFollowFrameId(followFrameId);\n  }\n\n  #updateFollowTfError = (): void => {\n    const { followTf } = this.renderer.config;\n    const { transformTree } = this.renderer;\n\n    if (followTf != undefined) {\n      const followTfFrameExists = transformTree.hasFrame(followTf);\n      if (followTfFrameExists) {\n        this.renderer.settings.errors.remove(FOLLOW_TF_PATH, DISPLAY_FRAME_NOT_FOUND);\n      } else {\n        this.renderer.settings.errors.add(\n          FOLLOW_TF_PATH,\n          DISPLAY_FRAME_NOT_FOUND,\n          t(\"threeDee:frameNotFound\", {\n            frameId: followTf,\n          }),\n        );\n      }\n    }\n  };\n\n  #handleErrorChange = (): void => {\n    this.updateSettingsTree();\n  };\n\n  // Redefine follow pose snapshot whenever renderFrame or fixedFrame changes\n  #getUnfollowPoseSnapshot(fixedFrameId: string, renderFrameId: string, currentTime: bigint) {\n    const transformTree = this.renderer.transformTree;\n    if (\n      this.#unfollowSnapshotFrameIds?.fixed !== fixedFrameId ||\n      this.#unfollowSnapshotFrameIds.render !== renderFrameId\n    ) {\n      this.unfollowPoseSnapshot = makePose();\n      // record the pose of the center of the render frame in fixed frame into the snapshot\n      transformTree.apply(\n        this.unfollowPoseSnapshot,\n        this.unfollowPoseSnapshot,\n        fixedFrameId,\n        fixedFrameId,\n        renderFrameId,\n        currentTime,\n        currentTime,\n      );\n      this.#unfollowSnapshotFrameIds = {\n        fixed: fixedFrameId,\n        render: renderFrameId,\n      };\n    }\n    return this.unfollowPoseSnapshot;\n  }\n\n  public getActiveCamera(): THREE.PerspectiveCamera | THREE.OrthographicCamera {\n    return this.renderer.config.cameraState.perspective\n      ? this.#perspectiveCamera\n      : this.#orthographicCamera;\n  }\n\n  public handleResize(width: number, height: number, _pixelRatio: number): void {\n    this.#aspect = width / height;\n    this.setCameraState(this.renderer.config.cameraState);\n  }\n\n  public getCameraState(): CameraState {\n    const config = this.renderer.config;\n    return {\n      perspective: config.cameraState.perspective,\n      distance: this.#controls.getDistance(),\n      phi: THREE.MathUtils.radToDeg(this.#controls.getPolarAngle()),\n      thetaOffset: THREE.MathUtils.radToDeg(-this.#controls.getAzimuthalAngle()),\n      targetOffset: [this.#controls.target.x, this.#controls.target.y, this.#controls.target.z],\n      target: config.cameraState.target,\n      targetOrientation: config.cameraState.targetOrientation,\n      fovy: config.cameraState.fovy,\n      near: config.cameraState.near,\n      far: config.cameraState.far,\n    };\n  }\n\n  public setCameraState(cameraState: CameraState): void {\n    this.#isUpdatingCameraState = true;\n    this.#updateCameras(cameraState);\n    // only active for follow pose mode because it introduces strange behavior into the other modes\n    // due to the fact that they are manipulating the camera after update with the `cameraGroup`\n    if (this.renderer.config.followMode === \"follow-pose\") {\n      this.#controls.update();\n    }\n    this.#isUpdatingCameraState = false;\n  }\n\n  /** Translate a CameraState to the three.js coordinate system */\n  #updateCameras(cameraState: CameraState): void {\n    const targetOffset = tempVec3;\n    const config = this.renderer.config;\n    targetOffset.fromArray(cameraState.targetOffset);\n\n    const phi = THREE.MathUtils.degToRad(cameraState.phi);\n    const theta = -THREE.MathUtils.degToRad(cameraState.thetaOffset);\n\n    // Always update the perspective camera even if the current mode is orthographic. This is needed\n    // to make the OrbitControls work properly since they track the perspective camera.\n    // https://github.com/foxglove/studio/issues/4138\n\n    // Convert the camera spherical coordinates (radius, phi, theta) to Cartesian (X, Y, Z)\n    tempSpherical.set(cameraState.distance, phi, theta);\n    this.#perspectiveCamera.position.setFromSpherical(tempSpherical).applyAxisAngle(UNIT_X, PI_2);\n    this.#perspectiveCamera.position.add(targetOffset);\n\n    // Convert the camera spherical coordinates (phi, theta) to a quaternion rotation\n    this.#perspectiveCamera.quaternion.setFromEuler(tempEuler.set(phi, 0, theta, \"ZYX\"));\n    this.#perspectiveCamera.fov = cameraState.fovy;\n    this.#perspectiveCamera.near = cameraState.near;\n    this.#perspectiveCamera.far = cameraState.far;\n    this.#perspectiveCamera.aspect = this.#aspect;\n    this.#perspectiveCamera.updateProjectionMatrix();\n\n    this.#controls.target.copy(targetOffset);\n\n    if (cameraState.perspective) {\n      // Unlock the polar angle (pitch axis)\n      this.#controls.minPolarAngle = 0;\n      this.#controls.maxPolarAngle = Math.PI;\n    } else {\n      // Lock the polar angle during 2D mode\n      const curPolarAngle = THREE.MathUtils.degToRad(config.cameraState.phi);\n      this.#controls.minPolarAngle = this.#controls.maxPolarAngle = curPolarAngle;\n\n      this.#orthographicCamera.position.set(targetOffset.x, targetOffset.y, cameraState.far / 2);\n      this.#orthographicCamera.quaternion.setFromAxisAngle(UNIT_Z, theta);\n      this.#orthographicCamera.left = (-cameraState.distance / 2) * this.#aspect;\n      this.#orthographicCamera.right = (cameraState.distance / 2) * this.#aspect;\n      this.#orthographicCamera.top = cameraState.distance / 2;\n      this.#orthographicCamera.bottom = -cameraState.distance / 2;\n      this.#orthographicCamera.near = cameraState.near;\n      this.#orthographicCamera.far = cameraState.far;\n      this.#orthographicCamera.updateProjectionMatrix();\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nfunction yuvToRGBA8(\n  y1: number,\n  u: number,\n  y2: number,\n  v: number,\n  c: number,\n  output: Uint8ClampedArray,\n): void {\n  // rgba\n  output[c] = y1 + 1.402 * v;\n  output[c + 1] = y1 - 0.34414 * u - 0.71414 * v;\n  output[c + 2] = y1 + 1.772 * u;\n  output[c + 3] = 255;\n\n  // rgba\n  output[c + 4] = y2 + 1.402 * v;\n  output[c + 5] = y2 - 0.34414 * u - 0.71414 * v;\n  output[c + 6] = y2 + 1.772 * u;\n  output[c + 7] = 255;\n}\n\nexport function decodeYUV(\n  yuv: Int8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let c = 0;\n  let off = 0;\n\n  // populate 2 pixels at a time\n  const max = height * width;\n  for (let r = 0; r <= max; r += 2) {\n    const u = yuv[off]! - 128;\n    const y1 = yuv[off + 1]!;\n    const v = yuv[off + 2]! - 128;\n    const y2 = yuv[off + 3]!;\n    yuvToRGBA8(y1, u, y2, v, c, output);\n    c += 8;\n    off += 4;\n  }\n}\n\n// change name in the future do something more distinct\nexport function decodeYUYV(\n  yuyv: Int8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let c = 0;\n  let off = 0;\n\n  // populate 2 pixels at a time\n  const max = height * width;\n  for (let r = 0; r <= max; r += 2) {\n    const y1 = yuyv[off]!;\n    const u = yuyv[off + 1]! - 128;\n    const y2 = yuyv[off + 2]!;\n    const v = yuyv[off + 3]! - 128;\n    yuvToRGBA8(y1, u, y2, v, c, output);\n    c += 8;\n    off += 4;\n  }\n}\n\nexport function decodeRGB8(\n  rgb: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const r = rgb[inIdx++]!;\n    const g = rgb[inIdx++]!;\n    const b = rgb[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeRGBA8(\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const r = rgba[inIdx++]!;\n    const g = rgba[inIdx++]!;\n    const b = rgba[inIdx++]!;\n    const a = rgba[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = a;\n  }\n}\n\nexport function decodeBGRA8(\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const b = rgba[inIdx++]!;\n    const g = rgba[inIdx++]!;\n    const r = rgba[inIdx++]!;\n    const a = rgba[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = a;\n  }\n}\n\nexport function decodeBGR8(\n  bgr: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const b = bgr[inIdx++]!;\n    const g = bgr[inIdx++]!;\n    const r = bgr[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeFloat1c(\n  gray: Uint8Array,\n  width: number,\n  height: number,\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  is_bigendian: boolean,\n  output: Uint8ClampedArray,\n): void {\n  const view = new DataView(gray.buffer, gray.byteOffset);\n\n  let outIdx = 0;\n  for (let i = 0; i < width * height * 4; i += 4) {\n    const val = view.getFloat32(i, !is_bigendian) * 255;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeMono8(\n  mono8: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const ch = mono8[inIdx++]!;\n    output[outIdx++] = ch;\n    output[outIdx++] = ch;\n    output[outIdx++] = ch;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeMono16(\n  mono16: Uint8Array,\n  width: number,\n  height: number,\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  is_bigendian: boolean,\n  output: Uint8ClampedArray,\n  options?: { minValue?: number; maxValue?: number },\n): void {\n  const view = new DataView(mono16.buffer, mono16.byteOffset);\n\n  // Use user-provided max/min values, or default to 0-10000, consistent with image_view's default.\n  // References:\n  // https://github.com/ros-perception/image_pipeline/blob/42266892502427eb566a4dffa61b009346491ce7/image_view/src/nodes/image_view.cpp#L80-L88\n  // https://github.com/ros-visualization/rqt_image_view/blob/fe076acd265a05c11c04f9d04392fda951878f54/src/rqt_image_view/image_view.cpp#L582\n  // https://github.com/ros-visualization/rviz/blob/68b464fb6571b8760f91e8eca6fb933ba31190bf/src/rviz/image/ros_image_texture.cpp#L114\n  const minValue = options?.minValue ?? 0;\n  let maxValue = options?.maxValue ?? 10000;\n  if (maxValue === minValue) {\n    maxValue = minValue + 1;\n  }\n\n  let outIdx = 0;\n  for (let i = 0; i < width * height * 2; i += 2) {\n    let val = view.getUint16(i, !is_bigendian);\n\n    val = ((val - minValue) / (maxValue - minValue)) * 255;\n\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = 255;\n  }\n}\n\n// Specialize the Bayer decode function to a certain encoding. For performance reasons, we use\n// new Function() -- this is about 20% faster than a switch statement and .bind().\nfunction makeSpecializedDecodeBayer(\n  tl: string,\n  tr: string,\n  bl: string,\n  br: string,\n): (data: Uint8Array, width: number, height: number, output: Uint8ClampedArray) => void {\n  // We probably can't afford real debayering/demosaicking, so do something simpler\n  // The input array look like a single-plane array of pixels.  However, each pixel represents a one particular color\n  // for a group of pixels in the 2x2 region.  For 'rggb', there color representatio for the 2x2 region looks like:\n  //\n  // R  | G0\n  // -------\n  // G1 | B\n  //\n  // In other words, a 2x2 region is represented by one R value, one B value, and two G values.  In sophisticated\n  // algorithms, each color will be weighted and interpolated to fill in the missing colors for the pixels.  These\n  // algorithms may reach beyond the local 2x2 region and use values from neighboring regions.\n  //\n  // We'll do something much simpler.  For each group of 2x2, we're replicate the R and B values for all pixels.\n  // For the two row, we'll replicate G0 for the green channels, and replicate G1 for the bottom row.\n  // eslint-disable-next-line no-new-func\n  return new Function(\n    \"data\",\n    \"width\",\n    \"height\",\n    \"output\",\n    `\n  for (let i = 0; i < height / 2; i++) {\n    let inIdx = i * 2 * width;\n    let outTopIdx = i * 2 * width * 4; // Addresses top row\n    let outBottomIdx = (i * 2 + 1) * width * 4; // Addresses bottom row\n    for (let j = 0; j < width / 2; j++) {\n      const tl = data[inIdx++];\n      const tr = data[inIdx++];\n      const bl = data[inIdx + width - 2];\n      const br = data[inIdx + width - 1];\n\n      const ${tl} = tl;\n      const ${tr} = tr;\n      const ${bl} = bl;\n      const ${br} = br;\n\n      // Top row\n      output[outTopIdx++] = r;\n      output[outTopIdx++] = g0;\n      output[outTopIdx++] = b;\n      output[outTopIdx++] = 255;\n\n      output[outTopIdx++] = r;\n      output[outTopIdx++] = g0;\n      output[outTopIdx++] = b;\n      output[outTopIdx++] = 255;\n\n      // Bottom row\n      output[outBottomIdx++] = r;\n      output[outBottomIdx++] = g1;\n      output[outBottomIdx++] = b;\n      output[outBottomIdx++] = 255;\n\n      output[outBottomIdx++] = r;\n      output[outBottomIdx++] = g1;\n      output[outBottomIdx++] = b;\n      output[outBottomIdx++] = 255;\n    }\n  }`,\n  ) as ReturnType<typeof makeSpecializedDecodeBayer>;\n}\n\nexport const decodeBayerRGGB8 = makeSpecializedDecodeBayer(\"r\", \"g0\", \"g1\", \"b\");\nexport const decodeBayerBGGR8 = makeSpecializedDecodeBayer(\"b\", \"g0\", \"g1\", \"r\");\nexport const decodeBayerGBRG8 = makeSpecializedDecodeBayer(\"g0\", \"b\", \"r\", \"g1\");\nexport const decodeBayerGRBG8 = makeSpecializedDecodeBayer(\"g0\", \"r\", \"b\", \"g1\");\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport type { CameraInfo } from \"./CameraInfo\";\n\ntype Vector2 = { x: number; y: number };\n\ntype Vector3 = { x: number; y: number; z: number };\n\ntype Matrix3 = [number, number, number, number, number, number, number, number, number];\n\n// prettier-ignore\ntype Matrix3x4 = [\n  number, number, number, number,\n  number, number, number, number,\n  number, number, number, number,\n];\n\ntype Vec8 = [number, number, number, number, number, number, number, number];\n\n/**\n * A pinhole camera model that can be used to rectify, unrectify, and project pixel coordinates.\n * Based on `ROSPinholeCameraModel` from the ROS `image_geometry` package. See\n * <http://docs.ros.org/diamondback/api/image_geometry/html/c++/pinhole__camera__model_8cpp_source.html>\n */\nexport class PinholeCameraModel {\n  /**\n   * Distortion parameters `[k1, k2, p1, p2, k3, k4, k5, k6]`. For `rational_polynomial`, all eight\n   * parameters are set. For `plumb_bob`, the last three parameters are set to zero. For no\n   * distortion model, all eight parameters are set to zero.\n   */\n  public D: Readonly<Vec8>;\n  /**\n   * Intrinsic camera matrix for the raw (distorted) images. 3x3 row-major matrix.\n   * ```\n   *     [fx  0 cx]\n   * K = [ 0 fy cy]\n   *     [ 0  0  1]\n   * ```\n   * Projects 3D points in the camera coordinate frame to 2D pixel coordinates using the focal\n   * lengths `(fx, fy)` and principal point `(cx, cy)`.\n   */\n  public K: Readonly<Matrix3>;\n  /**\n   * Projection/camera matrix. 3x4 row-major matrix.\n   * This matrix specifies the intrinsic (camera) matrix of the processed (rectified) image. That\n   * is, the left 3x3 portion is the normal camera intrinsic matrix for the rectified image.\n   *\n   * It projects 3D points in the camera coordinate frame to 2D pixel coordinates using the focal\n   * lengths `(fx', fy')` and principal point `(cx', cy')` - these may differ from the values in K.\n   * For monocular cameras, `Tx = Ty = 0`. Normally, monocular cameras will also have R = the\n   * identity and `P[1:3,1:3] = K`.\n   *\n   * For a stereo pair, the fourth column `[Tx Ty 0]'` is related to the position of the optical\n   * center of the second camera in the first camera's frame. We assume `Tz = 0` so both cameras are\n   * in the same stereo image plane. The first camera always has `Tx = Ty = 0`. For the right\n   * (second) camera of a horizontal stereo pair, `Ty = 0 and Tx = -fx' * B`, where `B` is the\n   * baseline between the cameras.\n   *\n   * Given a 3D point `[X Y Z]'`, the projection `(x, y)` of the point onto the rectified image is\n   * given by:\n   * ```\n   * [u v w]' = P * [X Y Z 1]'\n   *        x = u / w\n   *        y = v / w\n   * ```\n   * This holds for both images of a stereo pair.\n   */\n  public P: Readonly<Matrix3x4>;\n  /**\n   * Rectification matrix (stereo cameras only). 3x3 row-major matrix.\n   * A rotation matrix aligning the camera coordinate system to the ideal stereo image plane so\n   * that epipolar lines in both stereo images are parallel.\n   */\n  public R: Readonly<Matrix3>;\n  /** The full camera image width in pixels. */\n  public readonly width: number;\n  /** The full camera image height in pixels. */\n  public readonly height: number;\n\n  // Mostly copied from `fromCameraInfo`\n  // <http://docs.ros.org/diamondback/api/image_geometry/html/c++/pinhole__camera__model_8cpp_source.html#l00064>\n  public constructor(info: CameraInfo) {\n    const { binning_x, binning_y, roi, distortion_model: model, D, K, P, R, width, height } = info;\n    const fx = P[0];\n    const fy = P[5];\n\n    if (width <= 0 || height <= 0) {\n      throw new Error(`Invalid image size ${width}x${height}`);\n    }\n    if (model.length > 0 && model !== \"plumb_bob\" && model !== \"rational_polynomial\") {\n      throw new Error(`Unrecognized distortion_model \"${model}\"`);\n    }\n    if (K.length !== 0 && K.length !== 9) {\n      throw new Error(`K.length=${K.length}, expected 9`);\n    }\n    if (P.length !== 12) {\n      throw new Error(`P.length=${K.length}, expected 12`);\n    }\n    if (R.length !== 0 && R.length !== 9) {\n      throw new Error(`R.length=${R.length}, expected 9`);\n    }\n    if (fx === 0 || fy === 0) {\n      throw new Error(`Invalid focal length (fx=${fx}, fy=${fy})`);\n    }\n\n    const D8 = [...D];\n    while (D8.length < 8) {\n      D8.push(0);\n    }\n    this.D = D8 as Vec8;\n    this.K = K.length === 9 ? (K as Matrix3) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    this.P = P as Matrix3x4;\n    this.R = R.length === 9 ? (R as Matrix3) : [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    this.width = width;\n    this.height = height;\n\n    // Binning = 0 is considered the same as binning = 1 (no binning).\n    const binningX = binning_x !== 0 ? binning_x : 1;\n    const binningY = binning_y !== 0 ? binning_y : 1;\n\n    const adjustBinning = binningX > 1 || binningY > 1;\n    const adjustRoi = roi.x_offset !== 0 || roi.y_offset !== 0;\n\n    if (adjustBinning || adjustRoi) {\n      throw new Error(\n        \"Failed to initialize camera model: unable to handle adjusted binning and adjusted roi camera models.\",\n      );\n    }\n  }\n\n  /**\n   * Projects a 2D image pixel to a point on a plane in 3D world coordinates a\n   * unit distance along the Z axis. This is equivalent to `projectPixelTo3dRay`\n   * before normalizing.\n   *\n   * @param out - The output vector to receive the 3D point.\n   * @param pixel - The 2D image pixel coordinate.\n   * @returns `true` if the projection was successful, or `false` if the camera\n   *   projection matrix `P` is not set.\n   */\n  public projectPixelTo3dPlane(out: Vector3, pixel: Readonly<Vector2>): Vector3 {\n    const P = this.P;\n\n    const fx = P[0];\n    const fy = P[5];\n    const cx = P[2];\n    const cy = P[6];\n    const tx = P[3];\n    const ty = P[7];\n\n    out.x = (pixel.x - cx - tx) / fx;\n    out.y = (pixel.y - cy - ty) / fy;\n    out.z = 1.0;\n\n    return out;\n  }\n\n  /**\n   * Projects a 2D image pixel into a 3D ray in world coordinates. This is\n   * equivalent to normalizing the result of `projectPixelTo3dPlane` to get a\n   * direction vector.\n   *\n   * @param out - The output vector to receive the 3D ray direction.\n   * @param pixel - The 2D image pixel coordinate.\n   * @returns `true` if the projection was successful, or `false` if the camera\n   *   projection matrix `P` is not set.\n   */\n  public projectPixelTo3dRay(out: Vector3, pixel: Readonly<Vector2>): Vector3 {\n    this.projectPixelTo3dPlane(out, pixel);\n\n    // Normalize the ray direction\n    const invNorm = 1.0 / Math.sqrt(out.x * out.x + out.y * out.y + out.z * out.z);\n    out.x *= invNorm;\n    out.y *= invNorm;\n    out.z *= invNorm;\n\n    return out;\n  }\n\n  /**\n   * Undoes camera distortion to map a given pixel coordinate from a raw image to a rectified image.\n   * Similar to OpenCV `undistortPoints()`.\n   *\n   * @param out - The output rectified 2D pixel coordinate.\n   * @param point - The input distorted/unrectified 2D pixel to rectify.\n   * @param iterations - The number of iterations to use in the iterative optimization.\n   * @returns The rectified pixel, a reference to `out`.\n   */\n  public undistortPixel(out: Vector2, point: Readonly<Vector2>, iterations = 5): Vector2 {\n    const { P, D } = this;\n    const [k1, k2, p1, p2, k3] = D;\n\n    const fx = P[0];\n    const fy = P[5];\n    const cx = P[2];\n    const cy = P[6];\n\n    // This method does three things:\n    //   1. Convert the input 2D point from pixel coordinates to normalized\n    //      coordinates by subtracting the principal point (cx, cy) and dividing\n    //      by the focal lengths (fx, fy).\n    //   2. Apply the distortion model to the normalized point using an\n    //      iterative optimization algorithm. This undoes the distortion that\n    //      was applied to the original image and yields an approximation of the\n    //      rectified point.\n    //   3. Convert the rectified point back to pixel coordinates by multiplying\n    //      by the focal lengths and adding the principal point.\n    // The distortion model is non-linear, so we use fixed-point iteration to\n    // incrementally iterate to an approximation of the solution. This approach\n    // is described at <http://peterabeles.com/blog/?p=73>. The Jacobi method is\n    // used here, balancing accuracy and speed. A more precise method such as\n    // Levenberg-Marquardt or the exact formula described in\n    // <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4934233/> could be used,\n    // but they are slower and less suitable for real-time applications such as\n    // visualization. Note that our method is only locally convergent, requiring\n    // a good \"initial guess\". This means we may not converge for extreme values\n    // such as points close to the focal plane.\n    //\n    // The implementation is based on code from\n    // <https://yangyushi.github.io/code/2020/03/04/opencv-undistort.html>\n    // You can read more about the equations used in the pinhole camera model at\n    // <https://docs.opencv.org/4.x/d9/d0c/group__calib3d.html#details>\n    let x = (point.x - cx) / fx;\n    let y = (point.y - cy) / fy;\n\n    const x0 = x;\n    const y0 = y;\n    const count = k1 !== 0 || k2 !== 0 || p1 !== 0 || p2 !== 0 || k3 !== 0 ? iterations : 1;\n    for (let i = 0; i < count; i++) {\n      const r2 = x * x + y * y; // squared distance in the image projected by the pinhole model\n      const k_inv = 1 / (1 + k1 * r2 + k2 * r2 * r2 + k3 * r2 * r2 * r2);\n      const delta_x = 2 * p1 * x * y + p2 * (r2 + 2 * x * x);\n      const delta_y = p1 * (r2 + 2 * y * y) + 2 * p2 * x * y;\n      x = (x0 - delta_x) * k_inv;\n      y = (y0 - delta_y) * k_inv;\n    }\n\n    out.x = x * fx + cx;\n    out.y = y * fy + cy;\n    return out;\n  }\n\n  /**\n   * Applies camera distortion parameters to a given 2D pixel coordinate on a rectified image,\n   * returning the corresponding pixel coordinate on the raw (distorted) image.\n   *\n   * @param out - The output 2D pixel coordinate on the original (distorted/unrectified) image\n   * @param point - The input 2D pixel coordinate on a rectified image\n   * @returns The distorted pixel, a reference to `out`\n   */\n  public distortPixel(out: Vector2, point: Readonly<Vector2>): Vector2 {\n    out.x = point.x;\n    out.y = point.y;\n\n    const { P, R, D, K } = this;\n    const fx = P[0];\n    const fy = P[5];\n    const cx = P[2];\n    const cy = P[6];\n    const tx = P[3];\n    const ty = P[7];\n\n    // Formulae from:\n    // <https://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html>\n\n    // x <- (u - c'x) / f'x\n    // y <- (v - c'y) / f'y\n    // c'x, f'x, etc. (primed) come from \"new camera matrix\" P[0:3, 0:3].\n    const x1 = (point.x - cx - tx) / fx;\n    const y1 = (point.y - cy - ty) / fy;\n    // [X Y W]^T <- R^-1 * [x y 1]^T\n    const X = R[0] * x1 + R[1] * y1 + R[2];\n    const Y = R[3] * x1 + R[4] * y1 + R[5];\n    const W = R[6] * x1 + R[7] * y1 + R[8];\n    const xp = X / W;\n    const yp = Y / W;\n\n    // x'' <- x'(1+k1*r^2+k2*r^4+k3*r^6) + 2p1*x'*y' + p2(r^2+2x'^2)\n    // y'' <- y'(1+k1*r^2+k2*r^4+k3*r^6) + p1(r^2+2y'^2) + 2p2*x'*y'\n    // where r^2 = x'^2 + y'^2\n    const r2 = xp * xp + yp * yp;\n    const r4 = r2 * r2;\n    const r6 = r4 * r2;\n    const a1 = 2 * xp * yp;\n    const k1 = D[0]!;\n    const k2 = D[1]!;\n    const p1 = D[2]!;\n    const p2 = D[3]!;\n    const k3 = D[4]!;\n    let barrel_correction = 1 + k1 * r2 + k2 * r4 + k3 * r6;\n    barrel_correction /= 1.0 + D[5] * r2 + D[6] * r4 + D[7] * r6;\n    const xpp = xp * barrel_correction + p1 * a1 + p2 * (r2 + 2 * (xp * xp));\n    const ypp = yp * barrel_correction + p1 * (r2 + 2 * (yp * yp)) + p2 * a1;\n\n    // map_x(u,v) <- x''fx + cx\n    // map_y(u,v) <- y''fy + cy\n    // cx, fx, etc. come from original camera matrix K.\n    out.x = xpp * K[0] + K[2];\n    out.y = ypp * K[4] + K[5];\n    return out;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport type { IRenderer } from \"../../IRenderer\";\nimport { BaseUserData, Renderable } from \"../../Renderable\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { Marker } from \"../../ros\";\nimport type { LayerSettingsMarker } from \"../TopicMarkers\";\n\nconst tempColor = new THREE.Color();\nconst tempColor2 = new THREE.Color();\nconst tempTuple4: THREE.Vector4Tuple = [0, 0, 0, 0];\n\nexport type MarkerUserData = BaseUserData & {\n  topic: string;\n  marker: Marker; // The marker used for rendering\n  originalMarker: Marker; // The original marker received from the topic, used for inspection\n  expiresIn: bigint | undefined;\n};\n\nexport function getMarkerId(topic: string, ns: string, id: number): string {\n  return `${topic}:${ns ? ns + \":\" : \"\"}${id}`.replace(/\\s/g, \"_\");\n}\n\nexport class RenderableMarker extends Renderable<MarkerUserData> {\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n  ) {\n    const name = getMarkerId(topic, marker.ns, marker.id);\n    const hasLifetime = marker.lifetime.sec !== 0 || marker.lifetime.nsec !== 0;\n\n    super(name, renderer, {\n      receiveTime: receiveTime ?? 0n,\n      messageTime: toNanoSec(marker.header.stamp),\n      frameId: renderer.normalizeFrameId(marker.header.frame_id),\n      pose: marker.pose,\n      settingsPath: [\"topics\", topic],\n      settings: { visible: true, frameLocked: marker.frame_locked },\n      topic,\n      marker,\n      originalMarker: marker,\n      expiresIn: hasLifetime ? toNanoSec(marker.lifetime) : undefined,\n    });\n  }\n\n  public override idFromMessage(): number | string | undefined {\n    return this.userData.marker.id;\n  }\n\n  public override selectedIdVariable(): string | undefined {\n    const settings = this.getSettings();\n    return settings?.selectedIdVariable;\n  }\n\n  public getSettings(): LayerSettingsMarker | undefined {\n    return this.renderer.config.topics[this.userData.topic] as LayerSettingsMarker | undefined;\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMarker;\n  }\n\n  public update(marker: Marker, receiveTime: bigint | undefined): void {\n    const hasLifetime = marker.lifetime.sec !== 0 || marker.lifetime.nsec !== 0;\n\n    if (receiveTime != undefined) {\n      this.userData.receiveTime = receiveTime;\n    }\n    this.userData.messageTime = toNanoSec(marker.header.stamp);\n    this.userData.frameId = this.renderer.normalizeFrameId(marker.header.frame_id);\n    this.userData.pose = marker.pose;\n    this.userData.marker = this.#renderMarker(marker);\n    this.userData.originalMarker = marker;\n    this.userData.expiresIn = hasLifetime ? toNanoSec(marker.lifetime) : undefined;\n  }\n\n  // Convert sRGB values to linear\n  protected _markerColorsToLinear(\n    marker: Marker,\n    pointsLength: number,\n    callback: (color: THREE.Vector4Tuple, i: number) => void,\n  ): void {\n    rgbToThreeColor(tempColor, marker.color);\n\n    for (let i = 0; i < pointsLength; i++) {\n      const srgb = marker.colors[i];\n      if (srgb) {\n        // Per-point color\n        rgbToThreeColor(tempColor2, srgb);\n        tempTuple4[0] = tempColor2.r;\n        tempTuple4[1] = tempColor2.g;\n        tempTuple4[2] = tempColor2.b;\n        tempTuple4[3] = srgb.a;\n      } else {\n        // Base marker color\n        tempTuple4[0] = tempColor.r;\n        tempTuple4[1] = tempColor.g;\n        tempTuple4[2] = tempColor.b;\n        tempTuple4[3] = marker.color.a;\n      }\n\n      callback(tempTuple4, i);\n    }\n  }\n\n  #renderMarker(marker: Marker): Marker {\n    const topicName = this.userData.topic;\n    const settings = this.renderer.config.topics[topicName] as\n      | Partial<LayerSettingsMarker>\n      | undefined;\n    const colorStr = settings?.color;\n\n    if (colorStr == undefined) {\n      return marker;\n    }\n\n    // Create a clone of the marker with the color overridden\n    const color = stringToRgba(makeRgba(), colorStr);\n    const newMarker = { ...marker, color, colors: [] };\n    return newMarker;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n// Adapted from <https://github.com/mrdoob/three.js/blob/master/examples/jsm/lines/LineMaterial.js>\n// to support vertex color alpha channel\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable no-restricted-syntax */\n\n/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsLib,\n  UniformsUtils,\n  Vector2,\n  MaterialParameters,\n} from \"three\";\n\n(UniformsLib as any).line = {\n  worldUnits: { value: 1 },\n  linewidth: { value: 1 },\n  resolution: { value: new Vector2(1, 1) },\n  dashOffset: { value: 0 },\n  dashScale: { value: 1 },\n  dashSize: { value: 1 },\n  gapSize: { value: 1 },\n};\n\nShaderLib[\"foxglove.line\"] = {\n  uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.fog, (UniformsLib as any).line]),\n\n  vertexShader: /* glsl */ `\n    #include <common>\n    #include <color_pars_vertex>\n    #include <fog_pars_vertex>\n    #include <logdepthbuf_pars_vertex>\n    #include <clipping_planes_pars_vertex>\n\n    uniform float linewidth;\n    uniform vec2 resolution;\n\n    attribute vec3 instanceStart;\n    attribute vec3 instanceEnd;\n\n    attribute vec4 instanceColorStart;\n    attribute vec4 instanceColorEnd;\n\n    #ifdef WORLD_UNITS\n\n      varying vec4 worldPos;\n      varying vec3 worldStart;\n      varying vec3 worldEnd;\n\n      #ifdef USE_DASH\n\n        varying vec2 vUv;\n\n      #endif\n\n    #else\n\n      varying vec2 vUv;\n\n    #endif\n\n    #ifdef USE_DASH\n\n      uniform float dashScale;\n      attribute float instanceDistanceStart;\n      attribute float instanceDistanceEnd;\n      varying float vLineDistance;\n\n    #endif\n\n    #ifdef USE_COLOR\n\n      varying float vAlpha;\n\n    #endif\n\n    void trimSegment( const in vec4 start, inout vec4 end ) {\n\n      // trim end segment so it terminates between the camera plane and the near plane\n\n      // conservative estimate of the near plane\n      float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n      float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n      float nearEstimate = - 0.5 * b / a;\n\n      float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n      end.xyz = mix( start.xyz, end.xyz, alpha );\n\n    }\n\n    void main() {\n\n      #ifdef USE_COLOR\n\n        vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart.xyz : instanceColorEnd.xyz;\n        vAlpha = ( position.y < 0.5 ) ? instanceColorStart.w : instanceColorEnd.w;\n\n      #endif\n\n      #ifdef USE_DASH\n\n        vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n        vUv = uv;\n\n      #endif\n\n      float aspect = resolution.x / resolution.y;\n\n      // camera space\n      vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n      vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n      #ifdef WORLD_UNITS\n\n        worldStart = start.xyz;\n        worldEnd = end.xyz;\n\n      #else\n\n        vUv = uv;\n\n      #endif\n\n      // special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n      // clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n      // but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n      // perhaps there is a more elegant solution -- WestLangley\n\n      bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n      if ( perspective ) {\n\n        if ( start.z < 0.0 && end.z >= 0.0 ) {\n\n          trimSegment( start, end );\n\n        } else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n          trimSegment( end, start );\n\n        }\n\n      }\n\n      // clip space\n      vec4 clipStart = projectionMatrix * start;\n      vec4 clipEnd = projectionMatrix * end;\n\n      // ndc space\n      vec3 ndcStart = clipStart.xyz / clipStart.w;\n      vec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n      // direction\n      vec2 dir = ndcEnd.xy - ndcStart.xy;\n\n      // account for clip-space aspect ratio\n      dir.x *= aspect;\n      dir = normalize( dir );\n\n      #ifdef WORLD_UNITS\n\n        // get the offset direction as perpendicular to the view vector\n        vec3 worldDir = normalize( end.xyz - start.xyz );\n        vec3 offset;\n        if ( position.y < 0.5 ) {\n\n          offset = normalize( cross( start.xyz, worldDir ) );\n\n        } else {\n\n          offset = normalize( cross( end.xyz, worldDir ) );\n\n        }\n\n        // sign flip\n        if ( position.x < 0.0 ) offset *= - 1.0;\n\n        float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n        // don't extend the line if we're rendering dashes because we\n        // won't be rendering the endcaps\n        #ifndef USE_DASH\n\n          // extend the line bounds to encompass  endcaps\n          start.xyz += - worldDir * linewidth * 0.5;\n          end.xyz += worldDir * linewidth * 0.5;\n\n          // shift the position of the quad so it hugs the forward edge of the line\n          offset.xy -= dir * forwardOffset;\n          offset.z += 0.5;\n\n        #endif\n\n        // endcaps\n        if ( position.y > 1.0 || position.y < 0.0 ) {\n\n          offset.xy += dir * 2.0 * forwardOffset;\n\n        }\n\n        // adjust for linewidth\n        offset *= linewidth * 0.5;\n\n        // set the world position\n        worldPos = ( position.y < 0.5 ) ? start : end;\n        worldPos.xyz += offset;\n\n        // project the worldpos\n        vec4 clip = projectionMatrix * worldPos;\n\n        // shift the depth of the projected points so the line\n        // segements overlap neatly\n        vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n        clip.z = clipPose.z * clip.w;\n\n      #else\n\n        vec2 offset = vec2( dir.y, - dir.x );\n        // undo aspect ratio adjustment\n        dir.x /= aspect;\n        offset.x /= aspect;\n\n        // sign flip\n        if ( position.x < 0.0 ) offset *= - 1.0;\n\n        // endcaps\n        if ( position.y < 0.0 ) {\n\n          offset += - dir;\n\n        } else if ( position.y > 1.0 ) {\n\n          offset += dir;\n\n        }\n\n        // adjust for linewidth\n        offset *= linewidth;\n\n        // adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n        offset /= resolution.y;\n\n        // select end\n        vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n        // back to clip space\n        offset *= clip.w;\n\n        clip.xy += offset;\n\n      #endif\n\n      gl_Position = clip;\n\n      vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n      #include <logdepthbuf_vertex>\n      #include <clipping_planes_vertex>\n      #include <fog_vertex>\n\n    }\n    `,\n\n  fragmentShader: /* glsl */ `\n    uniform vec3 diffuse;\n    uniform float opacity;\n    uniform float linewidth;\n\n    #ifdef USE_DASH\n\n      uniform float dashOffset;\n      uniform float dashSize;\n      uniform float gapSize;\n\n    #endif\n\n    varying float vLineDistance;\n\n    #ifdef WORLD_UNITS\n\n      varying vec4 worldPos;\n      varying vec3 worldStart;\n      varying vec3 worldEnd;\n\n      #ifdef USE_DASH\n\n        varying vec2 vUv;\n\n      #endif\n\n    #else\n\n      varying vec2 vUv;\n\n    #endif\n\n    #ifdef USE_COLOR\n\n      varying float vAlpha;\n\n    #endif\n\n    #include <common>\n    #include <color_pars_fragment>\n    #include <fog_pars_fragment>\n    #include <logdepthbuf_pars_fragment>\n    #include <clipping_planes_pars_fragment>\n\n    vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n      float mua;\n      float mub;\n\n      vec3 p13 = p1 - p3;\n      vec3 p43 = p4 - p3;\n\n      vec3 p21 = p2 - p1;\n\n      float d1343 = dot( p13, p43 );\n      float d4321 = dot( p43, p21 );\n      float d1321 = dot( p13, p21 );\n      float d4343 = dot( p43, p43 );\n      float d2121 = dot( p21, p21 );\n\n      float denom = d2121 * d4343 - d4321 * d4321;\n\n      float numer = d1343 * d4321 - d1321 * d4343;\n\n      mua = numer / denom;\n      mua = clamp( mua, 0.0, 1.0 );\n      mub = ( d1343 + d4321 * ( mua ) ) / d4343;\n      mub = clamp( mub, 0.0, 1.0 );\n\n      return vec2( mua, mub );\n\n    }\n\n    void main() {\n\n      #include <clipping_planes_fragment>\n\n      #ifdef USE_DASH\n\n        if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n        if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n      #endif\n\n      #ifdef USE_COLOR\n\n      float alpha = vAlpha;\n\n      #else\n\n      float alpha = opacity;\n\n      #endif\n\n      #ifdef WORLD_UNITS\n\n        // Find the closest points on the view ray and the line segment\n        vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n        vec3 lineDir = worldEnd - worldStart;\n        vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n        vec3 p1 = worldStart + lineDir * params.x;\n        vec3 p2 = rayEnd * params.y;\n        vec3 delta = p1 - p2;\n        float len = length( delta );\n        float norm = len / linewidth;\n\n        #ifndef USE_DASH\n\n          #ifdef USE_ALPHA_TO_COVERAGE\n\n            float dnorm = fwidth( norm );\n            alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n          #else\n\n            if ( norm > 0.5 ) {\n\n              discard;\n\n            }\n\n          #endif\n\n        #endif\n\n      #else\n\n        #ifdef USE_ALPHA_TO_COVERAGE\n\n          // artifacts appear on some hardware if a derivative is taken within a conditional\n          float a = vUv.x;\n          float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n          float len2 = a * a + b * b;\n          float dlen = fwidth( len2 );\n\n          if ( abs( vUv.y ) > 1.0 ) {\n\n            alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n          }\n\n        #else\n\n          if ( abs( vUv.y ) > 1.0 ) {\n\n            float a = vUv.x;\n            float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n            float len2 = a * a + b * b;\n\n            if ( len2 > 1.0 ) discard;\n\n          }\n\n        #endif\n\n      #endif\n\n      vec4 diffuseColor = vec4( diffuse, alpha );\n\n      #include <logdepthbuf_fragment>\n      #include <color_fragment>\n\n      gl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n      #include <tonemapping_fragment>\n      #include <encodings_fragment>\n      #include <fog_fragment>\n      #include <premultiplied_alpha_fragment>\n\n    }\n    `,\n};\n\nexport interface LineMaterialParameters extends MaterialParameters {\n  alphaToCoverage?: boolean | undefined;\n  color?: number | undefined;\n  dashed?: boolean | undefined;\n  dashScale?: number | undefined;\n  dashSize?: number | undefined;\n  dashOffset?: number | undefined;\n  gapSize?: number | undefined;\n  linewidth?: number | undefined;\n  resolution?: Vector2 | undefined;\n  wireframe?: boolean | undefined;\n  worldUnits?: boolean | undefined;\n}\n\n/** LineMaterial that supports vertex colors with an alpha channel */\nexport class LineMaterialWithAlphaVertex extends ShaderMaterial {\n  public readonly isLineMaterial = true;\n\n  public constructor(parameters: LineMaterialParameters) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    super({\n      type: \"LineMaterial\",\n\n      uniforms: UniformsUtils.clone((ShaderLib[\"foxglove.line\"] as any).uniforms),\n\n      vertexShader: (ShaderLib[\"foxglove.line\"] as any).vertexShader,\n      fragmentShader: (ShaderLib[\"foxglove.line\"] as any).fragmentShader,\n\n      clipping: true, // required for clipping support\n    } as any);\n\n    this.setValues(parameters);\n  }\n\n  public get color() {\n    return this.uniforms.diffuse!.value;\n  }\n\n  public set color(value) {\n    this.uniforms.diffuse!.value = value;\n  }\n\n  public get worldUnits() {\n    return \"WORLD_UNITS\" in this.defines;\n  }\n\n  public set worldUnits(value) {\n    if (value) {\n      this.defines.WORLD_UNITS = \"\";\n    } else {\n      delete this.defines.WORLD_UNITS;\n    }\n  }\n\n  public get lineWidth() {\n    return this.uniforms.linewidth!.value;\n  }\n\n  public set lineWidth(value) {\n    this.linewidth = value;\n    this.uniforms.linewidth!.value = value;\n  }\n\n  public get dashed() {\n    return Boolean(\"USE_DASH\" in this.defines);\n  }\n\n  public set dashed(value) {\n    if (Boolean(value) !== Boolean(\"USE_DASH\" in this.defines)) {\n      this.needsUpdate = true;\n    }\n\n    if (value) {\n      this.defines.USE_DASH = \"\";\n    } else {\n      delete this.defines.USE_DASH;\n    }\n  }\n\n  public get dashScale() {\n    return this.uniforms.dashScale!.value;\n  }\n\n  public set dashScale(value) {\n    this.uniforms.dashScale!.value = value;\n  }\n\n  public get dashSize() {\n    return this.uniforms.dashSize!.value;\n  }\n\n  public set dashSize(value) {\n    this.uniforms.dashSize!.value = value;\n  }\n\n  public get dashOffset() {\n    return this.uniforms.dashOffset!.value;\n  }\n\n  public set dashOffset(value) {\n    this.uniforms.dashOffset!.value = value;\n  }\n\n  public get gapSize() {\n    return this.uniforms.gapSize!.value;\n  }\n\n  public set gapSize(value) {\n    this.uniforms.gapSize!.value = value;\n  }\n\n  public get resolution(): THREE.Vector2 {\n    return this.uniforms.resolution!.value;\n  }\n\n  public set resolution(value: THREE.Vector2) {\n    this.uniforms.resolution!.value.copy(value);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { LineMaterialWithAlphaVertex } from \"../../LineMaterialWithAlphaVertex\";\nimport { ColorRGBA, Marker, MarkerType } from \"../../ros\";\n\nexport type LineOptions = {\n  resolution: THREE.Vector2;\n  worldUnits?: boolean;\n};\n\nexport function markerHasTransparency(marker: Marker): boolean {\n  switch (marker.type) {\n    case MarkerType.ARROW:\n    case MarkerType.CUBE:\n    case MarkerType.SPHERE:\n    case MarkerType.CYLINDER:\n    case MarkerType.TEXT_VIEW_FACING:\n    case MarkerType.MESH_RESOURCE:\n      return marker.color.a < 1.0;\n    case MarkerType.LINE_STRIP:\n    case MarkerType.LINE_LIST:\n    case MarkerType.CUBE_LIST:\n    case MarkerType.SPHERE_LIST:\n    case MarkerType.POINTS:\n    case MarkerType.TRIANGLE_LIST:\n    default:\n      for (const color of marker.colors) {\n        if (color.a < 1.0) {\n          return true;\n        }\n      }\n      return marker.colors.length >= marker.points.length ? false : marker.color.a < 1.0;\n  }\n}\n\nexport function makeStandardMaterial(color: ColorRGBA): THREE.MeshStandardMaterial {\n  return new THREE.MeshStandardMaterial({\n    color: new THREE.Color(color.r, color.g, color.b).convertSRGBToLinear(),\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n    opacity: color.a,\n    transparent: color.a < 1,\n    depthWrite: color.a === 1,\n  });\n}\n\nexport function makeStandardVertexColorMaterial(marker: Marker): THREE.MeshStandardMaterial {\n  const transparent = markerHasTransparency(marker);\n  return new THREE.MeshStandardMaterial({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n    vertexColors: true,\n    side: THREE.DoubleSide,\n    opacity: 1,\n    transparent,\n    depthWrite: !transparent,\n  });\n}\n\nexport function makeStandardInstancedMaterial(marker: Marker): THREE.MeshStandardMaterial {\n  const transparent = markerHasTransparency(marker);\n  return new THREE.MeshStandardMaterial({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n    opacity: 1,\n    transparent,\n    depthWrite: !transparent,\n  });\n}\n\nexport function makeLinePrepassMaterial(\n  marker: Marker,\n  options: LineOptions,\n): LineMaterialWithAlphaVertex {\n  const lineWidth = marker.scale.x;\n  const transparent = markerHasTransparency(marker);\n  const material = new LineMaterialWithAlphaVertex({\n    worldUnits: options.worldUnits ?? true,\n    colorWrite: false,\n    transparent,\n    depthWrite: !transparent,\n    linewidth: lineWidth,\n    resolution: options.resolution.clone(),\n\n    stencilWrite: true,\n    stencilRef: 1,\n    stencilZPass: THREE.ReplaceStencilOp,\n  });\n  material.lineWidth = lineWidth;\n  return material;\n}\n\nexport function makeLineMaterial(\n  marker: Marker,\n  options: LineOptions,\n): LineMaterialWithAlphaVertex {\n  const lineWidth = marker.scale.x;\n  const transparent = markerHasTransparency(marker);\n  const material = new LineMaterialWithAlphaVertex({\n    worldUnits: options.worldUnits ?? true,\n    vertexColors: true,\n    linewidth: lineWidth,\n    transparent,\n    depthWrite: !transparent,\n    resolution: options.resolution.clone(),\n\n    stencilWrite: true,\n    stencilRef: 0,\n    stencilFunc: THREE.NotEqualStencilFunc,\n    stencilFail: THREE.ReplaceStencilOp,\n    stencilZPass: THREE.ReplaceStencilOp,\n  });\n  material.lineWidth = lineWidth;\n  return material;\n}\n\nexport function makeLinePickingMaterial(\n  lineWidth: number,\n  options: LineOptions,\n): THREE.ShaderMaterial {\n  return new THREE.ShaderMaterial({\n    vertexShader: THREE.ShaderLib[\"foxglove.line\"]!.vertexShader,\n    fragmentShader: /* glsl */ `\n      uniform vec4 objectId;\n      void main() {\n        gl_FragColor = objectId;\n      }\n    `,\n    clipping: true,\n    uniforms: {\n      objectId: { value: [NaN, NaN, NaN, NaN] },\n      linewidth: { value: lineWidth },\n      resolution: { value: options.resolution.clone() },\n      dashOffset: { value: 0 },\n      dashScale: { value: 1 },\n      dashSize: { value: 1 },\n      gapSize: { value: 1 },\n    },\n    defines: options.worldUnits ?? true ? { WORLD_UNITS: \"\" } : {},\n  });\n}\n\nexport function makePointsMaterial(marker: Marker): THREE.PointsMaterial {\n  const transparent = markerHasTransparency(marker);\n  return new THREE.PointsMaterial({\n    vertexColors: true,\n    size: marker.scale.x,\n    sizeAttenuation: true,\n    transparent,\n    depthWrite: !transparent,\n  });\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport {\n  makeLineMaterial,\n  makeLinePrepassMaterial,\n  makeLinePickingMaterial,\n  markerHasTransparency,\n} from \"./materials\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { LineMaterialWithAlphaVertex } from \"../../LineMaterialWithAlphaVertex\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableLineList extends RenderableMarker {\n  #geometry: LineSegmentsGeometry;\n  #linePrepass: LineSegments2;\n  #line: LineSegments2;\n  #positionBuffer = new Float32Array();\n  #colorBuffer = new Uint8Array();\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n    options: { worldUnits?: boolean } = {},\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.#geometry = new LineSegmentsGeometry();\n\n    const { worldUnits = true } = options;\n    const lineOptions = { resolution: this.renderer.input.canvasSize, worldUnits };\n\n    // We alleviate corner artifacts using a two-pass render for lines. The\n    // first pass writes to depth only, followed by a color pass with stencil\n    // operations. The source for this technique is:\n    // <https://github.com/mrdoob/three.js/issues/23680#issuecomment-1063294691>\n    // <https://gkjohnson.github.io/threejs-sandbox/fat-line-opacity/webgl_lines_fat.html>\n\n    // Depth pass 1\n    const matLinePrepass = makeLinePrepassMaterial(marker, lineOptions);\n    this.#linePrepass = new LineSegments2(this.#geometry, matLinePrepass);\n    this.#linePrepass.renderOrder = 1;\n    this.#linePrepass.userData.picking = false;\n    this.add(this.#linePrepass);\n\n    // Color pass 2\n    const matLine = makeLineMaterial(marker, lineOptions);\n    this.#line = new LineSegments2(this.#geometry, matLine);\n    this.#line.renderOrder = 2;\n    const pickingLineWidth = marker.scale.x * 1.2;\n    this.#line.userData.pickingMaterial = makeLinePickingMaterial(pickingLineWidth, lineOptions);\n    this.add(this.#line);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.#linePrepass.material.dispose();\n    this.#line.material.dispose();\n\n    const pickingMaterial = this.#line.userData.pickingMaterial as THREE.ShaderMaterial;\n    pickingMaterial.dispose();\n\n    this.#geometry.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    let pointsLength = marker.points.length;\n    if (pointsLength % 2 !== 0) {\n      pointsLength--;\n    }\n\n    const lineWidth = marker.scale.x;\n    const transparent = markerHasTransparency(marker);\n\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.#linePrepass.material.transparent = transparent;\n      this.#linePrepass.material.depthWrite = !transparent;\n      this.#linePrepass.material.needsUpdate = true;\n      this.#line.material.transparent = transparent;\n      this.#line.material.depthWrite = !transparent;\n      this.#line.material.needsUpdate = true;\n    }\n\n    const matLinePrepass = this.#linePrepass.material as LineMaterialWithAlphaVertex;\n    matLinePrepass.lineWidth = lineWidth;\n    const matLine = this.#line.material as LineMaterialWithAlphaVertex;\n    matLine.lineWidth = lineWidth;\n\n    const prevPointsLength = this.#positionBuffer.length / 3;\n    if (pointsLength > prevPointsLength) {\n      this.#geometry.dispose();\n      this.#geometry = new LineSegmentsGeometry();\n      this.#linePrepass.geometry = this.#geometry;\n      this.#line.geometry = this.#geometry;\n    }\n\n    this.#setPositions(marker, pointsLength);\n    this.#setColors(marker, pointsLength);\n\n    // These both update the same `LineSegmentsGeometry` reference, so no need to call both\n    // this.linePrepass.computeLineDistances();\n    this.#line.computeLineDistances();\n  }\n\n  #setPositions(marker: Marker, pointsLength: number): void {\n    if (3 * pointsLength > this.#positionBuffer.length) {\n      this.#positionBuffer = new Float32Array(3 * pointsLength);\n    }\n    const positions = this.#positionBuffer;\n    for (let i = 0; i < pointsLength; i++) {\n      const point = marker.points[i]!;\n      const offset = i * 3;\n      positions[offset + 0] = point.x;\n      positions[offset + 1] = point.y;\n      positions[offset + 2] = point.z;\n    }\n\n    this.#geometry.setPositions(positions);\n    this.#geometry.instanceCount = pointsLength >>> 1;\n  }\n\n  #setColors(marker: Marker, pointsLength: number): void {\n    // Converts color-per-point to a flattened typed array\n    if (4 * pointsLength > this.#colorBuffer.length) {\n      this.#colorBuffer = new Uint8Array(4 * pointsLength);\n      // [rgba, rgba]\n      const instanceColorBuffer = new THREE.InstancedInterleavedBuffer(this.#colorBuffer, 8, 1);\n      this.#geometry.setAttribute(\n        \"instanceColorStart\",\n        new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 0, true),\n      );\n      this.#geometry.setAttribute(\n        \"instanceColorEnd\",\n        new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 4, true),\n      );\n    } else {\n      this.#geometry.getAttribute(\"instanceColorStart\").needsUpdate = true;\n      this.#geometry.getAttribute(\"instanceColorEnd\").needsUpdate = true;\n    }\n\n    const colorBuffer = this.#colorBuffer;\n    this._markerColorsToLinear(marker, pointsLength, (color, i) => {\n      const offset = i * 4;\n      colorBuffer[offset + 0] = Math.floor(255 * color[0]);\n      colorBuffer[offset + 1] = Math.floor(255 * color[1]);\n      colorBuffer[offset + 2] = Math.floor(255 * color[2]);\n      colorBuffer[offset + 3] = Math.floor(255 * color[3]);\n    });\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { CameraCalibration } from \"@foxglove/schemas\";\n\nimport { PartialMessage } from \"../SceneExtension\";\nimport { normalizeHeader, normalizeTime } from \"../normalizeMessages\";\nimport {\n  CameraInfo,\n  IncomingCameraInfo,\n  Matrix3,\n  Matrix3x4,\n  RegionOfInterest,\n  Vector2,\n  Vector3,\n} from \"../ros\";\n\nconst tempVec2 = { x: 0, y: 0 };\nconst tempVec3a = { x: 0, y: 0, z: 0 };\nconst tempVec3b = { x: 0, y: 0, z: 0 };\n\nexport function projectPixel(\n  out: Vector3,\n  uv: Readonly<Vector2>,\n  cameraModel: PinholeCameraModel,\n  settings: { distance: number; planarProjectionFactor: number },\n): Vector3 {\n  cameraModel.undistortPixel(tempVec2, uv);\n\n  if (settings.planarProjectionFactor === 0) {\n    cameraModel.projectPixelTo3dRay(out, tempVec2);\n  } else if (settings.planarProjectionFactor === 1) {\n    cameraModel.projectPixelTo3dPlane(out, tempVec2);\n  } else {\n    cameraModel.projectPixelTo3dRay(tempVec3a, tempVec2);\n    cameraModel.projectPixelTo3dPlane(tempVec3b, tempVec2);\n    lerpVec3(out, tempVec3a, tempVec3b, settings.planarProjectionFactor);\n  }\n\n  multiplyScalar(out, settings.distance);\n  return out;\n}\n\nexport function cameraInfosEqual(a: CameraInfo | undefined, b: CameraInfo | undefined): boolean {\n  if (!a || !b) {\n    return a === b;\n  } else if (a === b) {\n    return true;\n  }\n\n  if (\n    !(\n      a.header.frame_id === b.header.frame_id &&\n      a.width === b.width &&\n      a.height === b.height &&\n      a.distortion_model === b.distortion_model &&\n      a.binning_x === b.binning_x &&\n      a.binning_y === b.binning_y &&\n      a.roi.x_offset === b.roi.x_offset &&\n      a.roi.y_offset === b.roi.y_offset &&\n      a.roi.height === b.roi.height &&\n      a.roi.width === b.roi.width &&\n      a.roi.do_rectify === b.roi.do_rectify &&\n      a.D.length === b.D.length\n    )\n  ) {\n    return false;\n  }\n  for (let i = 0; i < a.D.length; i++) {\n    if (a.D[i] !== b.D[i]) {\n      return false;\n    }\n  }\n  for (let i = 0; i < 9; i++) {\n    if (a.K[i] !== b.K[i]) {\n      return false;\n    }\n  }\n  for (let i = 0; i < 9; i++) {\n    if (a.R[i] !== b.R[i]) {\n      return false;\n    }\n  }\n  for (let i = 0; i < 12; i++) {\n    if (a.P[i] !== b.P[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function normalizeCameraInfo(\n  message: PartialMessage<IncomingCameraInfo> & PartialMessage<CameraCalibration>,\n): CameraInfo {\n  // Handle lowercase field names as well (ROS2 compatibility)\n  const D = message.D ?? message.d;\n  const K = message.K ?? message.k;\n  const R = message.R ?? message.r;\n  const P = message.P ?? message.p;\n\n  const Dlen = D?.length ?? 0;\n  const Klen = K?.length ?? 0;\n  const Rlen = R?.length ?? 0;\n  const Plen = P?.length ?? 0;\n\n  return {\n    header:\n      \"timestamp\" in message\n        ? { stamp: normalizeTime(message.timestamp), frame_id: message.frame_id ?? \"\" }\n        : normalizeHeader(message.header),\n    height: message.height ?? 0,\n    width: message.width ?? 0,\n    distortion_model: message.distortion_model ?? \"\",\n    D: Dlen > 0 ? (D as number[]) : [],\n    K: Klen === 9 ? (K as Matrix3) : [],\n    R: Rlen === 9 ? (R as Matrix3) : [],\n    P: Plen === 12 ? (P as Matrix3x4) : [],\n    binning_x: message.binning_x ?? 0,\n    binning_y: message.binning_y ?? 0,\n    roi: normalizeRegionOfInterest(message.roi),\n  };\n}\n\nfunction normalizeRegionOfInterest(\n  roi: PartialMessage<RegionOfInterest> | undefined,\n): RegionOfInterest {\n  if (!roi) {\n    return { x_offset: 0, y_offset: 0, height: 0, width: 0, do_rectify: false };\n  }\n  return {\n    x_offset: roi.x_offset ?? 0,\n    y_offset: roi.y_offset ?? 0,\n    height: roi.height ?? 0,\n    width: roi.width ?? 0,\n    do_rectify: roi.do_rectify ?? false,\n  };\n}\n\nfunction lerpVec3(out: Vector3, a: Readonly<Vector3>, b: Readonly<Vector3>, t: number): void {\n  out.x = a.x + (b.x - a.x) * t;\n  out.y = a.y + (b.y - a.y) * t;\n  out.z = a.z + (b.z - a.z) * t;\n}\n\nfunction multiplyScalar(vec: Vector3, scalar: number): void {\n  vec.x *= scalar;\n  vec.y *= scalar;\n  vec.z *= scalar;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport Logger from \"@foxglove/log\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { CameraCalibration } from \"@foxglove/schemas\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { RenderableLineList } from \"./markers/RenderableLineList\";\nimport { cameraInfosEqual, normalizeCameraInfo, projectPixel } from \"./projections\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { makeRgba, rgbaToCssString, stringToRgba } from \"../color\";\nimport { CAMERA_CALIBRATION_DATATYPES } from \"../foxglove\";\nimport {\n  CameraInfo,\n  CAMERA_INFO_DATATYPES as ROS_CAMERA_INFO_DATATYPES,\n  IncomingCameraInfo,\n  Marker,\n  MarkerAction,\n  MarkerType,\n  TIME_ZERO,\n  Vector3,\n} from \"../ros\";\nimport { BaseSettings, fieldLineWidth, PRECISION_DISTANCE } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nconst log = Logger.getLogger(__filename);\nvoid log;\n\nexport type LayerSettingsCameraInfo = BaseSettings & {\n  distance: number;\n  planarProjectionFactor: number;\n  width: number;\n  color: string;\n};\n\nconst DEFAULT_DISTANCE = 1;\nconst DEFAULT_PLANAR_PROJECTION_FACTOR = 0;\nconst DEFAULT_WIDTH = 0.01;\n\nconst DEFAULT_COLOR = { r: 124 / 255, g: 107 / 255, b: 1, a: 1 };\n\nconst DEFAULT_COLOR_STR = rgbaToCssString(DEFAULT_COLOR);\n\nconst CAMERA_MODEL = \"CameraModel\";\n\nconst DEFAULT_SETTINGS: LayerSettingsCameraInfo = {\n  visible: false,\n  frameLocked: true,\n  distance: DEFAULT_DISTANCE,\n  planarProjectionFactor: DEFAULT_PLANAR_PROJECTION_FACTOR,\n  width: DEFAULT_WIDTH,\n  color: DEFAULT_COLOR_STR,\n};\n\nexport type CameraInfoUserData = BaseUserData & {\n  settings: LayerSettingsCameraInfo;\n  topic: string;\n  cameraInfo: CameraInfo | undefined;\n  originalMessage: Record<string, RosValue> | undefined;\n  cameraModel: PinholeCameraModel | undefined;\n  lines: RenderableLineList | undefined;\n};\n\nexport class CameraInfoRenderable extends Renderable<CameraInfoUserData> {\n  public override dispose(): void {\n    this.userData.lines?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage ?? {};\n  }\n}\n\nexport class Cameras extends SceneExtension<CameraInfoRenderable> {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.Cameras\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: ROS_CAMERA_INFO_DATATYPES,\n        subscription: { handler: this.#handleCameraInfo },\n      },\n      {\n        type: \"schema\",\n        schemaNames: CAMERA_CALIBRATION_DATATYPES,\n        subscription: { handler: this.#handleCameraInfo },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, ROS_CAMERA_INFO_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, CAMERA_CALIBRATION_DATATYPES)\n        )\n      ) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsCameraInfo>;\n\n      // prettier-ignore\n      const fields: SettingsTreeFields = {\n        distance: { label: \"Distance\", input: \"number\", placeholder: String(DEFAULT_DISTANCE), step: 0.1, precision: PRECISION_DISTANCE, value: config.distance },\n        planarProjectionFactor: { label: \"Planar Projection Factor\", input: \"number\", placeholder: String(DEFAULT_PLANAR_PROJECTION_FACTOR), min: 0, max: 1, step: 0.1, precision: 2, value: config.planarProjectionFactor },\n        width: fieldLineWidth(\"Line Width\", config.width, DEFAULT_WIDTH),\n        color: { label: \"Color\", input: \"rgba\", value: config.color ?? DEFAULT_COLOR_STR },\n      };\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          icon: \"Camera\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler,\n          order: topic.name.toLocaleLowerCase(),\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const { cameraInfo, receiveTime, originalMessage } = renderable.userData;\n      if (cameraInfo) {\n        const settings = this.renderer.config.topics[topicName] as\n          | Partial<LayerSettingsCameraInfo>\n          | undefined;\n        this.#updateCameraInfoRenderable(\n          renderable,\n          cameraInfo,\n          originalMessage,\n          receiveTime,\n          settings,\n        );\n      }\n    }\n  };\n\n  #handleCameraInfo = (\n    messageEvent: PartialMessageEvent<IncomingCameraInfo | CameraCalibration>,\n  ): void => {\n    const topic = messageEvent.topic;\n    const cameraInfo = normalizeCameraInfo(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      const messageTime = toNanoSec(cameraInfo.header.stamp);\n      const frameId = this.renderer.normalizeFrameId(cameraInfo.header.frame_id);\n\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsCameraInfo>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n      renderable = new CameraInfoRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime,\n        frameId,\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        cameraInfo: undefined,\n        originalMessage: undefined,\n        cameraModel: undefined,\n        lines: undefined,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this.#updateCameraInfoRenderable(\n      renderable,\n      cameraInfo,\n      messageEvent.message,\n      receiveTime,\n      renderable.userData.settings,\n    );\n  };\n\n  #updateCameraInfoRenderable(\n    renderable: CameraInfoRenderable,\n    cameraInfo: CameraInfo,\n    originalMessage: Record<string, RosValue> | undefined,\n    receiveTime: bigint,\n    settings: Partial<LayerSettingsCameraInfo> | undefined,\n  ): void {\n    const prevSettings = renderable.userData.settings;\n    const newSettings = { ...DEFAULT_SETTINGS, ...settings };\n    const settingsEqual =\n      newSettings.color === prevSettings.color &&\n      newSettings.distance === prevSettings.distance &&\n      newSettings.planarProjectionFactor === prevSettings.planarProjectionFactor &&\n      newSettings.width === prevSettings.width;\n    const topic = renderable.userData.topic;\n\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(cameraInfo.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(cameraInfo.header.frame_id);\n    renderable.userData.settings = newSettings;\n\n    // If the CameraInfo message contents changed, rebuild cameraModel\n    const dataEqual = cameraInfosEqual(renderable.userData.cameraInfo, cameraInfo);\n    if (!dataEqual) {\n      // log.warn(`CameraInfo changed on topic \"${topic}\", updating rectification model`);\n      renderable.userData.cameraInfo = cameraInfo;\n      renderable.userData.originalMessage = originalMessage;\n\n      if (cameraInfo.P.length === 12) {\n        try {\n          renderable.userData.cameraModel = new PinholeCameraModel(cameraInfo);\n        } catch (errUnk) {\n          const err = errUnk as Error;\n          this.renderer.settings.errors.addToTopic(topic, CAMERA_MODEL, err.message);\n          renderable.userData.cameraModel = undefined;\n          if (renderable.userData.lines) {\n            renderable.remove(renderable.userData.lines);\n            renderable.userData.lines.dispose();\n            renderable.userData.lines = undefined;\n          }\n        }\n      } else {\n        this.renderer.settings.errors.addToTopic(\n          topic,\n          CAMERA_MODEL,\n          `P has length ${cameraInfo.P.length}, not a 3x4 matrix`,\n        );\n      }\n    }\n\n    // If the CameraInfo message contents changed or the settings changed, redraw the wireframe\n    if (\n      renderable.userData.cameraModel != undefined &&\n      (!dataEqual || !settingsEqual || !renderable.userData.lines)\n    ) {\n      this.renderer.settings.errors.removeFromTopic(topic, CAMERA_MODEL);\n\n      // Synthesize a LINE_LIST marker to instantiate or update a RenderableLineList\n      const marker = createLineListMarker(\n        cameraInfo,\n        renderable.userData.cameraModel,\n        renderable.userData.settings,\n      );\n      if (!renderable.userData.lines) {\n        renderable.userData.lines = new RenderableLineList(topic, marker, undefined, this.renderer);\n        renderable.add(renderable.userData.lines);\n      } else {\n        renderable.userData.lines.update(marker, undefined);\n      }\n    }\n  }\n}\n\nfunction vec3(): Vector3 {\n  return { x: 0, y: 0, z: 0 };\n}\n\nfunction createLineListMarker(\n  cameraInfo: CameraInfo,\n  cameraModel: PinholeCameraModel,\n  settings: LayerSettingsCameraInfo,\n  steps = 10,\n): Marker {\n  // Create the four lines from the camera origin to the four corners of the image\n  const uv = { x: 0, y: 0 };\n  const tl = projectPixel(vec3(), uv, cameraModel, settings);\n\n  uv.x = cameraInfo.width;\n  uv.y = 0;\n  const tr = projectPixel(vec3(), uv, cameraModel, settings);\n\n  uv.x = 0;\n  uv.y = cameraInfo.height;\n  const bl = projectPixel(vec3(), uv, cameraModel, settings);\n\n  uv.x = cameraInfo.width;\n  uv.y = cameraInfo.height;\n  const br = projectPixel(vec3(), uv, cameraModel, settings);\n\n  const origin = { x: 0, y: 0, z: 0 };\n  const points = [origin, tl, origin, tr, origin, br, origin, bl];\n\n  // Top-left -> top-right\n  points.push(tl);\n  horizontalLine(points, 0, cameraInfo, cameraModel, steps, settings);\n  points.push(tr);\n\n  // Bottom-left -> bottom-right\n  points.push(bl);\n  horizontalLine(points, cameraInfo.height, cameraInfo, cameraModel, steps, settings);\n  points.push(br);\n\n  // Top-left -> bottom-left\n  points.push(tl);\n  verticalLine(points, 0, cameraInfo, cameraModel, steps, settings);\n  points.push(bl);\n\n  // Top-right -> bottom-right\n  points.push(tr);\n  verticalLine(points, cameraInfo.width, cameraInfo, cameraModel, steps, settings);\n  points.push(br);\n\n  return {\n    header: cameraInfo.header,\n    ns: \"\",\n    id: 0,\n    type: MarkerType.LINE_LIST,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: settings.width, y: settings.width, z: settings.width },\n    color: stringToRgba(makeRgba(), settings.color),\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points,\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction horizontalLine(\n  output: Vector3[],\n  y: number,\n  cameraInfo: CameraInfo,\n  cameraModel: PinholeCameraModel,\n  steps: number,\n  settings: LayerSettingsCameraInfo,\n): void {\n  const uv = { x: 0, y: 0 };\n  for (let i = 1; i < steps; i++) {\n    uv.x = (i / steps) * cameraInfo.width;\n    uv.y = y;\n    const p = projectPixel(vec3(), uv, cameraModel, settings);\n    output.push(p, p);\n  }\n}\n\nfunction verticalLine(\n  output: Vector3[],\n  x: number,\n  cameraInfo: CameraInfo,\n  cameraModel: PinholeCameraModel,\n  steps: number,\n  settings: LayerSettingsCameraInfo,\n): void {\n  const uv = { x: 0, y: 0 };\n  for (let i = 1; i < steps; i++) {\n    uv.x = x;\n    uv.y = (i / steps) * cameraInfo.height;\n    const p = projectPixel(vec3(), uv, cameraModel, settings);\n    output.push(p, p);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport type { IRenderer } from \"../IRenderer\";\nimport { arrowHeadSubdivisions, arrowShaftSubdivisions, DetailLevel } from \"../lod\";\nimport { ColorRGBA } from \"../ros\";\n\nconst SHAFT_LENGTH = 0.154;\nconst SHAFT_DIAMETER = 0.02;\nconst HEAD_LENGTH = 0.046;\nconst HEAD_DIAMETER = 0.05;\n\nexport const AXIS_LENGTH = SHAFT_LENGTH + HEAD_LENGTH;\n\nconst RED_COLOR = new THREE.Color(0x9c3948).convertSRGBToLinear();\nconst GREEN_COLOR = new THREE.Color(0x88dd04).convertSRGBToLinear();\nconst BLUE_COLOR = new THREE.Color(0x2b90fb).convertSRGBToLinear();\n\nconst COLOR_WHITE = { r: 1, g: 1, b: 1, a: 1 };\n\nconst PI_2 = Math.PI / 2;\n\nconst tempMat4 = new THREE.Matrix4();\nconst tempVec = new THREE.Vector3();\n\nexport class Axis extends THREE.Object3D {\n  readonly #renderer: IRenderer;\n  #shaftMesh: THREE.InstancedMesh<THREE.BufferGeometry, THREE.MeshStandardMaterial>;\n  #headMesh: THREE.InstancedMesh<THREE.BufferGeometry, THREE.MeshStandardMaterial>;\n\n  public constructor(name: string, renderer: IRenderer) {\n    super();\n    this.name = name;\n    this.#renderer = renderer;\n\n    // Create three arrow shafts\n    const shaftGeometry = this.#renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-shaft-${this.#renderer.maxLod}`,\n      () => createShaftGeometry(this.#renderer.maxLod),\n    );\n    this.#shaftMesh = new THREE.InstancedMesh(shaftGeometry, standardMaterial(COLOR_WHITE), 3);\n    this.#shaftMesh.castShadow = true;\n    this.#shaftMesh.receiveShadow = true;\n\n    // Create three arrow heads\n    const headGeometry = this.#renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-head-${this.#renderer.maxLod}`,\n      () => createHeadGeometry(this.#renderer.maxLod),\n    );\n\n    this.#headMesh = new THREE.InstancedMesh(headGeometry, standardMaterial(COLOR_WHITE), 3);\n    this.#headMesh.castShadow = true;\n    this.#headMesh.receiveShadow = true;\n\n    Axis.#UpdateInstances(this.#shaftMesh, this.#headMesh, 0);\n\n    this.add(this.#shaftMesh);\n    this.add(this.#headMesh);\n  }\n\n  public dispose(): void {\n    this.#shaftMesh.material.dispose();\n    this.#shaftMesh.dispose();\n    this.#headMesh.material.dispose();\n    this.#headMesh.dispose();\n  }\n\n  static #UpdateInstances(\n    shaft: THREE.InstancedMesh,\n    head: THREE.InstancedMesh,\n    axisIndex: number,\n  ): void {\n    const indexX = axisIndex * 3 + 0;\n    const indexY = axisIndex * 3 + 1;\n    const indexZ = axisIndex * 3 + 2;\n\n    // Set x, y, and z axis arrow shaft directions\n    tempVec.set(SHAFT_LENGTH, SHAFT_DIAMETER, SHAFT_DIAMETER);\n    shaft.setMatrixAt(indexX, tempMat4.identity().scale(tempVec));\n    shaft.setMatrixAt(indexY, tempMat4.makeRotationZ(PI_2).scale(tempVec));\n    shaft.setMatrixAt(indexZ, tempMat4.makeRotationY(-PI_2).scale(tempVec));\n\n    // Set x, y, and z axis arrow head directions\n    tempVec.set(HEAD_LENGTH, HEAD_DIAMETER, HEAD_DIAMETER);\n    tempMat4.identity().scale(tempVec).setPosition(SHAFT_LENGTH, 0, 0);\n    head.setMatrixAt(indexX, tempMat4);\n    tempMat4.makeRotationZ(PI_2).scale(tempVec).setPosition(0, SHAFT_LENGTH, 0);\n    head.setMatrixAt(indexY, tempMat4);\n    tempMat4.makeRotationY(-PI_2).scale(tempVec).setPosition(0, 0, SHAFT_LENGTH);\n    head.setMatrixAt(indexZ, tempMat4);\n\n    // Set x, y, and z axis arrow shaft colors\n    shaft.setColorAt(indexX, RED_COLOR);\n    shaft.setColorAt(indexY, GREEN_COLOR);\n    shaft.setColorAt(indexZ, BLUE_COLOR);\n\n    // Set x, y, and z axis arrow head colors\n    head.setColorAt(indexX, RED_COLOR);\n    head.setColorAt(indexY, GREEN_COLOR);\n    head.setColorAt(indexZ, BLUE_COLOR);\n  }\n}\n\nfunction createShaftGeometry(lod: DetailLevel): THREE.CylinderGeometry {\n  const subdivs = arrowShaftSubdivisions(lod);\n  const shaftGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, subdivs, 1, false);\n  shaftGeometry.rotateZ(-PI_2);\n  shaftGeometry.translate(0.5, 0, 0);\n  shaftGeometry.computeBoundingSphere();\n  return shaftGeometry;\n}\n\nfunction createHeadGeometry(lod: DetailLevel): THREE.ConeGeometry {\n  const subdivs = arrowHeadSubdivisions(lod);\n  const headGeometry = new THREE.ConeGeometry(0.5, 1, subdivs, 1, false);\n  headGeometry.rotateZ(-PI_2);\n  headGeometry.translate(0.5, 0, 0);\n  headGeometry.computeBoundingSphere();\n  return headGeometry;\n}\nfunction standardMaterial(color: ColorRGBA): THREE.MeshStandardMaterial {\n  return new THREE.MeshStandardMaterial({\n    color: new THREE.Color(color.r, color.g, color.b).convertSRGBToLinear(),\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n    opacity: color.a,\n    transparent: color.a < 1,\n    depthWrite: color.a === 1,\n  });\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport { set } from \"lodash\";\n\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\n\nimport type { IRenderer } from \"../IRenderer\";\nimport { DEFAULT_MESH_UP_AXIS } from \"../ModelCache\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\n\nexport const DEFAULT_LABEL_SCALE_FACTOR = 1;\n\nexport class SceneSettings extends SceneExtension {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.SceneSettings\", renderer);\n\n    renderer.labelPool.scaleFactor =\n      renderer.config.scene.labelScaleFactor ?? DEFAULT_LABEL_SCALE_FACTOR;\n  }\n\n  public override dispose(): void {\n    super.dispose();\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const config = this.renderer.config;\n    const handler = this.handleSettingsAction;\n\n    const fields: SettingsTreeFields = {\n      enableStats: {\n        label: t(\"threeDee:renderStats\"),\n        input: \"boolean\",\n        value: config.scene.enableStats,\n      },\n      debugPicking: {\n        label: t(\"threeDee:debugPicking\"),\n        input: \"boolean\",\n        value: this.renderer.debugPicking,\n      },\n      backgroundColor: {\n        label: t(\"threeDee:background\"),\n        input: \"rgb\",\n        value: config.scene.backgroundColor,\n      },\n      labelScaleFactor: {\n        label: t(\"threeDee:labelScale\"),\n        help: t(\"threeDee:labelScaleHelp\"),\n        input: \"number\",\n        min: 0,\n        step: 0.1,\n        precision: 2,\n        value: config.scene.labelScaleFactor,\n        placeholder: String(DEFAULT_LABEL_SCALE_FACTOR),\n      },\n      ignoreColladaUpAxis: {\n        label: t(\"threeDee:ignoreColladaUpAxis\"),\n        help: t(\"threeDee:ignoreColladaUpAxisHelp\"),\n        input: \"boolean\",\n        value: config.scene.ignoreColladaUpAxis,\n        error:\n          (config.scene.ignoreColladaUpAxis ?? false) !==\n          this.renderer.modelCache.options.ignoreColladaUpAxis\n            ? t(\"threeDee:takeEffectAfterReboot\")\n            : undefined,\n      },\n      meshUpAxis: {\n        label: t(\"threeDee:meshUpAxis\"),\n        help: t(\"threeDee:meshUpAxisHelp\"),\n        input: \"select\",\n        value: config.scene.meshUpAxis ?? DEFAULT_MESH_UP_AXIS,\n        options: [\n          { label: t(\"threeDee:YUp\"), value: \"y_up\" },\n          { label: t(\"threeDee:ZUp\"), value: \"z_up\" },\n        ],\n        error:\n          (config.scene.meshUpAxis ?? DEFAULT_MESH_UP_AXIS) !==\n          this.renderer.modelCache.options.meshUpAxis\n            ? t(\"threeDee:takeEffectAfterReboot\")\n            : undefined,\n      },\n    };\n\n    if (process.env.NODE_ENV === \"production\") {\n      delete fields.debugPicking;\n    }\n    return [\n      {\n        path: [\"scene\"],\n        node: {\n          label: t(\"threeDee:scene\"),\n          actions: [{ type: \"action\", id: \"reset-scene\", label: t(\"threeDee:reset\") }],\n          fields,\n          defaultExpansionState: \"collapsed\",\n          handler,\n        },\n      },\n    ];\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action === \"perform-node-action\" && action.payload.id === \"reset-scene\") {\n      this.renderer.updateConfig((draft) => {\n        draft.scene = {};\n      });\n      this.updateSettingsTree();\n      return;\n    }\n\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n\n    const path = action.payload.path;\n    const category = path[0]!;\n    const value = action.payload.value;\n    if (category === \"scene\") {\n      if (path[1] === \"debugPicking\") {\n        this.renderer.debugPicking = (value as boolean | undefined) ?? false;\n        this.updateSettingsTree();\n        return;\n      }\n      // Update the configuration\n      this.renderer.updateConfig((draft) => set(draft, path, value));\n\n      if (path[1] === \"backgroundColor\") {\n        const backgroundColor = value as string | undefined;\n        this.renderer.setColorScheme(this.renderer.colorScheme, backgroundColor);\n      } else if (path[1] === \"labelScaleFactor\") {\n        const labelScaleFactor = value as number | undefined;\n        this.renderer.labelPool.setScaleFactor(labelScaleFactor ?? DEFAULT_LABEL_SCALE_FACTOR);\n      }\n    } else {\n      return;\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport * as THREE from \"three\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\n\nimport {\n  Immutable,\n  SettingsTreeAction,\n  SettingsTreeChildren,\n  SettingsTreeFields,\n} from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\nimport { Label } from \"@foxglove/three-text\";\n\nimport { Axis, AXIS_LENGTH } from \"./Axis\";\nimport { DEFAULT_LABEL_SCALE_FACTOR } from \"./SceneSettings\";\nimport { makeLinePickingMaterial } from \"./markers/materials\";\nimport type { IRenderer, RendererConfig } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { getLuminance, stringToRgb } from \"../color\";\nimport { BaseSettings, fieldSize, PRECISION_DEGREES, PRECISION_DISTANCE } from \"../settings\";\nimport { CoordinateFrame, Duration, makePose, MAX_DURATION, Transform } from \"../transforms\";\n\nexport type LayerSettingsTransform = BaseSettings & {\n  xyzOffset: Readonly<[number | undefined, number | undefined, number | undefined]>;\n  rpyOffset: Readonly<[number | undefined, number | undefined, number | undefined]>;\n};\n\nconst PICKING_LINE_SIZE = 6;\nconst PI_2 = Math.PI / 2;\n\nconst DEFAULT_EDITABLE = false;\n\nconst DEFAULT_AXIS_SCALE = 1;\nconst DEFAULT_LINE_WIDTH_PX = 2;\nconst DEFAULT_LINE_COLOR_STR = \"#ffff00\";\nconst DEFAULT_TF_LABEL_SIZE = 0.2;\n\nconst DEFAULT_SETTINGS: LayerSettingsTransform = {\n  visible: true,\n  frameLocked: true,\n  xyzOffset: [0, 0, 0],\n  rpyOffset: [0, 0, 0],\n};\n\nexport type FrameAxisUserData = BaseUserData & {\n  axis: Axis;\n  label: Label;\n  parentLine: Line2;\n};\n\nclass FrameAxisRenderable extends Renderable<FrameAxisUserData> {\n  public override dispose(): void {\n    this.renderer.labelPool.release(this.userData.label);\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    const frame = this.renderer.transformTree.frame(this.userData.frameId);\n    const parent = frame?.parent();\n    const fixed = frame?.root();\n\n    return {\n      child_frame_id: frame?.displayName() ?? \"<unknown>\",\n      parent_frame_id: parent?.displayName() ?? \"<unknown>\",\n      fixed_frame_id: fixed?.displayName() ?? \"<unknown>\",\n    };\n  }\n}\n\nconst tempVec = new THREE.Vector3();\nconst tempVecB = new THREE.Vector3();\nconst tempLower: [Duration, Transform] = [0n, Transform.Identity()];\nconst tempUpper: [Duration, Transform] = [0n, Transform.Identity()];\nconst tempQuaternion = new THREE.Quaternion();\nconst tempEuler = new THREE.Euler();\nconst tempTfPath: [string, string] = [\"transforms\", \"\"];\n\nexport class FrameAxes extends SceneExtension<FrameAxisRenderable> {\n  #lineMaterial: LineMaterial;\n  #linePickingMaterial: THREE.ShaderMaterial;\n\n  #labelForegroundColor = 1;\n  #labelBackgroundColor = new THREE.Color();\n  #lineGeometry: LineGeometry;\n  #defaultRenderableSettings: LayerSettingsTransform;\n\n  public constructor(\n    renderer: IRenderer,\n    defaultRenderableSettings: Partial<LayerSettingsTransform>,\n  ) {\n    super(\"foxglove.FrameAxes\", renderer);\n\n    const linewidth = this.renderer.config.scene.transforms?.lineWidth ?? DEFAULT_LINE_WIDTH_PX;\n    const color = stringToRgb(\n      new THREE.Color(),\n      this.renderer.config.scene.transforms?.lineColor ?? DEFAULT_LINE_COLOR_STR,\n    );\n    this.#lineMaterial = new LineMaterial({ linewidth });\n    this.#lineMaterial.color = color;\n\n    const options = { resolution: renderer.input.canvasSize, worldUnits: false };\n\n    this.#lineGeometry = this.renderer.sharedGeometry.getGeometry(\n      this.constructor.name,\n      createLineGeometry,\n    );\n\n    this.#linePickingMaterial = makeLinePickingMaterial(PICKING_LINE_SIZE, options);\n\n    renderer.on(\"transformTreeUpdated\", this.#handleTransformTreeUpdated);\n\n    this.#defaultRenderableSettings = { ...DEFAULT_SETTINGS, ...defaultRenderableSettings };\n  }\n\n  public override dispose(): void {\n    this.renderer.off(\"transformTreeUpdated\", this.#handleTransformTreeUpdated);\n    this.#lineMaterial.dispose();\n    this.#linePickingMaterial.dispose();\n    super.dispose();\n  }\n\n  public override removeAllRenderables(): void {\n    // Don't destroy frame axis renderables on clear() since `renderer.transformTree`\n    // is left untouched\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const config = this.renderer.config;\n    const configTransforms = config.transforms;\n    const handler = this.handleSettingsAction;\n    const frameCount = this.renderer.coordinateFrameList.length;\n    const children: SettingsTreeChildren = {\n      settings: {\n        label: t(\"threeDee:settings\"),\n        defaultExpansionState: \"collapsed\",\n        order: 0,\n        fields: {\n          editable: {\n            label: t(\"threeDee:editable\"),\n            input: \"boolean\",\n            value: config.scene.transforms?.editable ?? DEFAULT_EDITABLE,\n          },\n          showLabel: {\n            label: t(\"threeDee:labels\"),\n            input: \"boolean\",\n            value: config.scene.transforms?.showLabel ?? true,\n          },\n          ...((config.scene.transforms?.showLabel ?? true) && {\n            labelSize: {\n              label: t(\"threeDee:labelSize\"),\n              input: \"number\",\n              min: 0,\n              step: 0.01,\n              precision: 2,\n              placeholder: String(DEFAULT_TF_LABEL_SIZE),\n              value: config.scene.transforms?.labelSize,\n            },\n          }),\n          axisScale: fieldSize(\n            t(\"threeDee:axisScale\"),\n            config.scene.transforms?.axisScale,\n            DEFAULT_AXIS_SCALE,\n          ),\n          lineWidth: {\n            label: t(\"threeDee:lineWidth\"),\n            input: \"number\",\n            min: 0,\n            step: 0.5,\n            precision: 1,\n            value: config.scene.transforms?.lineWidth,\n            placeholder: String(DEFAULT_LINE_WIDTH_PX),\n          },\n          lineColor: {\n            label: t(\"threeDee:lineColor\"),\n            input: \"rgb\",\n            value: config.scene.transforms?.lineColor ?? DEFAULT_LINE_COLOR_STR,\n          },\n          enablePreloading: {\n            label: t(\"threeDee:enablePreloading\"),\n            input: \"boolean\",\n            value: config.scene.transforms?.enablePreloading ?? true,\n          },\n        },\n      },\n    };\n\n    let order = 1;\n    for (const { label, value: frameId } of this.renderer.coordinateFrameList) {\n      const frameKey = `frame:${frameId}`;\n      const tfConfig = this.#getRenderableSettingsWithDefaults(configTransforms[frameKey] ?? {});\n      const frame = this.renderer.transformTree.frame(frameId);\n      const fields = buildSettingsFields(frame, this.renderer.currentTime, config);\n      tempTfPath[1] = frameKey;\n      children[frameKey] = {\n        label,\n        fields,\n        visible: tfConfig.visible,\n        order: order++,\n        defaultExpansionState: \"collapsed\",\n        error: this.renderer.settings.errors.errors.errorAtPath(tempTfPath),\n      };\n    }\n\n    return [\n      {\n        path: [\"transforms\"],\n        node: {\n          label: `${t(\"threeDee:transforms\")}${frameCount > 0 ? ` (${frameCount})` : \"\"}`,\n          actions: [\n            { id: \"show-all\", type: \"action\", label: t(\"threeDee:showAll\") },\n            { id: \"hide-all\", type: \"action\", label: t(\"threeDee:hideAll\") },\n          ],\n          handler,\n          children,\n        },\n      },\n    ];\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Keep the material's `resolution` uniform in sync with the actual canvas size\n    this.#lineMaterial.resolution = this.renderer.input.canvasSize;\n\n    // Update all the transforms settings nodes each frame since they contain\n    // fields that change when currentTime changes\n    this.updateSettingsTree();\n\n    super.startFrame(currentTime, renderFrameId, fixedFrameId);\n\n    // Compute the label offset based on the axis length and label size. We want the label\n    // to float a little above the up axis arrow, proportional to the height of the label\n    const axisScale = this.renderer.config.scene.transforms?.axisScale ?? DEFAULT_AXIS_SCALE;\n    const axisLength = AXIS_LENGTH * axisScale;\n    const labelSize = this.renderer.config.scene.transforms?.labelSize ?? DEFAULT_TF_LABEL_SIZE;\n    const labelScale = this.renderer.config.scene.labelScaleFactor ?? DEFAULT_LABEL_SCALE_FACTOR;\n    const labelOffsetZ = axisLength + labelSize * labelScale * 1.5;\n\n    // Update the lines and labels between coordinate frames\n    for (const renderable of this.renderables.values()) {\n      // lines and labels are children of the renderable and won't render if the renderer isn't visible\n      // so we can skip these updates\n      if (!renderable.visible) {\n        continue;\n      }\n      const line = renderable.userData.parentLine;\n      const childFrame = this.renderer.transformTree.frame(renderable.userData.frameId);\n      const parentFrame = childFrame?.parent();\n      // NOTE: tempVecB should not be used until the label uses it below\n      const worldPosition = tempVecB;\n      renderable.getWorldPosition(worldPosition);\n      // Lines require a parent renderable because they draw a line from the parent\n      // frame origin to the child frame origin\n      line.visible = false;\n      if (parentFrame) {\n        const parentRenderable = this.renderables.get(parentFrame.id);\n        if (parentRenderable?.visible === true) {\n          const parentWorldPosition = tempVec;\n          parentRenderable.getWorldPosition(parentWorldPosition);\n          const dist = parentWorldPosition.distanceTo(worldPosition);\n          line.lookAt(parentWorldPosition);\n          line.rotateY(-PI_2);\n          line.scale.set(dist, 1, 1);\n          line.visible = true;\n        }\n      }\n\n      const label = renderable.userData.label;\n      label.visible = this.renderer.config.scene.transforms?.showLabel ?? true;\n      // Add the label offset in \"world\" coordinates (in the render frame)\n      worldPosition.z += labelOffsetZ;\n      // Transform worldPosition back to the local coordinate frame of the\n      // renderable, which the label is a child of\n      renderable.worldToLocal(worldPosition);\n      label.position.set(worldPosition.x, worldPosition.y, worldPosition.z);\n    }\n  }\n\n  public override setColorScheme(\n    colorScheme: \"dark\" | \"light\",\n    backgroundColor: THREE.Color | undefined,\n  ): void {\n    const foreground = colorScheme === \"dark\" ? 1 : 0;\n    this.#labelForegroundColor = foreground;\n    this.#labelBackgroundColor.setRGB(1 - foreground, 1 - foreground, 1 - foreground);\n    if (backgroundColor) {\n      this.#labelForegroundColor =\n        getLuminance(backgroundColor.r, backgroundColor.g, backgroundColor.b) > 0.5 ? 0 : 1;\n      this.#labelBackgroundColor.copy(backgroundColor);\n    }\n\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.label.setColor(\n        this.#labelForegroundColor,\n        this.#labelForegroundColor,\n        this.#labelForegroundColor,\n      );\n      renderable.userData.label.setBackgroundColor(\n        this.#labelBackgroundColor.r,\n        this.#labelBackgroundColor.g,\n        this.#labelBackgroundColor.b,\n      );\n    }\n  }\n\n  #setLabelSize(size: number): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.label.setLineHeight(size);\n    }\n  }\n\n  #setAxisScale(scale: number): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.axis.scale.set(scale, scale, scale);\n    }\n  }\n\n  #setLineWidth(width: number): void {\n    this.#lineMaterial.linewidth = width;\n  }\n\n  #setLineColor(color: string): void {\n    stringToRgb(this.#lineMaterial.color, color);\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    const toggleFrameVisibility = (value: boolean) => {\n      for (const renderable of this.renderables.values()) {\n        renderable.userData.settings.visible = value;\n      }\n\n      this.renderer.updateConfig((draft) => {\n        for (const frameId of this.renderables.keys()) {\n          const frameKeySanitized = frameId === \"settings\" ? \"$settings\" : `frame:${frameId}`;\n          draft.transforms[frameKeySanitized] ??= {};\n          draft.transforms[frameKeySanitized]!.visible = value;\n        }\n      });\n\n      this.updateSettingsTree();\n    };\n\n    if (action.action === \"perform-node-action\") {\n      if (action.payload.id === \"show-all\") {\n        // Show all frames\n        toggleFrameVisibility(true);\n      } else if (action.payload.id === \"hide-all\") {\n        // Hide all frames\n        toggleFrameVisibility(false);\n      }\n      return;\n    }\n\n    if (path.length !== 3) {\n      return; // Doesn't match the pattern of [\"transforms\", \"settings\" | `frame:${frameId}`, field]\n    }\n\n    if (path[1] === \"settings\") {\n      const setting = path[2]!;\n      const value = action.payload.value;\n\n      this.saveSetting([\"scene\", \"transforms\", setting], value);\n\n      if (setting === \"editable\") {\n        this.#updateFrameAxes();\n      } else if (setting === \"labelSize\") {\n        const labelSize = value as number | undefined;\n        this.#setLabelSize(labelSize ?? DEFAULT_TF_LABEL_SIZE);\n      } else if (setting === \"axisScale\") {\n        const axisScale = value as number | undefined;\n        this.#setAxisScale(axisScale ?? DEFAULT_AXIS_SCALE);\n      } else if (setting === \"lineWidth\") {\n        const lineWidth = value as number | undefined;\n        this.#setLineWidth(lineWidth ?? DEFAULT_LINE_WIDTH_PX);\n      } else if (setting === \"lineColor\") {\n        const lineColor = value as string | undefined;\n        this.#setLineColor(lineColor ?? DEFAULT_LINE_COLOR_STR);\n      }\n    } else {\n      this.saveSetting(path, action.payload.value);\n\n      // Update the renderable\n      const frameKey = path[1]!;\n      const frameId = frameKey.replace(/^frame:/, \"\");\n      const renderable = this.renderables.get(frameId);\n      if (renderable) {\n        const settings = this.renderer.config.transforms[frameKey] as\n          | Partial<LayerSettingsTransform>\n          | undefined;\n        renderable.userData.settings = this.#getRenderableSettingsWithDefaults(settings ?? {});\n\n        this.#updateFrameAxis(renderable);\n      }\n    }\n  };\n\n  #getRenderableSettingsWithDefaults(\n    partialDefinedSettings: Partial<LayerSettingsTransform>,\n  ): LayerSettingsTransform {\n    return { ...this.#defaultRenderableSettings, ...partialDefinedSettings };\n  }\n\n  #handleTransformTreeUpdated = (): void => {\n    for (const frameId of this.renderer.transformTree.frames().keys()) {\n      this.#addFrameAxis(frameId);\n    }\n    this.updateSettingsTree();\n  };\n\n  #addFrameAxis(frameId: string): void {\n    if (this.renderables.has(frameId)) {\n      return;\n    }\n\n    const config = this.renderer.config;\n    const frame = this.renderer.transformTree.frame(frameId);\n    if (!frame) {\n      throw new Error(`CoordinateFrame \"${frameId}\" was not created`);\n    }\n\n    // Text label\n    const text = frame.displayName();\n    const label = this.renderer.labelPool.acquire();\n    label.setBillboard(true);\n    label.setText(text);\n    label.setLineHeight(config.scene.transforms?.labelSize ?? DEFAULT_TF_LABEL_SIZE);\n    label.setColor(\n      this.#labelForegroundColor,\n      this.#labelForegroundColor,\n      this.#labelForegroundColor,\n    );\n    label.setBackgroundColor(\n      this.#labelBackgroundColor.r,\n      this.#labelBackgroundColor.g,\n      this.#labelBackgroundColor.b,\n    );\n\n    // Set the initial settings from default values merged with any user settings\n    const frameKey = `frame:${frameId}`;\n    const userSettings = config.transforms[frameKey] as Partial<LayerSettingsTransform> | undefined;\n    const settings = this.#getRenderableSettingsWithDefaults(userSettings ?? {});\n\n    // Parent line\n    const parentLine = new Line2(this.#lineGeometry, this.#lineMaterial);\n    parentLine.castShadow = true;\n    parentLine.receiveShadow = false;\n    parentLine.userData.pickingMaterial = this.#linePickingMaterial;\n\n    // Three arrow axis\n    const axis = new Axis(frameId, this.renderer);\n    const axisScale = config.scene.transforms?.axisScale ?? DEFAULT_AXIS_SCALE;\n    axis.scale.set(axisScale, axisScale, axisScale);\n\n    // Create a scene graph object to hold the axis, a text label, and a line to\n    // the parent frame\n    const renderable = new FrameAxisRenderable(frameId, this.renderer, {\n      receiveTime: 0n,\n      messageTime: 0n,\n      frameId,\n      pose: makePose(),\n      settingsPath: [\"transforms\", frameKey],\n      settings,\n      axis,\n      label,\n      parentLine,\n    });\n    renderable.add(axis);\n    renderable.add(label);\n    renderable.add(parentLine);\n\n    this.add(renderable);\n    this.renderables.set(frameId, renderable);\n\n    this.#updateFrameAxis(renderable);\n  }\n\n  #updateFrameAxes(): void {\n    for (const renderable of this.renderables.values()) {\n      this.#updateFrameAxis(renderable);\n    }\n  }\n\n  #updateFrameAxis(renderable: FrameAxisRenderable): void {\n    const frame = this.renderer.transformTree.getOrCreateFrame(renderable.userData.frameId);\n\n    // Check if TF editing is disabled\n    const editable = this.renderer.config.scene.transforms?.editable ?? DEFAULT_EDITABLE;\n    if (!editable) {\n      frame.offsetPosition = undefined;\n      frame.offsetEulerDegrees = undefined;\n      return;\n    }\n\n    const frameKey = `frame:${renderable.userData.frameId}`;\n    frame.offsetPosition = getOffset(this.renderer.config.transforms[frameKey]?.xyzOffset);\n    frame.offsetEulerDegrees = getOffset(this.renderer.config.transforms[frameKey]?.rpyOffset);\n  }\n}\nfunction createLineGeometry(): LineGeometry {\n  const lineGeometry = new LineGeometry();\n  lineGeometry.setPositions([0, 0, 0, 1, 0, 0]);\n  return lineGeometry;\n}\n\nfunction buildSettingsFields(\n  frame: CoordinateFrame | undefined,\n  currentTime: bigint | undefined,\n  config: Immutable<RendererConfig>,\n): SettingsTreeFields {\n  const frameKey = frame ? `frame:${frame.id}` : \"\";\n  const parentFrameId = frame?.parent()?.id;\n\n  if (parentFrameId == undefined) {\n    return { parent: { label: \"Parent\", input: \"string\", readonly: true, value: \"<root>\" } };\n  }\n\n  const historySizeValue = String(frame?.transformsSize() ?? 0);\n  let ageValue: string | undefined;\n  let xyzValue: THREE.Vector3Tuple | undefined;\n  let rpyValue: THREE.Vector3Tuple | undefined;\n\n  if (currentTime != undefined && frame) {\n    if (frame.findClosestTransforms(tempLower, tempUpper, currentTime, MAX_DURATION)) {\n      const [transformTime, transform] = tempUpper;\n      ageValue =\n        transformTime < currentTime ? formatShortDuration(currentTime - transformTime) : \"0 ns\";\n      const p = transform.position() as THREE.Vector3Tuple;\n      const q = transform.rotation() as THREE.Vector4Tuple;\n      xyzValue = [round(p[0], 3), round(p[1], 3), round(p[2], 3)];\n      tempQuaternion.set(q[0], q[1], q[2], q[3]);\n      tempEuler.setFromQuaternion(tempQuaternion, \"XYZ\");\n      rpyValue = [\n        round(THREE.MathUtils.radToDeg(tempEuler.x), 3),\n        round(THREE.MathUtils.radToDeg(tempEuler.y), 3),\n        round(THREE.MathUtils.radToDeg(tempEuler.z), 3),\n      ];\n    }\n  }\n\n  const fields: SettingsTreeFields = {\n    parent: {\n      label: \"Parent\",\n      input: \"string\",\n      readonly: true,\n      value: parentFrameId,\n    },\n    age: {\n      label: \"Age\",\n      input: \"string\",\n      readonly: true,\n      value: ageValue,\n    },\n    historySize: {\n      label: \"History Size\",\n      input: \"string\",\n      readonly: true,\n      value: historySizeValue,\n    },\n    xyz: {\n      label: \"Translation\",\n      input: \"vec3\",\n      precision: PRECISION_DISTANCE,\n      labels: [\"X\", \"Y\", \"Z\"],\n      readonly: true,\n      value: xyzValue,\n    },\n    rpy: {\n      label: \"Rotation\",\n      input: \"vec3\",\n      precision: PRECISION_DEGREES,\n      labels: [\"R\", \"P\", \"Y\"],\n      readonly: true,\n      value: rpyValue,\n    },\n  };\n\n  if (config.scene.transforms?.editable ?? DEFAULT_EDITABLE) {\n    let xyzOffsetValue = config.transforms[frameKey]?.xyzOffset as THREE.Vector3Tuple | undefined;\n    let rpyOffsetValue = config.transforms[frameKey]?.rpyOffset as THREE.Vector3Tuple | undefined;\n\n    if (xyzOffsetValue && vec3IsZero(xyzOffsetValue)) {\n      xyzOffsetValue = undefined;\n    }\n    if (rpyOffsetValue && vec3IsZero(rpyOffsetValue)) {\n      rpyOffsetValue = undefined;\n    }\n\n    fields.xyzOffset = {\n      label: \"Translation Offset\",\n      input: \"vec3\",\n      precision: PRECISION_DISTANCE,\n      step: 0.1,\n      labels: [\"X\", \"Y\", \"Z\"],\n      value: xyzOffsetValue,\n    };\n    fields.rpyOffset = {\n      label: \"Rotation Offset\",\n      input: \"vec3\",\n      precision: PRECISION_DEGREES,\n      step: 1,\n      min: -180,\n      max: 180,\n      labels: [\"R\", \"P\", \"Y\"],\n      value: rpyOffsetValue,\n    };\n  }\n\n  return fields;\n}\n\nconst MS_TENTH_NS = BigInt(1e5);\nconst MS_NS = BigInt(1e6);\nconst SEC_NS = BigInt(1e9);\nconst MIN_NS = BigInt(6e10);\nconst HOUR_NS = BigInt(3.6e12);\n\nfunction formatShortDuration(duration: Duration): string {\n  const absDuration = abs(duration);\n  if (absDuration < MS_TENTH_NS) {\n    return `${duration} ns`;\n  } else if (absDuration < SEC_NS) {\n    return `${Number(duration / MS_NS).toFixed(1)} ms`;\n  } else if (absDuration < MIN_NS) {\n    return `${Number(duration / SEC_NS).toFixed(1)} s`;\n  } else if (absDuration < HOUR_NS) {\n    return `${Number(duration / MIN_NS).toFixed(1)} min`;\n  } else {\n    return `${Number(duration / HOUR_NS).toFixed(1)} hr`;\n  }\n}\n\nfunction abs(x: bigint): bigint {\n  return x < 0n ? -x : x;\n}\n\nfunction round(x: number, precision: number): number {\n  return Number(x.toFixed(precision));\n}\n\nfunction vec3IsZero(v: THREE.Vector3Tuple, eps = 1e-6): boolean {\n  return Math.abs(v[0]) < eps && Math.abs(v[1]) < eps && Math.abs(v[2]) < eps;\n}\n\nfunction getOffset(\n  maybeOffset: Readonly<[number | undefined, number | undefined, number | undefined]> | undefined,\n): THREE.Vector3Tuple | undefined {\n  if (!maybeOffset) {\n    return undefined;\n  }\n  const [x = 0, y = 0, z = 0] = maybeOffset;\n  if (x === 0 && y === 0 && z === 0) {\n    return undefined;\n  }\n  return [x, y, z];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport { maxBy } from \"lodash\";\n\nimport Logger from \"@foxglove/log\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\n\nimport { RenderableLineList } from \"./markers/RenderableLineList\";\nimport type { IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { stringToRgba } from \"../color\";\nimport { vec3TupleApproxEquals } from \"../math\";\nimport { Marker, MarkerAction, MarkerType, TIME_ZERO, Vector3 } from \"../ros\";\nimport { CustomLayerSettings, PRECISION_DEGREES, PRECISION_DISTANCE } from \"../settings\";\nimport { makePose, xyzrpyToPose } from \"../transforms\";\n\nconst log = Logger.getLogger(__filename);\n\nexport type LayerSettingsGrid = CustomLayerSettings & {\n  layerId: \"foxglove.Grid\";\n  frameId: string | undefined;\n  size: number;\n  divisions: number;\n  lineWidth: number;\n  color: string;\n  position: [number, number, number];\n  rotation: [number, number, number];\n};\n\nconst LAYER_ID = \"foxglove.Grid\";\nconst DEFAULT_SIZE = 10;\nconst DEFAULT_DIVISIONS = 10;\nconst DEFAULT_LINE_WIDTH = 1;\nconst DEFAULT_COLOR = \"#248eff\";\nconst MAX_DIVISIONS = 4096; // The JS heap size is a limiting factor\nconst LINE_OPTIONS = { worldUnits: false };\n\nconst DEFAULT_SETTINGS: LayerSettingsGrid = {\n  visible: true,\n  frameLocked: true,\n  label: \"Grid\",\n  instanceId: \"invalid\",\n  layerId: LAYER_ID,\n  frameId: undefined,\n  size: DEFAULT_SIZE,\n  divisions: DEFAULT_DIVISIONS,\n  lineWidth: DEFAULT_LINE_WIDTH,\n  color: DEFAULT_COLOR,\n  position: [0, 0, 0],\n  rotation: [0, 0, 0],\n};\n\nexport type GridUserData = BaseUserData & {\n  settings: LayerSettingsGrid;\n  lineList: RenderableLineList;\n};\n\nexport class GridRenderable extends Renderable<GridUserData> {\n  public override dispose(): void {\n    this.userData.lineList.dispose();\n    super.dispose();\n  }\n}\n\nexport class Grids extends SceneExtension<GridRenderable> {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.Grids\", renderer);\n\n    renderer.addCustomLayerAction({\n      layerId: LAYER_ID,\n      label: t(\"threeDee:addGrid\"),\n      icon: \"Grid\",\n      handler: this.#handleAddGrid,\n    });\n\n    renderer.on(\"transformTreeUpdated\", this.#handleTransformTreeUpdated);\n\n    // Load existing grid layers from the config\n    for (const [instanceId, entry] of Object.entries(renderer.config.layers)) {\n      if (entry?.layerId === LAYER_ID) {\n        this.#updateGrid(instanceId, entry as Partial<LayerSettingsGrid>);\n      }\n    }\n  }\n\n  public override dispose(): void {\n    this.renderer.off(\"transformTreeUpdated\", this.#handleTransformTreeUpdated);\n    super.dispose();\n  }\n\n  public override removeAllRenderables(): void {\n    // no-op\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const [instanceId, layerConfig] of Object.entries(this.renderer.config.layers)) {\n      if (layerConfig?.layerId !== LAYER_ID) {\n        continue;\n      }\n\n      const config = layerConfig as Partial<LayerSettingsGrid>;\n      const frameIdOptions = [\n        { label: \"<Display frame>\", value: undefined },\n        ...this.renderer.coordinateFrameList,\n      ];\n\n      // prettier-ignore\n      const fields: SettingsTreeFields = {\n        frameId: { label: t(\"threeDee:frame\"), input: \"select\", options: frameIdOptions, value: config.frameId }, // options is extended in `settings.ts:buildTopicNode()`\n        size: { label: t(\"threeDee:size\"), input: \"number\", min: 0, step: 0.5, precision: PRECISION_DISTANCE, value: config.size, placeholder: String(DEFAULT_SIZE) },\n        divisions: { label: t(\"threeDee:divisions\"), input: \"number\", min: 1, max: MAX_DIVISIONS, step: 1, precision: 0, value: config.divisions, placeholder: String(DEFAULT_DIVISIONS) },\n        lineWidth: { label: t(\"threeDee:lineWidth\"), input: \"number\", min: 0, step: 0.5, precision: 1, value: config.lineWidth, placeholder: String(DEFAULT_LINE_WIDTH) },\n        color: { label: t(\"threeDee:color\"), input: \"rgba\", value: config.color ?? DEFAULT_COLOR },\n        position: { label: t(\"threeDee:position\"), input: \"vec3\", labels: [\"X\", \"Y\", \"Z\"], precision: PRECISION_DISTANCE, value: config.position ?? [0, 0, 0] },\n        rotation: { label: t(\"threeDee:rotation\"), input: \"vec3\", labels: [\"R\", \"P\", \"Y\"], precision: PRECISION_DEGREES, value: config.rotation ?? [0, 0, 0] },\n      };\n\n      entries.push({\n        path: [\"layers\", instanceId],\n        node: {\n          label: config.label ?? t(\"threeDee:grid\"),\n          icon: \"Grid\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          actions: [{ type: \"action\", id: \"delete\", label: t(\"threeDee:delete\") }],\n          order: layerConfig.order,\n          handler,\n        },\n      });\n\n      // Create renderables for new grid layers\n      if (!this.renderables.has(instanceId)) {\n        this.#updateGrid(instanceId, config);\n      }\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Set the `frameId` to use for `updatePose()`\n    for (const renderable of this.renderables.values()) {\n      renderable.userData.frameId = renderable.userData.settings.frameId ?? renderFrameId;\n    }\n    super.startFrame(currentTime, renderFrameId, fixedFrameId);\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    // Handle menu actions (delete)\n    if (action.action === \"perform-node-action\") {\n      if (path.length === 2 && action.payload.id === \"delete\") {\n        const instanceId = path[1]!;\n\n        // Remove this instance from the config\n        this.renderer.updateConfig((draft) => {\n          delete draft.layers[instanceId];\n        });\n\n        // Remove the renderable\n        this.#updateGrid(instanceId, undefined);\n\n        // Update the settings tree\n        this.updateSettingsTree();\n        this.renderer.updateCustomLayersCount();\n      }\n      return;\n    }\n\n    if (path.length !== 3) {\n      return; // Doesn't match the pattern of [\"layers\", instanceId, field]\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    const instanceId = path[1]!;\n    const settings = this.renderer.config.layers[instanceId] as\n      | Partial<LayerSettingsGrid>\n      | undefined;\n    this.#updateGrid(instanceId, settings);\n  };\n\n  #handleAddGrid = (instanceId: string): void => {\n    log.info(`Creating ${LAYER_ID} layer ${instanceId}`);\n\n    const config: LayerSettingsGrid = { ...DEFAULT_SETTINGS, instanceId };\n\n    // Add this instance to the config\n    this.renderer.updateConfig((draft) => {\n      const maxOrderLayer = maxBy(Object.values(draft.layers), (layer) => layer?.order);\n      const order = 1 + (maxOrderLayer?.order ?? 0);\n      draft.layers[instanceId] = { ...config, order };\n    });\n\n    // Add a renderable\n    this.#updateGrid(instanceId, config);\n\n    // Update the settings tree\n    this.updateSettingsTree();\n  };\n\n  #handleTransformTreeUpdated = (): void => {\n    this.updateSettingsTree();\n  };\n\n  #updateGrid(instanceId: string, settings: Partial<LayerSettingsGrid> | undefined): void {\n    let renderable = this.renderables.get(instanceId);\n\n    // Handle deletes\n    if (settings == undefined) {\n      if (renderable != undefined) {\n        renderable.userData.lineList.dispose();\n        this.remove(renderable);\n        this.renderables.delete(instanceId);\n      }\n      return;\n    }\n\n    const newSettings = { ...DEFAULT_SETTINGS, ...settings };\n    if (!renderable) {\n      renderable = this.#createRenderable(instanceId, newSettings);\n      renderable.userData.pose = xyzrpyToPose(newSettings.position, newSettings.rotation);\n    }\n\n    const prevSettings = renderable.userData.settings;\n    const markersEqual =\n      newSettings.size === prevSettings.size &&\n      newSettings.divisions === prevSettings.divisions &&\n      newSettings.frameId === prevSettings.frameId &&\n      newSettings.lineWidth === prevSettings.lineWidth &&\n      newSettings.color === prevSettings.color;\n\n    renderable.userData.settings = newSettings;\n\n    // If the marker settings changed, generate a new marker and update the renderable\n    if (!markersEqual) {\n      const marker = createMarker(newSettings);\n      renderable.userData.lineList.update(marker, undefined);\n    }\n\n    // Update the pose if it changed\n    if (\n      !vec3TupleApproxEquals(newSettings.position, prevSettings.position) ||\n      !vec3TupleApproxEquals(newSettings.rotation, prevSettings.rotation)\n    ) {\n      renderable.userData.pose = xyzrpyToPose(newSettings.position, newSettings.rotation);\n    }\n  }\n\n  #createRenderable(instanceId: string, settings: LayerSettingsGrid): GridRenderable {\n    const marker = createMarker(settings);\n    const lineListId = `${instanceId}:LINE_LIST`;\n    const lineList = new RenderableLineList(\n      lineListId,\n      marker,\n      undefined,\n      this.renderer,\n      LINE_OPTIONS,\n    );\n    const renderable = new GridRenderable(instanceId, this.renderer, {\n      receiveTime: 0n,\n      messageTime: 0n,\n      frameId: \"\", // This will be updated in `startFrame()`\n      pose: makePose(),\n      settingsPath: [\"layers\", instanceId],\n      settings,\n      lineList,\n    });\n    renderable.add(lineList);\n\n    this.add(renderable);\n    this.renderables.set(instanceId, renderable);\n    return renderable;\n  }\n}\n\nfunction createMarker(settings: LayerSettingsGrid): Marker {\n  const { size, divisions, color: colorStr } = settings;\n  const step = size / divisions;\n  const halfSize = size / 2;\n  const points: Vector3[] = [];\n  // Create a grid of line segments centered around <0, 0>\n  for (let i = 0; i <= divisions; i++) {\n    const x = -halfSize + i * step;\n    points.push({ x, y: -halfSize, z: 0 });\n    points.push({ x, y: halfSize, z: 0 });\n    points.push({ x: -halfSize, y: x, z: 0 });\n    points.push({ x: halfSize, y: x, z: 0 });\n  }\n\n  const color = { r: 1, g: 1, b: 1, a: 1 };\n  stringToRgba(color, colorStr);\n\n  return {\n    header: {\n      frame_id: \"\", // unused, settings.frameId is used instead\n      stamp: TIME_ZERO,\n    },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.LINE_LIST,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: settings.lineWidth, y: 1, z: 1 },\n    color,\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points,\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as Comlink from \"comlink\";\n\nimport { RawImage } from \"@foxglove/schemas\";\n\nimport type { RawImageOptions } from \"./decodeImage\";\nimport { Image as RosImage } from \"../../ros\";\n\n/**\n * Provides a worker that can process RawImages on a background thread.\n *\n * The input image data must be **copied** to the worker, because image messages may be used\n * concurrently by other panels and features of the app. However, the resulting decoded data is\n * [transferred](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Transferable_objects)\n * back to the main thread.\n */\nexport class WorkerImageDecoder {\n  #worker: Worker;\n  #remote: Comlink.Remote<typeof import(\"./WorkerImageDecoder.worker\")[\"service\"]>;\n\n  public constructor() {\n    this.#worker = new Worker(\n      // foxglove-depcheck-used: babel-plugin-transform-import-meta\n      new URL(\"./WorkerImageDecoder.worker\", import.meta.url),\n    );\n    this.#remote = Comlink.wrap(this.#worker);\n  }\n\n  /**\n   * Copies `image` to the worker, and transfers the decoded result back to the main thread.\n   */\n  public async decode(image: RosImage | RawImage, options: RawImageOptions): Promise<ImageData> {\n    return await this.#remote.decode(image, options);\n  }\n\n  public terminate(): void {\n    this.#worker.terminate();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport {\n  decodeBGR8,\n  decodeBGRA8,\n  decodeBayerBGGR8,\n  decodeBayerGBRG8,\n  decodeBayerGRBG8,\n  decodeBayerRGGB8,\n  decodeFloat1c,\n  decodeMono16,\n  decodeMono8,\n  decodeRGB8,\n  decodeRGBA8,\n  decodeYUV,\n  decodeYUYV,\n} from \"@foxglove/den/image\";\nimport { RawImage } from \"@foxglove/schemas\";\n\nimport { CompressedImageTypes } from \"./ImageTypes\";\nimport { Image as RosImage } from \"../../ros\";\n\nexport async function decodeCompressedImageToBitmap(\n  image: CompressedImageTypes,\n  resizeWidth?: number,\n): Promise<ImageBitmap> {\n  const bitmapData = new Blob([image.data], { type: `image/${image.format}` });\n  return await createImageBitmap(bitmapData, { resizeWidth });\n}\n\nexport type RawImageOptions = {\n  minValue?: number;\n  maxValue?: number;\n};\n\nexport function decodeRawImage(\n  image: RosImage | RawImage,\n  options: RawImageOptions,\n  output: Uint8ClampedArray,\n): void {\n  const { encoding, width, height } = image;\n  const is_bigendian = \"is_bigendian\" in image ? image.is_bigendian : false;\n  const rawData = image.data as Uint8Array;\n  switch (encoding) {\n    case \"yuv422\":\n    case \"uyuv\":\n      decodeYUV(image.data as Int8Array, width, height, output);\n      break;\n    case \"yuyv\":\n      decodeYUYV(image.data as Int8Array, width, height, output);\n      break;\n    case \"rgb8\":\n      decodeRGB8(rawData, width, height, output);\n      break;\n    case \"rgba8\":\n      decodeRGBA8(rawData, width, height, output);\n      break;\n    case \"bgra8\":\n      decodeBGRA8(rawData, width, height, output);\n      break;\n    case \"bgr8\":\n    case \"8UC3\":\n      decodeBGR8(rawData, width, height, output);\n      break;\n    case \"32FC1\":\n      decodeFloat1c(rawData, width, height, is_bigendian, output);\n      break;\n    case \"bayer_rggb8\":\n      decodeBayerRGGB8(rawData, width, height, output);\n      break;\n    case \"bayer_bggr8\":\n      decodeBayerBGGR8(rawData, width, height, output);\n      break;\n    case \"bayer_gbrg8\":\n      decodeBayerGBRG8(rawData, width, height, output);\n      break;\n    case \"bayer_grbg8\":\n      decodeBayerGRBG8(rawData, width, height, output);\n      break;\n    case \"mono8\":\n    case \"8UC1\":\n      decodeMono8(rawData, width, height, output);\n      break;\n    case \"mono16\":\n    case \"16UC1\":\n      decodeMono16(rawData, width, height, is_bigendian, output, options);\n      break;\n    default:\n      throw new Error(`Unsupported encoding ${encoding}`);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { assert } from \"ts-essentials\";\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { IRenderer } from \"@foxglove/studio-base/panels/ThreeDeeRender/IRenderer\";\nimport { BaseUserData, Renderable } from \"@foxglove/studio-base/panels/ThreeDeeRender/Renderable\";\nimport { stringToRgba } from \"@foxglove/studio-base/panels/ThreeDeeRender/color\";\nimport { WorkerImageDecoder } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/Images/WorkerImageDecoder\";\nimport { projectPixel } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/projections\";\nimport { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { AnyImage } from \"./ImageTypes\";\nimport { RawImageOptions, decodeCompressedImageToBitmap } from \"./decodeImage\";\nimport { CameraInfo } from \"../../ros\";\n\nexport interface ImageRenderableSettings {\n  visible: boolean;\n  frameLocked?: boolean;\n  cameraInfoTopic: string | undefined;\n  distance: number;\n  planarProjectionFactor: number;\n  color: string;\n  minValue?: number;\n  maxValue?: number;\n}\n\nconst CREATE_BITMAP_ERR_KEY = \"CreateBitmap\";\nconst IMAGE_TOPIC_PATH = [\"imageMode\", \"imageTopic\"];\n\nconst DEFAULT_DISTANCE = 1;\nconst DEFAULT_PLANAR_PROJECTION_FACTOR = 0;\nexport const IMAGE_RENDERABLE_DEFAULT_SETTINGS: ImageRenderableSettings = {\n  visible: false,\n  frameLocked: true,\n  cameraInfoTopic: undefined,\n  distance: DEFAULT_DISTANCE,\n  planarProjectionFactor: DEFAULT_PLANAR_PROJECTION_FACTOR,\n  color: \"#ffffff\",\n};\nexport type ImageUserData = BaseUserData & {\n  topic: string;\n  settings: ImageRenderableSettings;\n  cameraInfo: CameraInfo | undefined;\n  cameraModel: PinholeCameraModel | undefined;\n  image: AnyImage | undefined;\n  texture: THREE.Texture | undefined;\n  material: THREE.MeshBasicMaterial | undefined;\n  geometry: THREE.PlaneGeometry | undefined;\n  mesh: THREE.Mesh | undefined;\n};\n\nexport class ImageRenderable extends Renderable<ImageUserData> {\n  // Make sure that everything is build the first time we render\n  // set when camera info or image changes\n  #geometryNeedsUpdate = true;\n  // set when geometry or material reference changes\n  #meshNeedsUpdate = true;\n  // set when image changes\n  #textureNeedsUpdate = true;\n  // set when material or texture changes\n  #materialNeedsUpdate = true;\n\n  #renderBehindScene: boolean = false;\n\n  #isUpdating = false;\n\n  #decodedImage?: ImageBitmap | ImageData;\n  #decoder?: WorkerImageDecoder;\n  #receivedImageSequenceNumber = 0;\n  #displayedImageSequenceNumber = 0;\n  #rawImageOptions: RawImageOptions;\n\n  #disposed = false;\n\n  public constructor(topicName: string, renderer: IRenderer, userData: ImageUserData) {\n    super(topicName, renderer, userData);\n    this.#rawImageOptions = {\n      minValue: userData.settings.minValue,\n      maxValue: userData.settings.maxValue,\n    };\n  }\n\n  public override dispose(): void {\n    this.#disposed = true;\n    this.userData.texture?.dispose();\n    this.userData.material?.dispose();\n    this.userData.geometry?.dispose();\n    this.#decoder?.terminate();\n    super.dispose();\n  }\n\n  public updateHeaderInfo(): void {\n    assert(this.userData.image, \"updateHeaderInfo called without image\");\n\n    // If there is camera info, the frameId comes from the camera info since the user may have\n    // selected camera info with a different frame than our image frame.\n    //\n    // If there is no camera info, we fall back to the image's frame\n    const image = this.userData.image;\n    const rawFrameId =\n      this.userData.cameraInfo?.header.frame_id ??\n      (\"header\" in image ? image.header.frame_id : image.frame_id);\n    this.userData.frameId =\n      typeof rawFrameId === \"string\" ? this.renderer.normalizeFrameId(rawFrameId) : rawFrameId;\n    this.userData.messageTime = toNanoSec(\"header\" in image ? image.header.stamp : image.timestamp);\n  }\n\n  public override details(): Record<string, RosValue> {\n    return { image: this.userData.image, camera_info: this.userData.cameraInfo };\n  }\n\n  public setRenderBehindScene(): void {\n    this.#renderBehindScene = true;\n    this.#materialNeedsUpdate = true;\n    this.#meshNeedsUpdate = true;\n  }\n\n  // Renderable should only need to care about the model\n  public setCameraModel = (cameraModel: PinholeCameraModel): void => {\n    this.#geometryNeedsUpdate ||= this.userData.cameraModel !== cameraModel;\n    this.userData.cameraModel = cameraModel;\n  };\n\n  public setSettings(newSettings: ImageRenderableSettings): void {\n    const prevSettings = this.userData.settings;\n    if (prevSettings.cameraInfoTopic !== newSettings.cameraInfoTopic) {\n      // clear mesh since it is no longer showing userData accurately\n      if (this.userData.mesh != undefined) {\n        this.remove(this.userData.mesh);\n      }\n      this.userData.mesh = undefined;\n      this.#geometryNeedsUpdate = true;\n    }\n    if (\n      prevSettings.distance !== newSettings.distance ||\n      newSettings.planarProjectionFactor !== prevSettings.planarProjectionFactor\n    ) {\n      this.#geometryNeedsUpdate = true;\n    }\n\n    if (newSettings.color !== prevSettings.color) {\n      this.#materialNeedsUpdate = true;\n    }\n\n    if (\n      prevSettings.minValue !== newSettings.minValue ||\n      prevSettings.maxValue !== newSettings.maxValue\n    ) {\n      this.#rawImageOptions.minValue = newSettings.minValue;\n      this.#rawImageOptions.maxValue = newSettings.maxValue;\n      // Decode the current image again, which takes into account the new options\n      const image = this.userData.image;\n      if (image) {\n        this.setImage(image);\n      }\n    }\n\n    this.userData.settings = newSettings;\n  }\n\n  public setImage(\n    image: AnyImage,\n    resizeWidth?: number,\n    onDecoded?: (result: { width: number; height: number }) => void,\n  ): void {\n    this.userData.image = image;\n\n    const seq = ++this.#receivedImageSequenceNumber;\n    const decodePromise =\n      \"format\" in image\n        ? decodeCompressedImageToBitmap(image, resizeWidth)\n        : (this.#decoder ??= new WorkerImageDecoder()).decode(image, this.#rawImageOptions);\n    decodePromise\n      .then((result) => {\n        if (this.#disposed) {\n          return;\n        }\n        // prevent displaying an image older than the one currently displayed\n        if (this.#displayedImageSequenceNumber > seq) {\n          return;\n        }\n        this.#displayedImageSequenceNumber = seq;\n        this.#decodedImage = result;\n        this.#textureNeedsUpdate = true;\n        this.update();\n\n        onDecoded?.(result);\n        this.renderer.settings.errors.remove(IMAGE_TOPIC_PATH, CREATE_BITMAP_ERR_KEY);\n        this.renderer.settings.errors.removeFromTopic(this.userData.topic, CREATE_BITMAP_ERR_KEY);\n        this.renderer.queueAnimationFrame();\n      })\n      .catch((err) => {\n        if (this.#disposed) {\n          return;\n        }\n        this.renderer.settings.errors.add(\n          IMAGE_TOPIC_PATH,\n          CREATE_BITMAP_ERR_KEY,\n          `Error creating bitmap: ${err.message}`,\n        );\n        this.renderer.settings.errors.addToTopic(\n          this.userData.topic,\n          CREATE_BITMAP_ERR_KEY,\n          `Error creating bitmap: ${err.message}`,\n        );\n      });\n  }\n\n  public update(): void {\n    if (this.#isUpdating) {\n      return;\n    }\n    this.#isUpdating = true;\n\n    if (this.#textureNeedsUpdate && this.#decodedImage) {\n      this.#updateTexture();\n      this.#textureNeedsUpdate = false;\n    }\n\n    if (this.userData.image) {\n      this.updateHeaderInfo();\n    }\n\n    if (this.#geometryNeedsUpdate && this.userData.cameraModel) {\n      this.#rebuildGeometry();\n      this.#geometryNeedsUpdate = false;\n    }\n\n    if (this.#materialNeedsUpdate) {\n      this.#updateMaterial();\n      this.#materialNeedsUpdate = false;\n    }\n\n    if (\n      this.#meshNeedsUpdate &&\n      this.userData.texture &&\n      this.userData.geometry &&\n      this.userData.material\n    ) {\n      this.#updateMesh();\n      this.#meshNeedsUpdate = false;\n    }\n    this.#isUpdating = false;\n  }\n\n  #rebuildGeometry() {\n    assert(this.userData.cameraModel, \"Camera model must be set before geometry can be updated\");\n    // Dispose of the current geometry if the settings have changed\n    this.userData.geometry?.dispose();\n    this.userData.geometry = undefined;\n    const geometry = createGeometry(this.userData.cameraModel, this.userData.settings);\n    this.userData.geometry = geometry;\n    this.#meshNeedsUpdate = true;\n  }\n\n  #updateTexture(): void {\n    assert(\n      this.#decodedImage,\n      \"Decoded image must be set before texture can be updated or created\",\n    );\n    const decodedImage = this.#decodedImage;\n    // Create or update the bitmap texture\n    if (decodedImage instanceof ImageBitmap) {\n      const canvasTexture = this.userData.texture;\n      if (\n        canvasTexture == undefined ||\n        // instanceof check allows us to switch from a raw image (DataTexture) to a compressed image (CanvasTexture)\n        !(canvasTexture instanceof THREE.CanvasTexture) ||\n        !bitmapDimensionsEqual(decodedImage, canvasTexture.image as ImageBitmap | undefined)\n      ) {\n        if (canvasTexture?.image instanceof ImageBitmap) {\n          canvasTexture.image.close();\n        }\n        canvasTexture?.dispose();\n        this.userData.texture = createCanvasTexture(decodedImage);\n      } else {\n        canvasTexture.image = decodedImage;\n        canvasTexture.needsUpdate = true;\n      }\n    } else {\n      let dataTexture = this.userData.texture;\n      if (\n        dataTexture == undefined ||\n        // instanceof check allows us to switch from a compressed image (CanvasTexture) to a raw image (DataTexture)\n        !(dataTexture instanceof THREE.DataTexture) ||\n        dataTexture.image.width !== decodedImage.width ||\n        dataTexture.image.height !== decodedImage.height\n      ) {\n        dataTexture?.dispose();\n        dataTexture = createDataTexture(decodedImage);\n        this.userData.texture = dataTexture;\n      } else {\n        dataTexture.image = decodedImage;\n        dataTexture.needsUpdate = true;\n      }\n    }\n    this.#materialNeedsUpdate = true;\n  }\n\n  #updateMaterial(): void {\n    if (!this.userData.material) {\n      this.#initMaterial();\n      this.#meshNeedsUpdate = true;\n    }\n    const material = this.userData.material!;\n\n    const texture = this.userData.texture;\n    if (texture) {\n      material.map = texture;\n    }\n\n    tempColor = stringToRgba(tempColor, this.userData.settings.color);\n    const transparent = tempColor.a < 1;\n    const color = new THREE.Color(tempColor.r, tempColor.g, tempColor.b);\n    material.color.set(color);\n    material.opacity = tempColor.a;\n    material.transparent = transparent;\n    material.depthWrite = !transparent;\n\n    if (this.#renderBehindScene) {\n      material.depthWrite = false;\n      material.depthTest = false;\n    } else {\n      material.depthTest = true;\n    }\n\n    material.needsUpdate = true;\n  }\n\n  #initMaterial(): void {\n    stringToRgba(tempColor, this.userData.settings.color);\n    const transparent = tempColor.a < 1;\n    const color = new THREE.Color(tempColor.r, tempColor.g, tempColor.b);\n    this.userData.material = new THREE.MeshBasicMaterial({\n      name: `${this.userData.topic}:Material`,\n      color,\n      side: THREE.DoubleSide,\n      opacity: tempColor.a,\n      transparent,\n      depthWrite: !transparent,\n    });\n  }\n\n  #updateMesh(): void {\n    assert(this.userData.geometry, \"Geometry must be set before mesh can be updated or created\");\n    assert(this.userData.material, \"Material must be set before mesh can be updated or created\");\n    if (!this.userData.mesh) {\n      this.userData.mesh = new THREE.Mesh(this.userData.geometry, this.userData.material);\n      this.add(this.userData.mesh);\n    } else {\n      this.userData.mesh.geometry = this.userData.geometry;\n      this.userData.mesh.material = this.userData.material;\n    }\n\n    if (!this.#renderBehindScene) {\n      this.userData.mesh.renderOrder = 0;\n      return;\n    }\n\n    this.userData.mesh.renderOrder = -1 * Number.MAX_SAFE_INTEGER;\n  }\n}\n\nlet tempColor = { r: 0, g: 0, b: 0, a: 0 };\n\nfunction createCanvasTexture(bitmap: ImageBitmap): THREE.CanvasTexture {\n  const texture = new THREE.CanvasTexture(\n    bitmap,\n    THREE.UVMapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.NearestFilter,\n    THREE.LinearFilter,\n    THREE.RGBAFormat,\n    THREE.UnsignedByteType,\n  );\n  texture.generateMipmaps = false;\n  texture.encoding = THREE.sRGBEncoding;\n  return texture;\n}\n\nfunction createDataTexture(imageData: ImageData): THREE.DataTexture {\n  const dataTexture = new THREE.DataTexture(\n    imageData.data,\n    imageData.width,\n    imageData.height,\n    THREE.RGBAFormat,\n    THREE.UnsignedByteType,\n    THREE.UVMapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.NearestFilter,\n    THREE.LinearFilter,\n    1,\n    THREE.sRGBEncoding,\n  );\n  dataTexture.needsUpdate = true; // ensure initial image data is displayed\n  return dataTexture;\n}\n\nfunction createGeometry(\n  cameraModel: PinholeCameraModel,\n  settings: ImageRenderableSettings,\n): THREE.PlaneGeometry {\n  const WIDTH_SEGMENTS = 10;\n  const HEIGHT_SEGMENTS = 10;\n\n  const width = cameraModel.width;\n  const height = cameraModel.height;\n  const geometry = new THREE.PlaneGeometry(1, 1, WIDTH_SEGMENTS, HEIGHT_SEGMENTS);\n\n  const gridX1 = WIDTH_SEGMENTS + 1;\n  const gridY1 = HEIGHT_SEGMENTS + 1;\n  const size = gridX1 * gridY1;\n\n  const segmentWidth = width / WIDTH_SEGMENTS;\n  const segmentHeight = height / HEIGHT_SEGMENTS;\n\n  // Use a slight offset to avoid z-fighting with the CameraInfo wireframe\n  const EPS = 1e-3;\n\n  // Rebuild the position buffer for the plane by iterating through the grid and\n  // projecting each pixel space x/y coordinate into a 3D ray and casting out by\n  // the user-configured distance setting. UV coordinates are rebuilt so the\n  // image is not vertically flipped\n  const pixel = { x: 0, y: 0 };\n  const p = { x: 0, y: 0, z: 0 };\n  const vertices = new Float32Array(size * 3);\n  const uvs = new Float32Array(size * 2);\n  for (let iy = 0; iy < gridY1; iy++) {\n    for (let ix = 0; ix < gridX1; ix++) {\n      const vOffset = (iy * gridX1 + ix) * 3;\n      const uvOffset = (iy * gridX1 + ix) * 2;\n\n      pixel.x = ix * segmentWidth;\n      pixel.y = iy * segmentHeight;\n      projectPixel(p, pixel, cameraModel, settings);\n\n      vertices[vOffset + 0] = p.x;\n      vertices[vOffset + 1] = p.y;\n      vertices[vOffset + 2] = p.z - EPS;\n\n      uvs[uvOffset + 0] = ix / WIDTH_SEGMENTS;\n      uvs[uvOffset + 1] = iy / HEIGHT_SEGMENTS;\n    }\n  }\n\n  geometry.setAttribute(\"position\", new THREE.BufferAttribute(vertices, 3));\n  geometry.setAttribute(\"uv\", new THREE.BufferAttribute(uvs, 2));\n  geometry.attributes.position!.needsUpdate = true;\n  geometry.attributes.uv!.needsUpdate = true;\n\n  return geometry;\n}\n\nconst bitmapDimensionsEqual = (a?: ImageBitmap, b?: ImageBitmap) =>\n  a?.width === b?.width && a?.height === b?.height;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport { Time } from \"@foxglove/rostime\";\nimport { CompressedImage, RawImage } from \"@foxglove/schemas\";\nimport { CAMERA_CALIBRATION_DATATYPES } from \"@foxglove/studio-base/panels/ThreeDeeRender/foxglove\";\n\nimport {\n  Image as RosImage,\n  CompressedImage as RosCompressedImage,\n  CAMERA_INFO_DATATYPES,\n} from \"../../ros\";\n\nexport const ALL_CAMERA_INFO_SCHEMAS = new Set([\n  ...CAMERA_INFO_DATATYPES,\n  ...CAMERA_CALIBRATION_DATATYPES,\n]);\n\nexport type CompressedImageTypes = RosCompressedImage | CompressedImage;\n\nexport type AnyImage = RosImage | RosCompressedImage | RawImage | CompressedImage;\n\nexport function getFrameIdFromImage(image: AnyImage): string {\n  if (\"header\" in image) {\n    return image.header.frame_id;\n  } else {\n    return image.frame_id;\n  }\n}\n\nexport function getTimestampFromImage(image: AnyImage): Time {\n  if (\"header\" in image) {\n    return image.header.stamp;\n  } else {\n    return image.timestamp;\n  }\n}\n/** Data needed to download an image */\nexport type DownloadImageInfo = {\n  topic: string;\n  image: AnyImage;\n  rotation: 0 | 90 | 180 | 270;\n  flipHorizontal: boolean;\n  flipVertical: boolean;\n  minValue?: number;\n  maxValue?: number;\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\n\nconst DEFAULT_CAMERA_STATE = {\n  near: 0.001,\n  far: 1000,\n};\n\nconst MIN_USER_ZOOM = 0.5;\nconst MAX_USER_ZOOM = 50;\n\nexport class ImageModeCamera extends THREE.PerspectiveCamera {\n  #model?: PinholeCameraModel;\n  readonly #cameraState = DEFAULT_CAMERA_STATE;\n  #rotation: 0 | 90 | 180 | 270 = 0;\n  #flipHorizontal = false;\n  #flipVertical = false;\n\n  /** x/y zoom factors derived from image and window aspect ratios */\n  readonly #aspectZoom = new THREE.Vector2();\n  readonly #canvasSize = new THREE.Vector2();\n\n  /** Amount the user has panned, measured in screen pixels */\n  readonly #panOffset = new THREE.Vector2(0, 0);\n  /** Amount the user has zoomed with the scroll wheel */\n  #userZoom = 1;\n\n  public updateCamera(cameraModel: PinholeCameraModel | undefined): void {\n    this.#model = cameraModel;\n    this.#updateProjection();\n  }\n\n  public setPanOffset(offset: THREE.Vector2): void {\n    this.#panOffset.copy(offset);\n    this.#updateProjection();\n  }\n\n  public getPanOffset(out: THREE.Vector2): void {\n    out.copy(this.#panOffset);\n  }\n\n  public resetModifications(): void {\n    this.#panOffset.set(0, 0);\n    this.#userZoom = 1;\n    this.#updateProjection();\n  }\n\n  public setRotation(rotation: 0 | 90 | 180 | 270): void {\n    // guard against invalid rotation values\n    switch (rotation) {\n      case 0:\n      case 90:\n      case 180:\n      case 270:\n        this.#rotation = rotation;\n        break;\n      default:\n        this.#rotation = 0;\n        break;\n    }\n\n    // By default the camera is facing down the -y axis with -z up,\n    // where the image is on the +y axis with +z up.\n    // To correct this we rotate the camera 180 degrees around the x axis.\n    this.quaternion.setFromEuler(new THREE.Euler(Math.PI, 0, THREE.MathUtils.degToRad(rotation)));\n\n    this.resetModifications();\n  }\n\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  public setFlipHorizontal(flipHorizontal: boolean): void {\n    this.#flipHorizontal = flipHorizontal;\n    this.resetModifications();\n  }\n\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  public setFlipVertical(flipVertical: boolean): void {\n    this.#flipVertical = flipVertical;\n    this.resetModifications();\n  }\n\n  public updateZoomFromWheel(ratio: number, cursorCoords: THREE.Vector2): void {\n    const newZoom = THREE.MathUtils.clamp(this.#userZoom * ratio, MIN_USER_ZOOM, MAX_USER_ZOOM);\n    const finalRatio = newZoom / this.#userZoom;\n    const halfWidth = this.#canvasSize.width / 2;\n    const halfHeight = this.#canvasSize.height / 2;\n    // Adjust pan offset so the zoom is centered around the mouse location\n    this.#panOffset.set(\n      (halfWidth + this.#panOffset.x - cursorCoords.x) * finalRatio - halfWidth + cursorCoords.x,\n      (halfHeight + this.#panOffset.y - cursorCoords.y) * finalRatio - halfHeight + cursorCoords.y,\n    );\n    this.#userZoom = newZoom;\n    this.#updateProjection();\n  }\n\n  #updateProjection(): void {\n    this.#updateAspectZoom();\n\n    if (this.#model) {\n      this.#getProjection(this.projectionMatrix, this.#model);\n      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    } else {\n      this.updateProjectionMatrix();\n    }\n  }\n\n  /**\n   * Get perspective projection matrix from the camera model, accounting for zoom, pan, and aspect fit.\n   *\n   * Adapted from https://github.com/ros2/rviz/blob/ee44ccde8a7049073fd1901dd36c1fb69110f726/rviz_default_plugins/src/rviz_default_plugins/displays/camera/camera_display.cpp#L615\n   *\n   * @returns the projection matrix for the current camera model, or undefined if no camera model is available\n   */\n  #getProjection(out: THREE.Matrix4, model: PinholeCameraModel) {\n    const { width, height } = model;\n\n    // focal lengths\n    const fx = model.P[0];\n    const fy = model.P[5];\n\n    // (cx, cy) image center in pixel coordinates\n    // for panning we can take offsets from this in pixel coordinates\n    const scale = this.getEffectiveScale();\n    const flipPanX = this.#flipHorizontal ? -1 : 1;\n    const flipPanY = this.#flipVertical ? -1 : 1;\n    let panX, panY;\n    switch (this.#rotation) {\n      case 0:\n        panX = this.#panOffset.x * (fx / fy) * flipPanX;\n        panY = this.#panOffset.y * flipPanY;\n        break;\n      case 90:\n        panX = this.#panOffset.y * (fx / fy) * flipPanY;\n        panY = -this.#panOffset.x * flipPanX;\n        break;\n      case 180:\n        panX = -this.#panOffset.x * (fx / fy) * flipPanX;\n        panY = -this.#panOffset.y * flipPanY;\n        break;\n      case 270:\n        panX = -this.#panOffset.y * (fx / fy) * flipPanY;\n        panY = this.#panOffset.x * flipPanX;\n        break;\n    }\n    const cx = model.P[2] + panX / scale;\n    const cy = model.P[6] + panY / scale;\n\n    const near = this.#cameraState.near;\n    const far = this.#cameraState.far;\n\n    // Calculate coordinates of the canvas/viewport edges relative to the center of the camera frame.\n    let left: number, right: number, top: number, bottom: number;\n    // Adjustments to center point keep the image centered based on the orientation and fit mode\n    const xOffset = ((1 / this.#aspectZoom.x - 1) * width) / 2;\n    const yOffset = ((1 / this.#aspectZoom.y - 1) * height) / 2;\n    // These are the original values for rotation == 0:\n    const left0 = (-(cx + xOffset) / fx) * near;\n    const right0 = ((width - cx + xOffset) / fx) * near;\n    const top0 = ((cy + yOffset) / fy) * near;\n    const bottom0 = (-(height - cy + yOffset) / fy) * near;\n    switch (this.#rotation) {\n      case 0:\n        left = left0;\n        right = right0;\n        top = top0;\n        bottom = bottom0;\n        break;\n      case 90:\n        left = bottom0;\n        right = top0;\n        top = -left0;\n        bottom = -right0;\n        break;\n      case 180:\n        left = -right0;\n        right = -left0;\n        top = -bottom0;\n        bottom = -top0;\n        break;\n      case 270:\n        left = -top0;\n        right = -bottom0;\n        top = right0;\n        bottom = left0;\n        break;\n    }\n\n    if (this.#flipHorizontal) {\n      const temp = left;\n      left = right;\n      right = temp;\n    }\n    if (this.#flipVertical) {\n      const temp = top;\n      top = bottom;\n      bottom = temp;\n    }\n\n    out.makePerspective(left, right, top, bottom, near, far);\n  }\n\n  /** Set canvas size in CSS pixels */\n  public setCanvasSize(width: number, height: number): void {\n    this.#canvasSize.set(width, height);\n    this.#updateProjection();\n  }\n\n  /** @returns The ratio of CSS pixels per image pixel */\n  public getEffectiveScale(): number {\n    if (!this.#model) {\n      return 1;\n    }\n    let { width: canvasWidth, height: canvasHeight } = this.#canvasSize;\n    if (this.#rotation === 90 || this.#rotation === 270) {\n      const width = canvasWidth;\n      canvasWidth = canvasHeight;\n      canvasHeight = width;\n    }\n\n    return Math.min(\n      (canvasWidth / this.#model.width) * this.#aspectZoom.x,\n      (canvasHeight / this.#model.height) * this.#aspectZoom.y,\n    );\n  }\n\n  /**\n   * Uses the camera model to compute the zoom factors to preserve the aspect ratio of the image.\n   */\n  #updateAspectZoom(): void {\n    const model = this.#model;\n    if (!model) {\n      return;\n    }\n    // Adapted from https://github.com/ros2/rviz/blob/ee44ccde8a7049073fd1901dd36c1fb69110f726/rviz_default_plugins/src/rviz_default_plugins/displays/camera/camera_display.cpp#L568\n    this.#aspectZoom.set(this.#userZoom, this.#userZoom);\n\n    const { width: imgWidth, height: imgHeight } = model;\n\n    const fx = model.P[0]!;\n    const fy = model.P[5]!;\n    let rendererAspect = this.#canvasSize.width / this.#canvasSize.height;\n    const imageAspect = imgWidth / fx / (imgHeight / fy);\n\n    if (this.#rotation === 90 || this.#rotation === 270) {\n      rendererAspect = 1 / rendererAspect;\n    }\n\n    if (imageAspect > rendererAspect) {\n      this.#aspectZoom.y = (this.#aspectZoom.y / imageAspect) * rendererAspect;\n    } else {\n      this.#aspectZoom.x = (this.#aspectZoom.x / rendererAspect) * imageAspect;\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { CompressedImage, RawImage } from \"@foxglove/schemas\";\nimport { PartialMessage } from \"@foxglove/studio-base/panels/ThreeDeeRender/SceneExtension\";\n\nimport { normalizeByteArray, normalizeHeader, normalizeTime } from \"../../normalizeMessages\";\nimport { Image as RosImage, CompressedImage as RosCompressedImage } from \"../../ros\";\n\nfunction normalizeImageData(data: Int8Array): Int8Array;\nfunction normalizeImageData(data: PartialMessage<Uint8Array> | undefined): Uint8Array;\nfunction normalizeImageData(data: unknown): Int8Array | Uint8Array;\nfunction normalizeImageData(data: unknown): Int8Array | Uint8Array {\n  if (data == undefined) {\n    return new Uint8Array(0);\n  } else if (data instanceof Int8Array || data instanceof Uint8Array) {\n    return data;\n  } else {\n    return new Uint8Array(0);\n  }\n}\n\nexport function normalizeRosImage(message: PartialMessage<RosImage>): RosImage {\n  return {\n    header: normalizeHeader(message.header),\n    height: message.height ?? 0,\n    width: message.width ?? 0,\n    encoding: message.encoding ?? \"\",\n    is_bigendian: message.is_bigendian ?? false,\n    step: message.step ?? 0,\n    data: normalizeImageData(message.data),\n  };\n}\n\nexport function normalizeRosCompressedImage(\n  message: PartialMessage<RosCompressedImage>,\n): RosCompressedImage {\n  return {\n    header: normalizeHeader(message.header),\n    format: message.format ?? \"\",\n    data: normalizeByteArray(message.data),\n  };\n}\n\nexport function normalizeRawImage(message: PartialMessage<RawImage>): RawImage {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    frame_id: message.frame_id ?? \"\",\n    height: message.height ?? 0,\n    width: message.width ?? 0,\n    encoding: message.encoding ?? \"\",\n    step: message.step ?? 0,\n    data: normalizeImageData(message.data),\n  };\n}\n\nexport function normalizeCompressedImage(\n  message: PartialMessage<CompressedImage>,\n): CompressedImage {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    frame_id: message.frame_id ?? \"\",\n    format: message.format ?? \"\",\n    data: normalizeByteArray(message.data),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\n// All message types supported by Rviz\n// http://wiki.ros.org/rviz/DisplayTypes\n\nimport { Time } from \"@foxglove/rostime\";\n\nexport type MutablePoint = {\n  x: number;\n  y: number;\n  z: number;\n};\nexport type Point = Readonly<MutablePoint>;\ntype Points = readonly Point[];\n\nexport type MutablePoint2D = {\n  x: number;\n  y: number;\n};\nexport type Point2D = Readonly<MutablePoint2D>;\n\nexport type Header = Readonly<{\n  frame_id: string;\n  stamp: Time;\n  seq: number;\n}>;\n\nexport type StampedMessage = Readonly<{\n  header: Header;\n}>;\n\ntype Duration = Time;\n\ntype MutableOrientation = {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n};\n\nexport type Scale = Readonly<{\n  x: number;\n  y: number;\n  z: number;\n}>;\n\nexport type Color = Readonly<{\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}>;\n\n// NOTE: Deep mutability.\nexport type MutablePose = {\n  position: MutablePoint;\n  orientation: MutableOrientation;\n};\n\ntype Colors = readonly Color[];\n\n// Markers\nexport type BaseMarker = Readonly<\n  StampedMessage & {\n    ns: string;\n    id: string | number;\n    action: 0 | 1 | 2 | 3;\n    pose: MutablePose;\n    scale: Scale;\n    color?: Color;\n    colors?: Colors;\n    lifetime?: Time;\n    frame_locked: boolean;\n    points?: Point[];\n    text?: string;\n    mesh_resource?: string;\n    mesh_use_embedded_materials?: boolean;\n    primitive?: string;\n    metadata?: Readonly<Record<string, unknown>>;\n  }\n>;\n\ntype MultiPointMarker = Readonly<{\n  points: Points;\n  colors?: Colors;\n}>;\n\ntype ArrowSize = Readonly<{\n  shaftLength?: number;\n  shaftWidth: number;\n  headLength: number;\n  headWidth: number;\n}>;\n\nexport type ArrowMarker = Readonly<\n  BaseMarker & {\n    type: 0;\n    points?: Points;\n    // used for hard-coded arrows with geometry_msgs/PoseStamped\n    // not part of the original ros message\n    size?: ArrowSize;\n  }\n>;\n\nexport type CubeMarker = Readonly<\n  BaseMarker & {\n    type: 1;\n  }\n>;\n\nexport type SphereMarker = Readonly<\n  BaseMarker & {\n    type: 2;\n  }\n>;\n\nexport type CylinderMarker = Readonly<\n  BaseMarker & {\n    type: 3;\n  }\n>;\n\nexport type LineStripMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      closed?: boolean;\n      type: 4;\n    }\n>;\n\nexport type LineListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 5;\n    }\n>;\n\nexport type CubeListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 6;\n    }\n>;\n\nexport type SphereListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 7;\n    }\n>;\n\nexport type PointsMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 8;\n    }\n>;\n\nexport type TextMarker = Readonly<\n  BaseMarker & {\n    type: 9;\n    text: string;\n  }\n>;\n\nexport type MeshMarker = Readonly<\n  BaseMarker & {\n    type: 10;\n    mesh_resource: string;\n    mesh_use_embedded_materials: boolean;\n  }\n>;\n\nexport type TriangleListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 11;\n    }\n>;\n\nexport type InstancedLineListMarker = Readonly<\n  BaseMarker &\n    MultiPointMarker & {\n      type: 108;\n      metadataByIndex?: readonly Readonly<unknown[]>[];\n      scaleInvariant?: boolean;\n    }\n>;\n\nexport type ColorMarker = Readonly<\n  BaseMarker & {\n    type: 110;\n  }\n>;\n\nexport type Marker =\n  | ArrowMarker\n  | CubeMarker\n  | CubeListMarker\n  | SphereMarker\n  | SphereListMarker\n  | CylinderMarker\n  | LineStripMarker\n  | LineListMarker\n  | CubeListMarker\n  | PointsMarker\n  | TextMarker\n  | MeshMarker\n  | TriangleListMarker\n  | MeshMarker\n  | InstancedLineListMarker\n  | ColorMarker;\n\nexport type MarkerArray = Readonly<{\n  markers: readonly Marker[];\n}>;\n\nexport type PointField = Readonly<{\n  name: string;\n  offset: number;\n  datatype: number;\n  count: number;\n}>;\n\n// ts-prune-ignore-next\nexport type PointCloud2 = StampedMessage & {\n  fields: readonly PointField[];\n  height: number;\n  width: number;\n  is_bigendian: boolean;\n  point_step: number; // Length of point in bytes\n  row_step: number; // Length of row in bytes\n  data: Uint8Array;\n  is_dense: boolean | number;\n  // this is appended by scene builder\n  type: 102;\n  // this is appended by scene builder\n  pose?: MutablePose;\n};\n\nexport type VelodynePacket = Readonly<{\n  stamp: Time;\n  data: Uint8Array; // 1206 bytes\n}>;\n\nexport type VelodyneScan = Readonly<\n  StampedMessage & {\n    packets: VelodynePacket[];\n  }\n>;\n\nexport enum ImageMarkerType {\n  CIRCLE = 0,\n  LINE_STRIP = 1,\n  LINE_LIST = 2,\n  POLYGON = 3,\n  POINTS = 4,\n  // TEXT is not part of visualization_msgs/ImageMarker, but we include it to\n  // support existing frameworks that have extended this message definition\n  TEXT = 5,\n}\n\nexport enum ImageMarkerAction {\n  ADD = 0,\n  REMOVE = 1,\n}\n\nexport type ImageMarker = Readonly<{\n  header: Header;\n  ns: string;\n  id: number;\n  type: ImageMarkerType;\n  action: ImageMarkerAction;\n  position: Point;\n  scale: number;\n  outline_color: Color;\n  filled: boolean;\n  fill_color: Color;\n  lifetime: Duration;\n  points: Points;\n  outline_colors: Colors;\n  // `text` is not part of visualization_msgs/ImageMarker, but we include it to\n  // support existing frameworks that have extended this message definition\n  text?: { data: string };\n}>;\n\nexport type ImageMarkerArray = Readonly<{\n  markers: ImageMarker[];\n}>;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { Time, fromNanoSec } from \"@foxglove/rostime\";\nimport { ImageAnnotations, PointsAnnotationType } from \"@foxglove/schemas\";\nimport { RosObject } from \"@foxglove/studio-base/players/types\";\nimport {\n  ImageMarker,\n  ImageMarkerArray,\n  ImageMarkerType,\n} from \"@foxglove/studio-base/types/Messages\";\nimport { mightActuallyBePartial } from \"@foxglove/studio-base/util/mightActuallyBePartial\";\n\nimport type { Annotation, PathKey, PointsAnnotation } from \"./types\";\n\n// Should mirror TextAnnotation.font_size default value\nconst DEFAULT_FONT_SIZE = 12;\nconst DEFAULT_PADDING = 4;\n\n// Supported annotation schema names\nexport const ANNOTATION_DATATYPES = [\n  // Single marker\n  \"visualization_msgs/ImageMarker\",\n  \"visualization_msgs/msg/ImageMarker\",\n  \"ros.visualization_msgs.ImageMarker\",\n  // Marker arrays\n  \"foxglove_msgs/ImageMarkerArray\",\n  \"foxglove_msgs/msg/ImageMarkerArray\",\n  \"studio_msgs/ImageMarkerArray\",\n  \"studio_msgs/msg/ImageMarkerArray\",\n  \"visualization_msgs/ImageMarkerArray\",\n  \"visualization_msgs/msg/ImageMarkerArray\",\n  \"ros.visualization_msgs.ImageMarkerArray\",\n  // backwards compat with webviz\n  \"webviz_msgs/ImageMarkerArray\",\n  // foxglove\n  \"foxglove_msgs/ImageAnnotations\",\n  \"foxglove_msgs/msg/ImageAnnotations\",\n  \"foxglove.ImageAnnotations\",\n] as const;\n\nfunction foxglovePointTypeToStyle(\n  type: PointsAnnotationType,\n): PointsAnnotation[\"style\"] | undefined {\n  switch (type) {\n    case PointsAnnotationType.UNKNOWN:\n    case PointsAnnotationType.POINTS:\n      return \"points\";\n    case PointsAnnotationType.LINE_LOOP:\n      return \"polygon\";\n    case PointsAnnotationType.LINE_STRIP:\n      return \"line_strip\";\n    case PointsAnnotationType.LINE_LIST:\n      return \"line_list\";\n  }\n  return undefined;\n}\n\nfunction normalizeFoxgloveImageAnnotations(message: Partial<ImageAnnotations>): Annotation[] {\n  const annotations: Annotation[] = [];\n\n  const circles = message.circles ?? [];\n  for (let i = 0; i < circles.length; i++) {\n    const circle = circles[i]!;\n    const stamp = normalizeTimestamp(circle.timestamp);\n    annotations.push({\n      type: \"circle\",\n      stamp,\n      fillColor: circle.fill_color,\n      outlineColor: circle.outline_color,\n      radius: circle.diameter / 2.0,\n      thickness: circle.thickness,\n      position: circle.position,\n      messagePath: [\"circles\", i],\n    });\n  }\n  const points = message.points ?? [];\n  for (let i = 0; i < points.length; i++) {\n    const point = points[i]!;\n    const style = foxglovePointTypeToStyle(point.type);\n    if (!style) {\n      continue;\n    }\n    const stamp = normalizeTimestamp(point.timestamp);\n    annotations.push({\n      type: \"points\",\n      stamp,\n      style,\n      points: point.points,\n      outlineColors: point.outline_colors,\n      outlineColor: mightActuallyBePartial(point).outline_color ?? { r: 1, g: 1, b: 1, a: 1 },\n      thickness: mightActuallyBePartial(point).thickness ?? 1,\n      fillColor: point.fill_color,\n      messagePath: [\"points\", i],\n    });\n  }\n  const texts = message.texts ?? [];\n  for (let i = 0; i < texts.length; i++) {\n    const text = texts[i]!;\n    const stamp = normalizeTimestamp(text.timestamp);\n    annotations.push({\n      type: \"text\",\n      stamp,\n      position: text.position,\n      text: text.text,\n      textColor: text.text_color,\n      backgroundColor: text.background_color,\n      fontSize: text.font_size,\n      padding: (text.font_size / DEFAULT_FONT_SIZE) * DEFAULT_PADDING,\n      messagePath: [\"texts\", i],\n    });\n  }\n\n  return annotations;\n}\n\nfunction normalizeTimestamp(stamp: Time | bigint): Time {\n  return typeof stamp === \"bigint\" ? fromNanoSec(stamp) : stamp;\n}\n\nfunction normalizeRosImageMarkerArray(message: ImageMarkerArray): Annotation[] {\n  return filterMap(message.markers, (marker, i) => normalizeRosImageMarker(marker, [\"markers\", i]));\n}\n\nfunction imageMarkerTypeToStyle(\n  type:\n    | ImageMarkerType.LINE_LIST\n    | ImageMarkerType.LINE_STRIP\n    | ImageMarkerType.POINTS\n    | ImageMarkerType.POLYGON,\n): PointsAnnotation[\"style\"] {\n  switch (type) {\n    case ImageMarkerType.LINE_LIST:\n      return \"line_list\";\n    case ImageMarkerType.LINE_STRIP:\n      return \"line_strip\";\n    case ImageMarkerType.POINTS:\n      return \"points\";\n    case ImageMarkerType.POLYGON:\n      return \"polygon\";\n  }\n}\n\nfunction normalizeRosImageMarker(\n  message: ImageMarker,\n  messagePath: PathKey[],\n): Annotation | undefined {\n  switch (message.type) {\n    case ImageMarkerType.CIRCLE:\n      return {\n        type: \"circle\",\n        stamp: message.header.stamp,\n        fillColor: message.filled ? message.fill_color : undefined,\n        outlineColor: message.outline_color,\n        radius: message.scale,\n        thickness: 1.0,\n        position: message.position,\n        messagePath,\n      };\n    case ImageMarkerType.TEXT:\n      return {\n        type: \"text\",\n        stamp: message.header.stamp,\n        position: message.position,\n        text: message.text?.data ?? \"\",\n        textColor: message.outline_color,\n        backgroundColor: message.filled ? message.fill_color : undefined,\n        fontSize: message.scale * DEFAULT_FONT_SIZE,\n        padding: DEFAULT_PADDING * message.scale,\n        messagePath,\n      };\n    case ImageMarkerType.POINTS:\n      return {\n        type: \"points\",\n        stamp: message.header.stamp,\n        style: \"points\",\n        points: message.points,\n        outlineColors: message.outline_colors,\n        outlineColor: message.outline_color,\n        thickness: message.scale,\n        fillColor: message.fill_color,\n        messagePath,\n      };\n    case ImageMarkerType.LINE_LIST:\n    case ImageMarkerType.LINE_STRIP:\n    case ImageMarkerType.POLYGON: {\n      const style = imageMarkerTypeToStyle(message.type);\n      return {\n        type: \"points\",\n        stamp: message.header.stamp,\n        style,\n        points: message.points,\n        outlineColors: message.outline_colors,\n        outlineColor: message.outline_color,\n        thickness: message.scale,\n        fillColor: message.filled ? message.fill_color : undefined,\n        messagePath,\n      };\n    }\n  }\n\n  return undefined;\n}\n\nfunction toPOD(message: unknown): unknown {\n  return \"toJSON\" in (message as object)\n    ? (message as { toJSON: () => unknown }).toJSON()\n    : message;\n}\n\nfunction normalizeAnnotations(maybeLazyMessage: unknown, datatype: string): Annotation[] {\n  // The panel may send the annotations to a web worker, for this we need\n  const message = toPOD(maybeLazyMessage);\n\n  // Cast to the union of all supported datatypes to ensure we handle all cases\n  switch (datatype as (typeof ANNOTATION_DATATYPES)[number]) {\n    // single marker\n    case \"visualization_msgs/ImageMarker\":\n    case \"visualization_msgs/msg/ImageMarker\":\n    case \"ros.visualization_msgs.ImageMarker\": {\n      const normalized = normalizeRosImageMarker(message as ImageMarker, []);\n      return normalized ? [normalized] : [];\n    }\n    // marker arrays\n    case \"foxglove_msgs/ImageMarkerArray\":\n    case \"foxglove_msgs/msg/ImageMarkerArray\":\n    case \"studio_msgs/ImageMarkerArray\":\n    case \"studio_msgs/msg/ImageMarkerArray\":\n    case \"visualization_msgs/ImageMarkerArray\":\n    case \"visualization_msgs/msg/ImageMarkerArray\":\n    case \"ros.visualization_msgs.ImageMarkerArray\":\n      return normalizeRosImageMarkerArray(message as ImageMarkerArray);\n    // backwards compat with webviz\n    case \"webviz_msgs/ImageMarkerArray\":\n      break;\n    // foxglove\n    case \"foxglove_msgs/ImageAnnotations\":\n    case \"foxglove_msgs/msg/ImageAnnotations\":\n    case \"foxglove.ImageAnnotations\": {\n      return normalizeFoxgloveImageAnnotations(message as ImageAnnotations);\n    }\n  }\n  return [];\n}\n\n/** Only used for getting details to display from original message */\nfunction getAnnotationAtPath(message: unknown, path: PathKey[]): RosObject {\n  let value: unknown = message;\n  for (const key of path) {\n    if (key in (value as Record<PathKey, unknown>)) {\n      value = (value as { [key: string]: unknown })[key];\n    }\n  }\n  return value as RosObject;\n}\n\nexport { normalizeAnnotations, getAnnotationAtPath };\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { AVLTree } from \"@foxglove/avl\";\nimport {\n  Time,\n  fromNanoSec,\n  toNanoSec,\n  compare as compareTime,\n  isLessThan,\n} from \"@foxglove/rostime\";\nimport {\n  CompressedImage,\n  RawImage,\n  ImageAnnotations as FoxgloveImageAnnotations,\n} from \"@foxglove/schemas\";\nimport { Immutable, MessageEvent } from \"@foxglove/studio\";\nimport { ImageModeConfig } from \"@foxglove/studio-base/panels/ThreeDeeRender/IRenderer\";\nimport {\n  AnyImage,\n  getTimestampFromImage,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/Images/ImageTypes\";\nimport {\n  normalizeCompressedImage,\n  normalizeRawImage,\n  normalizeRosCompressedImage,\n  normalizeRosImage,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/Images/imageNormalizers\";\nimport { normalizeCameraInfo } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/projections\";\nimport {\n  ImageMarker as RosImageMarker,\n  ImageMarkerArray as RosImageMarkerArray,\n} from \"@foxglove/studio-base/types/Messages\";\n\nimport { normalizeAnnotations } from \"./annotations/normalizeAnnotations\";\nimport { Annotation } from \"./annotations/types\";\nimport { PartialMessageEvent } from \"../../SceneExtension\";\nimport { CompressedImage as RosCompressedImage, Image as RosImage, CameraInfo } from \"../../ros\";\n\ntype NormalizedAnnotations = {\n  // required for setting the original message on the renderable\n  originalMessage: MessageEvent<RosImageMarkerArray | RosImageMarker | FoxgloveImageAnnotations>;\n  annotations: Annotation[];\n};\n\ntype SynchronizationItem = {\n  image?: Readonly<MessageEvent<AnyImage>>;\n  annotationsByTopic: Map<string, NormalizedAnnotations>;\n};\n\ntype Config = Pick<\n  ImageModeConfig,\n  \"synchronize\" | \"annotations\" | \"calibrationTopic\" | \"imageTopic\"\n>;\n\ntype MessageHandlerState = {\n  image?: MessageEvent<AnyImage>;\n  cameraInfo?: CameraInfo;\n  annotationsByTopic: Map<string, NormalizedAnnotations>;\n};\n\nexport type MessageRenderState = Readonly<Partial<MessageHandlerState>>;\n\ntype RenderStateListener = (\n  newState: MessageRenderState,\n  oldState: MessageRenderState | undefined,\n) => void;\n\n/**\n * Processes and normalizes incoming messages and manages state of\n * messages to be rendered given the ImageMode config. A large part of this responsibility\n * is managing state in synchronized mode and ensuring that the a synchronized set of image and\n * annotations are handed off to the SceneExtension for rendering.\n */\nexport class MessageHandler {\n  /** settings that should reflect image mode config */\n  #config: Immutable<Config>;\n\n  /** last state passed to listeners */\n  #oldRenderState: MessageRenderState | undefined;\n\n  /** internal state of last received messages */\n  #lastReceivedMessages: MessageHandlerState;\n\n  /** sorted tree that holds state for synchronized messages. Used to find most recent synchronized set of image and annotations. */\n  readonly #tree: AVLTree<Time, SynchronizationItem>;\n\n  /** listener functions that are called when the state changes. */\n  #listeners: RenderStateListener[] = [];\n\n  /**\n   *\n   * @param config - subset of ImageMode settings required for message handling\n   */\n  public constructor(config: Immutable<Config>) {\n    this.#config = config;\n    this.#lastReceivedMessages = {\n      annotationsByTopic: new Map(),\n    };\n    this.#tree = new AVLTree<Time, SynchronizationItem>(compareTime);\n  }\n  /**\n   *  Add listener that will trigger every time the state changes\n   *  The listener will be called with the new state and the previous state.\n   */\n  public addListener(listener: RenderStateListener): void {\n    this.#listeners.push(listener);\n  }\n\n  /** Remove listener from being called on state update */\n  public removeListener(listener: RenderStateListener): void {\n    this.#listeners = this.#listeners.filter((fn) => fn !== listener);\n  }\n\n  public handleRosRawImage = (messageEvent: PartialMessageEvent<RosImage>): void => {\n    this.#handleImage(messageEvent, normalizeRosImage(messageEvent.message));\n  };\n\n  public handleRosCompressedImage = (\n    messageEvent: PartialMessageEvent<RosCompressedImage>,\n  ): void => {\n    this.#handleImage(messageEvent, normalizeRosCompressedImage(messageEvent.message));\n  };\n\n  public handleRawImage = (messageEvent: PartialMessageEvent<RawImage>): void => {\n    this.#handleImage(messageEvent, normalizeRawImage(messageEvent.message));\n  };\n\n  public handleCompressedImage = (messageEvent: PartialMessageEvent<CompressedImage>): void => {\n    this.#handleImage(messageEvent, normalizeCompressedImage(messageEvent.message));\n  };\n\n  #handleImage(message: PartialMessageEvent<AnyImage>, image: AnyImage) {\n    const normalizedImageMessage: MessageEvent<AnyImage> = {\n      ...message,\n      message: image,\n    };\n\n    if (this.#config.synchronize !== true) {\n      this.#lastReceivedMessages.image = normalizedImageMessage;\n      this.#emitState();\n      return;\n    }\n    // Update the image at the stamp time\n    const item = this.#tree.get(getTimestampFromImage(image));\n    if (item) {\n      item.image = normalizedImageMessage;\n    } else {\n      this.#tree.set(getTimestampFromImage(image), {\n        image: normalizedImageMessage,\n        annotationsByTopic: new Map(),\n      });\n    }\n    this.#emitState();\n  }\n\n  public handleCameraInfo = (message: PartialMessageEvent<CameraInfo>): void => {\n    const cameraInfo = normalizeCameraInfo(message.message);\n    this.#lastReceivedMessages.cameraInfo = cameraInfo;\n    this.#emitState();\n  };\n\n  public handleAnnotations = (\n    messageEvent: MessageEvent<FoxgloveImageAnnotations | RosImageMarker | RosImageMarkerArray>,\n  ): void => {\n    const annotations = normalizeAnnotations(messageEvent.message, messageEvent.schemaName);\n\n    const { topic } = messageEvent;\n    if (this.#config.synchronize !== true) {\n      this.#lastReceivedMessages.annotationsByTopic.set(topic, {\n        originalMessage: messageEvent,\n        annotations,\n      });\n      this.#emitState();\n      return;\n    }\n    const groups = new Map<bigint, Annotation[]>();\n\n    for (const annotation of annotations) {\n      const key = toNanoSec(annotation.stamp);\n      const arr = groups.get(key);\n      if (arr) {\n        arr.push(annotation);\n        continue;\n      }\n      groups.set(key, [annotation]);\n    }\n\n    for (const [stampNsec, group] of groups) {\n      const stamp = fromNanoSec(stampNsec);\n      let item = this.#tree.get(stamp);\n      if (!item) {\n        item = {\n          image: undefined,\n          annotationsByTopic: new Map(),\n        };\n        this.#tree.set(stamp, item);\n      }\n      item.annotationsByTopic.set(topic, {\n        originalMessage: messageEvent,\n        annotations: group,\n      });\n    }\n\n    this.#emitState();\n  };\n\n  public setConfig(newConfig: Immutable<Partial<ImageModeConfig>>): void {\n    let changed = false;\n\n    if (newConfig.synchronize != undefined && newConfig.synchronize !== this.#config.synchronize) {\n      this.#tree.clear();\n      changed = true;\n    }\n\n    if (\"imageTopic\" in newConfig && this.#config.imageTopic !== newConfig.imageTopic) {\n      for (const item of this.#tree.values()) {\n        item.image = undefined;\n      }\n      this.#lastReceivedMessages.image = undefined;\n      changed = true;\n    }\n\n    if (\n      \"calibrationTopic\" in newConfig &&\n      this.#config.calibrationTopic !== newConfig.calibrationTopic\n    ) {\n      this.#lastReceivedMessages.cameraInfo = undefined;\n      changed = true;\n    }\n\n    if (\n      newConfig.annotations != undefined &&\n      this.#config.annotations &&\n      this.#config.annotations !== newConfig.annotations\n    ) {\n      const newVisibleTopics = new Set<string>();\n\n      for (const [topic, settings] of Object.entries(newConfig.annotations)) {\n        if (settings?.visible === true) {\n          newVisibleTopics.add(topic);\n        }\n      }\n\n      for (const topic of this.#lastReceivedMessages.annotationsByTopic.keys()) {\n        if (!newVisibleTopics.has(topic)) {\n          this.#lastReceivedMessages.annotationsByTopic.delete(topic);\n          changed = true;\n        }\n      }\n      for (const syncEntry of this.#tree.values()) {\n        for (const topic of syncEntry.annotationsByTopic.keys()) {\n          if (!newVisibleTopics.has(topic)) {\n            syncEntry.annotationsByTopic.delete(topic);\n            changed = true;\n          }\n        }\n      }\n    }\n\n    this.#config = {\n      ...this.#config,\n      ...newConfig,\n    };\n\n    if (changed) {\n      this.#emitState();\n    }\n  }\n\n  public clear(): void {\n    this.#lastReceivedMessages = {\n      annotationsByTopic: new Map(),\n    };\n    this.#tree.clear();\n    this.#oldRenderState = undefined;\n    this.#emitState();\n  }\n\n  #emitState() {\n    const state = this.getRenderState();\n    this.#listeners.forEach((fn) => fn(state, this.#oldRenderState));\n    this.#oldRenderState = state;\n  }\n\n  /** Do not use. only public for testing */\n  public getRenderState(): Readonly<Partial<MessageHandlerState>> {\n    if (this.#config.synchronize === true) {\n      const validEntry = findSynchronizedSetAndRemoveOlderItems(\n        this.#tree,\n        this.#visibleAnnotations(),\n      );\n      if (validEntry) {\n        return {\n          cameraInfo: this.#lastReceivedMessages.cameraInfo,\n          image: validEntry[1].image,\n          annotationsByTopic: validEntry[1].annotationsByTopic,\n        };\n      }\n      return {\n        cameraInfo: this.#lastReceivedMessages.cameraInfo,\n      };\n    }\n\n    return { ...this.#lastReceivedMessages };\n  }\n\n  #visibleAnnotations(): Set<string> {\n    const visibleAnnotations = new Set<string>();\n    for (const [topic, settings] of Object.entries(this.#config.annotations ?? {})) {\n      if (settings?.visible === true) {\n        visibleAnnotations.add(topic);\n      }\n    }\n    return visibleAnnotations;\n  }\n}\n\n/**\n * Find the newest entry where we have everything synchronized and remove all older entries from tree.\n * @param tree - AVL tree that stores a [image?, annotations?] in sorted order by timestamp.\n * @param visibleAnnotations - visible annotation topics\n * @returns - the newest synchronized item with all active annotations and image, or undefined if none found\n */\nexport function findSynchronizedSetAndRemoveOlderItems(\n  tree: AVLTree<Time, SynchronizationItem>,\n  visibleAnnotations: Set<string>,\n): [Time, SynchronizationItem] | undefined {\n  let validEntry: [Time, SynchronizationItem] | undefined = undefined;\n  for (const entry of tree.entries()) {\n    const messageState = entry[1];\n    const hasOnlyVisibleAnnotations =\n      visibleAnnotations.size === messageState.annotationsByTopic.size &&\n      Array.from(visibleAnnotations.keys()).every(\n        (topic) => messageState.annotationsByTopic.get(topic) != undefined,\n      );\n    // If we have an image and all the messages for annotation topics then we have a synchronized set.\n    if (messageState.image && hasOnlyVisibleAnnotations) {\n      validEntry = entry;\n    }\n  }\n\n  if (validEntry) {\n    // We've got a set of synchronized messages, remove any older items from the tree\n    let minKey = tree.minKey();\n    while (minKey && isLessThan(minKey, validEntry[0])) {\n      tree.shift();\n      minKey = tree.minKey();\n    }\n  }\n\n  return validEntry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n/** Want to render after all other objects in the scene so that they are not occluded by other objects */\nconst ANNOTATION_FRONT_POSITION = 100000;\n\n/** Render order for given annotations. Higher numbers rendered after lower numbers */\nexport const ANNOTATION_RENDER_ORDER = {\n  FILL: 1 + ANNOTATION_FRONT_POSITION,\n  LINE_PREPASS: 2 + ANNOTATION_FRONT_POSITION,\n  LINE: 3 + ANNOTATION_FRONT_POSITION,\n  POINTS: 4 + ANNOTATION_FRONT_POSITION,\n  TEXT: 5 + ANNOTATION_FRONT_POSITION,\n};\n\n/** we want annotations to show on top of the entire scene. These are material props to achieve that */\nexport const annotationRenderOrderMaterialProps = {\n  /** We need to set transparent to true so that transparent objects aren't rendered on top of it.\n   * Transparent objects are rendered after non-transparent objects. If this were set to false or\n   * set based on color of annotations, then the foreground image with opacity would be rendered on top\n   * until it is fully opaque.\n   */\n  transparent: true,\n  depthWrite: false,\n  depthTest: false,\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { Color } from \"@foxglove/schemas\";\nimport { RosObject, RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport {\n  ANNOTATION_RENDER_ORDER,\n  annotationRenderOrderMaterialProps,\n} from \"./annotationRenderOrder\";\nimport { getAnnotationAtPath } from \"./normalizeAnnotations\";\nimport {\n  PointsAnnotation as NormalizedPointsAnnotation,\n  CircleAnnotation as NormalizedCircleAnnotation,\n} from \"./types\";\nimport { BaseUserData, Renderable } from \"../../../Renderable\";\nimport { SRGBToLinear } from \"../../../color\";\n\nconst tempVec3 = new THREE.Vector3();\n\nclass PickingMaterial extends LineMaterial {\n  public constructor() {\n    super({\n      worldUnits: false,\n      vertexColors: false,\n      linewidth: 0,\n      ...annotationRenderOrderMaterialProps,\n    });\n    this.uniforms.objectId = { value: [NaN, NaN, NaN, NaN] };\n  }\n\n  public override onBeforeCompile(shader: THREE.Shader, renderer: THREE.WebGLRenderer): void {\n    super.onBeforeCompile(shader, renderer);\n    shader.fragmentShader = /* glsl */ `\n      uniform vec4 objectId;\n      void main() {\n        gl_FragColor = objectId;\n      }\n    `;\n  }\n}\n\n/** subset of {@link NormalizedPointsAnnotation.style} */\ntype LineStyle = \"polygon\" | \"line_strip\" | \"line_list\";\n\nconst FALLBACK_COLOR: Color = { r: 0, g: 0, b: 0, a: 0 };\n\n/**\n * Handles rendering of 2D annotations (line list, line strip, and line loop/polygon).\n */\nexport class RenderableLineAnnotation extends Renderable<BaseUserData, /*TRenderer=*/ undefined> {\n  #geometry?: LineSegmentsGeometry;\n  readonly #linePrepass: LineSegments2;\n  readonly #linePrepassMaterial: LineMaterial;\n  readonly #line: LineSegments2;\n  readonly #lineMaterial: LineMaterial;\n  readonly #linePickingMaterial: PickingMaterial;\n  /** Style that was last used for configuring geometry */\n  #style?: LineStyle;\n  /** Number of points that was last used for configuring geometry */\n  #numPoints?: number;\n  #positionBuffer = new Float32Array();\n  #colorBuffer = new Uint8Array();\n\n  #fill?: THREE.Mesh;\n  #fillGeometry?: THREE.ShapeGeometry;\n  #fillMaterial?: THREE.MeshBasicMaterial;\n\n  #scale = 0;\n  #canvasWidth = 0;\n  #canvasHeight = 0;\n  #scaleNeedsUpdate = false;\n\n  #originalMessage?: RosObject;\n\n  #annotation?: NormalizedPointsAnnotation & { style: LineStyle };\n  #annotationNeedsUpdate = false;\n\n  #cameraModel?: PinholeCameraModel;\n  #cameraModelNeedsUpdate = false;\n\n  public constructor(topicName: string) {\n    super(topicName, undefined, {\n      receiveTime: 0n,\n      messageTime: 0n,\n      frameId: \"\",\n      pose: { position: { x: 0, y: 0, z: 0 }, orientation: { x: 0, y: 0, z: 0, w: 0 } },\n      settingsPath: [],\n      settings: { visible: true },\n      topic: topicName,\n    });\n\n    this.#geometry = new LineSegmentsGeometry();\n\n    // We alleviate corner artifacts using a two-pass render for lines. The\n    // first pass writes to depth only, followed by a color pass with stencil\n    // operations. The source for this technique is:\n    // <https://github.com/mrdoob/three.js/issues/23680#issuecomment-1063294691>\n    // <https://gkjohnson.github.io/threejs-sandbox/fat-line-opacity/webgl_lines_fat.html>\n    this.#linePrepassMaterial = new LineMaterial({\n      worldUnits: false,\n      colorWrite: false,\n      vertexColors: true,\n      linewidth: 0,\n      stencilWrite: true,\n      stencilRef: 1,\n      stencilZPass: THREE.ReplaceStencilOp,\n      ...annotationRenderOrderMaterialProps,\n    });\n    this.#lineMaterial = new LineMaterial({\n      worldUnits: false,\n      vertexColors: true,\n      linewidth: 0,\n      stencilWrite: true,\n      stencilRef: 0,\n      stencilFunc: THREE.NotEqualStencilFunc,\n      stencilFail: THREE.ReplaceStencilOp,\n      stencilZPass: THREE.ReplaceStencilOp,\n      ...annotationRenderOrderMaterialProps,\n    });\n    this.#linePrepass = new LineSegments2(this.#geometry, this.#linePrepassMaterial);\n    this.#linePrepass.renderOrder = ANNOTATION_RENDER_ORDER.LINE_PREPASS;\n    this.#linePrepass.userData.picking = false;\n    this.add(this.#linePrepass);\n    this.#line = new LineSegments2(this.#geometry, this.#lineMaterial);\n    this.#line.renderOrder = ANNOTATION_RENDER_ORDER.LINE;\n    this.#line.userData.pickingMaterial = this.#linePickingMaterial = new PickingMaterial();\n    this.add(this.#line);\n  }\n\n  public override dispose(): void {\n    this.#geometry?.dispose();\n    this.#linePrepassMaterial.dispose();\n    this.#lineMaterial.dispose();\n    this.#linePickingMaterial.dispose();\n    this.#fillGeometry?.dispose();\n    this.#fillMaterial?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    if (this.#originalMessage && this.#annotation) {\n      return {\n        annotation: getAnnotationAtPath(this.#originalMessage, this.#annotation.messagePath),\n        originalMessage: this.#originalMessage,\n      };\n    }\n    return {};\n  }\n\n  public setScale(\n    scale: number,\n    canvasWidth: number,\n    canvasHeight: number,\n    _pixelRatio: number,\n  ): void {\n    this.#scaleNeedsUpdate ||=\n      scale !== this.#scale ||\n      canvasWidth !== this.#canvasWidth ||\n      canvasHeight !== this.#canvasHeight;\n    this.#scale = scale;\n    this.#canvasWidth = canvasWidth;\n    this.#canvasHeight = canvasHeight;\n  }\n\n  public setCameraModel(cameraModel: PinholeCameraModel | undefined): void {\n    this.#cameraModelNeedsUpdate ||= this.#cameraModel !== cameraModel;\n    this.#cameraModel = cameraModel;\n  }\n\n  public setAnnotation(\n    annotation: NormalizedPointsAnnotation & { style: LineStyle },\n    originalMessage: RosObject | undefined,\n  ): void {\n    this.#annotationNeedsUpdate ||= this.#annotation !== annotation;\n    this.#originalMessage = originalMessage;\n    this.#annotation = annotation;\n  }\n\n  public setAnnotationFromCircle(\n    annotation: NormalizedCircleAnnotation,\n    originalMessage: RosObject | undefined,\n  ): void {\n    this.setAnnotation(makePointsAnnotationFromCircle(annotation), originalMessage);\n  }\n\n  public update(): void {\n    if (!this.#annotation || !this.#cameraModel) {\n      this.visible = false;\n      return;\n    }\n\n    const { points, outlineColor, outlineColors, thickness, style, fillColor } = this.#annotation;\n    const pointsLength = points.length;\n    if (pointsLength < 2) {\n      this.visible = false;\n      return;\n    }\n    this.visible = true;\n\n    const isPolygon = style === \"polygon\";\n    const isLineStrip = style === \"line_strip\";\n    const isLineList = style === \"line_list\";\n\n    // Update line width if thickness or scale has changed\n    if (this.#annotationNeedsUpdate || this.#scaleNeedsUpdate) {\n      this.#lineMaterial.resolution.set(this.#canvasWidth, this.#canvasHeight);\n      this.#lineMaterial.linewidth = thickness * this.#scale;\n      this.#lineMaterial.needsUpdate = true;\n      this.#linePrepassMaterial.resolution.set(this.#canvasWidth, this.#canvasHeight);\n      this.#linePrepassMaterial.linewidth = thickness * this.#scale;\n      this.#linePrepassMaterial.needsUpdate = true;\n      this.#linePickingMaterial.resolution.set(this.#canvasWidth, this.#canvasHeight);\n      this.#linePickingMaterial.linewidth = thickness * this.#scale;\n      this.#linePickingMaterial.needsUpdate = true;\n      this.#scaleNeedsUpdate = false;\n    }\n\n    if (this.#annotationNeedsUpdate || this.#cameraModelNeedsUpdate) {\n      this.#annotationNeedsUpdate = false;\n      this.#cameraModelNeedsUpdate = false;\n      if (\n        this.#numPoints == undefined ||\n        !this.#geometry ||\n        pointsLength > this.#numPoints ||\n        this.#style !== style\n      ) {\n        // Need to recreate the geometry when length changes: https://github.com/mrdoob/three.js/issues/21488\n        this.#geometry?.dispose();\n        this.#numPoints = pointsLength;\n        this.#style = style;\n        switch (style) {\n          case \"polygon\":\n            this.#positionBuffer = new Float32Array((pointsLength + 1) * 3);\n            // color buffer is unused (we don't use vertex colors)\n            this.#geometry = new LineGeometry();\n            break;\n          case \"line_strip\":\n            this.#positionBuffer = new Float32Array(pointsLength * 3);\n            // color buffer is unused (we don't use vertex colors)\n            this.#geometry = new LineGeometry();\n            break;\n          case \"line_list\": {\n            this.#positionBuffer = new Float32Array(pointsLength * 3);\n            this.#colorBuffer = new Uint8Array(pointsLength * 8);\n            this.#geometry = new LineSegmentsGeometry();\n\n            // [rgba, rgba]\n            const instanceColorBuffer = new THREE.InstancedInterleavedBuffer(\n              this.#colorBuffer,\n              8,\n              1,\n            );\n            this.#geometry.setAttribute(\n              \"instanceColorStart\",\n              new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 0, true),\n            );\n            this.#geometry.setAttribute(\n              \"instanceColorEnd\",\n              new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 4, true),\n            );\n            break;\n          }\n        }\n        this.#linePrepass.geometry = this.#geometry;\n        this.#line.geometry = this.#geometry;\n      }\n\n      const useVertexColors = isLineList;\n      const hasExactColors = outlineColors.length === pointsLength / 2;\n\n      const shapeFillColor =\n        (isPolygon || isLineStrip) && fillColor != undefined && fillColor.a > 0\n          ? fillColor\n          : undefined;\n      const shape = shapeFillColor ? new THREE.Shape() : undefined;\n\n      const positions = this.#positionBuffer;\n      const colors = this.#colorBuffer;\n      for (let i = 0; i < pointsLength; i++) {\n        // Support the case where outline_colors is half the length of points, one color per line,\n        // and where outline_colors matches the length of points. Fall back to marker.outline_color\n        // as needed\n        const point = points[i]!;\n        this.#cameraModel.projectPixelTo3dPlane(tempVec3, point);\n\n        positions[i * 3 + 0] = tempVec3.x;\n        positions[i * 3 + 1] = tempVec3.y;\n        positions[i * 3 + 2] = tempVec3.z;\n        if (useVertexColors) {\n          const color = hasExactColors\n            ? outlineColors[i >>> 1]!\n            : outlineColors[i] ?? outlineColor ?? FALLBACK_COLOR;\n          colors[i * 4 + 0] = SRGBToLinear(color.r) * 255;\n          colors[i * 4 + 1] = SRGBToLinear(color.g) * 255;\n          colors[i * 4 + 2] = SRGBToLinear(color.b) * 255;\n          colors[i * 4 + 3] = color.a * 255;\n        }\n        if (i === 0) {\n          shape?.moveTo(tempVec3.x, tempVec3.y);\n        } else {\n          shape?.lineTo(tempVec3.x, tempVec3.y);\n        }\n      }\n\n      // Add another point to close the polygon\n      if (isPolygon) {\n        positions[pointsLength * 3 + 0] = positions[0]!;\n        positions[pointsLength * 3 + 1] = positions[1]!;\n        positions[pointsLength * 3 + 2] = positions[2]!;\n        if (useVertexColors) {\n          colors[pointsLength * 4 + 0] = colors[0]!;\n          colors[pointsLength * 4 + 1] = colors[1]!;\n          colors[pointsLength * 4 + 2] = colors[2]!;\n          colors[pointsLength * 4 + 3] = colors[3]!;\n        }\n        shape?.closePath();\n      }\n\n      if (shapeFillColor) {\n        if (this.#fillGeometry) {\n          this.#fillGeometry.dispose();\n          this.#fillGeometry = undefined;\n        }\n        this.#fillGeometry = new THREE.ShapeGeometry(shape);\n        this.#fillMaterial ??= new THREE.MeshBasicMaterial({\n          side: THREE.DoubleSide,\n          ...annotationRenderOrderMaterialProps,\n        });\n        if (!this.#fill) {\n          this.#fill = new THREE.Mesh(this.#fillGeometry, this.#fillMaterial);\n          this.#fill.renderOrder = ANNOTATION_RENDER_ORDER.FILL;\n          this.add(this.#fill);\n        } else {\n          this.#fill.geometry = this.#fillGeometry;\n        }\n        this.#fill.position.set(0, 0, 1);\n        this.#fillMaterial.color\n          .setRGB(shapeFillColor.r, shapeFillColor.g, shapeFillColor.b)\n          .convertSRGBToLinear();\n        this.#fillMaterial.opacity = shapeFillColor.a;\n        this.#fillMaterial.needsUpdate = true;\n      } else {\n        this.#fillGeometry?.dispose();\n        this.#fillMaterial?.dispose();\n        this.#fill?.removeFromParent();\n        this.#fillGeometry = undefined;\n        this.#fillMaterial = undefined;\n        this.#fill = undefined;\n      }\n\n      if (useVertexColors) {\n        this.#linePrepassMaterial.vertexColors = true;\n        this.#lineMaterial.vertexColors = true;\n        this.#lineMaterial.color.setRGB(1, 1, 1); // any non-white color will tint the vertex colors\n        this.#geometry.getAttribute(\"instanceColorStart\").needsUpdate = true;\n        this.#geometry.getAttribute(\"instanceColorEnd\").needsUpdate = true;\n      } else {\n        const color = outlineColor ?? FALLBACK_COLOR;\n        this.#linePrepassMaterial.vertexColors = false;\n        this.#lineMaterial.vertexColors = false;\n        this.#lineMaterial.color.setRGB(color.r, color.g, color.b).convertSRGBToLinear();\n        this.#lineMaterial.opacity = color.a;\n      }\n      this.#lineMaterial.needsUpdate = true;\n\n      this.#geometry.setPositions(positions);\n\n      switch (style) {\n        // These should represent the number of lines, not the number of points\n        case \"polygon\":\n          this.#geometry.instanceCount = pointsLength;\n          break;\n        case \"line_strip\":\n          this.#geometry.instanceCount = pointsLength - 1;\n          break;\n        case \"line_list\":\n          this.#geometry.instanceCount = pointsLength >>> 1;\n          break;\n      }\n    }\n  }\n}\n\nfunction makePointsAnnotationFromCircle(\n  circle: NormalizedCircleAnnotation,\n): NormalizedPointsAnnotation & { style: LineStyle } {\n  const segments = 32;\n  const {\n    position: { x: cx, y: cy },\n    radius,\n  } = circle;\n  return {\n    type: \"points\",\n    stamp: circle.stamp,\n    style: \"polygon\",\n    points: new Array(segments).fill(undefined).map((_, index) => {\n      const angle = (2 * Math.PI * index) / segments;\n      return {\n        x: cx + radius * Math.cos(angle),\n        y: cy + radius * Math.sin(angle),\n      };\n    }),\n    outlineColors: [],\n    outlineColor: circle.outlineColor,\n    thickness: circle.thickness,\n    fillColor: circle.fillColor,\n    messagePath: circle.messagePath,\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\ninterface TypedArray {\n  readonly length: number;\n  readonly [n: number]: number;\n  BYTES_PER_ELEMENT: number;\n  set(n: ArrayLike<number>, offset: number): void;\n}\n\ninterface TypedArrayConstructor<T extends TypedArray> {\n  new (length: number): T;\n}\n\ninterface ArrayConstructor {\n  new (length: number): ArrayLike<number>;\n}\n\nexport class DynamicBufferGeometry extends THREE.BufferGeometry {\n  public override attributes: { [name: string]: THREE.BufferAttribute } = {};\n\n  #attributeConstructors = new Map<string, ArrayConstructor>();\n  #usage: THREE.Usage;\n  #itemCapacity = 0;\n\n  public constructor(usage: THREE.Usage = THREE.DynamicDrawUsage) {\n    super();\n    this.#usage = usage;\n  }\n\n  public setUsage(usage: THREE.Usage): void {\n    this.#usage = usage;\n    for (const attribute of Object.values(this.attributes)) {\n      attribute.setUsage(usage);\n    }\n  }\n\n  public createAttribute<T extends TypedArray, C extends TypedArrayConstructor<T>>(\n    name: THREE.BuiltinShaderAttributeName | string,\n    arrayConstructor: C,\n    itemSize: number,\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    normalized?: boolean,\n  ): THREE.BufferGeometry {\n    const data = new arrayConstructor(this.#itemCapacity * itemSize);\n    const attribute = new THREE.BufferAttribute(data, itemSize, normalized);\n    attribute.setUsage(this.#usage);\n    this.#attributeConstructors.set(name, arrayConstructor);\n    return this.setAttribute(name, attribute);\n  }\n\n  public resize(itemCount: number): void {\n    this.setDrawRange(0, itemCount);\n\n    if (itemCount <= this.#itemCapacity) {\n      for (const attribute of Object.values(this.attributes)) {\n        attribute.count = itemCount;\n      }\n      return;\n    }\n\n    for (const [attributeName, attribute] of Object.entries(this.attributes)) {\n      const dataConstructor = this.#attributeConstructors.get(attributeName);\n      if (!dataConstructor) {\n        throw new Error(\n          `DynamicBufferGeometry resize(${itemCount}) failed, missing data constructor for attribute \"${attributeName}\". Attributes must be created using createAttribute().`,\n        );\n      }\n      const data = new dataConstructor(itemCount * attribute.itemSize);\n      const newAttrib = new THREE.BufferAttribute(data, attribute.itemSize, attribute.normalized);\n      newAttrib.setUsage(this.#usage);\n      this.setAttribute(attributeName, newAttrib);\n    }\n\n    this.#itemCapacity = itemCount;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { RosObject, RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport {\n  ANNOTATION_RENDER_ORDER,\n  annotationRenderOrderMaterialProps,\n} from \"./annotationRenderOrder\";\nimport { getAnnotationAtPath } from \"./normalizeAnnotations\";\nimport { PointsAnnotation as NormalizedPointsAnnotation } from \"./types\";\nimport { DynamicBufferGeometry } from \"../../../DynamicBufferGeometry\";\nimport { BaseUserData, Renderable } from \"../../../Renderable\";\nimport { SRGBToLinear } from \"../../../color\";\n\nconst tempVec3 = new THREE.Vector3();\n\nclass PickingMaterial extends THREE.ShaderMaterial {\n  public constructor() {\n    super({\n      vertexShader: THREE.ShaderChunk.points_vert,\n      fragmentShader: /* glsl */ `\n        uniform vec4 objectId;\n        void main() {\n          gl_FragColor = objectId;\n        }\n      `,\n      uniforms: {\n        ...THREE.UniformsLib.points,\n        ...THREE.UniformsLib.fog,\n        objectId: { value: [NaN, NaN, NaN, NaN] },\n      },\n    });\n  }\n}\n\n/**\n * 2D points annotation with style=points (points rendered as dots).\n */\nexport class RenderablePointsAnnotation extends Renderable<BaseUserData, /*TRenderer=*/ undefined> {\n  #geometry: DynamicBufferGeometry;\n  #points: THREE.Points;\n  #pointsMaterial: THREE.PointsMaterial;\n  #pickingMaterial: PickingMaterial;\n\n  #scale = 0;\n  #pixelRatio = 0;\n  #scaleNeedsUpdate = false;\n\n  #originalMessage?: RosObject;\n\n  #annotation?: NormalizedPointsAnnotation & { style: \"points\" };\n  #annotationNeedsUpdate = false;\n\n  #cameraModel?: PinholeCameraModel;\n  #cameraModelNeedsUpdate = false;\n\n  public constructor(topicName: string) {\n    super(topicName, undefined, {\n      receiveTime: 0n,\n      messageTime: 0n,\n      frameId: \"\",\n      pose: { position: { x: 0, y: 0, z: 0 }, orientation: { x: 0, y: 0, z: 0, w: 0 } },\n      settingsPath: [],\n      settings: { visible: true },\n      topic: topicName,\n    });\n\n    this.#geometry = new DynamicBufferGeometry();\n    this.#geometry.createAttribute(\"position\", Float32Array, 3);\n    this.#geometry.createAttribute(\"color\", Uint8Array, 4, true);\n    this.#pointsMaterial = new THREE.PointsMaterial({\n      size: 0,\n      sizeAttenuation: false,\n      vertexColors: true,\n      ...annotationRenderOrderMaterialProps,\n    });\n    this.#pickingMaterial = new PickingMaterial();\n    this.#points = new THREE.Points(this.#geometry, this.#pointsMaterial);\n    this.#points.renderOrder = ANNOTATION_RENDER_ORDER.POINTS;\n    this.#points.userData.pickingMaterial = this.#pickingMaterial;\n    this.add(this.#points);\n  }\n\n  public override dispose(): void {\n    this.#geometry.dispose();\n    this.#pointsMaterial.dispose();\n    this.#pickingMaterial.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    if (this.#originalMessage && this.#annotation) {\n      return {\n        annotation: getAnnotationAtPath(this.#originalMessage, this.#annotation.messagePath),\n        originalMessage: this.#originalMessage,\n      };\n    }\n    return {};\n  }\n\n  public setScale(\n    scale: number,\n    _canvasWidth: number,\n    _canvasHeight: number,\n    pixelRatio: number,\n  ): void {\n    this.#scaleNeedsUpdate ||= scale !== this.#scale || pixelRatio !== this.#pixelRatio;\n    this.#scale = scale;\n    this.#pixelRatio = pixelRatio;\n  }\n\n  public setCameraModel(cameraModel: PinholeCameraModel | undefined): void {\n    this.#cameraModelNeedsUpdate ||= this.#cameraModel !== cameraModel;\n    this.#cameraModel = cameraModel;\n  }\n\n  public setAnnotation(\n    annotation: NormalizedPointsAnnotation & { style: \"points\" },\n    originalMessage: RosObject | undefined,\n  ): void {\n    this.#annotationNeedsUpdate ||= this.#annotation !== annotation;\n    this.#originalMessage = originalMessage;\n    this.#annotation = annotation;\n  }\n\n  public update(): void {\n    if (!this.#annotation || !this.#cameraModel) {\n      this.visible = false;\n      return;\n    }\n    this.visible = true;\n\n    if (this.#annotationNeedsUpdate || this.#scaleNeedsUpdate) {\n      this.#scaleNeedsUpdate = false;\n      const { thickness } = this.#annotation;\n      // thickness specifies radius, PointsMaterial.size specifies diameter\n      this.#pointsMaterial.size = thickness * 2 * this.#scale;\n      this.#pointsMaterial.needsUpdate = true;\n      // PointsMaterial automatically adjusts for pixel ratio, ShaderMaterial does not\n      this.#pickingMaterial.uniforms.size!.value = thickness * 2 * this.#scale * this.#pixelRatio;\n      this.#pickingMaterial.needsUpdate = true;\n    }\n\n    if (this.#annotationNeedsUpdate || this.#cameraModelNeedsUpdate) {\n      this.#annotationNeedsUpdate = false;\n      this.#cameraModelNeedsUpdate = false;\n      const { points, outlineColors, outlineColor, fillColor } = this.#annotation;\n      this.#geometry.resize(points.length);\n      const positionAttribute = this.#geometry.getAttribute(\"position\") as THREE.BufferAttribute;\n      const colorAttribute = this.#geometry.getAttribute(\"color\") as THREE.BufferAttribute;\n      const positions = positionAttribute.array as Float32Array;\n      const colors = colorAttribute.array as Uint8Array;\n      const fallbackColor = outlineColor && outlineColor.a > 0 ? outlineColor : fillColor;\n\n      for (let i = 0; i < points.length; i++) {\n        const color = outlineColors[i] ?? fallbackColor;\n        const point = points[i]!;\n\n        this.#cameraModel.projectPixelTo3dPlane(tempVec3, point);\n\n        positions[i * 3 + 0] = tempVec3.x;\n        positions[i * 3 + 1] = tempVec3.y;\n        positions[i * 3 + 2] = tempVec3.z;\n        colors[i * 4 + 0] = SRGBToLinear(color?.r ?? 0) * 255;\n        colors[i * 4 + 1] = SRGBToLinear(color?.g ?? 0) * 255;\n        colors[i * 4 + 2] = SRGBToLinear(color?.b ?? 0) * 255;\n        colors[i * 4 + 3] = (color?.a ?? 0) * 255;\n      }\n      positionAttribute.needsUpdate = true;\n      colorAttribute.needsUpdate = true;\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { RosObject, RosValue } from \"@foxglove/studio-base/players/types\";\nimport { Label, LabelPool } from \"@foxglove/three-text\";\n\nimport { ANNOTATION_RENDER_ORDER } from \"./annotationRenderOrder\";\nimport { getAnnotationAtPath } from \"./normalizeAnnotations\";\nimport { TextAnnotation as NormalizedTextAnnotation } from \"./types\";\nimport { BaseUserData, Renderable } from \"../../../Renderable\";\nimport { SRGBToLinear, getLuminance } from \"../../../color\";\n\n/**\n * Handles rendering of 2D text annotations.\n */\nexport class RenderableTextAnnotation extends Renderable<BaseUserData, /*TRenderer=*/ undefined> {\n  #labelPool: LabelPool;\n  #label: Label;\n\n  #scale = 0;\n  #scaleNeedsUpdate = false;\n\n  #originalMessage?: RosObject;\n\n  #annotation?: NormalizedTextAnnotation;\n  #annotationNeedsUpdate = false;\n\n  #cameraModel?: PinholeCameraModel;\n  #cameraModelNeedsUpdate = false;\n\n  public constructor(topicName: string, labelPool: LabelPool) {\n    super(topicName, undefined, {\n      receiveTime: 0n,\n      messageTime: 0n,\n      frameId: \"\",\n      pose: { position: { x: 0, y: 0, z: 0 }, orientation: { x: 0, y: 0, z: 0, w: 0 } },\n      settingsPath: [],\n      settings: { visible: true },\n      topic: topicName,\n    });\n\n    this.#labelPool = labelPool;\n    this.#label = labelPool.acquire();\n    this.#label.mesh.renderOrder = ANNOTATION_RENDER_ORDER.TEXT;\n    this.#label.setAnchorPoint(0, 0);\n    this.#label.setBillboard(true);\n    this.#label.setSizeAttenuation(false);\n\n    this.add(this.#label);\n  }\n\n  public override dispose(): void {\n    // reset render order back for label pool\n    this.#label.mesh.renderOrder = 0;\n    this.#labelPool.release(this.#label);\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    if (this.#originalMessage && this.#annotation) {\n      return {\n        annotation: getAnnotationAtPath(this.#originalMessage, this.#annotation.messagePath),\n        originalMessage: this.#originalMessage,\n      };\n    }\n    return {};\n  }\n\n  public setScale(\n    scale: number,\n    _canvasWidth: number,\n    _canvasHeight: number,\n    _pixelRatio: number,\n  ): void {\n    this.#scaleNeedsUpdate ||= scale !== this.#scale;\n    this.#scale = scale;\n  }\n\n  public setCameraModel(cameraModel: PinholeCameraModel | undefined): void {\n    this.#cameraModelNeedsUpdate ||= this.#cameraModel !== cameraModel;\n    this.#cameraModel = cameraModel;\n  }\n\n  public setAnnotation(\n    annotation: NormalizedTextAnnotation,\n    originalMessage: RosObject | undefined,\n  ): void {\n    this.#annotationNeedsUpdate ||= this.#annotation !== annotation;\n    this.#originalMessage = originalMessage;\n    this.#annotation = annotation;\n  }\n\n  public update(): void {\n    if (!this.#annotation || !this.#cameraModel) {\n      this.visible = false;\n      return;\n    }\n    this.visible = true;\n\n    const { position, text, textColor, backgroundColor, fontSize } = this.#annotation;\n\n    // Update line width if thickness or scale has changed\n    if (this.#annotationNeedsUpdate || this.#scaleNeedsUpdate) {\n      this.#label.setLineHeight(fontSize * this.#scale);\n      this.#scaleNeedsUpdate = false;\n    }\n\n    if (this.#annotationNeedsUpdate) {\n      this.#label.setText(text);\n      this.#label.setColor(\n        SRGBToLinear(textColor.r),\n        SRGBToLinear(textColor.g),\n        SRGBToLinear(textColor.b),\n      );\n      // Need to keep it transparent so that other transparent objects aren't rendered over it\n      this.#label.setOpacity(Math.min(textColor.a, 0.999));\n\n      if (backgroundColor) {\n        this.#label.setBackgroundColor(\n          SRGBToLinear(backgroundColor.r),\n          SRGBToLinear(backgroundColor.g),\n          SRGBToLinear(backgroundColor.b),\n        );\n      } else {\n        const foregroundIsDark = getLuminance(textColor.r, textColor.g, textColor.b) < 0.5;\n        if (foregroundIsDark) {\n          this.#label.setBackgroundColor(1, 1, 1);\n        } else {\n          this.#label.setBackgroundColor(0, 0, 0);\n        }\n      }\n    }\n\n    if (this.#annotationNeedsUpdate || this.#cameraModelNeedsUpdate) {\n      this.#cameraModel.projectPixelTo3dPlane(this.#label.position, position);\n    }\n\n    this.#annotationNeedsUpdate = false;\n    this.#cameraModelNeedsUpdate = false;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { RosObject } from \"@foxglove/studio-base/players/types\";\nimport { LabelPool } from \"@foxglove/three-text\";\n\nimport { RenderableLineAnnotation } from \"./RenderableLineAnnotation\";\nimport { RenderablePointsAnnotation } from \"./RenderablePointsAnnotation\";\nimport { RenderableTextAnnotation } from \"./RenderableTextAnnotation\";\nimport { Annotation as NormalizedAnnotation } from \"./types\";\n\n/**\n * Holds renderables for all the 2D image annotations on a single topic.\n */\nexport class RenderableTopicAnnotations extends THREE.Object3D {\n  #labelPool: LabelPool;\n  #points: RenderablePointsAnnotation[] = [];\n  #lines: RenderableLineAnnotation[] = [];\n  #texts: RenderableTextAnnotation[] = [];\n\n  #scale = 0;\n  #canvasWidth = 0;\n  #canvasHeight = 0;\n  #pixelRatio = 0;\n  #scaleNeedsUpdate = false;\n\n  #annotations: NormalizedAnnotation[] = [];\n  #annotationsNeedsUpdate = false;\n\n  #cameraModel?: PinholeCameraModel;\n  #cameraModelNeedsUpdate = false;\n\n  #originalMessage?: RosObject;\n  #topicName: string;\n\n  public constructor(topicName: string, labelPool: LabelPool) {\n    super();\n    this.#labelPool = labelPool;\n    this.#topicName = topicName;\n  }\n\n  public dispose(): void {\n    for (const points of this.#points) {\n      points.dispose();\n    }\n    for (const lineList of this.#lines) {\n      lineList.dispose();\n    }\n  }\n\n  public setScale(\n    scale: number,\n    canvasWidth: number,\n    canvasHeight: number,\n    pixelRatio: number,\n  ): void {\n    this.#scaleNeedsUpdate ||= this.#scale !== scale;\n    this.#scale = scale;\n    this.#canvasWidth = canvasWidth;\n    this.#canvasHeight = canvasHeight;\n    this.#pixelRatio = pixelRatio;\n  }\n\n  public setOriginalMessage(originalMessage: RosObject | undefined): void {\n    this.#originalMessage = originalMessage;\n  }\n\n  public setCameraModel(cameraModel: PinholeCameraModel | undefined): void {\n    this.#cameraModelNeedsUpdate ||= this.#cameraModel !== cameraModel;\n    this.#cameraModel = cameraModel;\n  }\n\n  public setAnnotations(annotations: NormalizedAnnotation[]): void {\n    this.#annotationsNeedsUpdate ||= this.#annotations !== annotations;\n    this.#annotations = annotations;\n  }\n\n  public update(): void {\n    if (this.#scaleNeedsUpdate) {\n      this.#scaleNeedsUpdate = false;\n      for (const points of this.#points) {\n        points.setScale(this.#scale, this.#canvasWidth, this.#canvasHeight, this.#pixelRatio);\n      }\n      for (const lineList of this.#lines) {\n        lineList.setScale(this.#scale, this.#canvasWidth, this.#canvasHeight, this.#pixelRatio);\n      }\n      for (const text of this.#texts) {\n        text.setScale(this.#scale, this.#canvasWidth, this.#canvasHeight, this.#pixelRatio);\n      }\n    }\n\n    if (this.#cameraModelNeedsUpdate) {\n      this.#cameraModelNeedsUpdate = false;\n      for (const points of this.#points) {\n        points.setCameraModel(this.#cameraModel);\n      }\n      for (const lineList of this.#lines) {\n        lineList.setCameraModel(this.#cameraModel);\n      }\n      for (const text of this.#texts) {\n        text.setCameraModel(this.#cameraModel);\n      }\n    }\n\n    const updateRenderables = () => {\n      for (const points of this.#points) {\n        points.update();\n      }\n      for (const lineList of this.#lines) {\n        lineList.update();\n      }\n      for (const text of this.#texts) {\n        text.update();\n      }\n    };\n\n    if (!this.#annotationsNeedsUpdate) {\n      updateRenderables();\n      return;\n    }\n\n    this.#annotationsNeedsUpdate = false;\n\n    // Reverse arrays so renderables are more likely to be reused for similarly-structured\n    // annotations when using pop() below.\n    const unusedPoints = this.#points.reverse();\n    this.#points = [];\n    const unusedLines = this.#lines.reverse();\n    this.#lines = [];\n    const unusedTexts = this.#texts.reverse();\n    this.#texts = [];\n\n    for (const annotation of this.#annotations) {\n      switch (annotation.type) {\n        case \"circle\": {\n          let line = unusedLines.pop();\n          if (!line) {\n            line = new RenderableLineAnnotation(this.#topicName);\n            line.setScale(this.#scale, this.#canvasWidth, this.#canvasHeight, this.#pixelRatio);\n            line.setCameraModel(this.#cameraModel);\n            this.add(line);\n          }\n          this.#lines.push(line);\n          line.setAnnotationFromCircle(annotation, this.#originalMessage);\n          break;\n        }\n\n        case \"points\":\n          switch (annotation.style) {\n            case \"points\": {\n              let points = unusedPoints.pop();\n              if (!points) {\n                points = new RenderablePointsAnnotation(this.#topicName);\n                points.setScale(\n                  this.#scale,\n                  this.#canvasWidth,\n                  this.#canvasHeight,\n                  this.#pixelRatio,\n                );\n                points.setCameraModel(this.#cameraModel);\n                this.add(points);\n              }\n              this.#points.push(points);\n              points.setAnnotation(\n                annotation as typeof annotation & { style: typeof annotation.style },\n                this.#originalMessage,\n              );\n              break;\n            }\n\n            case \"polygon\":\n            case \"line_strip\":\n            case \"line_list\": {\n              let line = unusedLines.pop();\n              if (!line) {\n                line = new RenderableLineAnnotation(this.#topicName);\n                line.setScale(this.#scale, this.#canvasWidth, this.#canvasHeight, this.#pixelRatio);\n                line.setCameraModel(this.#cameraModel);\n                this.add(line);\n              }\n              this.#lines.push(line);\n              line.setAnnotation(\n                annotation as typeof annotation & { style: typeof annotation.style },\n                this.#originalMessage,\n              );\n              break;\n            }\n          }\n          break;\n\n        case \"text\": {\n          let text = unusedTexts.pop();\n          if (!text) {\n            text = new RenderableTextAnnotation(this.#topicName, this.#labelPool);\n            text.setScale(this.#scale, this.#canvasWidth, this.#canvasHeight, this.#pixelRatio);\n            text.setCameraModel(this.#cameraModel);\n            this.add(text);\n          }\n          this.#texts.push(text);\n          text.setAnnotation(annotation, this.#originalMessage);\n          break;\n        }\n      }\n    }\n\n    updateRenderables();\n\n    for (const points of unusedPoints) {\n      points.removeFromParent();\n      points.dispose();\n    }\n    for (const lineList of unusedLines) {\n      lineList.removeFromParent();\n      lineList.dispose();\n    }\n    for (const text of unusedTexts) {\n      text.removeFromParent();\n      text.dispose();\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nconst TOPIC_PREFIX_REGEX = /^.+\\/(?=.)/;\n\n/**\n * Get a prefix of the given `topic` which can be used to match against related image, calibration, or annotation topics.\n *\n * Matches everything up to the last `/` in a topic name, e.g. `getTopicMatchPrefix(\"/a/b/c\")` returns `\"/a/b/\"`.\n */\nexport function getTopicMatchPrefix(topic: string): string | undefined {\n  return TOPIC_PREFIX_REGEX.exec(topic)?.[0];\n}\n\n/**\n * Sort the given `array` so items for which `key(item)` matches the prefix of the given `imageTopic` are at the beginning.\n */\nexport function sortPrefixMatchesToFront<T>(\n  array: T[],\n  imageTopic: string,\n  key: (item: T) => string,\n): void {\n  const prefix = getTopicMatchPrefix(imageTopic);\n  if (prefix == undefined) {\n    return;\n  }\n  array.sort((a, b) => {\n    const matchesA = key(a).startsWith(prefix);\n    const matchesB = key(b).startsWith(prefix);\n    return matchesA === matchesB ? 0 : matchesA ? -1 : 1;\n  });\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { t } from \"i18next\";\nimport * as THREE from \"three\";\n\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { ImageAnnotations as FoxgloveImageAnnotations } from \"@foxglove/schemas\";\nimport { Immutable, MessageEvent, SettingsTreeAction, Topic } from \"@foxglove/studio\";\nimport {\n  ImageMarker as RosImageMarker,\n  ImageMarkerArray as RosImageMarkerArray,\n} from \"@foxglove/studio-base/types/Messages\";\nimport { LabelPool } from \"@foxglove/three-text\";\n\nimport { RenderableTopicAnnotations } from \"./RenderableTopicAnnotations\";\nimport { Annotation } from \"./types\";\nimport { AnyRendererSubscription, ImageModeConfig } from \"../../../IRenderer\";\nimport { SettingsTreeEntry } from \"../../../SettingsManager\";\nimport { IMAGE_ANNOTATIONS_DATATYPES } from \"../../../foxglove\";\nimport { IMAGE_MARKER_ARRAY_DATATYPES, IMAGE_MARKER_DATATYPES } from \"../../../ros\";\nimport { topicIsConvertibleToSchema } from \"../../../topicIsConvertibleToSchema\";\nimport { sortPrefixMatchesToFront } from \"../../Images/topicPrefixMatching\";\nimport { MessageHandler, MessageRenderState } from \"../MessageHandler\";\n\ntype TopicName = string & { __brand: \"TopicName\" };\n\ninterface ImageAnnotationsContext {\n  initialScale: number;\n  initialCanvasWidth: number;\n  initialCanvasHeight: number;\n  initialPixelRatio: number;\n  topics(): readonly Topic[];\n  config(): Immutable<ImageModeConfig>;\n  updateConfig(updateHandler: (draft: ImageModeConfig) => void): void;\n  updateSettingsTree(): void;\n  labelPool: LabelPool;\n  messageHandler: MessageHandler;\n}\n\n/** For backwards compatibility with previously published type definitions, older studio versions, and webviz */\nconst LEGACY_ANNOTATION_SCHEMAS = new Set([\n  \"foxglove_msgs/ImageMarkerArray\",\n  \"foxglove_msgs/msg/ImageMarkerArray\",\n  \"studio_msgs/ImageMarkerArray\",\n  \"studio_msgs/msg/ImageMarkerArray\",\n  \"webviz_msgs/ImageMarkerArray\",\n]);\n\nconst ALL_SUPPORTED_SCHEMAS = new Set([\n  ...IMAGE_ANNOTATIONS_DATATYPES,\n  ...IMAGE_MARKER_DATATYPES,\n  ...IMAGE_MARKER_ARRAY_DATATYPES,\n  ...LEGACY_ANNOTATION_SCHEMAS,\n]);\n\n/**\n * This class handles settings and rendering for ImageAnnotations/ImageMarkers.\n */\nexport class ImageAnnotations extends THREE.Object3D {\n  #context: ImageAnnotationsContext;\n\n  #renderablesByTopic = new Map<TopicName, RenderableTopicAnnotations>();\n  #cameraModel?: PinholeCameraModel;\n\n  #scale: number;\n  #canvasWidth: number;\n  #canvasHeight: number;\n  #pixelRatio: number;\n\n  public constructor(context: ImageAnnotationsContext) {\n    super();\n    this.#context = context;\n    this.#scale = context.initialScale;\n    this.#canvasWidth = context.initialCanvasWidth;\n    this.#canvasHeight = context.initialCanvasHeight;\n    this.#pixelRatio = context.initialPixelRatio;\n    context.messageHandler.addListener(this.#updateFromMessageState);\n  }\n\n  public getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: ALL_SUPPORTED_SCHEMAS,\n        subscription: { handler: this.#context.messageHandler.handleAnnotations },\n      },\n    ];\n  }\n\n  public dispose(): void {\n    for (const renderable of this.#renderablesByTopic.values()) {\n      renderable.dispose();\n    }\n    this.children.length = 0;\n    this.#renderablesByTopic.clear();\n  }\n\n  /** Called when seeking or a new data source is loaded.  */\n  public removeAllRenderables(): void {\n    for (const renderable of this.#renderablesByTopic.values()) {\n      renderable.dispose();\n      this.remove(renderable);\n    }\n    this.#renderablesByTopic.clear();\n  }\n\n  public updateScale(\n    scale: number,\n    canvasWidth: number,\n    canvasHeight: number,\n    pixelRatio: number,\n  ): void {\n    this.#scale = scale;\n    this.#canvasWidth = canvasWidth;\n    this.#canvasHeight = canvasHeight;\n    this.#pixelRatio = pixelRatio;\n    for (const renderable of this.#renderablesByTopic.values()) {\n      renderable.setScale(scale, canvasWidth, canvasHeight, pixelRatio);\n      renderable.update();\n    }\n  }\n\n  public updateCameraModel(cameraModel: PinholeCameraModel): void {\n    this.#cameraModel = cameraModel;\n    for (const renderable of this.#renderablesByTopic.values()) {\n      renderable.setCameraModel(cameraModel);\n      renderable.update();\n    }\n  }\n\n  #updateFromMessageState = (newState: MessageRenderState) => {\n    if (newState.annotationsByTopic != undefined) {\n      for (const { originalMessage, annotations } of newState.annotationsByTopic.values()) {\n        this.#handleMessage(originalMessage, annotations);\n      }\n    }\n  };\n\n  #handleMessage(\n    messageEvent: MessageEvent<FoxgloveImageAnnotations | RosImageMarker | RosImageMarkerArray>,\n    annotations: Annotation[],\n  ) {\n    let renderable = this.#renderablesByTopic.get(messageEvent.topic as TopicName);\n    if (!renderable) {\n      renderable = new RenderableTopicAnnotations(messageEvent.topic, this.#context.labelPool);\n      renderable.setScale(this.#scale, this.#canvasWidth, this.#canvasHeight, this.#pixelRatio);\n      renderable.setCameraModel(this.#cameraModel);\n      this.#renderablesByTopic.set(messageEvent.topic as TopicName, renderable);\n      this.add(renderable);\n    }\n\n    renderable.setOriginalMessage(messageEvent.message);\n    renderable.setAnnotations(annotations);\n    renderable.update();\n  }\n\n  #handleSettingsAction(action: SettingsTreeAction): void {\n    if (action.action !== \"update\" || action.payload.path.length < 2) {\n      return;\n    }\n    const { value, path } = action.payload;\n    const topic = path[1]! as TopicName;\n    if (path[0] === \"imageAnnotations\" && path[2] === \"visible\" && typeof value === \"boolean\") {\n      this.#handleTopicVisibilityChange(topic, value);\n    }\n    this.#context.updateSettingsTree();\n  }\n\n  #handleTopicVisibilityChange(\n    topic: TopicName,\n    visible: boolean, // eslint-disable-line @foxglove/no-boolean-parameters\n  ): void {\n    this.#context.updateConfig((draft) => {\n      draft.annotations ??= {};\n      const settings = (draft.annotations[topic] ??= {});\n      settings.visible = visible;\n    });\n    this.#context.messageHandler.setConfig({\n      annotations: this.#context.config().annotations,\n    } as Readonly<Partial<ImageModeConfig>>);\n    const renderable = this.#renderablesByTopic.get(topic);\n    if (renderable) {\n      renderable.visible = visible;\n    }\n  }\n\n  public settingsNodes(): SettingsTreeEntry[] {\n    const entries: SettingsTreeEntry[] = [];\n\n    entries.push({\n      path: [\"imageAnnotations\"],\n      node: {\n        label: t(\"threeDee:imageAnnotations\"),\n        enableVisibilityFilter: true,\n        defaultExpansionState: \"expanded\",\n      },\n    });\n    const config = this.#context.config();\n\n    const annotationTopics = this.#context\n      .topics()\n      .filter((topic) => topicIsConvertibleToSchema(topic, ALL_SUPPORTED_SCHEMAS));\n\n    // Sort annotation topics with prefixes matching the image topic to the top.\n    if (config.imageTopic) {\n      sortPrefixMatchesToFront(annotationTopics, config.imageTopic, (topic) => topic.name);\n    }\n\n    for (const topic of annotationTopics) {\n      const settings = config.annotations?.[topic.name];\n      entries.push({\n        path: [\"imageAnnotations\", topic.name],\n        node: {\n          label: topic.name,\n          visible: settings?.visible ?? false,\n          handler: this.#handleSettingsAction.bind(this),\n        },\n      });\n    }\n    return entries;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { Immutable, SettingsTreeAction, SettingsTreeFields, Topic } from \"@foxglove/studio\";\nimport {\n  IMAGE_RENDERABLE_DEFAULT_SETTINGS,\n  ImageRenderable,\n  ImageRenderableSettings,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/Images/ImageRenderable\";\nimport {\n  AnyImage,\n  DownloadImageInfo,\n  getFrameIdFromImage,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/Images/ImageTypes\";\nimport {\n  cameraInfosEqual,\n  normalizeCameraInfo,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/projections\";\nimport { makePose } from \"@foxglove/studio-base/panels/ThreeDeeRender/transforms\";\n\nimport { ImageModeCamera } from \"./ImageModeCamera\";\nimport { MessageHandler, MessageRenderState } from \"./MessageHandler\";\nimport { ImageAnnotations } from \"./annotations/ImageAnnotations\";\nimport type { AnyRendererSubscription, IRenderer, ImageModeConfig } from \"../../IRenderer\";\nimport { PartialMessageEvent, SceneExtension } from \"../../SceneExtension\";\nimport { SettingsTreeEntry } from \"../../SettingsManager\";\nimport {\n  CAMERA_CALIBRATION_DATATYPES,\n  COMPRESSED_IMAGE_DATATYPES,\n  RAW_IMAGE_DATATYPES,\n} from \"../../foxglove\";\nimport {\n  IMAGE_DATATYPES as ROS_IMAGE_DATATYPES,\n  COMPRESSED_IMAGE_DATATYPES as ROS_COMPRESSED_IMAGE_DATATYPES,\n  CAMERA_INFO_DATATYPES,\n  CameraInfo,\n} from \"../../ros\";\nimport { topicIsConvertibleToSchema } from \"../../topicIsConvertibleToSchema\";\nimport { ICameraHandler } from \"../ICameraHandler\";\nimport { getTopicMatchPrefix, sortPrefixMatchesToFront } from \"../Images/topicPrefixMatching\";\n\nconst IMAGE_TOPIC_PATH = [\"imageMode\", \"imageTopic\"];\nconst CALIBRATION_TOPIC_PATH = [\"imageMode\", \"calibrationTopic\"];\n\nconst IMAGE_TOPIC_UNAVAILABLE = \"IMAGE_TOPIC_UNAVAILABLE\";\nconst CALIBRATION_TOPIC_UNAVAILABLE = \"CALIBRATION_TOPIC_UNAVAILABLE\";\n\nconst MISSING_CAMERA_INFO = \"MISSING_CAMERA_INFO\";\nconst IMAGE_TOPIC_DIFFERENT_FRAME = \"IMAGE_TOPIC_DIFFERENT_FRAME\";\n\nconst CAMERA_MODEL = \"CameraModel\";\n\nconst DEFAULT_FOCAL_LENGTH = 500;\n\nconst REMOVE_IMAGE_TIMEOUT_MS = 50;\n\ntype ImageModeEvent = { type: \"hasModifiedViewChanged\" };\n\nconst ALL_SUPPORTED_IMAGE_SCHEMAS = new Set([\n  ...ROS_IMAGE_DATATYPES,\n  ...ROS_COMPRESSED_IMAGE_DATATYPES,\n  ...RAW_IMAGE_DATATYPES,\n  ...COMPRESSED_IMAGE_DATATYPES,\n]);\n\nconst ALL_SUPPORTED_CALIBRATION_SCHEMAS = new Set([\n  ...CAMERA_INFO_DATATYPES,\n  ...CAMERA_CALIBRATION_DATATYPES,\n]);\n\nconst DEFAULT_CONFIG = {\n  synchronize: false,\n  flipHorizontal: false,\n  flipVertical: false,\n  rotation: 0 as 0 | 90 | 180 | 270,\n};\n\ntype ConfigWithDefaults = ImageModeConfig & typeof DEFAULT_CONFIG;\nexport class ImageMode\n  extends SceneExtension<ImageRenderable, ImageModeEvent>\n  implements ICameraHandler\n{\n  #camera: ImageModeCamera;\n  #cameraModel:\n    | {\n        model: PinholeCameraModel;\n        info: CameraInfo;\n      }\n    | undefined;\n\n  readonly #annotations: ImageAnnotations;\n\n  #imageRenderable: ImageRenderable | undefined;\n  #removeImageTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  readonly #messageHandler: MessageHandler;\n\n  #dragStartPanOffset = new THREE.Vector2();\n  #dragStartMouseCoords = new THREE.Vector2();\n  #hasModifiedView = false;\n\n  // Will need to change when synchronization is implemented (FG-2686)\n  #latestImage: { topic: string; image: AnyImage } | undefined;\n\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  #setHasCalibrationTopic: (hasCalibrationTopic: boolean) => void;\n\n  /**\n   * @param canvasSize Canvas size in CSS pixels\n   */\n  public constructor(\n    renderer: IRenderer,\n    {\n      canvasSize,\n      setHasCalibrationTopic,\n    }: {\n      canvasSize: THREE.Vector2;\n\n      // eslint-disable-next-line @foxglove/no-boolean-parameters\n      setHasCalibrationTopic: (hasCalibrationTopic: boolean) => void;\n    },\n  ) {\n    super(\"foxglove.ImageMode\", renderer);\n\n    this.#setHasCalibrationTopic = setHasCalibrationTopic;\n\n    this.#camera = new ImageModeCamera();\n\n    const config = this.#getImageModeSettings();\n\n    this.#camera.setCanvasSize(canvasSize.width, canvasSize.height);\n    this.#camera.setRotation(config.rotation);\n    this.#camera.setFlipHorizontal(config.flipHorizontal);\n    this.#camera.setFlipVertical(config.flipVertical);\n\n    this.#messageHandler = new MessageHandler(config);\n    this.#messageHandler.addListener(this.#updateFromMessageState);\n\n    renderer.settings.errors.on(\"update\", this.#handleErrorChange);\n    renderer.settings.errors.on(\"clear\", this.#handleErrorChange);\n    renderer.settings.errors.on(\"remove\", this.#handleErrorChange);\n    this.#annotations = new ImageAnnotations({\n      initialScale: this.#camera.getEffectiveScale(),\n      initialCanvasWidth: canvasSize.width,\n      initialCanvasHeight: canvasSize.height,\n      initialPixelRatio: renderer.getPixelRatio(),\n      topics: () => renderer.topics ?? [],\n      config: () => this.#getImageModeSettings(),\n      updateConfig: (updateHandler) => {\n        renderer.updateConfig((draft) => updateHandler(draft.imageMode));\n      },\n      updateSettingsTree: () => {\n        this.updateSettingsTree();\n      },\n      labelPool: renderer.labelPool,\n      messageHandler: this.#messageHandler,\n    });\n    this.add(this.#annotations);\n\n    renderer.input.on(\"mousedown\", (mouseDownCursorCoords) => {\n      this.#camera.getPanOffset(this.#dragStartPanOffset);\n      this.#dragStartMouseCoords.copy(mouseDownCursorCoords);\n\n      renderer.input.trackDrag((mouseMoveCursorCoords) => {\n        this.#camera.setPanOffset(\n          mouseMoveCursorCoords\n            .clone()\n            .sub(this.#dragStartMouseCoords)\n            .add(this.#dragStartPanOffset),\n        );\n        this.#hasModifiedView = true;\n        this.dispatchEvent({ type: \"hasModifiedViewChanged\" });\n        this.renderer.queueAnimationFrame();\n      });\n    });\n\n    renderer.input.on(\"wheel\", (cursorCoords, _worldSpaceCursorCoords, event) => {\n      this.#camera.updateZoomFromWheel(\n        // Clamp wheel deltas which can vary wildly across different operating systems, browsers, and input devices.\n        1 - 0.01 * THREE.MathUtils.clamp(event.deltaY, -30, 30),\n        cursorCoords,\n      );\n      this.#updateAnnotationsScale();\n      this.#hasModifiedView = true;\n      this.dispatchEvent({ type: \"hasModifiedViewChanged\" });\n      this.renderer.queueAnimationFrame();\n    });\n\n    this.renderer.on(\"topicsChanged\", this.#handleTopicsChanged);\n    this.#handleTopicsChanged();\n  }\n\n  public hasModifiedView(): boolean {\n    return this.#hasModifiedView;\n  }\n\n  public resetViewModifications(): void {\n    this.#hasModifiedView = false;\n    this.#camera.resetModifications();\n    this.#updateAnnotationsScale();\n    this.dispatchEvent({ type: \"hasModifiedViewChanged\" });\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    const subscriptions: AnyRendererSubscription[] = [\n      {\n        type: \"schema\",\n        schemaNames: ALL_SUPPORTED_CALIBRATION_SCHEMAS,\n        subscription: {\n          handler: this.#messageHandler.handleCameraInfo,\n          shouldSubscribe: this.#cameraInfoShouldSubscribe,\n        },\n      },\n      {\n        type: \"schema\",\n        schemaNames: ROS_IMAGE_DATATYPES,\n        subscription: {\n          handler: this.#messageHandler.handleRosRawImage,\n          shouldSubscribe: this.#imageShouldSubscribe,\n        },\n      },\n      {\n        type: \"schema\",\n        schemaNames: ROS_COMPRESSED_IMAGE_DATATYPES,\n        subscription: {\n          handler: this.#messageHandler.handleRosCompressedImage,\n          shouldSubscribe: this.#imageShouldSubscribe,\n        },\n      },\n      {\n        type: \"schema\",\n        schemaNames: RAW_IMAGE_DATATYPES,\n        subscription: {\n          handler: this.#messageHandler.handleRawImage,\n          shouldSubscribe: this.#imageShouldSubscribe,\n        },\n      },\n      {\n        type: \"schema\",\n        schemaNames: COMPRESSED_IMAGE_DATATYPES,\n        subscription: {\n          handler: this.#messageHandler.handleCompressedImage,\n          shouldSubscribe: this.#imageShouldSubscribe,\n        },\n      },\n    ];\n    return subscriptions.concat(this.#annotations.getSubscriptions());\n  }\n\n  public override dispose(): void {\n    this.renderer.settings.errors.off(\"update\", this.#handleErrorChange);\n    this.renderer.settings.errors.off(\"clear\", this.#handleErrorChange);\n    this.renderer.settings.errors.off(\"remove\", this.#handleErrorChange);\n    this.renderer.off(\"topicsChanged\", this.#handleTopicsChanged);\n    this.#annotations.dispose();\n    this.#imageRenderable?.dispose();\n    super.dispose();\n  }\n\n  public override removeAllRenderables(): void {\n    // To avoid flickering while seeking or changing subscriptions, we avoid clearing the\n    // ImageRenderable for a short timeout. When a new image message arrives, we cancel the timeout,\n    // so the old image will continue displaying until the new one has been decoded.\n    if (this.#removeImageTimeout == undefined) {\n      this.#removeImageTimeout = setTimeout(() => {\n        this.#removeImageTimeout = undefined;\n        this.#imageRenderable?.dispose();\n        this.#imageRenderable?.removeFromParent();\n        this.#imageRenderable = undefined;\n        this.#clearCameraModel();\n      }, REMOVE_IMAGE_TIMEOUT_MS);\n    }\n    this.#annotations.removeAllRenderables();\n    this.#messageHandler.clear();\n    this.#latestImage = undefined;\n    super.removeAllRenderables();\n  }\n\n  /**\n   * If no image topic is selected, automatically select the first available one from `renderer.topics`.\n   * Also auto-select a new calibration topic to match the new image topic.\n   */\n  #handleTopicsChanged = () => {\n    if (this.#getImageModeSettings().imageTopic != undefined) {\n      return;\n    }\n\n    const imageTopic = this.renderer.topics?.find((topic) =>\n      topicIsConvertibleToSchema(topic, ALL_SUPPORTED_IMAGE_SCHEMAS),\n    );\n    if (imageTopic == undefined) {\n      return;\n    }\n\n    const matchingCalibrationTopic = this.#getMatchingCalibrationTopic(imageTopic.name);\n\n    this.renderer.updateConfig((draft) => {\n      draft.imageMode.imageTopic = imageTopic.name;\n      if (matchingCalibrationTopic != undefined) {\n        draft.imageMode.calibrationTopic = matchingCalibrationTopic.name;\n      }\n    });\n    if (matchingCalibrationTopic) {\n      this.#setHasCalibrationTopic(true);\n    }\n  };\n\n  /** Choose a calibration topic that best matches the given `imageTopic`. */\n  #getMatchingCalibrationTopic(imageTopic: string): Topic | undefined {\n    const prefix = getTopicMatchPrefix(imageTopic);\n    if (prefix == undefined) {\n      return undefined;\n    }\n    return this.renderer.topics?.find(\n      (topic) =>\n        topicIsConvertibleToSchema(topic, ALL_SUPPORTED_CALIBRATION_SCHEMAS) &&\n        topic.name.startsWith(prefix),\n    );\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const handler = this.handleSettingsAction;\n\n    const {\n      imageTopic,\n      calibrationTopic,\n      synchronize,\n      flipHorizontal,\n      flipVertical,\n      rotation,\n      minValue,\n      maxValue,\n    } = this.#getImageModeSettings();\n\n    const imageTopics = filterMap(this.renderer.topics ?? [], (topic) => {\n      if (!topicIsConvertibleToSchema(topic, ALL_SUPPORTED_IMAGE_SCHEMAS)) {\n        return;\n      }\n      return { label: topic.name, value: topic.name };\n    });\n\n    const calibrationTopics: { label: string; value: string | undefined }[] = filterMap(\n      this.renderer.topics ?? [],\n      (topic) => {\n        if (!topicIsConvertibleToSchema(topic, ALL_SUPPORTED_CALIBRATION_SCHEMAS)) {\n          return;\n        }\n        return { label: topic.name, value: topic.name };\n      },\n    );\n\n    // Sort calibration topics with prefixes matching the image topic to the top.\n    if (imageTopic) {\n      sortPrefixMatchesToFront(calibrationTopics, imageTopic, (option) => option.label);\n    }\n\n    // add unselected camera calibration option\n    calibrationTopics.unshift({ label: \"None\", value: undefined });\n\n    if (imageTopic && !imageTopics.some((topic) => topic.value === imageTopic)) {\n      this.renderer.settings.errors.add(\n        IMAGE_TOPIC_PATH,\n        IMAGE_TOPIC_UNAVAILABLE,\n        `${imageTopic} is not available`,\n      );\n    } else {\n      this.renderer.settings.errors.remove(IMAGE_TOPIC_PATH, IMAGE_TOPIC_UNAVAILABLE);\n    }\n\n    if (calibrationTopic && !calibrationTopics.some((topic) => topic.value === calibrationTopic)) {\n      this.renderer.settings.errors.add(\n        CALIBRATION_TOPIC_PATH,\n        CALIBRATION_TOPIC_UNAVAILABLE,\n        `${calibrationTopic} is not available`,\n      );\n    } else {\n      this.renderer.settings.errors.remove(CALIBRATION_TOPIC_PATH, CALIBRATION_TOPIC_UNAVAILABLE);\n    }\n\n    const imageTopicError = this.renderer.settings.errors.errors.errorAtPath(IMAGE_TOPIC_PATH);\n    const calibrationTopicError =\n      this.renderer.settings.errors.errors.errorAtPath(CALIBRATION_TOPIC_PATH);\n\n    const fields: SettingsTreeFields = {};\n    fields.imageTopic = {\n      label: \"Topic\",\n      input: \"select\",\n      value: imageTopic,\n      options: imageTopics,\n      error: imageTopicError,\n    };\n    fields.calibrationTopic = {\n      label: \"Calibration\",\n      input: \"select\",\n      value: calibrationTopic,\n      options: calibrationTopics,\n      error: calibrationTopicError,\n    };\n    fields.synchronize = {\n      input: \"boolean\",\n      label: \"Sync annotations\",\n      value: synchronize,\n    };\n    fields.flipHorizontal = {\n      input: \"boolean\",\n      label: \"Flip horizontal\",\n      value: flipHorizontal,\n    };\n    fields.flipVertical = {\n      input: \"boolean\",\n      label: \"Flip vertical\",\n      value: flipVertical,\n    };\n    fields.rotation = {\n      input: \"toggle\",\n      label: \"Rotation\",\n      value: rotation,\n      options: [\n        { label: \"0°\", value: 0 },\n        { label: \"90°\", value: 90 },\n        { label: \"180°\", value: 180 },\n        { label: \"270°\", value: 270 },\n      ],\n    };\n    fields.minValue = {\n      input: \"number\",\n      label: \"Min (depth images)\",\n      placeholder: \"0\",\n      step: 1,\n      precision: 0,\n      value: minValue,\n    };\n    fields.maxValue = {\n      input: \"number\",\n      label: \"Max (depth images)\",\n      placeholder: \"10000\",\n      step: 1,\n      precision: 0,\n      value: maxValue,\n    };\n    return [\n      {\n        path: [\"imageMode\"],\n        node: {\n          label: \"General\",\n          defaultExpansionState: \"expanded\",\n          handler,\n          fields,\n        },\n      },\n      ...this.#annotations.settingsNodes(),\n    ];\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n\n    const path = action.payload.path;\n    const category = path[0]!;\n    const value = action.payload.value;\n    if (category === \"imageMode\") {\n      const prevImageModeConfig = this.#getImageModeSettings();\n      this.saveSetting(path, value);\n      const config = this.#getImageModeSettings();\n      const calibrationTopicChanged =\n        config.calibrationTopic !== prevImageModeConfig.calibrationTopic;\n      if (calibrationTopicChanged) {\n        const changingToUnselectedCalibration = config.calibrationTopic == undefined;\n        if (changingToUnselectedCalibration) {\n          this.#setHasCalibrationTopic(false);\n        }\n\n        const changingFromUnselectedCalibration = prevImageModeConfig.calibrationTopic == undefined;\n        if (changingFromUnselectedCalibration) {\n          this.#setHasCalibrationTopic(true);\n        }\n      }\n      const imageTopicChanged = config.imageTopic !== prevImageModeConfig.imageTopic;\n      if (imageTopicChanged && config.imageTopic != undefined) {\n        const calibrationTopic = this.#getMatchingCalibrationTopic(config.imageTopic);\n        if (calibrationTopic) {\n          this.renderer.updateConfig((draft) => {\n            draft.imageMode.calibrationTopic = calibrationTopic.name;\n          });\n          this.#setHasCalibrationTopic(true);\n        }\n      }\n\n      if (config.rotation !== prevImageModeConfig.rotation) {\n        this.#camera.setRotation(config.rotation);\n      }\n      if (config.flipHorizontal !== prevImageModeConfig.flipHorizontal) {\n        this.#camera.setFlipHorizontal(config.flipHorizontal);\n      }\n      if (config.flipVertical !== prevImageModeConfig.flipVertical) {\n        this.#camera.setFlipVertical(config.flipVertical);\n      }\n      if (\n        config.minValue !== prevImageModeConfig.minValue ||\n        config.maxValue !== prevImageModeConfig.maxValue\n      ) {\n        this.#imageRenderable?.setSettings({\n          ...this.#imageRenderable.userData.settings,\n          minValue: config.minValue,\n          maxValue: config.maxValue,\n        });\n      }\n      if (config.synchronize !== prevImageModeConfig.synchronize) {\n        this.removeAllRenderables();\n      }\n      this.#messageHandler.setConfig(config);\n\n      this.#updateViewAndRenderables();\n    } else {\n      return;\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n\n  #cameraInfoShouldSubscribe = (topic: string): boolean => {\n    return this.#getImageModeSettings().calibrationTopic === topic;\n  };\n\n  #imageShouldSubscribe = (topic: string): boolean => {\n    return this.#getImageModeSettings().imageTopic === topic;\n  };\n\n  #updateFromMessageState = (\n    newState: MessageRenderState,\n    oldState: MessageRenderState | undefined,\n  ): void => {\n    if (newState.image != undefined && newState.image !== oldState?.image) {\n      this.#handleImageChange(newState.image, newState.image.message);\n    }\n    if (newState.cameraInfo != undefined && newState.cameraInfo !== oldState?.cameraInfo) {\n      this.#handleCameraInfoChange(newState.cameraInfo);\n    }\n  };\n\n  /** Processes camera info messages and updates state */\n  #handleCameraInfoChange = (cameraInfo: CameraInfo): void => {\n    // Store the last camera info on each topic, when processing an image message we'll look up\n    // the camera info by the info topic configured for the image\n    this.#updateCameraModel(cameraInfo);\n    this.#updateViewAndRenderables();\n  };\n\n  #handleImageChange = (messageEvent: PartialMessageEvent<AnyImage>, image: AnyImage): void => {\n    const topic = messageEvent.topic;\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const frameId = \"header\" in image ? image.header.frame_id : image.frame_id;\n\n    if (this.#removeImageTimeout != undefined) {\n      clearTimeout(this.#removeImageTimeout);\n      this.#removeImageTimeout = undefined;\n    }\n\n    const renderable = this.#getImageRenderable(topic, receiveTime, image, frameId);\n\n    this.#latestImage = { topic: messageEvent.topic, image };\n\n    if (this.#cameraModel) {\n      renderable.userData.cameraInfo = this.#cameraModel.info;\n      renderable.setCameraModel(this.#cameraModel.model);\n    }\n\n    renderable.name = topic;\n    renderable.userData.receiveTime = receiveTime;\n    renderable.setImage(image, /*resizeWidth=*/ undefined, (size) => {\n      if (this.#fallbackCameraModelActive()) {\n        this.#updateFallbackCameraModel(size, getFrameIdFromImage(image));\n      }\n    });\n  };\n\n  #updateFallbackCameraModel = (size: { width: number; height: number }, frameId: string): void => {\n    const cameraInfo = createFallbackCameraInfoForImage({\n      frameId,\n      height: size.height,\n      width: size.width,\n      focalLength: DEFAULT_FOCAL_LENGTH,\n    });\n    this.#updateCameraModel(cameraInfo);\n    this.#updateViewAndRenderables();\n  };\n\n  #fallbackCameraModelActive = (): boolean => {\n    // Don't use #getImageModeSettings here for performance reasons\n    return this.renderer.config.imageMode.calibrationTopic == undefined;\n  };\n\n  #clearCameraModel = (): void => {\n    this.#cameraModel = undefined;\n    this.#camera.updateCamera(undefined);\n    this.#camera.updateProjectionMatrix();\n  };\n\n  #getImageRenderable(\n    topicName: string,\n    receiveTime: bigint,\n    image: AnyImage | undefined,\n    frameId: string,\n  ): ImageRenderable {\n    let renderable = this.#imageRenderable;\n    if (renderable) {\n      return renderable;\n    }\n\n    const config = this.#getImageModeSettings();\n    const userSettings: ImageRenderableSettings = {\n      ...IMAGE_RENDERABLE_DEFAULT_SETTINGS,\n      minValue: config.minValue,\n      maxValue: config.maxValue,\n      // planarProjectionFactor must be 1 to avoid imprecise projection due to small number of grid subdivisions\n      planarProjectionFactor: 1,\n    };\n    renderable = new ImageRenderable(topicName, this.renderer, {\n      receiveTime,\n      messageTime: image ? toNanoSec(\"header\" in image ? image.header.stamp : image.timestamp) : 0n,\n      frameId: this.renderer.normalizeFrameId(frameId),\n      pose: makePose(),\n      settingsPath: IMAGE_TOPIC_PATH,\n      topic: topicName,\n      settings: userSettings,\n      cameraInfo: undefined,\n      cameraModel: undefined,\n      image,\n      texture: undefined,\n      material: undefined,\n      geometry: undefined,\n      mesh: undefined,\n    });\n\n    this.add(renderable);\n    this.#imageRenderable = renderable;\n    renderable.setRenderBehindScene();\n    renderable.visible = true;\n    return renderable;\n  }\n\n  /** Gets frame from active info or image message if info does not have one*/\n  #getCurrentFrameId(): string | undefined {\n    const { imageMode } = this.renderer.config;\n    const { calibrationTopic, imageTopic } = imageMode;\n\n    if (calibrationTopic == undefined && imageTopic == undefined) {\n      return undefined;\n    }\n\n    const selectedCameraInfo = this.#cameraModel?.info;\n    const selectedImage = this.#imageRenderable?.userData.image;\n\n    const cameraInfoFrameId = selectedCameraInfo?.header.frame_id;\n\n    const imageFrameId = selectedImage && getFrameIdFromImage(selectedImage);\n\n    if (imageFrameId != undefined) {\n      if (imageFrameId !== cameraInfoFrameId) {\n        this.renderer.settings.errors.add(\n          IMAGE_TOPIC_PATH,\n          IMAGE_TOPIC_DIFFERENT_FRAME,\n          `Image topic's frame id (${imageFrameId}) does not match camera info's frame id (${cameraInfoFrameId})`,\n        );\n      } else {\n        this.renderer.settings.errors.remove(IMAGE_TOPIC_PATH, IMAGE_TOPIC_DIFFERENT_FRAME);\n      }\n    }\n\n    return cameraInfoFrameId ?? imageFrameId;\n  }\n\n  #getImageModeSettings(): Immutable<ConfigWithDefaults> {\n    const config = { ...this.renderer.config.imageMode };\n\n    return {\n      ...config,\n      synchronize: config.synchronize ?? DEFAULT_CONFIG.synchronize,\n      rotation: config.rotation ?? DEFAULT_CONFIG.rotation,\n      flipHorizontal: config.flipHorizontal ?? DEFAULT_CONFIG.flipHorizontal,\n      flipVertical: config.flipVertical ?? DEFAULT_CONFIG.flipVertical,\n    };\n  }\n\n  /**\n   * Updates renderable, frame, and camera to be in sync with current camera model\n   */\n  #updateViewAndRenderables(): void {\n    const cameraInfo = this.#cameraModel?.info;\n    if (!cameraInfo) {\n      this.renderer.settings.errors.add(\n        CALIBRATION_TOPIC_PATH,\n        MISSING_CAMERA_INFO,\n        \"Missing camera info for topic\",\n      );\n      return;\n    } else {\n      this.renderer.settings.errors.remove(CALIBRATION_TOPIC_PATH, MISSING_CAMERA_INFO);\n    }\n\n    // set the render frame id to the camera info's frame id\n    this.renderer.setFollowFrameId(this.#getCurrentFrameId());\n    if (this.#cameraModel?.model) {\n      this.#camera.updateCamera(this.#cameraModel.model);\n      this.#updateAnnotationsScale();\n      const imageRenderable = this.#imageRenderable;\n      if (imageRenderable) {\n        imageRenderable.userData.cameraInfo = this.#cameraModel.info;\n        imageRenderable.setCameraModel(this.#cameraModel.model);\n        imageRenderable.update();\n      }\n    }\n  }\n\n  /**\n   * update this.cameraModel with a new model if the camera info has changed\n   */\n  #updateCameraModel(newCameraInfo: CameraInfo) {\n    // If the camera info has not changed, we don't need to make a new model and can return the existing one\n    const currentCameraInfo = this.#cameraModel?.info;\n    const dataEqual = cameraInfosEqual(currentCameraInfo, newCameraInfo);\n    if (dataEqual && currentCameraInfo != undefined) {\n      return;\n    }\n\n    const model = this.#getPinholeCameraModel(newCameraInfo);\n    if (model) {\n      this.#cameraModel = {\n        model,\n        info: newCameraInfo,\n      };\n      this.#annotations.updateCameraModel(model);\n    }\n  }\n\n  /**\n   * Returns PinholeCameraModel for given CameraInfo\n   * This function will set a topic error on the image topic if the camera model creation fails.\n   * @param cameraInfo - CameraInfo to create model from\n   */\n  #getPinholeCameraModel(cameraInfo: CameraInfo): PinholeCameraModel | undefined {\n    let model = undefined;\n    try {\n      model = new PinholeCameraModel(cameraInfo);\n      this.renderer.settings.errors.remove(CALIBRATION_TOPIC_PATH, CAMERA_MODEL);\n    } catch (errUnk) {\n      this.#cameraModel = undefined;\n      const err = errUnk as Error;\n      this.renderer.settings.errors.add(CALIBRATION_TOPIC_PATH, CAMERA_MODEL, err.message);\n    }\n    return model;\n  }\n\n  public getActiveCamera(): THREE.PerspectiveCamera | THREE.OrthographicCamera {\n    return this.#camera;\n  }\n\n  public handleResize(width: number, height: number, _pixelRatio: number): void {\n    this.#camera.setCanvasSize(width, height);\n    this.#updateAnnotationsScale();\n  }\n\n  #updateAnnotationsScale(): void {\n    this.#annotations.updateScale(\n      this.#camera.getEffectiveScale(),\n      this.renderer.input.canvasSize.width,\n      this.renderer.input.canvasSize.height,\n      this.renderer.getPixelRatio(),\n    );\n  }\n\n  public setCameraState(): void {\n    this.#updateViewAndRenderables();\n  }\n\n  public getCameraState(): undefined {\n    return undefined;\n  }\n\n  #handleErrorChange = (): void => {\n    this.updateSettingsTree();\n  };\n\n  public getLatestImage(): DownloadImageInfo | undefined {\n    if (!this.#latestImage) {\n      return undefined;\n    }\n    const settings = this.#getImageModeSettings();\n    return {\n      ...this.#latestImage,\n      rotation: settings.rotation,\n      flipHorizontal: settings.flipHorizontal,\n      flipVertical: settings.flipVertical,\n      minValue: settings.minValue,\n      maxValue: settings.maxValue,\n    };\n  }\n}\n\nconst createFallbackCameraInfoForImage = (options: {\n  // should be over ~50 for a fallback at least, otherwise warping can occur in the center\n  focalLength: number;\n  frameId: string;\n  width: number;\n  height: number;\n}): CameraInfo => {\n  const { width, height, focalLength, frameId } = options;\n  const cx = width / 2;\n  const cy = height / 2;\n  const fx = focalLength;\n  const fy = focalLength;\n  const cameraInfo = normalizeCameraInfo({\n    header: { seq: 0, stamp: { sec: 0, nsec: 0 }, frame_id: frameId },\n    height,\n    width,\n    distortion_model: \"\",\n    R: [1, 0, 0, 0, 1, 0, 0, 0, 1],\n    D: [],\n    // prettier-ignore\n    K: [\n      fx, 0, cx,\n      0, fy, cy,\n      0, 0, 1,\n    ],\n    // prettier-ignore\n    P: [\n      fx, 0, cx, 0,\n      0, fy, cy, 0,\n      0, 0, 1, 0,\n    ],\n  });\n  return cameraInfo;\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n/**\n * A map that allows multiple values for a single key.\n */\nexport class MultiMap<TKey, TValue> {\n  #map = new Map<TKey, TValue[]>();\n\n  public get(key: TKey): TValue[] | undefined {\n    return this.#map.get(key);\n  }\n\n  public set(key: TKey, value: TValue): void {\n    const values = this.#map.get(key);\n    if (values == undefined) {\n      this.#map.set(key, [value]);\n    } else if (!values.includes(value)) {\n      values.push(value);\n    }\n  }\n\n  public delete(key: TKey, value: TValue): void {\n    const values = this.#map.get(key);\n    if (values != undefined) {\n      const index = values.indexOf(value);\n      if (index >= 0) {\n        values.splice(index, 1);\n        if (values.length === 0) {\n          this.#map.delete(key);\n        }\n      }\n    }\n  }\n\n  public deleteAll(key: TKey): void {\n    this.#map.delete(key);\n  }\n\n  public clear(): void {\n    this.#map.clear();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { assert } from \"ts-essentials\";\n\nimport { MultiMap, filterMap } from \"@foxglove/den/collection\";\nimport { PinholeCameraModel } from \"@foxglove/den/image\";\nimport Logger from \"@foxglove/log\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { CameraCalibration, CompressedImage, RawImage } from \"@foxglove/schemas\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\n\nimport { IMAGE_RENDERABLE_DEFAULT_SETTINGS, ImageRenderable } from \"./Images/ImageRenderable\";\nimport { ALL_CAMERA_INFO_SCHEMAS, AnyImage } from \"./Images/ImageTypes\";\nimport {\n  normalizeCompressedImage,\n  normalizeRawImage,\n  normalizeRosCompressedImage,\n  normalizeRosImage,\n} from \"./Images/imageNormalizers\";\nimport { getTopicMatchPrefix, sortPrefixMatchesToFront } from \"./Images/topicPrefixMatching\";\nimport { cameraInfosEqual, normalizeCameraInfo } from \"./projections\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport {\n  CAMERA_CALIBRATION_DATATYPES,\n  COMPRESSED_IMAGE_DATATYPES,\n  RAW_IMAGE_DATATYPES,\n} from \"../foxglove\";\nimport {\n  CameraInfo,\n  Image as RosImage,\n  CompressedImage as RosCompressedImage,\n  IMAGE_DATATYPES as ROS_IMAGE_DATATYPES,\n  COMPRESSED_IMAGE_DATATYPES as ROS_COMPRESSED_IMAGE_DATATYPES,\n  CAMERA_INFO_DATATYPES,\n} from \"../ros\";\nimport { BaseSettings, PRECISION_DISTANCE } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nconst log = Logger.getLogger(__filename);\nvoid log;\n\nexport type LayerSettingsImage = BaseSettings & {\n  cameraInfoTopic: string | undefined;\n  distance: number;\n  planarProjectionFactor: number;\n  color: string;\n};\n\nconst DEFAULT_BITMAP_WIDTH = 512;\nconst NO_CAMERA_INFO_ERR = \"NoCameraInfo\";\nconst CAMERA_MODEL = \"CameraModel\";\n\nexport class Images extends SceneExtension<ImageRenderable> {\n  /* All known camera info topics */\n  #cameraInfoTopics = new Set<string>();\n\n  /**\n   * A bi-directional mapping between cameraInfo topics and image topics. This\n   * is used for retrieving an image renderable, which is indexed by image\n   * topic, when receiving a camera info message.\n   */\n  #cameraInfoToImageTopics = new MultiMap<string, string>();\n\n  /**\n   * Map of camera info topic name -> normalized CameraInfo message\n   *\n   * This stores the last camera info message on each topic so it can be applied when rendering the image\n   */\n  #cameraInfoByTopic = new Map<string, CameraInfo>();\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.Images\", renderer);\n    this.renderer.on(\"topicsChanged\", this.#handleTopicsChanged);\n    this.#handleTopicsChanged();\n  }\n\n  public override dispose(): void {\n    this.renderer.off(\"topicsChanged\", this.#handleTopicsChanged);\n    super.dispose();\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: ALL_CAMERA_INFO_SCHEMAS,\n        subscription: {\n          handler: this.#handleCameraInfo,\n          shouldSubscribe: this.#cameraInfoShouldSubscribe,\n        },\n      },\n      {\n        type: \"schema\",\n        schemaNames: ROS_IMAGE_DATATYPES,\n        subscription: { handler: this.#handleRosRawImage },\n      },\n      {\n        type: \"schema\",\n        schemaNames: ROS_COMPRESSED_IMAGE_DATATYPES,\n        subscription: { handler: this.#handleRosCompressedImage },\n      },\n      {\n        type: \"schema\",\n        schemaNames: RAW_IMAGE_DATATYPES,\n        subscription: { handler: this.#handleRawImage },\n      },\n      {\n        type: \"schema\",\n        schemaNames: COMPRESSED_IMAGE_DATATYPES,\n        subscription: { handler: this.#handleCompressedImage },\n      },\n    ];\n  }\n\n  /**\n   * Update cameraInfoTopics cache with latest set of camera info messages\n   */\n  #handleTopicsChanged = () => {\n    this.#cameraInfoTopics = new Set();\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        topicIsConvertibleToSchema(topic, CAMERA_INFO_DATATYPES) ||\n        topicIsConvertibleToSchema(topic, CAMERA_CALIBRATION_DATATYPES)\n      ) {\n        this.#cameraInfoTopics.add(topic.name);\n      }\n    }\n  };\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, ROS_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, ROS_COMPRESSED_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, RAW_IMAGE_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, COMPRESSED_IMAGE_DATATYPES)\n        )\n      ) {\n        continue;\n      }\n      const imageTopic = topic.name;\n      const config = (configTopics[imageTopic] ?? {}) as Partial<LayerSettingsImage>;\n\n      // Build a list of all matching CameraInfo topics\n      const cameraInfoOptions = Array.from(this.#cameraInfoTopics, (topicName) => ({\n        label: topicName,\n        value: topicName,\n      }));\n      cameraInfoOptions.sort();\n      sortPrefixMatchesToFront(cameraInfoOptions, imageTopic, (option) => option.value);\n\n      // prettier-ignore\n      const fields: SettingsTreeFields = {\n        cameraInfoTopic: { label: \"Camera Info\", input: \"select\", options: cameraInfoOptions, value: config.cameraInfoTopic },\n        distance: { label: \"Distance\", input: \"number\", placeholder: String(IMAGE_RENDERABLE_DEFAULT_SETTINGS.distance), step: 0.1, precision: PRECISION_DISTANCE, value: config.distance },\n        planarProjectionFactor: { label: \"Planar Projection Factor\", input: \"number\", placeholder: String(IMAGE_RENDERABLE_DEFAULT_SETTINGS.planarProjectionFactor), min: 0, max: 1, step: 0.1, precision: 2, value: config.planarProjectionFactor },\n        color: { label: \"Color\", input: \"rgba\", value: config.color },\n      };\n\n      entries.push({\n        path: [\"topics\", imageTopic],\n        node: {\n          icon: \"ImageProjection\",\n          fields,\n          visible: config.visible ?? IMAGE_RENDERABLE_DEFAULT_SETTINGS.visible,\n          order: imageTopic.toLocaleLowerCase(),\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    const imageTopic = path[1]!;\n    const prevSettings = this.renderer.config.topics[imageTopic] as\n      | Partial<LayerSettingsImage>\n      | undefined;\n    const prevCameraInfoTopic = prevSettings?.cameraInfoTopic;\n\n    this.saveSetting(path, action.payload.value);\n\n    const settings = this.renderer.config.topics[imageTopic] as\n      | Partial<LayerSettingsImage>\n      | undefined;\n    const cameraInfoTopic = settings?.cameraInfoTopic;\n\n    // Add this camera_info_topic -> image_topic mapping\n    if (cameraInfoTopic !== prevCameraInfoTopic && cameraInfoTopic != undefined) {\n      this.#cameraInfoToImageTopics.set(cameraInfoTopic, imageTopic);\n    }\n\n    const renderable = this.renderables.get(imageTopic);\n    if (!renderable) {\n      return;\n    }\n\n    renderable.setSettings({ ...IMAGE_RENDERABLE_DEFAULT_SETTINGS, ...settings });\n\n    // The camera info topic changed for our renderable\n    // Remove the previous camera_info_topic -> image_topic mapping\n    if (prevCameraInfoTopic != undefined) {\n      this.#cameraInfoToImageTopics.delete(prevCameraInfoTopic, imageTopic);\n    }\n\n    // apply camera info to new renderable\n    if (!cameraInfoTopic) {\n      return;\n    }\n\n    // Look up the camera info for our image topic\n    const cameraInfo = this.#cameraInfoByTopic.get(cameraInfoTopic);\n    if (!cameraInfo) {\n      this.renderer.settings.errors.addToTopic(\n        imageTopic,\n        NO_CAMERA_INFO_ERR,\n        `No CameraInfo received on ${cameraInfoTopic}`,\n      );\n      return;\n    }\n    this.#recomputeCameraModel(renderable, cameraInfo);\n    renderable.update();\n  };\n\n  #cameraInfoShouldSubscribe = (cameraInfoTopic: string): boolean => {\n    // Iterate over each topic config and check if it has a cameraInfoTopic setting that matches\n    // the cameraInfoTopic we might want to turn on. If it does and the topic is visible, return\n    // true so we know to subscribe.\n    for (const topicConfig of Object.values(this.renderer.config.topics)) {\n      const maybeImageConfig = topicConfig as Partial<LayerSettingsImage>;\n      if (\n        maybeImageConfig.cameraInfoTopic === cameraInfoTopic &&\n        maybeImageConfig.visible === true\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  #handleRosRawImage = (messageEvent: PartialMessageEvent<RosImage>): void => {\n    this.#handleImage(messageEvent, normalizeRosImage(messageEvent.message));\n  };\n\n  #handleRosCompressedImage = (messageEvent: PartialMessageEvent<RosCompressedImage>): void => {\n    this.#handleImage(messageEvent, normalizeRosCompressedImage(messageEvent.message));\n  };\n\n  #handleRawImage = (messageEvent: PartialMessageEvent<RawImage>): void => {\n    this.#handleImage(messageEvent, normalizeRawImage(messageEvent.message));\n  };\n\n  #handleCompressedImage = (messageEvent: PartialMessageEvent<CompressedImage>): void => {\n    this.#handleImage(messageEvent, normalizeCompressedImage(messageEvent.message));\n  };\n\n  #handleImage = (messageEvent: PartialMessageEvent<AnyImage>, image: AnyImage): void => {\n    const imageTopic = messageEvent.topic;\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const frameId = \"header\" in image ? image.header.frame_id : image.frame_id;\n\n    const renderable = this.#getImageRenderable(imageTopic, receiveTime, image, frameId);\n    renderable.setImage(image, DEFAULT_BITMAP_WIDTH);\n\n    renderable.userData.receiveTime = receiveTime;\n    // Auto-select settings.cameraInfoTopic if it's not already set\n    const settings = renderable.userData.settings;\n    if (settings.cameraInfoTopic == undefined) {\n      const prefix = getTopicMatchPrefix(imageTopic);\n      const newCameraInfoTopic =\n        prefix != undefined\n          ? filterMap(this.#cameraInfoTopics, (topic) =>\n              topic.startsWith(prefix) ? topic : undefined,\n            ).sort()[0]\n          : undefined;\n      settings.cameraInfoTopic = newCameraInfoTopic;\n      renderable.setSettings(settings);\n\n      // With no selected camera info topic, we show a topic error and bail\n      // There's no way to render without camera info\n      if (newCameraInfoTopic == undefined) {\n        this.renderer.settings.errors.addToTopic(\n          imageTopic,\n          NO_CAMERA_INFO_ERR,\n          \"No CameraInfo topic found\",\n        );\n        return;\n      }\n\n      // We auto-selected a camera info topic for this image topic so we need to add the lookup.\n      // Without this lookup, the handleCameraInfo won't know what image topics to update when\n      // camera info messages arrive after image messages.\n\n      // Update user settings with the newly selected CameraInfo topic\n      this.renderer.updateConfig((draft) => {\n        const updatedUserSettings = { ...settings };\n        updatedUserSettings.cameraInfoTopic = newCameraInfoTopic;\n        draft.topics[imageTopic] = updatedUserSettings;\n      });\n      this.updateSettingsTree();\n    }\n\n    assert(settings.cameraInfoTopic != undefined);\n    this.#cameraInfoToImageTopics.set(settings.cameraInfoTopic, imageTopic);\n\n    // Look up the camera info for our renderable\n    const cameraInfo = this.#cameraInfoByTopic.get(settings.cameraInfoTopic);\n    if (!cameraInfo) {\n      this.renderer.settings.errors.addToTopic(\n        imageTopic,\n        NO_CAMERA_INFO_ERR,\n        `No CameraInfo received on ${settings.cameraInfoTopic}`,\n      );\n    } else {\n      this.#recomputeCameraModel(renderable, cameraInfo);\n    }\n  };\n\n  #handleCameraInfo = (\n    messageEvent: PartialMessageEvent<CameraInfo> & PartialMessageEvent<CameraCalibration>,\n  ): void => {\n    // Store the last camera info on each topic, when processing an image message we'll look up\n    // the camera info by the info topic configured for the image\n    const cameraInfo = normalizeCameraInfo(messageEvent.message);\n    this.#cameraInfoByTopic.set(messageEvent.topic, cameraInfo);\n\n    // Look up any image topics assigned to our camera info topic and determine if we need to update\n    // those renderables since we now have a camera info whereas we may not have previously\n    const imageTopics = this.#cameraInfoToImageTopics.get(messageEvent.topic) ?? [];\n    for (const imageTopic of imageTopics) {\n      const renderable = this.renderables.get(imageTopic);\n      if (!renderable) {\n        continue;\n      }\n\n      // If there's no camera info topic assigned then we don't need to do update this renderable\n      const settings = renderable.userData.settings;\n      if (!settings.cameraInfoTopic || settings.cameraInfoTopic !== messageEvent.topic) {\n        continue;\n      }\n      this.renderer.settings.errors.removeFromTopic(imageTopic, NO_CAMERA_INFO_ERR);\n\n      this.#recomputeCameraModel(renderable, cameraInfo);\n      renderable.update();\n    }\n  };\n\n  /**\n   * Recompute a new camera model if the newCameraInfo differs from the current renderable info. If\n   * the info is unchanged then the existing camera model is returned.\n   *\n   * If a camera model could not be created this returns undefined.\n   *\n   * This function will set a topic error on the image topic if the camera model creation fails.\n   */\n  #recomputeCameraModel(renderable: ImageRenderable, newCameraInfo: CameraInfo) {\n    // If the camera info has not changed, we don't need to make a new model and can return the existing one\n    const dataEqual = cameraInfosEqual(renderable.userData.cameraInfo, newCameraInfo);\n    if (dataEqual && renderable.userData.cameraModel != undefined) {\n      return;\n    }\n\n    const imageTopic = renderable.userData.topic;\n\n    try {\n      renderable.setCameraModel(new PinholeCameraModel(newCameraInfo));\n      renderable.userData.cameraInfo = newCameraInfo;\n      this.renderer.settings.errors.removeFromTopic(imageTopic, CAMERA_MODEL);\n    } catch (errUnk) {\n      const err = errUnk as Error;\n      this.renderer.settings.errors.addToTopic(imageTopic, CAMERA_MODEL, err.message);\n    }\n  }\n\n  // Get or create an image renderable for the imageTopic\n  #getImageRenderable(\n    imageTopic: string,\n    receiveTime: bigint,\n    image: AnyImage | undefined,\n    frameId: string,\n  ): ImageRenderable {\n    let renderable = this.renderables.get(imageTopic);\n    if (renderable) {\n      return renderable;\n    }\n\n    // Look up any existing settings for the image topic to save as user data with the renderable\n    const userSettings = this.renderer.config.topics[imageTopic] as\n      | Partial<LayerSettingsImage>\n      | undefined;\n\n    renderable = new ImageRenderable(imageTopic, this.renderer, {\n      receiveTime,\n      messageTime: image ? toNanoSec(\"header\" in image ? image.header.stamp : image.timestamp) : 0n,\n      frameId: this.renderer.normalizeFrameId(frameId),\n      pose: makePose(),\n      settingsPath: [\"topics\", imageTopic],\n      topic: imageTopic,\n      settings: { ...IMAGE_RENDERABLE_DEFAULT_SETTINGS, ...userSettings },\n      cameraInfo: undefined,\n      cameraModel: undefined,\n      image,\n      texture: undefined,\n      material: undefined,\n      geometry: undefined,\n      mesh: undefined,\n    });\n\n    this.add(renderable);\n    this.renderables.set(imageTopic, renderable);\n    return renderable;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { PackedElementField, PointCloud } from \"@foxglove/schemas\";\nimport { SettingsTreeNode, Topic } from \"@foxglove/studio\";\nimport { DynamicBufferGeometry } from \"@foxglove/studio-base/panels/ThreeDeeRender/DynamicBufferGeometry\";\nimport { IRenderer } from \"@foxglove/studio-base/panels/ThreeDeeRender/IRenderer\";\nimport { BaseUserData, Renderable } from \"@foxglove/studio-base/panels/ThreeDeeRender/Renderable\";\nimport { rgbaToCssString } from \"@foxglove/studio-base/panels/ThreeDeeRender/color\";\nimport { isSupportedField } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/pointClouds/fieldReaders\";\nimport {\n  missingTransformMessage,\n  MISSING_TRANSFORM,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/transforms\";\nimport { BaseSettings } from \"@foxglove/studio-base/panels/ThreeDeeRender/settings\";\nimport { MAX_DURATION, Pose } from \"@foxglove/studio-base/panels/ThreeDeeRender/transforms\";\nimport { updatePose } from \"@foxglove/studio-base/panels/ThreeDeeRender/updatePose\";\n\nimport { LaserScanMaterial } from \"./LaserScans\";\nimport {\n  baseColorModeSettingsNode,\n  colorHasTransparency,\n  ColorModeSettings,\n  FS_SRGB_TO_LINEAR,\n  INTENSITY_FIELDS,\n  RGBA_PACKED_FIELDS,\n} from \"./pointClouds/colors\";\nimport { POINTCLOUD_DATATYPES as FOXGLOVE_POINTCLOUD_DATATYPES } from \"../foxglove\";\nimport { PointCloud2, POINTCLOUD_DATATYPES as ROS_POINTCLOUD_DATATYPES, PointField } from \"../ros\";\n\nexport type LayerSettingsPointExtension = BaseSettings &\n  ColorModeSettings & {\n    pointSize: number;\n    pointShape: \"circle\" | \"square\";\n    decayTime: number;\n  };\n\nconst DEFAULT_POINT_SIZE = 1.5;\nconst DEFAULT_POINT_SHAPE = \"circle\";\nconst DEFAULT_COLOR_MAP = \"turbo\";\nconst DEFAULT_FLAT_COLOR = { r: 1, g: 1, b: 1, a: 1 };\nconst DEFAULT_MIN_COLOR = { r: 100 / 255, g: 47 / 255, b: 105 / 255, a: 1 };\nconst DEFAULT_MAX_COLOR = { r: 227 / 255, g: 177 / 255, b: 135 / 255, a: 1 };\n\n// used by LaserScans, VelodyneScans, and PointClouds\nexport const DEFAULT_POINT_SETTINGS: LayerSettingsPointExtension = {\n  visible: false,\n  frameLocked: false,\n  pointSize: DEFAULT_POINT_SIZE,\n  pointShape: DEFAULT_POINT_SHAPE,\n  decayTime: 0,\n  colorMode: \"flat\",\n  flatColor: rgbaToCssString(DEFAULT_FLAT_COLOR),\n  colorField: undefined,\n  gradient: [rgbaToCssString(DEFAULT_MIN_COLOR), rgbaToCssString(DEFAULT_MAX_COLOR)],\n  colorMap: DEFAULT_COLOR_MAP,\n  explicitAlpha: 1,\n  minValue: undefined,\n  maxValue: undefined,\n};\n\nexport const POINT_CLOUD_REQUIRED_FIELDS = [\"x\", \"y\", \"z\"];\nexport const POINT_SHAPE_OPTIONS = [\n  { label: \"Circle\", value: \"circle\" },\n  { label: \"Square\", value: \"square\" },\n];\n\n/**\n * Creates settings node for Point cloud and scan topics\n * @param topic - topic to get settings node for\n * @param messageFields - message fields or required fields for the topic\n * @param config - current topic settings\n * @param defaultSettings - (optional) default settings to use\n * @returns  - settings node for the topic\n */\nexport function pointSettingsNode(\n  topic: Topic,\n  messageFields: string[],\n  config: Partial<LayerSettingsPointExtension>,\n  defaultSettings: LayerSettingsPointExtension = DEFAULT_POINT_SETTINGS,\n): SettingsTreeNode {\n  const pointSize = config.pointSize;\n  const pointShape = config.pointShape ?? \"circle\";\n  const decayTime = config.decayTime;\n\n  const node = baseColorModeSettingsNode(messageFields, config, topic, defaultSettings, {\n    supportsPackedRgbModes: ROS_POINTCLOUD_DATATYPES.has(topic.schemaName),\n    supportsRgbaFieldsMode: FOXGLOVE_POINTCLOUD_DATATYPES.has(topic.schemaName),\n  });\n  node.fields = {\n    pointSize: {\n      label: \"Point size\",\n      input: \"number\",\n      step: 1,\n      placeholder: \"2\",\n      precision: 2,\n      value: pointSize,\n      min: 0,\n    },\n    pointShape: {\n      label: \"Point shape\",\n      input: \"select\",\n      options: POINT_SHAPE_OPTIONS,\n      value: pointShape,\n    },\n    decayTime: {\n      label: \"Decay time\",\n      input: \"number\",\n      step: 0.5,\n      placeholder: \"0 seconds\",\n      min: 0,\n      precision: 3,\n      value: decayTime,\n    },\n    ...node.fields,\n  };\n\n  return node;\n}\n\n/**\n * Selects optimal color field for settings given point cloud message\n * @param output - settings object to apply auto selection of colorfield to\n * @param pointCloud - point cloud message\n * @param { supportsPackedRgbModes } - whether or not the point cloud message supports packed rgb modes\n * @returns - changes output object to have desired color field selected\n */\nexport function autoSelectColorField(\n  output: LayerSettingsPointExtension,\n  pointCloud: PointCloud | PointCloud2,\n  { supportsPackedRgbModes }: { supportsPackedRgbModes: boolean },\n): void {\n  // Prefer color fields first\n  if (supportsPackedRgbModes) {\n    for (const field of pointCloud.fields) {\n      if (!isSupportedField(field)) {\n        continue;\n      }\n      const fieldNameLower = field.name.toLowerCase();\n      if (RGBA_PACKED_FIELDS.has(fieldNameLower)) {\n        output.colorField = field.name;\n        switch (fieldNameLower) {\n          case \"rgb\":\n            output.colorMode = \"rgb\";\n            break;\n          default:\n          case \"rgba\":\n            output.colorMode = \"rgba\";\n            break;\n        }\n        return;\n      }\n    }\n  }\n\n  // Intensity fields are second priority\n  for (const field of pointCloud.fields) {\n    if (!isSupportedField(field)) {\n      continue;\n    }\n    if (INTENSITY_FIELDS.has(field.name)) {\n      output.colorField = field.name;\n      output.colorMode = \"colormap\";\n      output.colorMap = \"turbo\";\n      return;\n    }\n  }\n\n  // Fall back to using the first point cloud field\n  const firstField = (pointCloud.fields as readonly (PackedElementField | PointField)[]).find(\n    (field) => isSupportedField(field),\n  );\n  if (firstField != undefined) {\n    output.colorField = firstField.name;\n    output.colorMode = \"colormap\";\n    output.colorMap = \"turbo\";\n    return;\n  }\n}\n/**\n * Creates a THREE.Points object for a point cloud and scan messages\n * @param topic - topic name string for naming geometry\n * @param usage - THREE draw usage (ex: THREE.StaticDrawUsage)\n * @returns\n */\nexport function createGeometry(topic: string, usage: THREE.Usage): DynamicBufferGeometry {\n  const geometry = new DynamicBufferGeometry(usage);\n  geometry.name = `${topic}:PointScans:geometry`;\n  geometry.createAttribute(\"position\", Float32Array, 3);\n  geometry.createAttribute(\"color\", Uint8Array, 4, true);\n  return geometry;\n}\n\ntype Material = THREE.PointsMaterial | LaserScanMaterial;\ntype Points = THREE.Points<DynamicBufferGeometry, Material>;\n\nexport function pointCloudColorEncoding<T extends LayerSettingsPointExtension>(\n  settings: T,\n): \"srgb\" | \"linear\" {\n  switch (settings.colorMode) {\n    case \"flat\":\n    case \"colormap\":\n    case \"gradient\":\n      // converted to linear by getColorConverter\n      return \"linear\";\n    case \"rgb\":\n    case \"rgba\":\n    case \"rgba-fields\":\n      return \"srgb\";\n  }\n}\n\nexport function createPoints(\n  topic: string,\n  pose: Pose,\n  geometry: DynamicBufferGeometry,\n  material: Material,\n  pickingMaterial: THREE.Material,\n  instancePickingMaterial: THREE.Material | undefined,\n): Points {\n  const points = new THREE.Points<DynamicBufferGeometry, Material>(geometry, material);\n  // We don't calculate the bounding sphere for points, so frustum culling is disabled\n  points.frustumCulled = false;\n  points.name = `${topic}:PointCloud:points`;\n  points.userData = {\n    pickingMaterial,\n    instancePickingMaterial,\n    pose,\n  };\n  return points;\n}\n\n// Fragment shader chunk to convert sRGB to linear RGB\nconst FS_POINTCLOUD_SRGB_TO_LINEAR = /* glsl */ `\noutgoingLight = sRGBToLinear(outgoingLight);\n`;\n\n// Fragment shader chunk to render a GL_POINT as a circle\nconst FS_POINTCLOUD_CIRCLE = /* glsl */ `\nvec2 cxy = 2.0 * gl_PointCoord - 1.0;\nif (dot(cxy, cxy) > 1.0) { discard; }\n`;\n\nexport function pointCloudMaterial<T extends LayerSettingsPointExtension>(\n  settings: T,\n): THREE.PointsMaterial {\n  const transparent = colorHasTransparency(settings);\n  const encoding = pointCloudColorEncoding(settings);\n  const scale = settings.pointSize;\n  const shape = settings.pointShape;\n\n  const material = new THREE.PointsMaterial({\n    vertexColors: true,\n    size: scale,\n    sizeAttenuation: false,\n    transparent,\n    // The sorting issues caused by writing semi-transparent pixels to the depth buffer are less\n    // distracting for point clouds than the self-sorting artifacts when depth writing is disabled\n    depthWrite: true,\n  });\n\n  // Tell three.js to recompile the shader when `shape` or `encoding` change\n  material.customProgramCacheKey = () => `${shape}-${encoding}`;\n  material.onBeforeCompile = (shader) => {\n    const SEARCH = \"#include <output_fragment>\";\n    if (shape === \"circle\") {\n      // Patch the fragment shader to render points as circles\n      shader.fragmentShader = shader.fragmentShader.replace(SEARCH, FS_POINTCLOUD_CIRCLE + SEARCH);\n    }\n    if (encoding === \"srgb\") {\n      // Patch the fragment shader to add sRGB->linear color conversion\n      shader.fragmentShader =\n        FS_SRGB_TO_LINEAR +\n        shader.fragmentShader.replace(SEARCH, FS_POINTCLOUD_SRGB_TO_LINEAR + SEARCH);\n    }\n  };\n\n  return material;\n}\n\nexport function createPickingMaterial<T extends LayerSettingsPointExtension>(\n  settings: T,\n): THREE.ShaderMaterial {\n  const MIN_PICKING_POINT_SIZE = 8;\n\n  // Use a custom shader for picking that sets a minimum point size to make\n  // individual points easier to click on\n  const pointSize = Math.max(settings.pointSize, MIN_PICKING_POINT_SIZE);\n  return new THREE.ShaderMaterial({\n    vertexShader: /* glsl */ `\n      uniform float pointSize;\n      void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = pointSize;\n      }\n    `,\n    fragmentShader: /* glsl */ `\n      uniform vec4 objectId;\n      void main() {\n        gl_FragColor = objectId;\n      }\n    `,\n    side: THREE.DoubleSide,\n    uniforms: { pointSize: { value: pointSize }, objectId: { value: [NaN, NaN, NaN, NaN] } },\n  });\n}\n\nexport function createInstancePickingMaterial<T extends LayerSettingsPointExtension>(\n  settings: T,\n): THREE.ShaderMaterial {\n  const MIN_PICKING_POINT_SIZE = 8;\n\n  // Use a custom shader for picking that sets a minimum point size to make\n  // individual points easier to click on\n  const pointSize = Math.max(settings.pointSize, MIN_PICKING_POINT_SIZE);\n  return new THREE.ShaderMaterial({\n    vertexShader: /* glsl */ `\n        uniform float pointSize;\n        varying vec4 objectId;\n        void main() {\n          objectId = vec4(\n            float((gl_VertexID >> 24) & 255) / 255.0,\n            float((gl_VertexID >> 16) & 255) / 255.0,\n            float((gl_VertexID >> 8) & 255) / 255.0,\n            float(gl_VertexID & 255) / 255.0);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = pointSize;\n        }\n      `,\n    fragmentShader: /* glsl */ `\n        varying vec4 objectId;\n        void main() {\n          gl_FragColor = objectId;\n        }\n      `,\n    side: THREE.DoubleSide,\n    uniforms: { pointSize: { value: pointSize } },\n  });\n}\n\n/**\n * Class that handles lifecycle of 3d object history over the decay time\n * This class encapsulates the functionality of showing the history of an object within a specified decay time.\n * Meant to be extensible for all kinds of renderables that need to show old points over decay time.\n * See LaserScansRenderable and PointCloudsRenderable for examples.\n */\n\ntype RenderObjectHistoryUserData = BaseUserData & {\n  topic: string;\n  settings: LayerSettingsPointExtension;\n  material: THREE.Material;\n  pickingMaterial: THREE.Material;\n};\n\ntype ThreeObject = THREE.Points<DynamicBufferGeometry> | THREE.LineSegments<DynamicBufferGeometry>;\ntype HistoryEntry = { receiveTime: bigint; messageTime: bigint; object3d: ThreeObject };\nexport class RenderObjectHistory<ParentRenderable extends Renderable<RenderObjectHistoryUserData>> {\n  #history: HistoryEntry[];\n  #renderable: ParentRenderable;\n  #renderer: IRenderer;\n\n  public constructor({\n    initial,\n    renderer,\n    parentRenderable,\n  }: {\n    initial: HistoryEntry;\n    renderer: IRenderer;\n    parentRenderable: ParentRenderable;\n  }) {\n    this.#history = [initial];\n    this.#renderer = renderer;\n    this.#renderable = parentRenderable;\n  }\n\n  public addHistoryEntry(entry: HistoryEntry): void {\n    this.#history.push(entry);\n  }\n\n  public updateMaterial(material: THREE.Material): void {\n    for (const entry of this.#history) {\n      entry.object3d.material = material;\n    }\n  }\n\n  public updateHistoryFromCurrentTime(currentTime: bigint): void {\n    // Remove expired entries from the history of points when decayTime is enabled\n    const pointsHistory = this.#history;\n    const decayTime = this.#renderable.userData.settings.decayTime;\n    const expireTime =\n      decayTime > 0 ? currentTime - BigInt(Math.round(decayTime * 1e9)) : MAX_DURATION;\n    while (pointsHistory.length > 1 && pointsHistory[0]!.receiveTime < expireTime) {\n      const entry = this.#history.shift()!;\n      this.#renderable.remove(entry.object3d);\n      entry.object3d.geometry.dispose();\n    }\n  }\n\n  public updatePoses(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    // Update the pose on each entry\n    let hadTfError = false;\n    for (const entry of this.#history) {\n      const srcTime = entry.messageTime;\n      const frameId = this.#renderable.userData.frameId;\n      const updated = updatePose(\n        entry.object3d,\n        this.#renderer.transformTree,\n        renderFrameId,\n        fixedFrameId,\n        frameId,\n        currentTime,\n        srcTime,\n      );\n      if (!updated && !hadTfError) {\n        const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n        this.#renderer.settings.errors.add(\n          this.#renderable.userData.settingsPath,\n          MISSING_TRANSFORM,\n          message,\n        );\n        hadTfError = true;\n      }\n    }\n  }\n\n  public latest(): { receiveTime: bigint; messageTime: bigint; object3d: ThreeObject } {\n    if (this.#history.length === 0) {\n      throw new Error(\"RenderObjectHistory is empty\");\n    }\n    return this.#history[this.#history.length - 1]!;\n  }\n\n  /** Removes all but the last renderable, which would be the current object used in rendering. */\n  public clearHistory(): void {\n    for (const entry of this.#history.splice(0, this.#history.length - 1)) {\n      entry.object3d.geometry.dispose();\n      this.#renderable.remove(entry.object3d);\n    }\n  }\n\n  public dispose(): void {\n    for (const entry of this.#history) {\n      entry.object3d.geometry.dispose();\n    }\n    this.#history.length = 0;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { MutablePose } from \"@foxglove/studio-base/types/Messages\";\n\n// Create a new empty pose object\nexport function emptyPose(): MutablePose {\n  return { position: { x: 0, y: 0, z: 0 }, orientation: { x: 0, y: 0, z: 0, w: 1 } };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { Time, toNanoSec } from \"@foxglove/rostime\";\nimport { LaserScan as FoxgloveLaserScan } from \"@foxglove/schemas\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\nimport {\n  createPoints,\n  DEFAULT_POINT_SETTINGS,\n  LayerSettingsPointExtension,\n  pointSettingsNode,\n  RenderObjectHistory,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/pointExtensionUtils\";\nimport type { RosObject, RosValue } from \"@foxglove/studio-base/players/types\";\nimport { emptyPose } from \"@foxglove/studio-base/util/Pose\";\n\nimport { colorHasTransparency, getColorConverter } from \"./pointClouds/colors\";\nimport { DynamicBufferGeometry } from \"../DynamicBufferGeometry\";\nimport { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { LASERSCAN_DATATYPES as FOXGLOVE_LASERSCAN_DATATYPES } from \"../foxglove\";\nimport { normalizeFloat32Array, normalizeTime, normalizePose } from \"../normalizeMessages\";\nimport { LASERSCAN_DATATYPES as ROS_LASERSCAN_DATATYPES, LaserScan as RosLaserScan } from \"../ros\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { Pose } from \"../transforms\";\n\ntype LayerSettingsLaserScan = LayerSettingsPointExtension;\nconst DEFAULT_SETTINGS = DEFAULT_POINT_SETTINGS;\n\ntype NormalizedLaserScan = {\n  timestamp: Time;\n  frame_id: string;\n  pose: Pose;\n  start_angle: number;\n  end_angle: number;\n  range_min: number;\n  range_max: number;\n  ranges: Float32Array;\n  intensities: Float32Array;\n};\n\ntype LaserScanUserData = BaseUserData & {\n  settings: LayerSettingsLaserScan;\n  topic: string;\n  laserScan: NormalizedLaserScan;\n  originalMessage: Record<string, RosValue> | undefined;\n  material: LaserScanMaterial;\n  pickingMaterial: LaserScanMaterial;\n  instancePickingMaterial: LaserScanInstancePickingMaterial;\n};\n\nconst LASERSCAN_FIELDS = [\"range\", \"intensity\"];\n\nconst ALL_LASERSCAN_DATATYPES = new Set<string>([\n  ...FOXGLOVE_LASERSCAN_DATATYPES,\n  ...ROS_LASERSCAN_DATATYPES,\n]);\n\nconst INVALID_LASERSCAN = \"INVALID_LASERSCAN\";\n\nconst VEC3_ZERO = new THREE.Vector3();\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\n\nfunction createLaserScanGeometry(topic: string, usage: THREE.Usage): DynamicBufferGeometry {\n  const geometry = new DynamicBufferGeometry(usage);\n  geometry.name = `${topic}:LaserScan:geometry`;\n  // Three.JS doesn't render anything if there is no attribute named position, so we use the name position for the \"range\" parameter.\n  geometry.createAttribute(\"position\", Float32Array, 1);\n  geometry.createAttribute(\"color\", Uint8Array, 4, true);\n  return geometry;\n}\n\nclass LaserScanRenderable extends Renderable<LaserScanUserData> {\n  public override pickableInstances = true;\n  #pointsHistory: RenderObjectHistory<LaserScanRenderable>;\n\n  public constructor(topic: string, renderer: IRenderer, userData: LaserScanUserData) {\n    super(topic, renderer, userData);\n\n    const isDecay = userData.settings.decayTime > 0;\n\n    const geometry = createLaserScanGeometry(\n      topic,\n      isDecay ? THREE.DynamicDrawUsage : THREE.StaticDrawUsage,\n    );\n    const points = createPoints(\n      topic,\n      userData.laserScan.pose,\n      geometry,\n      userData.material,\n      userData.pickingMaterial,\n      userData.instancePickingMaterial,\n    );\n\n    this.#pointsHistory = new RenderObjectHistory({\n      initial: {\n        messageTime: userData.receiveTime,\n        receiveTime: userData.receiveTime,\n        object3d: points,\n      },\n      parentRenderable: this,\n      renderer,\n    });\n    this.add(points);\n  }\n  public override dispose(): void {\n    this.userData.originalMessage = undefined;\n    this.userData.material.dispose();\n    this.userData.pickingMaterial.dispose();\n    this.userData.instancePickingMaterial.dispose();\n    this.#pointsHistory.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage ?? {};\n  }\n\n  public override instanceDetails(instanceId: number): Record<string, RosValue> | undefined {\n    const range =\n      instanceId >= 0 && instanceId < this.userData.laserScan.ranges.length\n        ? this.userData.laserScan.ranges[instanceId]\n        : undefined;\n    const intensity =\n      instanceId >= 0 && instanceId < this.userData.laserScan.intensities.length\n        ? this.userData.laserScan.intensities[instanceId]\n        : undefined;\n    return { range, intensity };\n  }\n\n  public updateLaserScan(\n    laserScan: NormalizedLaserScan,\n    originalMessage: RosObject | undefined,\n    settings: LayerSettingsLaserScan,\n    receiveTime: bigint,\n  ): void {\n    const messageTime = toNanoSec(laserScan.timestamp);\n    this.userData.receiveTime = receiveTime;\n    this.userData.messageTime = messageTime;\n    this.userData.frameId = this.renderer.normalizeFrameId(laserScan.frame_id);\n    this.userData.laserScan = laserScan;\n    this.userData.originalMessage = originalMessage;\n\n    this.userData.settings = settings;\n    const { colorField } = settings;\n    const { intensities, ranges } = laserScan;\n\n    // Invalid laser scan checks\n    if (intensities.length !== 0 && intensities.length !== ranges.length) {\n      const message = `LaserScan intensities length (${intensities.length}) does not match ranges length (${ranges.length})`;\n      invalidLaserScanError(this.renderer, this, message);\n      return;\n    }\n    if (colorField !== \"intensity\" && colorField !== \"range\") {\n      const message = `LaserScan color field must be either 'intensity' or 'range', found '${colorField}'`;\n      invalidLaserScanError(this.renderer, this, message);\n      return;\n    }\n\n    const laserScanMaterial = this.userData.material;\n    const pickingMaterial = this.userData.pickingMaterial;\n\n    const topic = this.userData.topic;\n    const pointsHistory = this.#pointsHistory;\n    const isDecay = settings.decayTime > 0;\n    if (isDecay) {\n      // Push a new (empty) entry to the history of points\n      const geometry = createLaserScanGeometry(topic, THREE.StaticDrawUsage);\n      const points = createPoints(\n        topic,\n        laserScan.pose,\n        geometry,\n        laserScanMaterial,\n        pickingMaterial,\n        undefined,\n      );\n      pointsHistory.addHistoryEntry({ receiveTime, messageTime, object3d: points });\n      this.add(points);\n    }\n\n    const latestEntry = pointsHistory.latest();\n    latestEntry.receiveTime = receiveTime;\n    latestEntry.messageTime = messageTime;\n    latestEntry.object3d.userData.pose = laserScan.pose;\n\n    const geometry = latestEntry.object3d.geometry;\n    geometry.resize(ranges.length);\n    const rangeAttribute = geometry.attributes.position!;\n    const colorAttribute = geometry.attributes.color!;\n    rangeAttribute.set(ranges);\n\n    // Update material uniforms\n    laserScanMaterial.update(settings, laserScan);\n    pickingMaterial.update(settings, laserScan);\n\n    // Determine min/max color values (if needed) and max range\n    let minColorValue = settings.minValue ?? Number.POSITIVE_INFINITY;\n    let maxColorValue = settings.maxValue ?? Number.NEGATIVE_INFINITY;\n    if (settings.minValue == undefined || settings.maxValue == undefined) {\n      let maxRange = 0;\n\n      for (let i = 0; i < ranges.length; i++) {\n        const range = ranges[i]!;\n        if (Number.isFinite(range)) {\n          maxRange = Math.max(maxRange, range);\n        }\n\n        const colorValue = colorField === \"range\" ? range : intensities[i];\n        if (Number.isFinite(colorValue)) {\n          minColorValue = Math.min(minColorValue, colorValue!);\n          maxColorValue = Math.max(maxColorValue, colorValue!);\n        }\n      }\n      minColorValue = settings.minValue ?? minColorValue;\n      maxColorValue = settings.maxValue ?? maxColorValue;\n\n      // Update the LaserScan bounding sphere\n      latestEntry.object3d.geometry.boundingSphere ??= new THREE.Sphere();\n      latestEntry.object3d.geometry.boundingSphere.set(VEC3_ZERO, maxRange);\n      latestEntry.object3d.frustumCulled = true;\n    } else {\n      latestEntry.object3d.geometry.boundingSphere = ReactNull;\n      latestEntry.object3d.frustumCulled = false;\n    }\n\n    // Build a method to convert raw color field values to RGBA\n    const colorConverter =\n      settings.colorMode === \"rgba-fields\"\n        ? () => NaN // should never happen: rgba-fields is not supported for LaserScans\n        : getColorConverter(\n            settings as typeof settings & { colorMode: typeof settings.colorMode },\n            minColorValue,\n            maxColorValue,\n          );\n\n    // Iterate the point cloud data to update color attribute\n    for (let i = 0; i < ranges.length; i++) {\n      const colorValue = colorField === \"range\" ? ranges[i]! : intensities[i] ?? 0;\n      colorConverter(tempColor, colorValue);\n      colorAttribute.setXYZW(i, tempColor.r, tempColor.g, tempColor.b, tempColor.a);\n    }\n\n    rangeAttribute.needsUpdate = true;\n    colorAttribute.needsUpdate = true;\n  }\n\n  public updateUniforms(): void {\n    const material = this.userData.material as Partial<LaserScanMaterial>;\n    const pixelRatio = material.uniforms?.pixelRatio;\n    if (pixelRatio) {\n      pixelRatio.value = this.renderer.getPixelRatio();\n    }\n  }\n\n  public invalidateLastEntry() {\n    const lastEntry = this.#pointsHistory.latest();\n    lastEntry.object3d.geometry.resize(0);\n  }\n\n  public startFrame(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    this.#pointsHistory.updateHistoryFromCurrentTime(currentTime);\n    this.#pointsHistory.updatePoses(currentTime, renderFrameId, fixedFrameId);\n    this.updateUniforms();\n  }\n}\n\nexport class LaserScans extends SceneExtension<LaserScanRenderable> {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.LaserScans\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: ROS_LASERSCAN_DATATYPES,\n        subscription: { handler: this.#handleLaserScan },\n      },\n      {\n        type: \"schema\",\n        schemaNames: FOXGLOVE_LASERSCAN_DATATYPES,\n        subscription: { handler: this.#handleLaserScan },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      const isLaserScan = topicIsConvertibleToSchema(topic, ALL_LASERSCAN_DATATYPES);\n      if (!isLaserScan) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsLaserScan>;\n      const messageFields = LASERSCAN_FIELDS;\n      const node: SettingsTreeNodeWithActionHandler = pointSettingsNode(\n        topic,\n        messageFields,\n        config,\n      );\n      node.handler = handler;\n      node.icon = \"Radar\";\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Do not call super.startFrame() since we handle updatePose() manually.\n    // Instead of updating the pose for each Renderable in this.renderables, we\n    // update the pose of each THREE.Points object in the pointsHistory of each\n    // renderable\n\n    for (const [topic, renderable] of this.renderables) {\n      if (!renderable.userData.settings.visible) {\n        renderable.removeFromParent();\n        renderable.dispose();\n        this.renderables.delete(topic);\n        continue;\n      }\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n      renderable.updateUniforms();\n    }\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const prevSettings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsLaserScan>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...prevSettings };\n\n      renderable.updateLaserScan(\n        renderable.userData.laserScan,\n        renderable.userData.originalMessage,\n        settings,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  #handleLaserScan = (\n    messageEvent: PartialMessageEvent<RosLaserScan | FoxgloveLaserScan>,\n  ): void => {\n    const topic = messageEvent.topic;\n    const laserScan =\n      \"header\" in messageEvent.message\n        ? normalizeRosLaserScan(messageEvent.message)\n        : normalizeFoxgloveLaserScan(messageEvent.message as PartialMessage<FoxgloveLaserScan>);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsLaserScan>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n      if (settings.colorField == undefined) {\n        settings.colorField = \"intensity\";\n        settings.colorMode = \"colormap\";\n        settings.colorMap = \"turbo\";\n\n        // Update user settings with the newly selected color field\n        this.renderer.updateConfig((draft) => {\n          const updatedUserSettings = { ...userSettings };\n          updatedUserSettings.colorField = settings.colorField;\n          updatedUserSettings.colorMode = settings.colorMode;\n          updatedUserSettings.colorMap = settings.colorMap;\n          draft.topics[topic] = updatedUserSettings;\n        });\n      }\n\n      const material = new LaserScanMaterial();\n      const pickingMaterial = new LaserScanMaterial({ picking: true });\n      const instancePickingMaterial = new LaserScanInstancePickingMaterial();\n\n      material.update(settings, laserScan);\n      pickingMaterial.update(settings, laserScan);\n\n      const messageTime = toNanoSec(laserScan.timestamp);\n      renderable = new LaserScanRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime,\n        frameId: this.renderer.normalizeFrameId(laserScan.frame_id),\n        pose: laserScan.pose,\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        laserScan,\n        originalMessage: messageEvent.message as RosObject,\n        material,\n        pickingMaterial,\n        instancePickingMaterial,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    renderable.updateLaserScan(\n      laserScan,\n      messageEvent.message as RosObject,\n      renderable.userData.settings,\n      receiveTime,\n    );\n  };\n}\n\nexport class LaserScanMaterial extends THREE.RawShaderMaterial {\n  static #MIN_PICKING_POINT_SIZE = 8;\n\n  public constructor({ picking = false }: { picking?: boolean } = {}) {\n    super({\n      vertexShader: /*glsl*/ `\\\n        #version 300 es\n        precision highp float;\n        precision highp int;\n        uniform mat4 projectionMatrix, modelViewMatrix;\n\n        uniform float pointSize;\n        uniform float pixelRatio;\n        uniform float angleMin, angleIncrement;\n        uniform float rangeMin, rangeMax;\n        in float position; // range, but must be named position in order for three.js to render anything\n        in mediump vec4 color;\n        out mediump vec4 vColor;\n        void main() {\n          if (position < rangeMin || position > rangeMax) {\n            gl_PointSize = 0.0;\n            return;\n          }\n          vColor = color;\n          float angle = angleMin + angleIncrement * float(gl_VertexID);\n          vec4 pos = vec4(position * cos(angle), position * sin(angle), 0, 1.0);\n          gl_Position = projectionMatrix * modelViewMatrix * pos;\n          ${\n            picking\n              ? /* glsl */ `gl_PointSize = pixelRatio * max(pointSize, ${LaserScanMaterial.#MIN_PICKING_POINT_SIZE.toFixed(\n                  1,\n                )});`\n              : \"gl_PointSize = pixelRatio * pointSize;\"\n          }\n\n        }\n      `,\n      fragmentShader: `\\\n        #version 300 es\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n          precision highp float;\n        #else\n          precision mediump float;\n        #endif\n        uniform bool isCircle;\n        ${picking ? \"uniform vec4 objectId;\" : \"in mediump vec4 vColor;\"}\n        out vec4 outColor;\n\n        ${THREE.ShaderChunk.encodings_pars_fragment /* for LinearTosRGB() */}\n\n        void main() {\n          if (isCircle) {\n            vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n            if (dot(cxy, cxy) > 1.0) { discard; }\n          }\n          ${picking ? \"outColor = objectId;\" : \"outColor = LinearTosRGB(vColor);\"}\n        }\n      `,\n    });\n    this.uniforms = {\n      isCircle: { value: false },\n      pointSize: { value: 1 },\n      pixelRatio: { value: 1 },\n      angleMin: { value: NaN },\n      angleIncrement: { value: NaN },\n      rangeMin: { value: NaN },\n      rangeMax: { value: NaN },\n    };\n    if (picking) {\n      this.uniforms.objectId = { value: [NaN, NaN, NaN, NaN] };\n    }\n  }\n\n  public update(settings: LayerSettingsLaserScan, laserScan: NormalizedLaserScan): void {\n    this.uniforms.isCircle!.value = settings.pointShape === \"circle\";\n    this.uniforms.pointSize!.value = settings.pointSize;\n    this.uniforms.angleMin!.value = laserScan.start_angle;\n    this.uniforms.angleIncrement!.value =\n      (laserScan.end_angle - laserScan.start_angle) / (laserScan.ranges.length - 1);\n    this.uniforms.rangeMin!.value = laserScan.range_min;\n    this.uniforms.rangeMax!.value = laserScan.range_max;\n    this.uniformsNeedUpdate = true;\n\n    const transparent = colorHasTransparency(settings);\n    if (transparent !== this.transparent) {\n      this.transparent = transparent;\n      this.depthWrite = !this.transparent;\n      this.needsUpdate = true;\n    }\n  }\n}\n\nclass LaserScanInstancePickingMaterial extends THREE.RawShaderMaterial {\n  static #MIN_PICKING_POINT_SIZE = 8;\n\n  public constructor() {\n    const minPointSize = LaserScanInstancePickingMaterial.#MIN_PICKING_POINT_SIZE.toFixed(1);\n    super({\n      vertexShader: /* glsl */ `\\\n        #version 300 es\n        precision highp float;\n        precision highp int;\n        uniform mat4 projectionMatrix, modelViewMatrix;\n\n        uniform float pointSize;\n        uniform float pixelRatio;\n        uniform float angleMin, angleIncrement;\n        uniform float rangeMin, rangeMax;\n        in float position; // range, but must be named position in order for three.js to render anything\n        varying vec4 objectId;\n        void main() {\n          if (position < rangeMin || position > rangeMax) {\n            gl_PointSize = 0.0;\n            return;\n          }\n          objectId = vec4(\n            float((gl_VertexID >> 24) & 255) / 255.0,\n            float((gl_VertexID >> 16) & 255) / 255.0,\n            float((gl_VertexID >> 8) & 255) / 255.0,\n            float(gl_VertexID & 255) / 255.0);\n          float angle = angleMin + angleIncrement * float(gl_VertexID);\n          vec4 pos = vec4(position * cos(angle), position * sin(angle), 0, 1.0);\n          gl_Position = projectionMatrix * modelViewMatrix * pos;\n          gl_PointSize = pixelRatio * max(pointSize, ${minPointSize});\n        }\n      `,\n      fragmentShader: /* glsl */ `\\\n        #version 300 es\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n          precision highp float;\n        #else\n          precision mediump float;\n        #endif\n        uniform bool isCircle;\n        varying vec4 objectId;\n        out vec4 outColor;\n\n        void main() {\n          if (isCircle) {\n            vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n            if (dot(cxy, cxy) > 1.0) { discard; }\n          }\n          outColor = objectId;\n        }\n      `,\n    });\n    this.uniforms = {\n      isCircle: { value: false },\n      pointSize: { value: 1 },\n      pixelRatio: { value: 1 },\n      angleMin: { value: NaN },\n      angleIncrement: { value: NaN },\n      rangeMin: { value: NaN },\n      rangeMax: { value: NaN },\n    };\n  }\n\n  public update(settings: LayerSettingsLaserScan, laserScan: RosLaserScan): void {\n    this.uniforms.isCircle!.value = settings.pointShape === \"circle\";\n    this.uniforms.pointSize!.value = settings.pointSize;\n    this.uniforms.angleMin!.value = laserScan.angle_min;\n    this.uniforms.angleIncrement!.value = laserScan.angle_increment;\n    this.uniforms.rangeMin!.value = laserScan.range_min;\n    this.uniforms.rangeMax!.value = laserScan.range_max;\n    this.uniformsNeedUpdate = true;\n  }\n}\n\nfunction invalidLaserScanError(\n  renderer: IRenderer,\n  renderable: LaserScanRenderable,\n  message: string,\n): void {\n  renderer.settings.errors.addToTopic(renderable.userData.topic, INVALID_LASERSCAN, message);\n  renderable.invalidateLastEntry();\n}\n\nfunction normalizeFoxgloveLaserScan(\n  message: PartialMessage<FoxgloveLaserScan>,\n): NormalizedLaserScan {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    frame_id: message.frame_id ?? \"\",\n    pose: normalizePose(message.pose),\n    start_angle: message.start_angle ?? 0,\n    end_angle: message.end_angle ?? 0,\n    range_min: -Infinity,\n    range_max: Infinity,\n    ranges: normalizeFloat32Array(message.ranges),\n    intensities: normalizeFloat32Array(message.intensities),\n  };\n}\n\nfunction normalizeRosLaserScan(message: PartialMessage<RosLaserScan>): NormalizedLaserScan {\n  return {\n    timestamp: normalizeTime(message.header?.stamp),\n    frame_id: message.header?.frame_id ?? \"\",\n    pose: emptyPose(),\n    start_angle: message.angle_min ?? 0,\n    end_angle: message.angle_max ?? 0,\n    range_min: message.range_min ?? -Infinity,\n    range_max: message.range_max ?? Infinity,\n    ranges: normalizeFloat32Array(message.ranges),\n    intensities: normalizeFloat32Array(message.intensities),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { RenderableMarker, getMarkerId } from \"./markers/RenderableMarker\";\nimport { RenderableMeshResource } from \"./markers/RenderableMeshResource\";\nimport { missingTransformMessage, MISSING_TRANSFORM } from \"./transforms\";\nimport type { IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { Marker, MarkerAction, MarkerType } from \"../ros\";\nimport { BaseSettings } from \"../settings\";\nimport { updatePose } from \"../updatePose\";\n\nexport type LayerSettingsMarker = BaseSettings & {\n  color: string | undefined;\n  showOutlines: boolean | undefined;\n  selectedIdVariable: string | undefined;\n  namespaces: Record<string, LayerSettingsMarkerNamespace>;\n};\n\nexport type LayerSettingsMarkerNamespace = BaseSettings;\n\nconst INVALID_CUBE_LIST = \"INVALID_CUBE_LIST\";\nconst INVALID_LINE_LIST = \"INVALID_LINE_LIST\";\nconst INVALID_LINE_STRIP = \"INVALID_LINE_STRIP\";\nconst INVALID_MARKER_ACTION = \"INVALID_MARKER_ACTION\";\nconst INVALID_MARKER_TYPE = \"INVALID_MARKER_TYPE\";\nconst INVALID_POINTS_LIST = \"INVALID_POINTS_LIST\";\nconst INVALID_SPHERE_LIST = \"INVALID_SPHERE_LIST\";\n\nconst DEFAULT_NAMESPACE_SETTINGS: LayerSettingsMarkerNamespace = {\n  visible: true,\n};\n\nexport type MarkerTopicUserData = BaseUserData & {\n  topic: string;\n  settings: LayerSettingsMarker;\n};\n\ntype PartialMarkerSettings = Partial<LayerSettingsMarker> | undefined;\n\nexport class MarkersNamespace {\n  public namespace: string;\n  public markersById = new Map<number, RenderableMarker>();\n  public settings: LayerSettingsMarkerNamespace;\n\n  public constructor(topic: string, namespace: string, renderer: IRenderer) {\n    this.namespace = namespace;\n\n    // Set the initial settings from default values merged with any user settings\n    const topicSettings = renderer.config.topics[topic] as PartialMarkerSettings;\n    const userSettings = topicSettings?.namespaces?.[namespace];\n    this.settings = { ...DEFAULT_NAMESPACE_SETTINGS, ...userSettings };\n  }\n}\n\nexport class TopicMarkers extends Renderable<MarkerTopicUserData> {\n  public override pickable = false;\n  public namespaces = new Map<string, MarkersNamespace>();\n\n  public override dispose(): void {\n    for (const ns of this.namespaces.values()) {\n      for (const marker of ns.markersById.values()) {\n        this.renderer.markerPool.release(marker);\n      }\n    }\n    this.children.length = 0;\n    this.namespaces.clear();\n  }\n\n  public addMarkerMessage(marker: Marker, receiveTime: bigint): void {\n    switch (marker.action) {\n      case MarkerAction.ADD:\n      case MarkerAction.MODIFY:\n        this.#addOrUpdateMarker(marker, receiveTime);\n        break;\n      case MarkerAction.DELETE:\n        this.#deleteMarker(marker.ns, marker.id);\n        break;\n      case MarkerAction.DELETEALL: {\n        this.#deleteAllMarkers(marker.ns);\n        break;\n      }\n      default:\n        // Unknown action\n        this.renderer.settings.errors.addToTopic(\n          this.topic,\n          INVALID_MARKER_ACTION,\n          `Invalid marker action ${marker.action}`,\n        );\n    }\n  }\n\n  public update(): void {\n    // Updates each individual marker renderable using `originalMarker` and the\n    // current topic settings\n    for (const ns of this.namespaces.values()) {\n      for (const renderable of ns.markersById.values()) {\n        renderable.update(renderable.userData.originalMarker, renderable.userData.receiveTime);\n      }\n    }\n  }\n\n  public startFrame(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    this.visible = this.userData.settings.visible;\n    if (!this.visible) {\n      this.renderer.settings.errors.clearTopic(this.topic);\n      return;\n    }\n\n    for (const ns of this.namespaces.values()) {\n      for (const renderable of ns.markersById.values()) {\n        renderable.visible = ns.settings.visible;\n        if (!renderable.visible) {\n          continue;\n        }\n\n        const marker = renderable.userData.marker;\n        const receiveTime = renderable.userData.receiveTime;\n        const expiresIn = renderable.userData.expiresIn;\n\n        // Check if this marker has expired\n        if (expiresIn != undefined) {\n          if (currentTime > receiveTime + expiresIn) {\n            this.#deleteMarker(ns.namespace, marker.id);\n            continue;\n          }\n        }\n\n        const frameId = this.renderer.normalizeFrameId(marker.header.frame_id);\n        const srcTime = marker.frame_locked ? currentTime : renderable.userData.messageTime;\n        const updated = updatePose(\n          renderable,\n          this.renderer.transformTree,\n          renderFrameId,\n          fixedFrameId,\n          frameId,\n          currentTime,\n          srcTime,\n        );\n        renderable.visible = updated;\n        const topic = renderable.userData.topic;\n        if (!updated) {\n          const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n          this.renderer.settings.errors.addToTopic(topic, MISSING_TRANSFORM, message);\n        } else {\n          this.renderer.settings.errors.removeFromTopic(topic, MISSING_TRANSFORM);\n        }\n      }\n    }\n  }\n\n  #addOrUpdateMarker(marker: Marker, receiveTime: bigint): void {\n    let ns = this.namespaces.get(marker.ns);\n    if (!ns) {\n      ns = new MarkersNamespace(this.topic, marker.ns, this.renderer);\n      this.namespaces.set(marker.ns, ns);\n    }\n\n    let renderable = ns.markersById.get(marker.id);\n\n    // Check if the marker with this id changed type\n    if (renderable && renderable.userData.marker.type !== marker.type) {\n      this.#deleteMarker(marker.ns, marker.id);\n      renderable = undefined;\n    }\n\n    if (!renderable) {\n      renderable = this.#createMarkerRenderable(marker, receiveTime);\n      if (!renderable) {\n        return;\n      }\n      this.add(renderable);\n      ns.markersById.set(marker.id, renderable);\n    }\n\n    renderable.update(marker, receiveTime);\n  }\n\n  #deleteMarker(ns: string, id: number): boolean {\n    const namespace = this.namespaces.get(ns);\n    if (namespace) {\n      const renderable = namespace.markersById.get(id);\n      if (renderable) {\n        this.remove(renderable);\n        this.renderer.markerPool.release(renderable);\n        namespace.markersById.delete(id);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  #deleteAllMarkers(ns: string): void {\n    const clearNamespace = (namespace: MarkersNamespace): void => {\n      for (const renderable of namespace.markersById.values()) {\n        this.remove(renderable);\n        this.renderer.markerPool.release(renderable);\n      }\n      namespace.markersById.clear();\n    };\n\n    if (ns.length === 0) {\n      // Delete all markers on this topic\n      for (const namespace of this.namespaces.values()) {\n        clearNamespace(namespace);\n      }\n    } else {\n      // Delete all markers on the given namespace\n      const namespace = this.namespaces.get(ns);\n      if (namespace) {\n        clearNamespace(namespace);\n      }\n    }\n  }\n\n  #createMarkerRenderable(marker: Marker, receiveTime: bigint): RenderableMarker | undefined {\n    const pool = this.renderer.markerPool;\n    switch (marker.type) {\n      case MarkerType.ARROW:\n        return pool.acquire(MarkerType.ARROW, this.topic, marker, receiveTime);\n      case MarkerType.CUBE:\n        return pool.acquire(MarkerType.CUBE, this.topic, marker, receiveTime);\n      case MarkerType.SPHERE:\n        return pool.acquire(MarkerType.SPHERE, this.topic, marker, receiveTime);\n      case MarkerType.CYLINDER:\n        return pool.acquire(MarkerType.CYLINDER, this.topic, marker, receiveTime);\n      case MarkerType.LINE_STRIP:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_STRIP,\n            `LINE_STRIP marker ${markerId} has no points`,\n          );\n          return undefined;\n        } else if (marker.points.length === 1) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_STRIP,\n            `LINE_STRIP marker ${markerId} only has one point`,\n          );\n          return undefined;\n        }\n        return pool.acquire(MarkerType.LINE_STRIP, this.topic, marker, receiveTime);\n      case MarkerType.LINE_LIST:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_LIST,\n            `LINE_LIST marker ${markerId} has no points`,\n          );\n          return undefined;\n        } else if (marker.points.length === 1) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_LIST,\n            `LINE_LIST marker ${markerId} only has one point`,\n          );\n          return undefined;\n        } else if (marker.points.length % 2 !== 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_LINE_LIST,\n            `LINE_LIST marker ${markerId} has an odd number of points (${marker.points.length})`,\n          );\n          if (marker.points.length === 1) {\n            return undefined;\n          }\n        }\n        return pool.acquire(MarkerType.LINE_LIST, this.topic, marker, receiveTime);\n      case MarkerType.CUBE_LIST:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_CUBE_LIST,\n            `CUBE_LIST marker ${markerId} has no points`,\n          );\n          return undefined;\n        }\n        return pool.acquire(MarkerType.CUBE_LIST, this.topic, marker, receiveTime);\n      case MarkerType.SPHERE_LIST:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_SPHERE_LIST,\n            `SPHERE_LIST marker ${markerId} has no points`,\n          );\n          return undefined;\n        }\n        return pool.acquire(MarkerType.SPHERE_LIST, this.topic, marker, receiveTime);\n      case MarkerType.POINTS:\n        if (marker.points.length === 0) {\n          const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n          this.renderer.settings.errors.addToTopic(\n            this.topic,\n            INVALID_POINTS_LIST,\n            `POINTS marker ${markerId} has no points`,\n          );\n          return undefined;\n        }\n        return pool.acquire(MarkerType.POINTS, this.topic, marker, receiveTime);\n      case MarkerType.TEXT_VIEW_FACING:\n        return pool.acquire(MarkerType.TEXT_VIEW_FACING, this.topic, marker, receiveTime);\n      case MarkerType.MESH_RESOURCE: {\n        const renderable = pool.acquire(MarkerType.MESH_RESOURCE, this.topic, marker, receiveTime);\n        // Force reload the mesh\n        (renderable as RenderableMeshResource).update(marker, receiveTime, true);\n        return renderable;\n      }\n      case MarkerType.TRIANGLE_LIST:\n        return pool.acquire(MarkerType.TRIANGLE_LIST, this.topic, marker, receiveTime);\n      default: {\n        const markerId = getMarkerId(this.topic, marker.ns, marker.id);\n        this.renderer.settings.errors.addToTopic(\n          this.topic,\n          INVALID_MARKER_TYPE,\n          `Marker ${markerId} has invalid type ${marker.type}`,\n        );\n        return undefined;\n      }\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { set } from \"lodash\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { LayerSettingsMarker, LayerSettingsMarkerNamespace, TopicMarkers } from \"./TopicMarkers\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { SELECTED_ID_VARIABLE } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport {\n  normalizeColorRGBA,\n  normalizeColorRGBAs,\n  normalizeHeader,\n  normalizePose,\n  normalizeTime,\n  normalizeVector3,\n  normalizeVector3s,\n} from \"../normalizeMessages\";\nimport { Marker, MarkerArray, MARKER_ARRAY_DATATYPES, MARKER_DATATYPES } from \"../ros\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nconst DEFAULT_SETTINGS: LayerSettingsMarker = {\n  visible: false,\n  showOutlines: true,\n  color: undefined,\n  selectedIdVariable: undefined,\n  namespaces: {},\n};\n\nexport class Markers extends SceneExtension<TopicMarkers> {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.Markers\", renderer);\n  }\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: MARKER_ARRAY_DATATYPES,\n        subscription: { handler: this.#handleMarkerArray },\n      },\n      {\n        type: \"schema\",\n        schemaNames: MARKER_DATATYPES,\n        subscription: { handler: this.#handleMarker },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, MARKER_ARRAY_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, MARKER_DATATYPES)\n        )\n      ) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsMarker>;\n\n      const node: SettingsTreeNodeWithActionHandler = {\n        label: topic.name,\n        icon: \"Shapes\",\n        order: topic.name.toLocaleLowerCase(),\n        fields: {\n          color: { label: \"Color\", input: \"rgba\", value: config.color },\n          showOutlines: { label: \"Show outline\", input: \"boolean\", value: config.showOutlines },\n          selectedIdVariable: {\n            label: \"Selection Variable\",\n            input: \"string\",\n            help: \"When selecting a marker, this global variable will be set to the marker ID\",\n            value: config.selectedIdVariable,\n            placeholder: SELECTED_ID_VARIABLE,\n          },\n        },\n        visible: config.visible ?? DEFAULT_SETTINGS.visible,\n        handler: this.handleSettingsAction,\n      };\n\n      // Create a list of all the namespaces for this topic\n      const topicMarkers = this.renderables.get(topic.name);\n      const namespaces = Array.from(topicMarkers?.namespaces.values() ?? []).sort((a, b) =>\n        a.namespace.localeCompare(b.namespace),\n      );\n      if (namespaces.length > 1 || (namespaces.length === 1 && namespaces[0]!.namespace !== \"\")) {\n        node.children = {};\n        for (const ns of namespaces) {\n          const child: SettingsTreeNodeWithActionHandler = {\n            label: ns.namespace !== \"\" ? ns.namespace : `\"\"`,\n            icon: \"Shapes\",\n            visible: ns.settings.visible,\n            defaultExpansionState: namespaces.length > 1 ? \"collapsed\" : \"expanded\",\n            handler: this.#handleSettingsActionNamespace,\n          };\n          node.children[`ns:${ns.namespace}`] = child;\n        }\n      }\n\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Don't use SceneExtension#startFrame() because our renderables represent one topic each with\n    // many markers. Instead, call startFrame on each renderable\n    for (const renderable of this.renderables.values()) {\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the TopicMarkers settings\n    const topicName = path[1]!;\n    const topicMarkers = this.renderables.get(topicName);\n    if (topicMarkers) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsMarker>\n        | undefined;\n      topicMarkers.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n      topicMarkers.update();\n    }\n  };\n\n  #handleSettingsActionNamespace = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 4) {\n      return;\n    }\n\n    const topicName = path[1]!;\n    const namespaceKey = path[2]!;\n    const fieldName = path[3]!;\n    const namespace = namespaceKey.slice(3); // remove `ns:` prefix\n\n    this.renderer.updateConfig((draft) => {\n      // We build the settings tree with paths of the form\n      //   [\"topics\", <topic>, \"ns:\"<namespace>, \"visible\"]\n      // but the config is stored with paths of the form\n      //   [\"topics\", <topic>, \"namespaces\", <namespace>, \"visible\"]\n      const actualPath = [\"topics\", topicName, \"namespaces\", namespace, fieldName];\n      set(draft, actualPath, action.payload.value);\n    });\n\n    // Update the MarkersNamespace settings\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsMarker>\n        | undefined;\n      const ns = renderable.namespaces.get(namespace);\n      if (ns) {\n        const nsSettings = settings?.namespaces?.[namespace] as\n          | Partial<LayerSettingsMarkerNamespace>\n          | undefined;\n        ns.settings = { ...ns.settings, ...nsSettings };\n      }\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n\n  #handleMarkerArray = (messageEvent: PartialMessageEvent<MarkerArray>): void => {\n    const topic = messageEvent.topic;\n    const markerArray = messageEvent.message;\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    for (const markerMsg of markerArray.markers ?? []) {\n      if (markerMsg) {\n        const marker = normalizeMarker(markerMsg);\n        this.#addMarker(topic, marker, receiveTime);\n      }\n    }\n  };\n\n  #handleMarker = (messageEvent: PartialMessageEvent<Marker>): void => {\n    const topic = messageEvent.topic;\n    const marker = normalizeMarker(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    this.#addMarker(topic, marker, receiveTime);\n  };\n\n  #addMarker(topic: string, marker: Marker, receiveTime: bigint): void {\n    const topicMarkers = this.#getTopicMarkers(topic, marker, receiveTime);\n    const prevNsCount = topicMarkers.namespaces.size;\n    topicMarkers.addMarkerMessage(marker, receiveTime);\n\n    // If the topic has a new namespace, rebuild the settings node for this topic\n    if (prevNsCount !== topicMarkers.namespaces.size) {\n      this.updateSettingsTree();\n    }\n  }\n\n  public addMarkerArray(topic: string, markerArray: Marker[], receiveTime: bigint): void {\n    const firstMarker = markerArray[0];\n    if (!firstMarker) {\n      return;\n    }\n\n    const topicMarkers = this.#getTopicMarkers(topic, firstMarker, receiveTime);\n    const prevNsCount = topicMarkers.namespaces.size;\n    for (const marker of markerArray) {\n      topicMarkers.addMarkerMessage(marker, receiveTime);\n    }\n\n    // If the topic has a new namespace, rebuild the settings node for this topic\n    if (prevNsCount !== topicMarkers.namespaces.size) {\n      this.updateSettingsTree();\n    }\n  }\n\n  #getTopicMarkers(topic: string, marker: Marker, receiveTime: bigint): TopicMarkers {\n    let topicMarkers = this.renderables.get(topic);\n    if (!topicMarkers) {\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsMarker>\n        | undefined;\n\n      topicMarkers = new TopicMarkers(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(marker.header.stamp),\n        frameId: this.renderer.normalizeFrameId(marker.header.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        topic,\n        settings: { ...DEFAULT_SETTINGS, ...userSettings },\n      });\n      this.renderables.set(topic, topicMarkers);\n      this.add(topicMarkers);\n    }\n    return topicMarkers;\n  }\n}\n\nfunction normalizeMarker(marker: PartialMessage<Marker>): Marker {\n  return {\n    header: normalizeHeader(marker.header),\n    ns: marker.ns ?? \"\",\n    id: marker.id ?? 0,\n    type: marker.type ?? 0,\n    action: marker.action ?? 0,\n    pose: normalizePose(marker.pose),\n    scale: normalizeVector3(marker.scale),\n    color: normalizeColorRGBA(marker.color),\n    lifetime: normalizeTime(marker.lifetime),\n    frame_locked: marker.frame_locked ?? false,\n    points: normalizeVector3s(marker.points),\n    colors: normalizeColorRGBAs(marker.colors),\n    text: marker.text ?? \"\",\n    mesh_resource: marker.mesh_resource ?? \"\",\n    mesh_use_embedded_materials: marker.mesh_use_embedded_materials ?? false,\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport * as THREE from \"three\";\n\nimport { Label } from \"@foxglove/three-text\";\n\nimport type { IRenderer } from \"../IRenderer\";\nimport { Renderable, BaseUserData } from \"../Renderable\";\nimport { SceneExtension } from \"../SceneExtension\";\n\ntype MeasurementState = \"idle\" | \"place-first-point\" | \"place-second-point\";\n\n/** A renderOrder value that should result in rendering after most/all other objects in the scene */\nconst LATE_RENDER_ORDER = 9999999;\n\n/**\n * A material that interprets the input mesh coordinates in pixel space, regardless of the camera\n * perspective/zoom level.\n */\nclass FixedSizeMeshMaterial extends THREE.ShaderMaterial {\n  public constructor({\n    color,\n    ...params\n  }: { color: THREE.ColorRepresentation } & THREE.MaterialParameters) {\n    super({\n      ...params,\n      vertexShader: /* glsl */ `\n        #include <common>\n        uniform vec2 canvasSize;\n        void main() {\n          vec4 mvPosition = modelViewMatrix * vec4(0., 0., 0., 1.);\n\n          // Adapted from THREE.ShaderLib.sprite\n          vec2 scale;\n          scale.x = length(vec3(modelMatrix[0].xyz));\n          scale.y = length(vec3(modelMatrix[1].xyz));\n\n          gl_Position = projectionMatrix * mvPosition;\n\n          // Add position after projection to maintain constant pixel size\n          gl_Position.xy += position.xy / canvasSize * scale * gl_Position.w;\n        }\n      `,\n      fragmentShader: /* glsl */ `\n        uniform vec3 color;\n        void main() {\n          gl_FragColor = vec4(color, 1.0);\n        }\n      `,\n      uniforms: {\n        canvasSize: { value: [0, 0] },\n        color: { value: new THREE.Color(color).convertSRGBToLinear() },\n      },\n    });\n  }\n}\n\ntype MeasurementEvent = { type: \"foxglove.measure-start\" } | { type: \"foxglove.measure-end\" };\n\nexport class MeasurementTool extends SceneExtension<Renderable<BaseUserData>, MeasurementEvent> {\n  #circleGeometry = new THREE.CircleGeometry(5, 16);\n  #circleMaterial = new FixedSizeMeshMaterial({\n    color: 0xff0000,\n    depthTest: false,\n    depthWrite: false,\n  });\n  #circle1 = new THREE.Mesh(this.#circleGeometry, this.#circleMaterial);\n  #circle2 = new THREE.Mesh(this.#circleGeometry, this.#circleMaterial);\n\n  #linePositionAttribute = new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, 0], 3);\n  #line = new THREE.Line(\n    new THREE.BufferGeometry(),\n    new THREE.LineBasicMaterial({ color: 0xff0000 }),\n  );\n  /**\n   * A dashed copy of the line drawn with inverse depth test so the line can still be visible when\n   * it's occluded\n   */\n  #lineOccluded = new THREE.Line(\n    new THREE.BufferGeometry(),\n    new THREE.LineDashedMaterial({\n      color: 0xff0000,\n      dashSize: 1,\n      gapSize: 1,\n      depthWrite: false,\n      depthFunc: THREE.GreaterDepth, // opposite of default THREE.LessEqualDepth\n    }),\n  );\n\n  #label: Label;\n\n  #point1NeedsUpdate = false;\n  #point2NeedsUpdate = false;\n\n  #point1?: THREE.Vector3;\n  #point2?: THREE.Vector3;\n\n  public state: MeasurementState = \"idle\";\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.MeasurementTool\", renderer);\n\n    this.#line.userData.picking = false;\n    this.#lineOccluded.userData.picking = false;\n    this.#circle1.userData.picking = false;\n    this.#circle2.userData.picking = false;\n\n    this.#label = renderer.labelPool.acquire();\n    this.#label.visible = false;\n    this.#label.setBillboard(true);\n    this.#label.setSizeAttenuation(false);\n    this.#label.setLineHeight(12);\n    this.#label.setColor(1, 0, 0);\n\n    // Make the label appear on top of other objects in the scene so it doesn't get clipped/occluded\n    this.#label.renderOrder = LATE_RENDER_ORDER;\n    this.#label.material.depthTest = false;\n    this.#label.material.depthWrite = false;\n    this.#label.material.transparent = true;\n\n    this.#lineOccluded.renderOrder = LATE_RENDER_ORDER;\n    this.#circle1.renderOrder = LATE_RENDER_ORDER;\n    this.#circle2.renderOrder = LATE_RENDER_ORDER;\n\n    this.#line.frustumCulled = false;\n    this.#lineOccluded.frustumCulled = false;\n    this.#line.geometry.setAttribute(\"position\", this.#linePositionAttribute);\n    this.#lineOccluded.geometry.setAttribute(\"position\", this.#linePositionAttribute);\n    this.#circle1.visible = false;\n    this.#circle2.visible = false;\n    this.add(this.#circle1);\n    this.add(this.#circle2);\n    this.add(this.#line);\n    this.add(this.#lineOccluded);\n    this.add(this.#label);\n    this.#setState(\"idle\");\n  }\n\n  public override dispose(): void {\n    super.dispose();\n    this.renderer.labelPool.release(this.#label);\n    this.#circleGeometry.dispose();\n    this.#circleMaterial.dispose();\n    this.#line.geometry.dispose();\n    this.#line.material.dispose();\n    this.#lineOccluded.geometry.dispose();\n    this.#lineOccluded.material.dispose();\n    this.renderer.input.removeListener(\"click\", this.#handleClick);\n    this.renderer.input.removeListener(\"mousemove\", this.#handleMouseMove);\n  }\n\n  public startMeasuring(): void {\n    this.#setState(\"place-first-point\");\n  }\n\n  public stopMeasuring(): void {\n    this.#point1 = this.#point2 = undefined;\n    this.#setState(\"idle\");\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    super.startFrame(currentTime, renderFrameId, fixedFrameId);\n    this.#circleMaterial.uniforms.canvasSize!.value[0] = this.renderer.input.canvasSize.x;\n    this.#circleMaterial.uniforms.canvasSize!.value[1] = this.renderer.input.canvasSize.y;\n  }\n\n  #setState(state: MeasurementState): void {\n    this.state = state;\n    switch (state) {\n      case \"idle\":\n        this.renderer.input.removeListener(\"click\", this.#handleClick);\n        this.renderer.input.removeListener(\"mousemove\", this.#handleMouseMove);\n        this.dispatchEvent({ type: \"foxglove.measure-end\" });\n        break;\n      case \"place-first-point\":\n        this.#point1 = this.#point2 = undefined;\n        this.renderer.input.addListener(\"click\", this.#handleClick);\n        this.renderer.input.addListener(\"mousemove\", this.#handleMouseMove);\n        this.dispatchEvent({ type: \"foxglove.measure-start\" });\n        break;\n      case \"place-second-point\":\n        break;\n    }\n    this.#updateDistance();\n    this.#render();\n  }\n\n  #handleMouseMove = (\n    _cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    _event: MouseEvent,\n  ) => {\n    if (!worldSpaceCursorCoords) {\n      return;\n    }\n    switch (this.state) {\n      case \"idle\":\n        break;\n      case \"place-first-point\":\n        (this.#point1 ??= new THREE.Vector3()).copy(worldSpaceCursorCoords);\n        this.#point1NeedsUpdate = true;\n        break;\n      case \"place-second-point\":\n        (this.#point2 ??= new THREE.Vector3()).copy(worldSpaceCursorCoords);\n        this.#point2NeedsUpdate = true;\n        this.#updateDistance();\n        break;\n    }\n    this.#render();\n  };\n\n  #updateDistance() {\n    if (this.#point1 && this.#point2) {\n      this.#label.setText(this.#point1.distanceTo(this.#point2).toFixed(2));\n    }\n  }\n\n  #handleClick = (\n    _cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    _event: MouseEvent,\n  ) => {\n    if (!worldSpaceCursorCoords) {\n      return;\n    }\n    switch (this.state) {\n      case \"idle\":\n        break;\n      case \"place-first-point\":\n        this.#point1 = worldSpaceCursorCoords.clone();\n        this.#point1NeedsUpdate = true;\n        this.#setState(\"place-second-point\");\n        break;\n      case \"place-second-point\":\n        this.#point2 = worldSpaceCursorCoords.clone();\n        this.#point2NeedsUpdate = true;\n        this.#setState(\"idle\");\n        break;\n    }\n    this.#render();\n  };\n\n  #render() {\n    if (this.#point1) {\n      this.#circle1.visible = true;\n      this.#circle1.position.copy(this.#point1);\n\n      if (this.#point1NeedsUpdate) {\n        this.#linePositionAttribute.setXYZ(0, this.#point1.x, this.#point1.y, this.#point1.z);\n        this.#linePositionAttribute.needsUpdate = true;\n        this.#lineOccluded.computeLineDistances();\n        this.#point1NeedsUpdate = false;\n      }\n    } else {\n      this.#circle1.visible = false;\n    }\n\n    if (this.#point2) {\n      this.#circle2.visible = true;\n      this.#circle2.position.copy(this.#point2);\n\n      if (this.#point2NeedsUpdate) {\n        this.#linePositionAttribute.setXYZ(1, this.#point2.x, this.#point2.y, this.#point2.z);\n        this.#linePositionAttribute.needsUpdate = true;\n        this.#lineOccluded.computeLineDistances();\n        this.#point2NeedsUpdate = false;\n      }\n    } else {\n      this.#circle2.visible = false;\n    }\n\n    if (this.#point1 && this.#point2) {\n      this.#line.visible = true;\n      this.#lineOccluded.visible = true;\n      this.#label.visible = true;\n      this.#label.position.copy(this.#point1).lerp(this.#point2, 0.5);\n    } else {\n      this.#line.visible = false;\n      this.#lineOccluded.visible = false;\n      this.#label.visible = false;\n    }\n\n    this.renderer.queueAnimationFrame();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { rgbaToCssString, SRGBToLinear, stringToRgba } from \"../color\";\nimport {\n  normalizeHeader,\n  normalizePose,\n  normalizeInt8Array,\n  normalizeTime,\n} from \"../normalizeMessages\";\nimport { ColorRGBA, OccupancyGrid, OCCUPANCY_GRID_DATATYPES } from \"../ros\";\nimport { BaseSettings } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\n\ntype ColorModes = \"custom\" | \"costmap\" | \"map\" | \"raw\";\n\nexport type LayerSettingsOccupancyGrid = BaseSettings & {\n  frameLocked: boolean;\n  minColor: string;\n  maxColor: string;\n  unknownColor: string;\n  invalidColor: string;\n  colorMode: ColorModes;\n  alpha: number;\n};\n\nconst INVALID_OCCUPANCY_GRID = \"INVALID_OCCUPANCY_GRID\";\n\nconst DEFAULT_MIN_COLOR = { r: 1, g: 1, b: 1, a: 1 }; // white\nconst DEFAULT_MAX_COLOR = { r: 0, g: 0, b: 0, a: 1 }; // black\nconst DEFAULT_UNKNOWN_COLOR = { r: 0.5, g: 0.5, b: 0.5, a: 1 }; // gray\nconst DEFAULT_INVALID_COLOR = { r: 1, g: 0, b: 1, a: 1 }; // magenta\nconst DEFAULT_ALPHA = 1.0;\n\nconst DEFAULT_MIN_COLOR_STR = rgbaToCssString(DEFAULT_MIN_COLOR);\nconst DEFAULT_MAX_COLOR_STR = rgbaToCssString(DEFAULT_MAX_COLOR);\nconst DEFAULT_UNKNOWN_COLOR_STR = rgbaToCssString(DEFAULT_UNKNOWN_COLOR);\nconst DEFAULT_INVALID_COLOR_STR = rgbaToCssString(DEFAULT_INVALID_COLOR);\n\nconst DEFAULT_SETTINGS: LayerSettingsOccupancyGrid = {\n  visible: false,\n  frameLocked: false,\n  colorMode: \"custom\",\n  minColor: DEFAULT_MIN_COLOR_STR,\n  maxColor: DEFAULT_MAX_COLOR_STR,\n  unknownColor: DEFAULT_UNKNOWN_COLOR_STR,\n  invalidColor: DEFAULT_INVALID_COLOR_STR,\n  alpha: DEFAULT_ALPHA,\n};\n\nexport type OccupancyGridUserData = BaseUserData & {\n  settings: LayerSettingsOccupancyGrid;\n  topic: string;\n  occupancyGrid: OccupancyGrid;\n  mesh: THREE.Mesh;\n  texture: THREE.DataTexture;\n  material: THREE.MeshBasicMaterial;\n  pickingMaterial: THREE.ShaderMaterial;\n};\n\nexport class OccupancyGridRenderable extends Renderable<OccupancyGridUserData> {\n  public override dispose(): void {\n    this.userData.texture.dispose();\n    this.userData.material.dispose();\n    this.userData.pickingMaterial.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.occupancyGrid;\n  }\n}\n\nexport class OccupancyGrids extends SceneExtension<OccupancyGridRenderable> {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.OccupancyGrids\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: OCCUPANCY_GRID_DATATYPES,\n        subscription: { handler: this.#handleOccupancyGrid },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, OCCUPANCY_GRID_DATATYPES)) {\n        continue;\n      }\n\n      const configWithDefaults = { ...DEFAULT_SETTINGS, ...configTopics[topic.name] };\n\n      let fields: SettingsTreeFields = {\n        colorMode: {\n          label: \"Color mode\",\n          input: \"select\",\n          value: configWithDefaults.colorMode,\n          options: [\n            { label: \"Custom\", value: \"custom\" },\n            { label: \"Map\", value: \"map\" },\n            { label: \"Costmap\", value: \"costmap\" },\n            { label: \"Raw\", value: \"raw\" },\n          ],\n        },\n      };\n\n      if (configWithDefaults.colorMode === \"custom\") {\n        // prettier-ignore\n        const customFields: SettingsTreeFields = {\n          minColor: { label: \"Min color\", input: \"rgba\", value: configWithDefaults.minColor },\n          maxColor: { label: \"Max color\", input: \"rgba\", value: configWithDefaults.maxColor },\n          unknownColor: { label: \"Unknown color\", input: \"rgba\", value: configWithDefaults.unknownColor },\n          invalidColor: { label: \"Invalid color\", input: \"rgba\", value: configWithDefaults.invalidColor }\n        };\n        fields = {\n          ...fields,\n          ...customFields,\n        };\n      } else {\n        const paletteFields: SettingsTreeFields = {\n          alpha: {\n            label: \"Alpha\",\n            input: \"number\",\n            value: configWithDefaults.alpha,\n            min: 0.0,\n            max: 1.0,\n            step: 0.1,\n            placeholder: \"auto\",\n          },\n        };\n        fields = {\n          ...fields,\n          ...paletteFields,\n        };\n      }\n\n      fields.frameLocked = {\n        label: \"Frame lock\",\n        input: \"boolean\",\n        value: configWithDefaults.frameLocked,\n      };\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          label: topic.name,\n          icon: \"Cells\",\n          fields,\n          visible: configWithDefaults.visible,\n          order: topic.name.toLocaleLowerCase(),\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const prevTransparent = occupancyGridHasTransparency(renderable.userData.settings);\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsOccupancyGrid>\n        | undefined;\n      renderable.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n\n      // Check if the transparency changed and we need to create a new material\n      const newTransparent = occupancyGridHasTransparency(renderable.userData.settings);\n      if (prevTransparent !== newTransparent) {\n        renderable.userData.material.transparent = newTransparent;\n        renderable.userData.material.depthWrite = !newTransparent;\n        renderable.userData.material.needsUpdate = true;\n      }\n\n      this.#updateOccupancyGridRenderable(\n        renderable,\n        renderable.userData.occupancyGrid,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  #handleOccupancyGrid = (messageEvent: PartialMessageEvent<OccupancyGrid>): void => {\n    const topic = messageEvent.topic;\n    const occupancyGrid = normalizeOccupancyGrid(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsOccupancyGrid>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n      const texture = createTexture(occupancyGrid);\n      const geometry = this.renderer.sharedGeometry.getGeometry(\n        this.constructor.name,\n        createGeometry,\n      );\n      const mesh = createMesh(topic, geometry, texture, settings);\n      const material = mesh.material as THREE.MeshBasicMaterial;\n      const pickingMaterial = mesh.userData.pickingMaterial as THREE.ShaderMaterial;\n\n      // Create the renderable\n      renderable = new OccupancyGridRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(occupancyGrid.header.stamp),\n        frameId: this.renderer.normalizeFrameId(occupancyGrid.header.frame_id),\n        pose: occupancyGrid.info.origin,\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        occupancyGrid,\n        mesh,\n        texture,\n        material,\n        pickingMaterial,\n      });\n      renderable.add(mesh);\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this.#updateOccupancyGridRenderable(renderable, occupancyGrid, receiveTime);\n  };\n\n  #updateOccupancyGridRenderable(\n    renderable: OccupancyGridRenderable,\n    occupancyGrid: OccupancyGrid,\n    receiveTime: bigint,\n  ): void {\n    renderable.userData.occupancyGrid = occupancyGrid;\n    renderable.userData.pose = occupancyGrid.info.origin;\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(occupancyGrid.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(occupancyGrid.header.frame_id);\n\n    const size = occupancyGrid.info.width * occupancyGrid.info.height;\n    if (occupancyGrid.data.length !== size) {\n      const message = `OccupancyGrid data length (${occupancyGrid.data.length}) is not equal to width ${occupancyGrid.info.width} * height ${occupancyGrid.info.height}`;\n      invalidOccupancyGridError(this.renderer, renderable, message);\n      return;\n    }\n\n    let texture = renderable.userData.texture;\n    const width = occupancyGrid.info.width;\n    const height = occupancyGrid.info.height;\n    const resolution = occupancyGrid.info.resolution;\n\n    if (width !== texture.image.width || height !== texture.image.height) {\n      // The image dimensions changed, regenerate the texture\n      texture.dispose();\n      texture = createTexture(occupancyGrid);\n      renderable.userData.texture = texture;\n      renderable.userData.material.map = texture;\n    }\n\n    // Update the occupancy grid texture\n    updateTexture(texture, occupancyGrid, renderable.userData.settings);\n\n    renderable.scale.set(resolution * width, resolution * height, 1);\n  }\n}\nfunction createGeometry(): THREE.PlaneGeometry {\n  const geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n  geometry.translate(0.5, 0.5, 0);\n  geometry.computeBoundingSphere();\n  return geometry;\n}\nfunction invalidOccupancyGridError(\n  renderer: IRenderer,\n  renderable: OccupancyGridRenderable,\n  message: string,\n): void {\n  renderer.settings.errors.addToTopic(renderable.userData.topic, INVALID_OCCUPANCY_GRID, message);\n}\n\nfunction createTexture(occupancyGrid: OccupancyGrid): THREE.DataTexture {\n  const width = occupancyGrid.info.width;\n  const height = occupancyGrid.info.height;\n  const size = width * height;\n  const rgba = new Uint8ClampedArray(size * 4);\n  const texture = new THREE.DataTexture(\n    rgba,\n    width,\n    height,\n    THREE.RGBAFormat,\n    THREE.UnsignedByteType,\n    THREE.UVMapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.ClampToEdgeWrapping,\n    THREE.NearestFilter,\n    THREE.LinearFilter,\n    1,\n    THREE.LinearEncoding, // OccupancyGrid carries linear grayscale values, not sRGB\n  );\n  texture.generateMipmaps = false;\n  return texture;\n}\n\nfunction createMesh(\n  topic: string,\n  geometry: THREE.PlaneGeometry,\n  texture: THREE.DataTexture,\n  settings: LayerSettingsOccupancyGrid,\n): THREE.Mesh {\n  // Create the texture, material, and mesh\n  const pickingMaterial = createPickingMaterial(texture);\n  const material = createMaterial(texture, topic, settings);\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.castShadow = true;\n  mesh.receiveShadow = true;\n  // This overrides the picking material used for `mesh`. See Picker.ts\n  mesh.userData.pickingMaterial = pickingMaterial;\n  return mesh;\n}\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempUnknownColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempInvalidColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempMinColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempMaxColor = { r: 0, g: 0, b: 0, a: 0 };\n\nfunction updateTexture(\n  texture: THREE.DataTexture,\n  occupancyGrid: OccupancyGrid,\n  settings: LayerSettingsOccupancyGrid,\n): void {\n  const size = occupancyGrid.info.width * occupancyGrid.info.height;\n  const rgba = texture.image.data;\n  stringToRgba(tempMinColor, settings.minColor);\n  stringToRgba(tempMaxColor, settings.maxColor);\n  stringToRgba(tempUnknownColor, settings.unknownColor);\n  stringToRgba(tempInvalidColor, settings.invalidColor);\n\n  srgbToLinearUint8(tempMinColor);\n  srgbToLinearUint8(tempMaxColor);\n  srgbToLinearUint8(tempUnknownColor);\n  srgbToLinearUint8(tempInvalidColor);\n\n  const data = occupancyGrid.data;\n  for (let i = 0; i < size; i++) {\n    const value = data[i]! | 0;\n    const offset = i * 4;\n    if (settings.colorMode === \"custom\") {\n      if (value === -1) {\n        // Unknown (-1)\n        rgba[offset + 0] = tempUnknownColor.r;\n        rgba[offset + 1] = tempUnknownColor.g;\n        rgba[offset + 2] = tempUnknownColor.b;\n        rgba[offset + 3] = tempUnknownColor.a;\n      } else if (value >= 0 && value <= 100) {\n        // Valid [0-100]\n        const t = value / 100;\n\n        rgba[offset + 0] = tempMinColor.r + (tempMaxColor.r - tempMinColor.r) * t;\n        rgba[offset + 1] = tempMinColor.g + (tempMaxColor.g - tempMinColor.g) * t;\n        rgba[offset + 2] = tempMinColor.b + (tempMaxColor.b - tempMinColor.b) * t;\n        rgba[offset + 3] = tempMinColor.a + (tempMaxColor.a - tempMinColor.a) * t;\n      } else {\n        // Invalid (< -1 or > 100)\n        rgba[offset + 0] = tempInvalidColor.r;\n        rgba[offset + 1] = tempInvalidColor.g;\n        rgba[offset + 2] = tempInvalidColor.b;\n        rgba[offset + 3] = tempInvalidColor.a;\n      }\n    } else {\n      paletteColorCached(tempColor, value, settings.colorMode);\n      rgba[offset + 0] = tempColor.r;\n      rgba[offset + 1] = tempColor.g;\n      rgba[offset + 2] = tempColor.b;\n      rgba[offset + 3] = tempColor.a * settings.alpha;\n    }\n  }\n\n  texture.needsUpdate = true;\n}\n\nfunction createMaterial(\n  texture: THREE.DataTexture,\n  topic: string,\n  settings: LayerSettingsOccupancyGrid,\n): THREE.MeshBasicMaterial {\n  const transparent = occupancyGridHasTransparency(settings);\n  return new THREE.MeshBasicMaterial({\n    name: `${topic}:Material`,\n    // Enable alpha clipping. Fully transparent (alpha=0) pixels are skipped\n    // even when transparency is disabled\n    alphaTest: 1e-4,\n    depthWrite: !transparent,\n    map: texture,\n    side: THREE.DoubleSide,\n    transparent,\n  });\n}\n\nfunction createPickingMaterial(texture: THREE.DataTexture): THREE.ShaderMaterial {\n  return new THREE.ShaderMaterial({\n    vertexShader: /* glsl */ `\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    `,\n    fragmentShader: /* glsl */ `\n      uniform sampler2D map;\n      uniform vec4 objectId;\n      varying vec2 vUv;\n      void main() {\n        vec4 color = texture2D(map, vUv);\n        if (color.a == 0.0) {\n          discard;\n        }\n        gl_FragColor = objectId;\n      }\n    `,\n    side: THREE.DoubleSide,\n    uniforms: { map: { value: texture }, objectId: { value: [NaN, NaN, NaN, NaN] } },\n  });\n}\n\nfunction occupancyGridHasTransparency(settings: LayerSettingsOccupancyGrid): boolean {\n  if (settings.colorMode === \"custom\") {\n    stringToRgba(tempMinColor, settings.minColor);\n    stringToRgba(tempMaxColor, settings.maxColor);\n    stringToRgba(tempUnknownColor, settings.unknownColor);\n    stringToRgba(tempInvalidColor, settings.invalidColor);\n    return (\n      tempMinColor.a < 1 || tempMaxColor.a < 1 || tempInvalidColor.a < 1 || tempUnknownColor.a < 1\n    );\n  } else {\n    return true;\n  }\n}\n\nfunction srgbToLinearUint8(color: ColorRGBA): void {\n  color.r = Math.trunc(SRGBToLinear(color.r) * 255);\n  color.g = Math.trunc(SRGBToLinear(color.g) * 255);\n  color.b = Math.trunc(SRGBToLinear(color.b) * 255);\n  color.a = Math.trunc(color.a * 255);\n}\n\nfunction normalizeOccupancyGrid(message: PartialMessage<OccupancyGrid>): OccupancyGrid {\n  const info = message.info ?? {};\n\n  return {\n    header: normalizeHeader(message.header),\n    info: {\n      map_load_time: normalizeTime(info.map_load_time),\n      resolution: info.resolution ?? 0,\n      width: info.width ?? 0,\n      height: info.height ?? 0,\n      origin: normalizePose(info.origin),\n    },\n    data: normalizeInt8Array(message.data),\n  };\n}\n\nlet costmapPalette: [number, number, number, number][] | undefined;\nlet mapPalette: [number, number, number, number][] | undefined;\nlet rawPalette: [number, number, number, number][] | undefined;\n\n/**\n * Maps the value to a color using the given palette that is cached after initial use.\n * @param output - RGBA color output of the given value using the palette in the colormode\n * @param value - Int8 or Uint8 value to map to a color\n * @param paletteColorMode - \"costmap\", \"map\", or \"raw\" these are the predefined palette colormodes. Their palette will be used to determine the output color\n */\nfunction paletteColorCached(\n  output: ColorRGBA,\n  value: number,\n  paletteColorMode: \"costmap\" | \"map\" | \"raw\",\n) {\n  const unsignedValue = value >= 0 ? value : value + 256;\n  if (unsignedValue < 0 || unsignedValue > 255) {\n    output.r = 0;\n    output.g = 0;\n    output.b = 0;\n    output.a = 0;\n  }\n\n  let palette: [number, number, number, number][] | undefined;\n  switch (paletteColorMode) {\n    case \"costmap\":\n      if (!costmapPalette) {\n        costmapPalette = createCostmapPalette();\n      }\n      palette = costmapPalette;\n      break;\n    case \"map\":\n      if (!mapPalette) {\n        mapPalette = createMapPalette();\n      }\n      palette = mapPalette;\n      break;\n    case \"raw\":\n      if (!rawPalette) {\n        rawPalette = createRawPalette();\n      }\n      palette = rawPalette;\n      break;\n    default:\n      // Default to raw palette if unknown colormode, the user will have an error already in the settings\n      if (!rawPalette) {\n        rawPalette = createRawPalette();\n      }\n      palette = rawPalette;\n  }\n\n  const colorRaw = palette[Math.trunc(unsignedValue)]!;\n  output.r = colorRaw[0];\n  output.g = colorRaw[1];\n  output.b = colorRaw[2];\n  output.a = colorRaw[3];\n}\n\n// Based off of rviz map implementation\n// https://github.com/ros-visualization/rviz/blob/1f622b8c95b8e188841b5505db2f97394d3e9c6c/src/rviz/default_plugin/map_display.cpp#L284\nfunction createMapPalette() {\n  let index = 0;\n  const palette = new Array(256).fill([0, 0, 0, 0]);\n\n  // Standard gray map palette values\n  for (let i = 0; i <= 100; i++) {\n    const v = Math.trunc(255 - (255 * i) / 100);\n    palette[index++] = [v, v, v, 255];\n  }\n\n  // illegal positive values in green\n  for (let i = 101; i <= 127; i++) {\n    palette[index++] = [0, 255, 0, 255];\n  }\n\n  // illegal negative (char) values in shades of red/yellow\n  for (let i = 128; i <= 254; i++) {\n    palette[index++] = [255, Math.trunc((255 * (i - 128)) / (254 - 128)), 0, 255];\n  }\n\n  // legal -1 value is tasteful blueish greenish grayish color\n  palette[index++] = [112, 137, 134, 255];\n  return palette;\n}\n\n// Based off of rviz costmap implementation\n// https://github.com/ros-visualization/rviz/blob/1f622b8c95b8e188841b5505db2f97394d3e9c6c/src/rviz/default_plugin/map_display.cpp#L322\nfunction createCostmapPalette() {\n  let index = 0;\n  const palette = new Array(256).fill([0, 0, 0, 0]);\n  // zero values have alpha=0\n  palette[index++] = [0, 0, 0, 0];\n\n  // Blue to red spectrum for most normal cost values\n  for (let i = 1; i <= 98; i++) {\n    const v = Math.trunc((255 * i) / 100);\n    palette[index++] = [v, 0, 255 - v, 255];\n  }\n  // inscribed obstacle values (99) in cyan\n  palette[index++] = [0, 255, 255, 255];\n\n  // lethal obstacle values (100) in purple\n  palette[index++] = [255, 0, 255, 255];\n\n  // illegal positive values in green\n  for (let i = 101; i <= 127; i++) {\n    palette[index++] = [0, 255, 0, 255];\n  }\n\n  // illegal negative (char) values in shades of red/yellow\n  for (let i = 128; i <= 254; i++) {\n    palette[index++] = [255, Math.trunc((255 * (i - 128)) / (254 - 128)), 0, 255];\n  }\n\n  // legal -1 value is tasteful blueish greenish grayish color\n  palette[index++] = [112, 137, 134, 255];\n  return palette;\n}\n\n// Based off of rviz raw implementation\n// https://github.com/ros-visualization/rviz/blob/1f622b8c95b8e188841b5505db2f97394d3e9c6c/src/rviz/default_plugin/map_display.cpp#L377\nfunction createRawPalette() {\n  let index = 0;\n  const palette = new Array(256).fill([0, 0, 0, 0]);\n\n  // Standard gray map palette values\n  for (let i = 0; i < 256; i++) {\n    palette[index++] = [i, i, i, 255];\n  }\n\n  return palette;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { Time, toNanoSec } from \"@foxglove/rostime\";\nimport { NumericType, PackedElementField, PointCloud } from \"@foxglove/schemas\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\nimport { DynamicBufferGeometry } from \"@foxglove/studio-base/panels/ThreeDeeRender/DynamicBufferGeometry\";\nimport {\n  autoSelectColorField,\n  createGeometry,\n  createInstancePickingMaterial,\n  createPickingMaterial,\n  createPoints,\n  DEFAULT_POINT_SETTINGS,\n  LayerSettingsPointExtension,\n  pointSettingsNode,\n  pointCloudMaterial,\n  pointCloudColorEncoding,\n  POINT_CLOUD_REQUIRED_FIELDS,\n  RenderObjectHistory,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/pointExtensionUtils\";\nimport type { RosObject, RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { colorHasTransparency, getColorConverter } from \"./pointClouds/colors\";\nimport { FieldReader, getReader, isSupportedField } from \"./pointClouds/fieldReaders\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { POINTCLOUD_DATATYPES as FOXGLOVE_POINTCLOUD_DATATYPES } from \"../foxglove\";\nimport {\n  normalizeByteArray,\n  normalizeHeader,\n  normalizeTime,\n  normalizePose,\n  numericTypeToPointFieldType,\n} from \"../normalizeMessages\";\nimport {\n  PointCloud2,\n  POINTCLOUD_DATATYPES as ROS_POINTCLOUD_DATATYPES,\n  PointField,\n  PointFieldType,\n} from \"../ros\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose, Pose } from \"../transforms\";\n\ntype PointCloudFieldReaders = {\n  xReader: FieldReader;\n  yReader: FieldReader;\n  zReader: FieldReader;\n  packedColorReader: FieldReader;\n  redReader: FieldReader;\n  greenReader: FieldReader;\n  blueReader: FieldReader;\n  alphaReader: FieldReader;\n};\n\ntype LayerSettingsPointClouds = LayerSettingsPointExtension & {\n  stixelsEnabled: boolean;\n};\n\nconst DEFAULT_SETTINGS = { ...DEFAULT_POINT_SETTINGS, stixelsEnabled: false };\n\ntype PointCloudUserData = BaseUserData & {\n  settings: LayerSettingsPointClouds;\n  topic: string;\n  pointCloud: PointCloud | PointCloud2;\n  originalMessage: Record<string, RosValue> | undefined;\n  material: THREE.PointsMaterial;\n  pickingMaterial: THREE.ShaderMaterial;\n  instancePickingMaterial: THREE.ShaderMaterial;\n  stixelMaterial: THREE.LineBasicMaterial;\n};\n\nconst NEEDS_MIN_MAX = [\"gradient\", \"colormap\"];\n\nconst ALL_POINTCLOUD_DATATYPES = new Set<string>([\n  ...FOXGLOVE_POINTCLOUD_DATATYPES,\n  ...ROS_POINTCLOUD_DATATYPES,\n]);\n\nconst INVALID_POINTCLOUD = \"INVALID_POINTCLOUD\";\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\nconst tempMinMaxColor: THREE.Vector2Tuple = [0, 0];\nconst tempFieldReaders: PointCloudFieldReaders = {\n  xReader: zeroReader,\n  yReader: zeroReader,\n  zReader: zeroReader,\n  packedColorReader: zeroReader,\n  redReader: zeroReader,\n  greenReader: zeroReader,\n  blueReader: zeroReader,\n  alphaReader: zeroReader,\n};\n\nexport class PointCloudRenderable extends Renderable<PointCloudUserData> {\n  public override pickableInstances = true;\n  #pointsHistory: RenderObjectHistory<PointCloudRenderable>;\n  #stixelsHistory: RenderObjectHistory<PointCloudRenderable>;\n\n  public constructor(topic: string, renderer: IRenderer, userData: PointCloudUserData) {\n    super(topic, renderer, userData);\n\n    const isDecay = userData.settings.decayTime > 0;\n    const geometry = createGeometry(\n      topic,\n      isDecay ? THREE.StaticDrawUsage : THREE.DynamicDrawUsage,\n    );\n\n    const points = createPoints(\n      topic,\n      getPose(userData.pointCloud),\n      geometry,\n      userData.material,\n      userData.pickingMaterial,\n      userData.instancePickingMaterial,\n    );\n    this.#pointsHistory = new RenderObjectHistory({\n      initial: {\n        messageTime: userData.receiveTime,\n        receiveTime: userData.receiveTime,\n        object3d: points,\n      },\n      parentRenderable: this,\n      renderer,\n    });\n    this.add(points);\n\n    const stixelGeometry = createStixelGeometry(\n      topic,\n      isDecay ? THREE.StaticDrawUsage : THREE.DynamicDrawUsage,\n    );\n    const stixels = createStixels(\n      topic,\n      getPose(userData.pointCloud),\n      stixelGeometry,\n      userData.stixelMaterial,\n    );\n    this.#stixelsHistory = new RenderObjectHistory({\n      initial: {\n        messageTime: userData.receiveTime,\n        receiveTime: userData.receiveTime,\n        object3d: stixels,\n      },\n      parentRenderable: this,\n      renderer,\n    });\n\n    this.add(stixels);\n  }\n\n  public override dispose(): void {\n    this.userData.originalMessage = undefined;\n    this.userData.material.dispose();\n    this.userData.pickingMaterial.dispose();\n    this.userData.instancePickingMaterial.dispose();\n    this.userData.stixelMaterial.dispose();\n    this.#pointsHistory.dispose();\n    this.#stixelsHistory.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage ?? {};\n  }\n\n  public override instanceDetails(instanceId: number): Record<string, RosValue> | undefined {\n    const pointCloud = this.userData.pointCloud;\n    const data = pointCloud.data;\n    const stride = getStride(pointCloud);\n    const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    const pointStep = getStride(pointCloud);\n    const details: Record<string, RosValue> = {};\n\n    for (const field of pointCloud.fields) {\n      const pointOffset = instanceId * pointStep;\n      const reader = getReader(field, stride);\n      if (reader) {\n        details[field.name] = reader(view, pointOffset);\n      }\n    }\n\n    return details;\n  }\n\n  public updatePointCloud(\n    this: PointCloudRenderable,\n    pointCloud: PointCloud | PointCloud2,\n    originalMessage: RosObject | undefined,\n    settings: LayerSettingsPointClouds,\n    receiveTime: bigint,\n  ): void {\n    const messageTime = toNanoSec(getTimestamp(pointCloud));\n    this.userData.receiveTime = receiveTime;\n    this.userData.messageTime = messageTime;\n    this.userData.frameId = this.renderer.normalizeFrameId(getFrameId(pointCloud));\n    this.userData.pointCloud = pointCloud;\n    this.userData.originalMessage = originalMessage;\n\n    const prevSettings = this.userData.settings;\n    const prevIsDecay = prevSettings.decayTime > 0;\n    this.userData.settings = settings;\n\n    let material = this.userData.material;\n    let stixelMaterial = this.userData.stixelMaterial;\n    const needsRebuild =\n      colorHasTransparency(settings) !== material.transparent ||\n      pointCloudColorEncoding(settings) !== pointCloudColorEncoding(prevSettings) ||\n      settings.pointShape !== prevSettings.pointShape;\n\n    const pointsHistory = this.#pointsHistory;\n    const stixelsHistory = this.#stixelsHistory;\n    if (needsRebuild) {\n      material.dispose();\n      material = pointCloudMaterial(settings);\n      this.userData.material = material;\n      pointsHistory.updateMaterial(material);\n\n      stixelMaterial.dispose();\n      stixelMaterial = createStixelMaterial(settings);\n      this.userData.stixelMaterial = stixelMaterial;\n      stixelsHistory.updateMaterial(stixelMaterial);\n    } else {\n      material.size = settings.pointSize;\n    }\n\n    const stixelsEnabledChanged = prevSettings.stixelsEnabled !== settings.stixelsEnabled;\n    // when stixels are switched off we can clear its history\n    if (!settings.stixelsEnabled && stixelsEnabledChanged) {\n      stixelsHistory.clearHistory();\n    }\n\n    // Invalid point cloud checks\n    if (!this.#validatePointCloud(pointCloud)) {\n      return;\n    }\n\n    // Parse the fields and create typed readers for x/y/z and color\n    if (!this.#getPointCloudFieldReaders(tempFieldReaders, pointCloud, settings)) {\n      return;\n    }\n\n    const topic = this.userData.topic;\n    const isDecay = settings.decayTime > 0;\n    if (isDecay) {\n      // Push a new (empty) entry to the history of points\n      const geometry = createGeometry(topic, THREE.StaticDrawUsage);\n      const points = createPoints(\n        topic,\n        getPose(pointCloud),\n        geometry,\n        material,\n        this.userData.pickingMaterial,\n        undefined,\n      );\n      pointsHistory.addHistoryEntry({ receiveTime, messageTime, object3d: points });\n      this.add(points);\n\n      if (settings.stixelsEnabled) {\n        const stixelGeometry = createStixelGeometry(topic, THREE.StaticDrawUsage);\n        const stixels = createStixels(topic, getPose(pointCloud), stixelGeometry, stixelMaterial);\n        stixelsHistory.addHistoryEntry({ receiveTime, messageTime, object3d: stixels });\n        this.add(stixels);\n      }\n    }\n\n    const latestPointsEntry = pointsHistory.latest();\n    latestPointsEntry.receiveTime = receiveTime;\n    latestPointsEntry.messageTime = messageTime;\n    latestPointsEntry.object3d.userData.pose = getPose(pointCloud);\n\n    const pointCount = Math.trunc(pointCloud.data.length / getStride(pointCloud));\n    const latestPoints = latestPointsEntry.object3d;\n    latestPointsEntry.object3d.geometry.resize(pointCount);\n    const positionAttribute = latestPoints.geometry.attributes.position!;\n    const colorAttribute = latestPoints.geometry.attributes.color!;\n\n    const latestStixelEntry = stixelsHistory.latest();\n\n    if (!isDecay && prevIsDecay !== isDecay) {\n      latestPointsEntry.object3d.geometry.setUsage(THREE.DynamicDrawUsage);\n      latestStixelEntry.object3d.geometry.setUsage(THREE.DynamicDrawUsage);\n    }\n\n    latestStixelEntry.receiveTime = receiveTime;\n    latestStixelEntry.messageTime = messageTime;\n    latestStixelEntry.object3d.userData.pose = latestPointsEntry.object3d.userData.pose;\n    if (settings.stixelsEnabled) {\n      latestStixelEntry.object3d.geometry.resize(pointCount * 2);\n    } else {\n      latestStixelEntry.object3d.geometry.resize(0);\n    }\n    const stixelPositionAttribute = latestStixelEntry.object3d.geometry.attributes.position!;\n    const stixelColorAttribute = latestStixelEntry.object3d.geometry.attributes.color!;\n    // Iterate the point cloud data to update position and color attributes\n    this.#updatePointCloudBuffers(\n      pointCloud,\n      tempFieldReaders,\n      pointCount,\n      settings,\n      positionAttribute,\n      colorAttribute,\n      stixelPositionAttribute,\n      stixelColorAttribute,\n    );\n  }\n\n  public startFrame(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    this.#pointsHistory.updateHistoryFromCurrentTime(currentTime);\n    this.#pointsHistory.updatePoses(currentTime, renderFrameId, fixedFrameId);\n    if (this.userData.settings.stixelsEnabled) {\n      this.#stixelsHistory.updateHistoryFromCurrentTime(currentTime);\n      this.#stixelsHistory.updatePoses(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  #invalidError(message: string): void {\n    this.renderer.settings.errors.addToTopic(this.userData.topic, INVALID_POINTCLOUD, message);\n    const lastEntry = this.#pointsHistory.latest();\n    lastEntry.object3d.geometry.resize(0);\n  }\n\n  #validatePointCloud(pointCloud: PointCloud | PointCloud2): boolean {\n    const maybeRos = pointCloud as Partial<PointCloud2>;\n    return maybeRos.header\n      ? this.#validateRosPointCloud(pointCloud as PointCloud2)\n      : this.#validateFoxglovePointCloud(pointCloud as PointCloud);\n  }\n\n  #validateFoxglovePointCloud(pointCloud: PointCloud): boolean {\n    const data = pointCloud.data;\n\n    if (data.length % pointCloud.point_stride !== 0) {\n      const message = `PointCloud data length ${data.length} is not a multiple of point_stride ${pointCloud.point_stride}`;\n      this.#invalidError(message);\n      return false;\n    }\n\n    if (pointCloud.fields.length === 0) {\n      const message = `PointCloud has no fields`;\n      this.#invalidError(message);\n      return false;\n    }\n\n    return true;\n  }\n\n  #validateRosPointCloud(pointCloud: PointCloud2): boolean {\n    const data = pointCloud.data;\n\n    if (pointCloud.is_bigendian) {\n      const message = `PointCloud2 is_bigendian=true is not supported`;\n      this.#invalidError(message);\n      return false;\n    }\n\n    if (data.length % pointCloud.point_step !== 0) {\n      const message = `PointCloud2 data length ${data.length} is not a multiple of point_step ${pointCloud.point_step}`;\n      this.#invalidError(message);\n      return false;\n    }\n\n    if (pointCloud.fields.length === 0) {\n      const message = `PointCloud2 has no fields`;\n      this.#invalidError(message);\n      return false;\n    }\n\n    if (data.length < pointCloud.height * pointCloud.row_step) {\n      const message = `PointCloud2 data length ${data.length} is less than height ${pointCloud.height} * row_step ${pointCloud.row_step}`;\n      this.renderer.settings.errors.addToTopic(this.userData.topic, INVALID_POINTCLOUD, message);\n      // Allow this error for now since we currently ignore row_step\n    }\n\n    if (pointCloud.width * pointCloud.point_step > pointCloud.row_step) {\n      const message = `PointCloud2 width ${pointCloud.width} * point_step ${pointCloud.point_step} is greater than row_step ${pointCloud.row_step}`;\n      this.renderer.settings.errors.addToTopic(this.userData.topic, INVALID_POINTCLOUD, message);\n      // Allow this error for now since we currently ignore row_step\n    }\n\n    return true;\n  }\n\n  #getPointCloudFieldReaders(\n    output: PointCloudFieldReaders,\n    pointCloud: PointCloud | PointCloud2,\n    settings: LayerSettingsPointClouds,\n  ): boolean {\n    let xReader: FieldReader | undefined;\n    let yReader: FieldReader | undefined;\n    let zReader: FieldReader | undefined;\n    let packedColorReader: FieldReader | undefined;\n    let redReader: FieldReader | undefined;\n    let greenReader: FieldReader | undefined;\n    let blueReader: FieldReader | undefined;\n    let alphaReader: FieldReader | undefined;\n\n    const stride = getStride(pointCloud);\n\n    // Determine the minimum bytes needed per point based on offset/size of each\n    // field, so we can ensure point_step is >= this value\n    let minBytesPerPoint = 0;\n\n    for (let i = 0; i < pointCloud.fields.length; i++) {\n      const field = pointCloud.fields[i]!;\n      // Skip this field, we don't support counts other than 1\n      if (!isSupportedField(field)) {\n        continue;\n      }\n      const numericType = (field as Partial<PackedElementField>).type;\n      const type =\n        numericType != undefined\n          ? numericTypeToPointFieldType(numericType)\n          : (field as PointField).datatype;\n\n      if (field.offset < 0) {\n        const message = `PointCloud field \"${field.name}\" has invalid offset ${field.offset}. Must be >= 0`;\n        this.#invalidError(message);\n        return false;\n      }\n\n      if (field.name === \"x\") {\n        xReader = getReader(field, stride);\n        if (!xReader) {\n          const typeName = pointFieldTypeName(type);\n          const message = `PointCloud field \"x\" is invalid. type=${typeName}, offset=${field.offset}, stride=${stride}`;\n          this.#invalidError(message);\n          return false;\n        }\n      } else if (field.name === \"y\") {\n        yReader = getReader(field, stride);\n        if (!yReader) {\n          const typeName = pointFieldTypeName(type);\n          const message = `PointCloud field \"y\" is invalid. type=${typeName}, offset=${field.offset}, stride=${stride}`;\n          this.#invalidError(message);\n          return false;\n        }\n      } else if (field.name === \"z\") {\n        zReader = getReader(field, stride);\n        if (!zReader) {\n          const typeName = pointFieldTypeName(type);\n          const message = `PointCloud field \"z\" is invalid. type=${typeName}, offset=${field.offset}, stride=${stride}`;\n          this.#invalidError(message);\n          return false;\n        }\n      } else if (field.name === \"red\") {\n        redReader = getReader(field, stride, /*normalize*/ true);\n      } else if (field.name === \"green\") {\n        greenReader = getReader(field, stride, /*normalize*/ true);\n      } else if (field.name === \"blue\") {\n        blueReader = getReader(field, stride, /*normalize*/ true);\n      } else if (field.name === \"alpha\") {\n        alphaReader = getReader(field, stride, /*normalize*/ true);\n      }\n\n      const byteWidth = pointFieldWidth(type);\n      minBytesPerPoint = Math.max(minBytesPerPoint, field.offset + byteWidth);\n\n      if (field.name === settings.colorField) {\n        // If the selected color mode is rgb/rgba and the field only has one channel with at least a\n        // four byte width, force the color data to be interpreted as four individual bytes. This\n        // overcomes a common problem where the color field data type is set to float32 or something\n        // other than uint32\n        const forceType =\n          (settings.colorMode === \"rgb\" || settings.colorMode === \"rgba\") && byteWidth >= 4\n            ? numericType != undefined\n              ? NumericType.UINT32\n              : PointFieldType.UINT32\n            : undefined;\n        packedColorReader = getReader(field, stride, /*normalize*/ false, forceType);\n        if (!packedColorReader) {\n          const typeName = pointFieldTypeName(type);\n          const message = `PointCloud field \"${field.name}\" is invalid. type=${typeName}, offset=${field.offset}, stride=${stride}`;\n          this.#invalidError(message);\n          return false;\n        }\n      }\n    }\n\n    if (minBytesPerPoint > stride) {\n      const message = `PointCloud stride ${stride} is less than minimum bytes per point ${minBytesPerPoint}`;\n      this.#invalidError(message);\n      return false;\n    }\n\n    const positionReaderCount = (xReader ? 1 : 0) + (yReader ? 1 : 0) + (zReader ? 1 : 0);\n    if (positionReaderCount < 2) {\n      const message = `PointCloud must contain at least two of x/y/z fields`;\n      this.#invalidError(message);\n      return false;\n    }\n\n    output.xReader = xReader ?? zeroReader;\n    output.yReader = yReader ?? zeroReader;\n    output.zReader = zReader ?? zeroReader;\n    output.packedColorReader = packedColorReader ?? xReader ?? yReader ?? zReader ?? zeroReader;\n    output.redReader = redReader ?? zeroReader;\n    output.greenReader = greenReader ?? zeroReader;\n    output.blueReader = blueReader ?? zeroReader;\n    output.alphaReader = alphaReader ?? zeroReader;\n    return true;\n  }\n\n  #minMaxColorValues(\n    output: THREE.Vector2Tuple,\n    colorReader: FieldReader,\n    view: DataView,\n    pointCount: number,\n    pointStep: number,\n    settings: LayerSettingsPointClouds,\n  ): void {\n    let minColorValue = settings.minValue ?? Number.POSITIVE_INFINITY;\n    let maxColorValue = settings.maxValue ?? Number.NEGATIVE_INFINITY;\n    if (\n      NEEDS_MIN_MAX.includes(settings.colorMode) &&\n      (settings.minValue == undefined || settings.maxValue == undefined)\n    ) {\n      for (let i = 0; i < pointCount; i++) {\n        const pointOffset = i * pointStep;\n        const colorValue = colorReader(view, pointOffset);\n        minColorValue = Math.min(minColorValue, colorValue);\n        maxColorValue = Math.max(maxColorValue, colorValue);\n      }\n      minColorValue = settings.minValue ?? minColorValue;\n      maxColorValue = settings.maxValue ?? maxColorValue;\n    }\n\n    output[0] = minColorValue;\n    output[1] = maxColorValue;\n  }\n\n  #updatePointCloudBuffers(\n    pointCloud: PointCloud | PointCloud2,\n    readers: PointCloudFieldReaders,\n    pointCount: number,\n    settings: LayerSettingsPointClouds,\n    positionAttribute: THREE.BufferAttribute,\n    colorAttribute: THREE.BufferAttribute,\n    stixelPositionAttribute: THREE.BufferAttribute,\n    stixelColorAttribute: THREE.BufferAttribute,\n  ): void {\n    const data = pointCloud.data;\n    const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    const pointStep = getStride(pointCloud);\n    const {\n      xReader,\n      yReader,\n      zReader,\n      packedColorReader,\n      redReader,\n      greenReader,\n      blueReader,\n      alphaReader,\n    } = readers;\n\n    // Update position attribute\n    for (let i = 0; i < pointCount; i++) {\n      const pointOffset = i * pointStep;\n      const x = xReader(view, pointOffset);\n      const y = yReader(view, pointOffset);\n      const z = zReader(view, pointOffset);\n      positionAttribute.setXYZ(i, x, y, z);\n      if (settings.stixelsEnabled) {\n        stixelPositionAttribute.setXYZ(i * 2, x, y, z);\n        stixelPositionAttribute.setXYZ(i * 2 + 1, x, y, 0);\n      }\n    }\n\n    // Update color attribute\n    if (settings.colorMode === \"rgba-fields\") {\n      for (let i = 0; i < pointCount; i++) {\n        const pointOffset = i * pointStep;\n        const r = redReader(view, pointOffset);\n        const g = greenReader(view, pointOffset);\n        const b = blueReader(view, pointOffset);\n        const a = alphaReader(view, pointOffset);\n        colorAttribute.setXYZW(i, r, g, b, a);\n        if (settings.stixelsEnabled) {\n          stixelColorAttribute.setXYZW(i * 2, r, g, b, a);\n          stixelColorAttribute.setXYZW(i * 2 + 1, r, g, b, a);\n        }\n      }\n    } else {\n      // Iterate the point cloud data to determine min/max color values (if needed)\n      this.#minMaxColorValues(\n        tempMinMaxColor,\n        packedColorReader,\n        view,\n        pointCount,\n        pointStep,\n        settings,\n      );\n      const [minColorValue, maxColorValue] = tempMinMaxColor;\n\n      // Build a method to convert raw color field values to RGBA\n      const colorConverter = getColorConverter(\n        settings as typeof settings & { colorMode: typeof settings.colorMode },\n        minColorValue,\n        maxColorValue,\n      );\n\n      for (let i = 0; i < pointCount; i++) {\n        const pointOffset = i * pointStep;\n        const colorValue = packedColorReader(view, pointOffset);\n        colorConverter(tempColor, colorValue);\n        colorAttribute.setXYZW(i, tempColor.r, tempColor.g, tempColor.b, tempColor.a);\n        if (settings.stixelsEnabled) {\n          stixelColorAttribute.setXYZW(i * 2, tempColor.r, tempColor.g, tempColor.b, tempColor.a);\n          stixelColorAttribute.setXYZW(\n            i * 2 + 1,\n            tempColor.r,\n            tempColor.g,\n            tempColor.b,\n            tempColor.a,\n          );\n        }\n      }\n    }\n\n    positionAttribute.needsUpdate = true;\n    colorAttribute.needsUpdate = true;\n    stixelPositionAttribute.needsUpdate = true;\n    stixelColorAttribute.needsUpdate = true;\n  }\n}\n\nexport class PointClouds extends SceneExtension<PointCloudRenderable> {\n  #fieldsByTopic = new Map<string, string[]>();\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.PointClouds\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: ROS_POINTCLOUD_DATATYPES,\n        subscription: { handler: this.#handleRosPointCloud },\n      },\n      {\n        type: \"schema\",\n        schemaNames: FOXGLOVE_POINTCLOUD_DATATYPES,\n        subscription: { handler: this.#handleFoxglovePointCloud },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      const isPointCloud = topicIsConvertibleToSchema(topic, ALL_POINTCLOUD_DATATYPES);\n      if (!isPointCloud) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsPointClouds>;\n      const messageFields = this.#fieldsByTopic.get(topic.name) ?? POINT_CLOUD_REQUIRED_FIELDS;\n      const node: SettingsTreeNodeWithActionHandler = pointSettingsNode(\n        topic,\n        messageFields,\n        config,\n      );\n      node.fields!.stixelsEnabled = {\n        label: \"Stixel view\",\n        input: \"boolean\",\n        value: config.stixelsEnabled ?? DEFAULT_SETTINGS.stixelsEnabled,\n      };\n      node.handler = handler;\n      node.icon = \"Points\";\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Do not call super.startFrame() since we handle updatePose() manually.\n    // Instead of updating the pose for each Renderable in this.renderables, we\n    // update the pose of each THREE.Points object in the pointsHistory of each\n    // renderable\n\n    for (const [topic, renderable] of this.renderables) {\n      if (!renderable.userData.settings.visible) {\n        renderable.removeFromParent();\n        renderable.dispose();\n        this.renderables.delete(topic);\n        continue;\n      }\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const prevSettings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsPointClouds>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...prevSettings };\n      renderable.updatePointCloud(\n        renderable.userData.pointCloud,\n        renderable.userData.originalMessage,\n        settings,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  #handleFoxglovePointCloud = (messageEvent: PartialMessageEvent<PointCloud>): void => {\n    const topic = messageEvent.topic;\n    const pointCloud = normalizePointCloud(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const messageTime = toNanoSec(pointCloud.timestamp);\n    const frameId = pointCloud.frame_id;\n\n    // Update the mapping of topic to point cloud field names if necessary\n    let fields = this.#fieldsByTopic.get(topic);\n    if (!fields || fields.length !== pointCloud.fields.length) {\n      fields = pointCloud.fields.map((field) => field.name);\n      this.#fieldsByTopic.set(topic, fields);\n      this.updateSettingsTree();\n    }\n    this.#handlePointCloud(\n      topic,\n      pointCloud,\n      receiveTime,\n      messageTime,\n      messageEvent.message as RosObject,\n      frameId,\n    );\n  };\n\n  #handleRosPointCloud = (messageEvent: PartialMessageEvent<PointCloud2>): void => {\n    const topic = messageEvent.topic;\n    const pointCloud = normalizePointCloud2(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const messageTime = toNanoSec(pointCloud.header.stamp);\n    const frameId = pointCloud.header.frame_id;\n\n    // Update the mapping of topic to point cloud field names if necessary\n    let fields = this.#fieldsByTopic.get(topic);\n    // filter count to compare only supported fields\n    const numSupportedFields = pointCloud.fields.reduce((numSupported, field) => {\n      return numSupported + (isSupportedField(field) ? 1 : 0);\n    }, 0);\n    if (!fields || fields.length !== numSupportedFields) {\n      // Omit fields with count != 1\n      fields = filterMap(pointCloud.fields, (field) =>\n        isSupportedField(field) ? field.name : undefined,\n      );\n      this.#fieldsByTopic.set(topic, fields);\n      this.updateSettingsTree();\n    }\n\n    this.#handlePointCloud(\n      topic,\n      pointCloud,\n      receiveTime,\n      messageTime,\n      messageEvent.message as RosObject,\n      frameId,\n    );\n  };\n\n  #handlePointCloud(\n    topic: string,\n    pointCloud: PointCloud | PointCloud2,\n    receiveTime: bigint,\n    messageTime: bigint,\n    originalMessage: RosObject,\n    frameId: string,\n  ): void {\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsPointClouds>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n      if (settings.colorField == undefined) {\n        autoSelectColorField(settings, pointCloud, { supportsPackedRgbModes: true });\n\n        // Update user settings with the newly selected color field\n        this.renderer.updateConfig((draft) => {\n          const updatedUserSettings = { ...userSettings };\n          updatedUserSettings.colorField = settings.colorField;\n          updatedUserSettings.colorMode = settings.colorMode;\n          updatedUserSettings.colorMap = settings.colorMap;\n          draft.topics[topic] = updatedUserSettings;\n        });\n      }\n\n      const material = pointCloudMaterial(settings);\n      const pickingMaterial = createPickingMaterial(settings);\n      const instancePickingMaterial = createInstancePickingMaterial(settings);\n      const stixelMaterial = createStixelMaterial(settings);\n\n      renderable = new PointCloudRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime,\n        frameId: this.renderer.normalizeFrameId(frameId),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        pointCloud,\n        originalMessage,\n        material,\n        pickingMaterial,\n        instancePickingMaterial,\n        stixelMaterial,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    renderable.updatePointCloud(\n      pointCloud,\n      originalMessage,\n      renderable.userData.settings,\n      receiveTime,\n    );\n  }\n}\n\nfunction pointFieldTypeName(type: PointFieldType): string {\n  return PointFieldType[type as number] ?? `${type}`;\n}\n\nfunction pointFieldWidth(type: PointFieldType): number {\n  switch (type) {\n    case PointFieldType.INT8:\n    case PointFieldType.UINT8:\n      return 1;\n    case PointFieldType.INT16:\n    case PointFieldType.UINT16:\n      return 2;\n    case PointFieldType.INT32:\n    case PointFieldType.UINT32:\n    case PointFieldType.FLOAT32:\n      return 4;\n    case PointFieldType.FLOAT64:\n      return 8;\n    default:\n      return 0;\n  }\n}\n\nfunction zeroReader(): number {\n  return 0;\n}\n\nfunction normalizePointField(field: PartialMessage<PointField> | undefined): PointField {\n  if (!field) {\n    return { name: \"\", offset: 0, datatype: PointFieldType.UNKNOWN, count: 0 };\n  }\n  return {\n    name: field.name ?? \"\",\n    offset: field.offset ?? 0,\n    datatype: field.datatype ?? PointFieldType.UNKNOWN,\n    count: field.count ?? 0,\n  };\n}\n\nfunction normalizePackedElementField(\n  field: PartialMessage<PackedElementField> | undefined,\n): PackedElementField {\n  return {\n    name: field?.name ?? \"\",\n    offset: field?.offset ?? 0,\n    type: field?.type ?? 0,\n  };\n}\n\nfunction normalizePointCloud(message: PartialMessage<PointCloud>): PointCloud {\n  return {\n    timestamp: normalizeTime(message.timestamp),\n    frame_id: message.frame_id ?? \"\",\n    pose: normalizePose(message.pose),\n    point_stride: message.point_stride ?? 0,\n    fields: message.fields?.map(normalizePackedElementField) ?? [],\n    data: normalizeByteArray(message.data),\n  };\n}\n\nfunction normalizePointCloud2(message: PartialMessage<PointCloud2>): PointCloud2 {\n  return {\n    header: normalizeHeader(message.header),\n    height: message.height ?? 0,\n    width: message.width ?? 0,\n    fields: message.fields?.map(normalizePointField) ?? [],\n    is_bigendian: message.is_bigendian ?? false,\n    point_step: message.point_step ?? 0,\n    row_step: message.row_step ?? 0,\n    data: normalizeByteArray(message.data),\n    is_dense: message.is_dense ?? false,\n  };\n}\n\nfunction getTimestamp(pointCloud: PointCloud | PointCloud2): Time {\n  const maybeRos = pointCloud as Partial<PointCloud2>;\n  return maybeRos.header ? maybeRos.header.stamp : (pointCloud as PointCloud).timestamp;\n}\n\nfunction getFrameId(pointCloud: PointCloud | PointCloud2): string {\n  const maybeRos = pointCloud as Partial<PointCloud2>;\n  return maybeRos.header ? maybeRos.header.frame_id : (pointCloud as PointCloud).frame_id;\n}\n\nfunction getStride(pointCloud: PointCloud | PointCloud2): number {\n  const maybeRos = pointCloud as Partial<PointCloud2>;\n  return maybeRos.point_step != undefined\n    ? maybeRos.point_step\n    : (pointCloud as PointCloud).point_stride;\n}\n\nfunction getPose(pointCloud: PointCloud | PointCloud2): Pose {\n  const maybeFoxglove = pointCloud as Partial<PointCloud>;\n  return maybeFoxglove.pose ?? makePose();\n}\n\ntype Stixels = THREE.LineSegments<DynamicBufferGeometry, THREE.LineBasicMaterial>;\n\nexport function createStixelMaterial(settings: LayerSettingsPointClouds): THREE.LineBasicMaterial {\n  const transparent = colorHasTransparency(settings);\n  const material = new THREE.LineBasicMaterial({\n    vertexColors: true,\n    transparent,\n    depthWrite: true,\n  });\n  return material;\n}\n\nfunction createStixelGeometry(topic: string, usage: THREE.Usage): DynamicBufferGeometry {\n  const geometry = new DynamicBufferGeometry(usage);\n  geometry.name = `${topic}:PointCloud:stixelGeometry`;\n  geometry.createAttribute(\"position\", Float32Array, 3);\n  geometry.createAttribute(\"color\", Uint8Array, 4, true);\n  return geometry;\n}\n\nfunction createStixels(\n  topic: string,\n  pose: Pose,\n  geometry: DynamicBufferGeometry,\n  material: THREE.LineBasicMaterial,\n): Stixels {\n  const stixels = new THREE.LineSegments<DynamicBufferGeometry, THREE.LineBasicMaterial>(\n    geometry,\n    material,\n  );\n  // We don't calculate the bounding sphere for points, so frustum culling is disabled\n  stixels.frustumCulled = false;\n  stixels.name = `${topic}:PointCloud:stixels`;\n  stixels.userData = {\n    pose,\n  };\n  return stixels;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport {\n  makeLineMaterial,\n  makeLinePrepassMaterial,\n  makeLinePickingMaterial,\n  markerHasTransparency,\n} from \"./materials\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { LineMaterialWithAlphaVertex } from \"../../LineMaterialWithAlphaVertex\";\nimport { Marker } from \"../../ros\";\n\nconst tempTuple4: THREE.Vector4Tuple = [0, 0, 0, 0];\n\nexport class RenderableLineStrip extends RenderableMarker {\n  #geometry: LineGeometry;\n  #linePrepass: Line2;\n  #line: Line2;\n  #positionBuffer = new Float32Array();\n  #colorBuffer = new Uint8Array();\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.#geometry = new LineGeometry();\n\n    const options = { resolution: renderer.input.canvasSize, worldUnits: true };\n\n    // We alleviate corner artifacts using a two-pass render for lines. The\n    // first pass writes to depth only, followed by a color pass with stencil\n    // operations. The source for this technique is:\n    // <https://github.com/mrdoob/three.js/issues/23680#issuecomment-1063294691>\n    // <https://gkjohnson.github.io/threejs-sandbox/fat-line-opacity/webgl_lines_fat.html>\n\n    // Depth pass 1\n    const matLinePrepass = makeLinePrepassMaterial(marker, options);\n    this.#linePrepass = new Line2(this.#geometry, matLinePrepass);\n    this.#linePrepass.renderOrder = 1;\n    this.#linePrepass.userData.picking = false;\n    this.add(this.#linePrepass);\n\n    // Color pass 2\n    const matLine = makeLineMaterial(marker, options);\n    this.#line = new Line2(this.#geometry, matLine);\n    this.#line.renderOrder = 2;\n    const pickingLineWidth = marker.scale.x * 1.2;\n    this.#line.userData.pickingMaterial = makeLinePickingMaterial(pickingLineWidth, options);\n    this.add(this.#line);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.#linePrepass.material.dispose();\n    this.#line.material.dispose();\n\n    const pickingMaterial = this.#line.userData.pickingMaterial as THREE.ShaderMaterial;\n    pickingMaterial.dispose();\n    this.#line.userData.pickingMaterial = undefined;\n\n    super.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const pointsLength = marker.points.length;\n    const lineWidth = marker.scale.x;\n    const transparent = markerHasTransparency(marker);\n\n    if (pointsLength === 0) {\n      // THREE.LineGeometry.setPositions crashes when given an empty array:\n      // https://github.com/foxglove/studio/issues/3954\n      this.#linePrepass.visible = false;\n      this.#line.visible = false;\n      return;\n    } else {\n      this.#linePrepass.visible = true;\n      this.#line.visible = true;\n    }\n\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.#linePrepass.material.transparent = transparent;\n      this.#linePrepass.material.depthWrite = !transparent;\n      this.#linePrepass.material.needsUpdate = true;\n      this.#line.material.transparent = transparent;\n      this.#line.material.depthWrite = !transparent;\n      this.#line.material.needsUpdate = true;\n    }\n\n    const matLinePrepass = this.#linePrepass.material as LineMaterialWithAlphaVertex;\n    matLinePrepass.lineWidth = lineWidth;\n    const matLine = this.#line.material as LineMaterialWithAlphaVertex;\n    matLine.lineWidth = lineWidth;\n\n    const prevPointsLength = this.#positionBuffer.length / 3;\n    if (pointsLength > prevPointsLength) {\n      this.#geometry.dispose();\n      this.#geometry = new LineGeometry();\n      this.#linePrepass.geometry = this.#geometry;\n      this.#line.geometry = this.#geometry;\n    }\n\n    this.#setPositions(marker, pointsLength);\n    this.#setColors(marker, pointsLength);\n\n    this.#linePrepass.computeLineDistances();\n    this.#line.computeLineDistances();\n  }\n\n  #setPositions(marker: Marker, pointsLength: number): void {\n    if (3 * pointsLength > this.#positionBuffer.length) {\n      this.#positionBuffer = new Float32Array(3 * pointsLength);\n    }\n    const positions = this.#positionBuffer;\n    for (let i = 0; i < pointsLength; i++) {\n      const point = marker.points[i]!;\n      const offset = i * 3;\n      positions[offset + 0] = point.x;\n      positions[offset + 1] = point.y;\n      positions[offset + 2] = point.z;\n    }\n\n    this.#geometry.setPositions(positions);\n    this.#geometry.instanceCount = pointsLength - 1;\n  }\n\n  #setColors(marker: Marker, pointsLength: number): void {\n    // Converts color-per-point to pairs format in a flattened typed array\n    if (8 * pointsLength > this.#colorBuffer.length) {\n      this.#colorBuffer = new Uint8Array(8 * pointsLength);\n      // [rgba, rgba]\n      const instanceColorBuffer = new THREE.InstancedInterleavedBuffer(this.#colorBuffer, 8, 1);\n      this.#geometry.setAttribute(\n        \"instanceColorStart\",\n        new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 0, true),\n      );\n      this.#geometry.setAttribute(\n        \"instanceColorEnd\",\n        new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 4, true),\n      );\n    } else {\n      this.#geometry.getAttribute(\"instanceColorStart\").needsUpdate = true;\n      this.#geometry.getAttribute(\"instanceColorEnd\").needsUpdate = true;\n    }\n\n    const colorBuffer = this.#colorBuffer;\n    const color1: THREE.Vector4Tuple = tempTuple4;\n    color1[0] = 0;\n    color1[1] = 0;\n    color1[2] = 0;\n    color1[3] = 0;\n    this._markerColorsToLinear(marker, pointsLength, (color2, ii) => {\n      if (ii === 0) {\n        copyTuple4(color2, color1);\n        return;\n      }\n      const i = ii - 1;\n      const offset = i * 8;\n\n      colorBuffer[offset + 0] = Math.floor(255 * color1[0]);\n      colorBuffer[offset + 1] = Math.floor(255 * color1[1]);\n      colorBuffer[offset + 2] = Math.floor(255 * color1[2]);\n      colorBuffer[offset + 3] = Math.floor(255 * color1[3]);\n\n      colorBuffer[offset + 4] = Math.floor(255 * color2[0]);\n      colorBuffer[offset + 5] = Math.floor(255 * color2[1]);\n      colorBuffer[offset + 6] = Math.floor(255 * color2[2]);\n      colorBuffer[offset + 7] = Math.floor(255 * color2[3]);\n\n      copyTuple4(color2, color1);\n    });\n  }\n}\n\nfunction copyTuple4(from: THREE.Vector4Tuple, to: THREE.Vector4Tuple): void {\n  to[0] = from[0];\n  to[1] = from[1];\n  to[2] = from[2];\n  to[3] = from[3];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { RenderableLineStrip } from \"./markers/RenderableLineStrip\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { makeRgba, rgbaToCssString, stringToRgba } from \"../color\";\nimport { normalizeHeader, normalizeVector3s } from \"../normalizeMessages\";\nimport {\n  Marker,\n  MarkerAction,\n  MarkerType,\n  Polygon,\n  PolygonStamped,\n  POLYGON_STAMPED_DATATYPES,\n  TIME_ZERO,\n} from \"../ros\";\nimport { BaseSettings } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nexport type LayerSettingsPolygon = BaseSettings & {\n  lineWidth: number;\n  color: string;\n};\n\nconst DEFAULT_COLOR = { r: 124 / 255, g: 107 / 255, b: 1, a: 1 };\nconst DEFAULT_LINE_WIDTH = 0.1;\n\nconst DEFAULT_COLOR_STR = rgbaToCssString(DEFAULT_COLOR);\n\nconst DEFAULT_SETTINGS: LayerSettingsPolygon = {\n  visible: false,\n  lineWidth: DEFAULT_LINE_WIDTH,\n  color: DEFAULT_COLOR_STR,\n};\n\nexport type PolygonUserData = BaseUserData & {\n  settings: LayerSettingsPolygon;\n  topic: string;\n  polygonStamped: PolygonStamped;\n  lines: RenderableLineStrip | undefined;\n};\n\nexport class PolygonRenderable extends Renderable<PolygonUserData> {\n  public override dispose(): void {\n    this.userData.lines?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.polygonStamped;\n  }\n}\n\nexport class Polygons extends SceneExtension<PolygonRenderable> {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.Polygons\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: POLYGON_STAMPED_DATATYPES,\n        subscription: { handler: this.#handlePolygon },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, POLYGON_STAMPED_DATATYPES)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsPolygon>;\n\n      // prettier-ignore\n      const fields: SettingsTreeFields = {\n        lineWidth: { label: \"Line Width\", input: \"number\", min: 0, placeholder: String(DEFAULT_LINE_WIDTH), step: 0.005, precision: 3, value: config.lineWidth },\n        color: { label: \"Color\", input: \"rgba\", value: config.color ?? DEFAULT_COLOR_STR },\n      };\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          label: topic.name,\n          icon: \"Star\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsPolygon>\n        | undefined;\n      renderable.userData.settings = { ...DEFAULT_SETTINGS, ...settings };\n      this.#updatePolygonRenderable(\n        renderable,\n        renderable.userData.polygonStamped,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  #handlePolygon = (messageEvent: PartialMessageEvent<PolygonStamped>): void => {\n    const topic = messageEvent.topic;\n    const polygonStamped = normalizePolygonStamped(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsPolygon>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n      renderable = new PolygonRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(polygonStamped.header.stamp),\n        frameId: this.renderer.normalizeFrameId(polygonStamped.header.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        polygonStamped,\n        lines: undefined,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this.#updatePolygonRenderable(renderable, polygonStamped, receiveTime);\n  };\n\n  #updatePolygonRenderable(\n    renderable: PolygonRenderable,\n    polygonStamped: PolygonStamped,\n    receiveTime: bigint,\n  ): void {\n    const settings = renderable.userData.settings;\n\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(polygonStamped.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(polygonStamped.header.frame_id);\n    renderable.userData.polygonStamped = polygonStamped;\n\n    const topic = renderable.userData.topic;\n    const linesMarker = createLineStripMarker(polygonStamped, settings);\n    if (!renderable.userData.lines) {\n      renderable.userData.lines = new RenderableLineStrip(\n        topic,\n        linesMarker,\n        receiveTime,\n        this.renderer,\n      );\n      renderable.add(renderable.userData.lines);\n    } else {\n      renderable.userData.lines.update(linesMarker, receiveTime);\n    }\n  }\n}\n\nfunction createLineStripMarker(\n  polygonStamped: PolygonStamped,\n  settings: LayerSettingsPolygon,\n): Marker {\n  // Close the polygon\n  const points = [...polygonStamped.polygon.points];\n  if (points.length > 0) {\n    points.push(points[0]!);\n  }\n\n  const linesMarker: Marker = {\n    header: polygonStamped.header,\n    ns: \"\",\n    id: 0,\n    type: MarkerType.LINE_STRIP,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: settings.lineWidth, y: 1, z: 1 },\n    color: stringToRgba(makeRgba(), settings.color),\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points,\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n  return linesMarker;\n}\n\nfunction normalizePolygon(polygon: PartialMessage<Polygon> | undefined): Polygon {\n  return {\n    points: normalizeVector3s(polygon?.points),\n  };\n}\n\nfunction normalizePolygonStamped(polygon: PartialMessage<PolygonStamped>): PolygonStamped {\n  return {\n    header: normalizeHeader(polygon.header),\n    polygon: normalizePolygon(polygon.polygon),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { clamp } from \"three/src/math/MathUtils\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { arrowHeadSubdivisions, arrowShaftSubdivisions, DetailLevel } from \"../../lod\";\nimport { getRotationTo } from \"../../math\";\nimport { Marker } from \"../../ros\";\n\nconst SHAFT_LENGTH = 0.77;\nconst SHAFT_DIAMETER = 1.0;\nconst HEAD_LENGTH = 0.23;\nconst HEAD_DIAMETER = 2.0;\n\nconst HEAD_LENGTH_PROPORTION = 0.23;\n\nconst UNIT_X = new THREE.Vector3(1, 0, 0);\n\nconst tempStart = new THREE.Vector3();\nconst tempEnd = new THREE.Vector3();\nconst tempDirection = new THREE.Vector3();\n\nexport class RenderableArrow extends RenderableMarker {\n  public shaftMesh: THREE.Mesh<THREE.CylinderGeometry, THREE.MeshStandardMaterial>;\n  public headMesh: THREE.Mesh<THREE.ConeGeometry, THREE.MeshStandardMaterial>;\n  #shaftOutline: THREE.LineSegments;\n  #headOutline: THREE.LineSegments;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    const shaftGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-shaft-${renderer.maxLod}`,\n      () => createShaftGeometry(renderer.maxLod),\n    );\n    const headGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-head-${renderer.maxLod}`,\n      () => createHeadGeometry(renderer.maxLod),\n    );\n    const shaftEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-shaftedges-${renderer.maxLod}`,\n      () => createShaftEdgesGeometry(shaftGeometry),\n    );\n    const headEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-headedges-${renderer.maxLod}`,\n      () => createHeadEdgesGeometry(headGeometry),\n    );\n    // Shaft mesh\n    this.shaftMesh = new THREE.Mesh(shaftGeometry, makeStandardMaterial(marker.color));\n    this.shaftMesh.castShadow = true;\n    this.shaftMesh.receiveShadow = true;\n    this.add(this.shaftMesh);\n\n    // Head mesh\n    this.headMesh = new THREE.Mesh(headGeometry, makeStandardMaterial(marker.color));\n    this.headMesh.castShadow = true;\n    this.headMesh.receiveShadow = true;\n    this.add(this.headMesh);\n\n    // Shaft outline\n    this.#shaftOutline = new THREE.LineSegments(shaftEdgesGeometry, renderer.outlineMaterial);\n    this.#shaftOutline.userData.picking = false;\n    this.shaftMesh.add(this.#shaftOutline);\n\n    // Head outline\n    this.#headOutline = new THREE.LineSegments(headEdgesGeometry, renderer.outlineMaterial);\n    this.#headOutline.userData.picking = false;\n    this.headMesh.add(this.#headOutline);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.shaftMesh.material.dispose();\n    this.headMesh.material.dispose();\n    super.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.shaftMesh.material.transparent) {\n      this.shaftMesh.material.transparent = transparent;\n      this.shaftMesh.material.depthWrite = !transparent;\n      this.shaftMesh.material.needsUpdate = true;\n      this.headMesh.material.transparent = transparent;\n      this.headMesh.material.depthWrite = !transparent;\n      this.headMesh.material.needsUpdate = true;\n    }\n\n    rgbToThreeColor(this.shaftMesh.material.color, marker.color);\n    this.shaftMesh.material.opacity = marker.color.a;\n    this.headMesh.material.color.set(this.shaftMesh.material.color);\n    this.headMesh.material.opacity = marker.color.a;\n\n    const settings = this.getSettings();\n\n    this.#shaftOutline.visible = settings?.showOutlines ?? true;\n    this.#headOutline.visible = settings?.showOutlines ?? true;\n\n    // Adapted from <https://github.com/ros-visualization/rviz/blob/noetic-devel/src/rviz/default_plugin/markers/arrow_marker.cpp\n    if (marker.points.length === 2) {\n      const pointA = marker.points[0]!;\n      const pointB = marker.points[1]!;\n      tempStart.set(pointA.x, pointA.y, pointA.z);\n      tempEnd.set(pointB.x, pointB.y, pointB.z);\n\n      tempDirection.subVectors(tempEnd, tempStart);\n      const distance = tempDirection.length();\n\n      let headLength = HEAD_LENGTH_PROPORTION * distance;\n      if (marker.scale.z !== 0) {\n        const length = marker.scale.z;\n        headLength = clamp(length, 0, distance);\n      }\n      const shaftLength = distance - headLength;\n      const shaftDiameter = marker.scale.x;\n      const headDiameter = marker.scale.y;\n\n      this.shaftMesh.scale.set(shaftLength, shaftDiameter, shaftDiameter);\n      this.headMesh.scale.set(headLength, headDiameter, headDiameter);\n      this.scale.set(1, 1, 1);\n      this.shaftMesh.position.set(pointA.x, pointA.y, pointA.z);\n      this.shaftMesh.position.addScaledVector(tempDirection, 0.5 * (shaftLength / distance));\n      this.headMesh.position.set(pointB.x, pointB.y, pointB.z);\n      this.headMesh.position.addScaledVector(tempDirection, -0.5 * (headLength / distance));\n\n      const rotation = getRotationTo(UNIT_X, tempDirection);\n      this.shaftMesh.setRotationFromQuaternion(rotation);\n      this.headMesh.rotation.copy(this.shaftMesh.rotation);\n    } else {\n      this.shaftMesh.scale.set(SHAFT_LENGTH, SHAFT_DIAMETER, SHAFT_DIAMETER);\n      this.headMesh.scale.set(HEAD_LENGTH, HEAD_DIAMETER, HEAD_DIAMETER);\n      this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n\n      const halfShaftLength = SHAFT_LENGTH / 2;\n      const halfHeadLength = HEAD_LENGTH / 2;\n      this.shaftMesh.position.set(halfShaftLength, 0, 0);\n      this.headMesh.position.set(halfShaftLength * 2 + halfHeadLength, 0, 0);\n      this.shaftMesh.rotation.set(0, 0, 0);\n      this.headMesh.rotation.set(0, 0, 0);\n    }\n  }\n}\n\nfunction createShaftGeometry(lod: DetailLevel): THREE.CylinderGeometry {\n  const subdivs = arrowShaftSubdivisions(lod);\n  const shaftGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, subdivs, 1, false);\n  shaftGeometry.rotateZ(-Math.PI / 2);\n  shaftGeometry.computeBoundingSphere();\n  return shaftGeometry;\n}\n\nfunction createHeadGeometry(lod: DetailLevel): THREE.ConeGeometry {\n  const subdivs = arrowHeadSubdivisions(lod);\n  const headGeometry = new THREE.ConeGeometry(0.5, 1, subdivs, 1, false);\n  headGeometry.rotateZ(-Math.PI / 2);\n  headGeometry.computeBoundingSphere();\n  return headGeometry;\n}\n\nfunction createShaftEdgesGeometry(shaftGeometry: THREE.CylinderGeometry): THREE.EdgesGeometry {\n  const shaftEdgesGeometry = new THREE.EdgesGeometry(shaftGeometry, 40);\n\n  // We only want the outline of the base of the shaft, not the top of the\n  // cylinder where it connects to the cone. Create a new position buffer\n  // attribute with the first half of the vertices discarded\n  const positionsAttrib = shaftEdgesGeometry.getAttribute(\"position\") as THREE.BufferAttribute;\n  const positions = Array.from(positionsAttrib.array);\n  const newCount = (positions.length / 3 / 2) * 3;\n  const newVertices = positions.slice(newCount, positions.length);\n  const newPositionsAttrib = new THREE.Float32BufferAttribute(newVertices, 3);\n  shaftEdgesGeometry.setAttribute(\"position\", newPositionsAttrib);\n  shaftEdgesGeometry.computeBoundingSphere();\n  return shaftEdgesGeometry;\n}\n\nfunction createHeadEdgesGeometry(headGeometry: THREE.ConeGeometry): THREE.EdgesGeometry {\n  const headEdgesGeometry = new THREE.EdgesGeometry(headGeometry, 40);\n  headEdgesGeometry.computeBoundingSphere();\n  return headEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { DetailLevel, sphereSubdivisions } from \"../../lod\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableSphere extends RenderableMarker {\n  public mesh: THREE.Mesh<THREE.SphereGeometry, THREE.MeshStandardMaterial>;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Sphere mesh\n    const geometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-${renderer.maxLod}`,\n      () => createGeometry(renderer.maxLod),\n    );\n    this.mesh = new THREE.Mesh(geometry, makeStandardMaterial(marker.color));\n    this.mesh.castShadow = true;\n    this.mesh.receiveShadow = true;\n    this.add(this.mesh);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.mesh.material.transparent) {\n      this.mesh.material.transparent = transparent;\n      this.mesh.material.depthWrite = !transparent;\n      this.mesh.material.needsUpdate = true;\n    }\n\n    rgbToThreeColor(this.mesh.material.color, marker.color);\n    this.mesh.material.opacity = marker.color.a;\n\n    this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n  }\n}\n\nexport function createGeometry(lod: DetailLevel): THREE.SphereGeometry {\n  const subdivisions = sphereSubdivisions(lod);\n  const sphereGeometry = new THREE.SphereGeometry(0.5, subdivisions, subdivisions);\n  sphereGeometry.computeBoundingSphere();\n  return sphereGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { PoseInFrame } from \"@foxglove/schemas\";\nimport { SettingsTreeAction, SettingsTreeFields } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { Axis, AXIS_LENGTH } from \"./Axis\";\nimport { RenderableArrow } from \"./markers/RenderableArrow\";\nimport { RenderableSphere } from \"./markers/RenderableSphere\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { makeRgba, rgbaToCssString, stringToRgba } from \"../color\";\nimport { POSE_IN_FRAME_DATATYPES } from \"../foxglove\";\nimport { vecEqual } from \"../math\";\nimport {\n  normalizeHeader,\n  normalizeMatrix6,\n  normalizePose,\n  normalizeTime,\n} from \"../normalizeMessages\";\nimport {\n  Marker,\n  PoseWithCovarianceStamped,\n  PoseStamped,\n  POSE_WITH_COVARIANCE_STAMPED_DATATYPES,\n  MarkerAction,\n  MarkerType,\n  TIME_ZERO,\n  POSE_STAMPED_DATATYPES,\n  PoseWithCovariance,\n  ColorRGBA,\n} from \"../ros\";\nimport { BaseSettings, PRECISION_DISTANCE } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\ntype DisplayType = \"axis\" | \"arrow\";\n\nexport type LayerSettingsPose = BaseSettings & {\n  type: DisplayType;\n  axisScale: number;\n  arrowScale: [number, number, number];\n  color: string;\n  showCovariance: boolean;\n  covarianceColor: string;\n};\n\nconst DEFAULT_TYPE: DisplayType = \"axis\";\nconst DEFAULT_AXIS_SCALE = AXIS_LENGTH;\nconst DEFAULT_ARROW_SCALE: THREE.Vector3Tuple = [1, 0.15, 0.15];\nconst DEFAULT_COLOR = { r: 124 / 255, g: 107 / 255, b: 1, a: 1 };\nconst DEFAULT_SHOW_COVARIANCE = true;\nconst DEFAULT_COVARIANCE_COLOR = { r: 198 / 255, g: 107 / 255, b: 1, a: 0.25 };\n\nconst DEFAULT_COLOR_STR = rgbaToCssString(DEFAULT_COLOR);\nconst DEFAULT_COVARIANCE_COLOR_STR = rgbaToCssString(DEFAULT_COVARIANCE_COLOR);\n\nconst DEFAULT_SETTINGS: LayerSettingsPose = {\n  type: DEFAULT_TYPE,\n  visible: false,\n  axisScale: DEFAULT_AXIS_SCALE,\n  arrowScale: DEFAULT_ARROW_SCALE,\n  color: DEFAULT_COLOR_STR,\n  showCovariance: DEFAULT_SHOW_COVARIANCE,\n  covarianceColor: DEFAULT_COVARIANCE_COLOR_STR,\n};\n\nconst TYPE_OPTIONS = [\n  { label: \"Axis\", value: \"axis\" },\n  { label: \"Arrow\", value: \"arrow\" },\n];\n\nexport type PoseUserData = BaseUserData & {\n  settings: LayerSettingsPose;\n  topic: string;\n  poseMessage: PoseStamped | PoseWithCovarianceStamped;\n  originalMessage: Record<string, RosValue>;\n  axis?: Axis;\n  arrow?: RenderableArrow;\n  sphere?: RenderableSphere;\n};\n\nexport class PoseRenderable extends Renderable<PoseUserData> {\n  public override dispose(): void {\n    this.userData.axis?.dispose();\n    this.userData.arrow?.dispose();\n    this.userData.sphere?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage;\n  }\n}\n\nexport class Poses extends SceneExtension<PoseRenderable> {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.Poses\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: POSE_STAMPED_DATATYPES,\n        subscription: { handler: this.#handlePoseStamped },\n      },\n      {\n        type: \"schema\",\n        schemaNames: POSE_IN_FRAME_DATATYPES,\n        subscription: { handler: this.#handlePoseInFrame },\n      },\n      {\n        type: \"schema\",\n        schemaNames: POSE_WITH_COVARIANCE_STAMPED_DATATYPES,\n        subscription: { handler: this.#handlePoseWithCovariance },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      const isPoseStamped = topicIsConvertibleToSchema(topic, POSE_STAMPED_DATATYPES);\n      const isPoseInFrame = topicIsConvertibleToSchema(topic, POSE_IN_FRAME_DATATYPES);\n      const isPoseWithCovarianceStamped = isPoseStamped\n        ? false\n        : topicIsConvertibleToSchema(topic, POSE_WITH_COVARIANCE_STAMPED_DATATYPES);\n      if (!(isPoseStamped || isPoseWithCovarianceStamped || isPoseInFrame)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsPose>;\n      const type = config.type ?? DEFAULT_TYPE;\n\n      const fields: SettingsTreeFields = {\n        type: { label: \"Type\", input: \"select\", options: TYPE_OPTIONS, value: type },\n      };\n      if (type === \"axis\") {\n        fields[\"axisScale\"] = {\n          label: \"Scale\",\n          input: \"number\",\n          step: 0.5,\n          min: 0,\n          precision: PRECISION_DISTANCE,\n          value: config.axisScale ?? DEFAULT_AXIS_SCALE,\n        };\n      } else {\n        fields[\"arrowScale\"] = {\n          label: \"Scale\",\n          input: \"vec3\",\n          labels: [\"X\", \"Y\", \"Z\"],\n          step: 0.5,\n          precision: PRECISION_DISTANCE,\n          value: config.arrowScale ?? DEFAULT_ARROW_SCALE,\n        };\n        fields[\"color\"] = {\n          label: \"Color\",\n          input: \"rgba\",\n          value: config.color ?? DEFAULT_COLOR_STR,\n        };\n      }\n\n      if (isPoseWithCovarianceStamped) {\n        const showCovariance = config.showCovariance ?? DEFAULT_SHOW_COVARIANCE;\n        const covarianceColor = config.covarianceColor ?? DEFAULT_COVARIANCE_COLOR_STR;\n\n        fields[\"showCovariance\"] = {\n          label: \"Covariance\",\n          input: \"boolean\",\n          value: showCovariance,\n        };\n        if (showCovariance) {\n          fields[\"covarianceColor\"] = {\n            label: \"Covariance Color\",\n            input: \"rgba\",\n            value: covarianceColor,\n          };\n        }\n      }\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          label: topic.name,\n          icon: \"Flag\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          order: topic.name.toLocaleLowerCase(),\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsPose>\n        | undefined;\n      this.#updatePoseRenderable(\n        renderable,\n        renderable.userData.poseMessage,\n        renderable.userData.originalMessage,\n        renderable.userData.receiveTime,\n        { ...DEFAULT_SETTINGS, ...settings },\n      );\n    }\n  };\n\n  #handlePoseStamped = (messageEvent: PartialMessageEvent<PoseStamped>): void => {\n    const poseMessage = normalizePoseStamped(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.#addPose(messageEvent.topic, poseMessage, messageEvent.message, receiveTime);\n  };\n\n  #handlePoseInFrame = (messageEvent: PartialMessageEvent<PoseInFrame>): void => {\n    const poseMessage = normalizePoseInFrameToPoseStamped(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.#addPose(messageEvent.topic, poseMessage, messageEvent.message, receiveTime);\n  };\n\n  #handlePoseWithCovariance = (\n    messageEvent: PartialMessageEvent<PoseWithCovarianceStamped>,\n  ): void => {\n    const poseMessage = normalizePoseWithCovarianceStamped(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.#addPose(messageEvent.topic, poseMessage, messageEvent.message, receiveTime);\n  };\n\n  #addPose(\n    topic: string,\n    poseMessage: PoseStamped | PoseWithCovarianceStamped,\n    originalMessage: Record<string, RosValue>,\n    receiveTime: bigint,\n  ): void {\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsPose>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n\n      renderable = new PoseRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(poseMessage.header.stamp),\n        frameId: this.renderer.normalizeFrameId(poseMessage.header.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        poseMessage,\n        originalMessage,\n        axis: undefined,\n        arrow: undefined,\n        sphere: undefined,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this.#updatePoseRenderable(\n      renderable,\n      poseMessage,\n      originalMessage,\n      receiveTime,\n      renderable.userData.settings,\n    );\n  }\n\n  #updatePoseRenderable(\n    renderable: PoseRenderable,\n    poseMessage: PoseStamped | PoseWithCovarianceStamped,\n    originalMessage: Record<string, RosValue>,\n    receiveTime: bigint,\n    settings: LayerSettingsPose,\n  ): void {\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(poseMessage.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(poseMessage.header.frame_id);\n    renderable.userData.poseMessage = poseMessage;\n    renderable.userData.originalMessage = originalMessage;\n\n    // Default the covariance sphere to hidden. If showCovariance is set and a valid covariance\n    // matrix is present, it will be shown\n    if (renderable.userData.sphere) {\n      renderable.userData.sphere.visible = false;\n    }\n\n    const { topic, settings: prevSettings } = renderable.userData;\n    const axisOrArrowSettingsChanged =\n      settings.type !== prevSettings.type ||\n      settings.axisScale !== prevSettings.axisScale ||\n      !vecEqual(settings.arrowScale, prevSettings.arrowScale) ||\n      settings.color !== prevSettings.color ||\n      (!renderable.userData.arrow && !renderable.userData.axis);\n\n    renderable.userData.settings = settings;\n\n    if (axisOrArrowSettingsChanged) {\n      if (renderable.userData.settings.type === \"axis\") {\n        if (renderable.userData.arrow) {\n          renderable.remove(renderable.userData.arrow);\n          renderable.userData.arrow.dispose();\n          renderable.userData.arrow = undefined;\n        }\n\n        // Create an AxisRenderable if needed\n        if (!renderable.userData.axis) {\n          const axis = new Axis(topic, this.renderer);\n          renderable.userData.axis = axis;\n          renderable.add(axis);\n        }\n\n        const scale = renderable.userData.settings.axisScale * (1 / AXIS_LENGTH);\n        renderable.userData.axis.scale.set(scale, scale, scale);\n      } else {\n        if (renderable.userData.axis) {\n          renderable.remove(renderable.userData.axis);\n          renderable.userData.axis.dispose();\n          renderable.userData.axis = undefined;\n        }\n\n        const color = stringToRgba(makeRgba(), settings.color);\n        const arrowMarker = createArrowMarker(settings.arrowScale, color);\n\n        // Create a RenderableArrow if needed\n        if (!renderable.userData.arrow) {\n          const arrow = new RenderableArrow(topic, arrowMarker, undefined, this.renderer);\n          renderable.userData.arrow = arrow;\n          renderable.add(arrow);\n        }\n\n        renderable.userData.arrow.update(arrowMarker, undefined);\n      }\n    }\n\n    if (\"covariance\" in poseMessage.pose) {\n      renderable.userData.pose = poseMessage.pose.pose;\n\n      const poseWithCovariance = poseMessage as PoseWithCovarianceStamped;\n      const sphereMarker = createSphereMarker(poseWithCovariance, renderable.userData.settings);\n      if (sphereMarker) {\n        if (!renderable.userData.sphere) {\n          renderable.userData.sphere = new RenderableSphere(\n            renderable.userData.topic,\n            sphereMarker,\n            undefined,\n            this.renderer,\n          );\n          renderable.add(renderable.userData.sphere);\n        }\n        renderable.userData.sphere.visible = renderable.userData.settings.showCovariance;\n        renderable.userData.sphere.update(sphereMarker, undefined);\n      } else if (renderable.userData.sphere) {\n        renderable.userData.sphere.visible = false;\n      }\n    } else {\n      renderable.userData.pose = poseMessage.pose;\n    }\n  }\n}\n\nexport function createArrowMarker(arrowScale: [number, number, number], color: ColorRGBA): Marker {\n  const [x, y, z] = arrowScale;\n  return {\n    header: { frame_id: \"\", stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.ARROW,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x, y, z },\n    color,\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction createSphereMarker(\n  poseMessage: PoseWithCovarianceStamped,\n  settings: LayerSettingsPose,\n): Marker | undefined {\n  // Covariance is a 6x6 matrix for position and rotation (XYZ, RPY)\n  // We currently only visualize position variance so extract the upper-left\n  // 3x1 diagonal\n  // [X, -, -, -, -, -]\n  // [-, Y, -, -, -, -]\n  // [-, -, Z, -, -, -]\n  // [-, -, -, -, -, -]\n  // [-, -, -, -, -, -]\n  // [-, -, -, -, -, -]\n  const K = poseMessage.pose.covariance;\n  const scale = { x: Math.sqrt(K[0]), y: Math.sqrt(K[7]), z: Math.sqrt(K[14]) };\n\n  return {\n    header: poseMessage.header,\n    ns: \"\",\n    id: 1,\n    type: MarkerType.SPHERE,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale,\n    color: stringToRgba(makeRgba(), settings.covarianceColor),\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nexport function normalizePoseStamped(pose: PartialMessage<PoseStamped>): PoseStamped {\n  return {\n    header: normalizeHeader(pose.header),\n    pose: normalizePose(pose.pose),\n  };\n}\n\nfunction normalizePoseInFrameToPoseStamped(pose: PartialMessage<PoseInFrame>): PoseStamped {\n  return {\n    header: { stamp: normalizeTime(pose.timestamp), frame_id: pose.frame_id ?? \"\" },\n    pose: normalizePose(pose.pose),\n  };\n}\n\nfunction normalizePoseWithCovariance(\n  pose: PartialMessage<PoseWithCovariance> | undefined,\n): PoseWithCovariance {\n  const covariance = normalizeMatrix6(pose?.covariance as number[] | undefined);\n  return { pose: normalizePose(pose?.pose), covariance };\n}\n\nfunction normalizePoseWithCovarianceStamped(\n  message: PartialMessage<PoseWithCovarianceStamped>,\n): PoseWithCovarianceStamped {\n  return {\n    header: normalizeHeader(message.header),\n    pose: normalizePoseWithCovariance(message.pose),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { PosesInFrame } from \"@foxglove/schemas\";\nimport { SettingsTreeAction, SettingsTreeFields, Topic } from \"@foxglove/studio\";\nimport type { RosValue } from \"@foxglove/studio-base/players/types\";\n\nimport { Axis, AXIS_LENGTH } from \"./Axis\";\nimport { createArrowMarker } from \"./Poses\";\nimport { RenderableArrow } from \"./markers/RenderableArrow\";\nimport { RenderableLineStrip } from \"./markers/RenderableLineStrip\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { makeRgba, rgbaGradient, rgbaToCssString, stringToRgba } from \"../color\";\nimport { POSES_IN_FRAME_DATATYPES } from \"../foxglove\";\nimport { vecEqual } from \"../math\";\nimport { normalizeHeader, normalizePose, normalizeTime } from \"../normalizeMessages\";\nimport {\n  PoseArray,\n  POSE_ARRAY_DATATYPES,\n  ColorRGBA,\n  NAV_PATH_DATATYPES,\n  Marker,\n  NavPath,\n  MarkerType,\n  MarkerAction,\n} from \"../ros\";\nimport {\n  BaseSettings,\n  fieldGradient,\n  fieldLineWidth,\n  fieldScaleVec3,\n  fieldSize,\n} from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose, Pose } from \"../transforms\";\n\ntype GradientRgba = [ColorRGBA, ColorRGBA];\ntype Gradient = [string, string];\ntype DisplayType = \"axis\" | \"arrow\" | \"line\";\n\nexport type LayerSettingsPoseArray = BaseSettings & {\n  type: DisplayType;\n  axisScale: number;\n  arrowScale: [number, number, number];\n  lineWidth: number;\n  gradient: Gradient;\n};\n\nconst DEFAULT_TYPE: DisplayType = \"axis\";\nconst DEFAULT_AXIS_SCALE = AXIS_LENGTH;\nconst DEFAULT_ARROW_SCALE: THREE.Vector3Tuple = [1, 0.15, 0.15];\nconst DEFAULT_LINE_WIDTH = 0.2;\nconst DEFAULT_GRADIENT: GradientRgba = [\n  { r: 124 / 255, g: 107 / 255, b: 1, a: 1 },\n  { r: 124 / 255, g: 107 / 255, b: 1, a: 0.5 },\n];\n\nconst MISMATCHED_FRAME_ID = \"MISMATCHED_FRAME_ID\";\n\nconst TIME_ZERO = { sec: 0, nsec: 0 };\nconst COLOR_WHITE = { r: 1, g: 1, b: 1, a: 1 };\n\nconst DEFAULT_GRADIENT_STR: Gradient = [\n  rgbaToCssString(DEFAULT_GRADIENT[0]!),\n  rgbaToCssString(DEFAULT_GRADIENT[1]!),\n];\n\nconst DEFAULT_SETTINGS: LayerSettingsPoseArray = {\n  visible: false,\n  type: DEFAULT_TYPE,\n  axisScale: DEFAULT_AXIS_SCALE,\n  arrowScale: DEFAULT_ARROW_SCALE,\n  lineWidth: DEFAULT_LINE_WIDTH,\n  gradient: DEFAULT_GRADIENT_STR,\n};\n\nconst TYPE_OPTIONS = [\n  { label: \"Axis\", value: \"axis\" },\n  { label: \"Arrow\", value: \"arrow\" },\n  { label: \"Line\", value: \"line\" },\n];\n\nconst tempColor1 = makeRgba();\nconst tempColor2 = makeRgba();\nconst tempColor3 = makeRgba();\n\nexport type PoseArrayUserData = BaseUserData & {\n  settings: LayerSettingsPoseArray;\n  topic: string;\n  poseArrayMessage: PoseArray;\n  originalMessage: Record<string, RosValue>;\n  axes: Axis[];\n  arrows: RenderableArrow[];\n  lineStrip?: RenderableLineStrip;\n};\n\nexport class PoseArrayRenderable extends Renderable<PoseArrayUserData> {\n  public override dispose(): void {\n    this.userData.axes.forEach((axis) => axis.dispose());\n    this.userData.arrows.forEach((arrow) => arrow.dispose());\n    this.userData.lineStrip?.dispose();\n    super.dispose();\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.originalMessage;\n  }\n\n  public removeArrows(): void {\n    for (const arrow of this.userData.arrows) {\n      this.remove(arrow);\n      arrow.dispose();\n    }\n    this.userData.arrows.length = 0;\n  }\n\n  public removeAxes(): void {\n    for (const axis of this.userData.axes) {\n      this.remove(axis);\n      axis.dispose();\n    }\n    this.userData.axes.length = 0;\n  }\n\n  public removeLineStrip(): void {\n    if (this.userData.lineStrip) {\n      this.remove(this.userData.lineStrip);\n      this.userData.lineStrip.dispose();\n      this.userData.lineStrip = undefined;\n    }\n  }\n}\n\nexport class PoseArrays extends SceneExtension<PoseArrayRenderable> {\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.PoseArrays\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: POSE_ARRAY_DATATYPES,\n        subscription: { handler: this.#handlePoseArray },\n      },\n      {\n        type: \"schema\",\n        schemaNames: POSES_IN_FRAME_DATATYPES,\n        subscription: { handler: this.#handlePosesInFrame },\n      },\n      {\n        type: \"schema\",\n        schemaNames: NAV_PATH_DATATYPES,\n        subscription: { handler: this.#handleNavPath },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (\n        !(\n          topicIsConvertibleToSchema(topic, POSE_ARRAY_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, NAV_PATH_DATATYPES) ||\n          topicIsConvertibleToSchema(topic, POSES_IN_FRAME_DATATYPES)\n        )\n      ) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsPoseArray>;\n      const displayType = config.type ?? getDefaultType(topic);\n      const { axisScale, lineWidth } = config;\n      const arrowScale = config.arrowScale ?? DEFAULT_ARROW_SCALE;\n      const gradient = config.gradient ?? DEFAULT_GRADIENT_STR;\n\n      const fields: SettingsTreeFields = {\n        type: { label: \"Type\", input: \"select\", options: TYPE_OPTIONS, value: displayType },\n      };\n      switch (displayType) {\n        case \"axis\":\n          fields[\"axisScale\"] = fieldSize(\"Scale\", axisScale, DEFAULT_AXIS_SCALE);\n          break;\n        case \"arrow\":\n          fields[\"arrowScale\"] = fieldScaleVec3(\"Scale\", arrowScale);\n          break;\n        case \"line\":\n          fields[\"lineWidth\"] = fieldLineWidth(\"Line Width\", lineWidth, DEFAULT_LINE_WIDTH);\n          break;\n      }\n\n      // Axis does not currently support gradients. This could possibly be done with tinting\n      if (displayType !== \"axis\") {\n        fields[\"gradient\"] = fieldGradient(\"Gradient\", gradient);\n      }\n\n      entries.push({\n        path: [\"topics\", topic.name],\n        node: {\n          label: topic.name,\n          icon: topicIsConvertibleToSchema(topic, NAV_PATH_DATATYPES) ? \"Timeline\" : \"Flag\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler,\n        },\n      });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsPoseArray>\n        | undefined;\n      const defaultType = { type: getDefaultType(this.renderer.topicsByName?.get(topicName)) };\n      this.#updatePoseArrayRenderable(\n        renderable,\n        renderable.userData.poseArrayMessage,\n        renderable.userData.originalMessage,\n        renderable.userData.receiveTime,\n        { ...DEFAULT_SETTINGS, ...defaultType, ...settings },\n      );\n    }\n  };\n\n  #handlePoseArray = (messageEvent: PartialMessageEvent<PoseArray>): void => {\n    const poseArrayMessage = normalizePoseArray(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.#addPoseArray(messageEvent.topic, poseArrayMessage, messageEvent.message, receiveTime);\n  };\n\n  #handleNavPath = (messageEvent: PartialMessageEvent<NavPath>): void => {\n    if (!validateNavPath(messageEvent, this.renderer)) {\n      return;\n    }\n\n    const poseArrayMessage = normalizeNavPathToPoseArray(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.#addPoseArray(messageEvent.topic, poseArrayMessage, messageEvent.message, receiveTime);\n  };\n\n  #handlePosesInFrame = (messageEvent: PartialMessageEvent<PosesInFrame>): void => {\n    const poseArrayMessage = normalizePosesInFrameToPoseArray(messageEvent.message);\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    this.#addPoseArray(messageEvent.topic, poseArrayMessage, messageEvent.message, receiveTime);\n  };\n\n  #addPoseArray(\n    topic: string,\n    poseArrayMessage: PoseArray,\n    originalMessage: Record<string, RosValue>,\n    receiveTime: bigint,\n  ): void {\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsPoseArray>\n        | undefined;\n      const defaultType = { type: getDefaultType(this.renderer.topicsByName?.get(topic)) };\n      const settings = { ...DEFAULT_SETTINGS, ...defaultType, ...userSettings };\n\n      renderable = new PoseArrayRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime: toNanoSec(poseArrayMessage.header.stamp),\n        frameId: this.renderer.normalizeFrameId(poseArrayMessage.header.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        poseArrayMessage,\n        originalMessage,\n        axes: [],\n        arrows: [],\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    this.#updatePoseArrayRenderable(\n      renderable,\n      poseArrayMessage,\n      originalMessage,\n      receiveTime,\n      renderable.userData.settings,\n    );\n  }\n\n  #createAxesToMatchPoses(\n    renderable: PoseArrayRenderable,\n    poseArray: PoseArray,\n    topic: string,\n  ): void {\n    const scale = renderable.userData.settings.axisScale * (1 / AXIS_LENGTH);\n\n    // Update the scale and visibility of existing AxisRenderables as needed\n    const existingUpdateCount = Math.min(renderable.userData.axes.length, poseArray.poses.length);\n    for (let i = 0; i < existingUpdateCount; i++) {\n      const axis = renderable.userData.axes[i]!;\n      axis.visible = true;\n      axis.scale.set(scale, scale, scale);\n    }\n\n    // Create any AxisRenderables as needed\n    for (let i = renderable.userData.axes.length; i < poseArray.poses.length; i++) {\n      const axis = new Axis(topic, this.renderer);\n      renderable.userData.axes.push(axis);\n      renderable.add(axis);\n\n      // Set the scale for each new axis\n      axis.scale.set(scale, scale, scale);\n    }\n\n    // Hide any AxisRenderables as needed\n    for (let i = poseArray.poses.length; i < renderable.userData.axes.length; i++) {\n      const axis = renderable.userData.axes[i]!;\n      axis.visible = false;\n    }\n  }\n\n  #createArrowsToMatchPoses(\n    renderable: PoseArrayRenderable,\n    poseArray: PoseArray,\n    topic: string,\n    colorStart: ColorRGBA,\n    colorEnd: ColorRGBA,\n  ): void {\n    // Generate a Marker with the right scale and color\n    const createArrowMarkerFromIndex = (i: number): Marker => {\n      const t = i / (poseArray.poses.length - 1);\n      const color = rgbaGradient(tempColor3, colorStart, colorEnd, t);\n      return createArrowMarker(renderable.userData.settings.arrowScale, color);\n    };\n\n    // Update the arrowMarker of existing RenderableArrow as needed\n    const existingUpdateCount = Math.min(renderable.userData.arrows.length, poseArray.poses.length);\n    for (let i = 0; i < existingUpdateCount; i++) {\n      const arrowMarker = createArrowMarkerFromIndex(i);\n      const arrow = renderable.userData.arrows[i]!;\n      arrow.visible = true;\n      arrow.update(arrowMarker, undefined);\n    }\n\n    // Create any RenderableArrow as needed\n    for (let i = renderable.userData.arrows.length; i < poseArray.poses.length; i++) {\n      const arrowMarker = createArrowMarkerFromIndex(i);\n      const arrow = new RenderableArrow(topic, arrowMarker, undefined, this.renderer);\n      renderable.userData.arrows.push(arrow);\n      renderable.add(arrow);\n    }\n\n    // Hide any RenderableArrow as needed\n    for (let i = poseArray.poses.length; i < renderable.userData.arrows.length; i++) {\n      const arrow = renderable.userData.arrows[i]!;\n      arrow.visible = false;\n    }\n  }\n\n  #updatePoseArrayRenderable(\n    renderable: PoseArrayRenderable,\n    poseArrayMessage: PoseArray,\n    originalMessage: Record<string, RosValue>,\n    receiveTime: bigint,\n    settings: LayerSettingsPoseArray,\n  ): void {\n    renderable.userData.receiveTime = receiveTime;\n    renderable.userData.messageTime = toNanoSec(poseArrayMessage.header.stamp);\n    renderable.userData.frameId = this.renderer.normalizeFrameId(poseArrayMessage.header.frame_id);\n    renderable.userData.poseArrayMessage = poseArrayMessage;\n    renderable.userData.originalMessage = originalMessage;\n\n    const { topic, settings: prevSettings } = renderable.userData;\n    const axisOrArrowSettingsChanged =\n      settings.type !== prevSettings.type ||\n      settings.axisScale !== prevSettings.axisScale ||\n      !vecEqual(settings.arrowScale, prevSettings.arrowScale) ||\n      !vecEqual(settings.gradient, prevSettings.gradient) ||\n      (renderable.userData.arrows.length === 0 && renderable.userData.axes.length === 0);\n\n    renderable.userData.settings = settings;\n\n    const colorStart = stringToRgba(tempColor1, settings.gradient[0]);\n    const colorEnd = stringToRgba(tempColor2, settings.gradient[1]);\n\n    if (axisOrArrowSettingsChanged) {\n      switch (renderable.userData.settings.type) {\n        case \"axis\":\n          renderable.removeArrows();\n          renderable.removeLineStrip();\n          break;\n        case \"arrow\":\n          renderable.removeAxes();\n          renderable.removeLineStrip();\n          break;\n        case \"line\":\n          {\n            renderable.removeArrows();\n            renderable.removeAxes();\n\n            const lineStripMarker = createLineStripMarker(\n              poseArrayMessage,\n              settings.lineWidth,\n              colorStart,\n              colorEnd,\n            );\n\n            // Create a RenderableLineStrip if needed\n            if (!renderable.userData.lineStrip) {\n              const lineStrip = new RenderableLineStrip(\n                topic,\n                lineStripMarker,\n                undefined,\n                this.renderer,\n              );\n              renderable.userData.lineStrip = lineStrip;\n              renderable.add(lineStrip);\n            }\n\n            renderable.userData.lineStrip.update(lineStripMarker, undefined);\n          }\n          break;\n      }\n    }\n\n    // Update the pose for each pose renderable\n    switch (settings.type) {\n      case \"axis\":\n        this.#createAxesToMatchPoses(renderable, poseArrayMessage, topic);\n        for (let i = 0; i < poseArrayMessage.poses.length; i++) {\n          setObjectPose(renderable.userData.axes[i]!, poseArrayMessage.poses[i]!);\n        }\n        break;\n      case \"arrow\":\n        this.#createArrowsToMatchPoses(renderable, poseArrayMessage, topic, colorStart, colorEnd);\n        for (let i = 0; i < poseArrayMessage.poses.length; i++) {\n          setObjectPose(renderable.userData.arrows[i]!, poseArrayMessage.poses[i]!);\n        }\n        break;\n      case \"line\": {\n        const lineStripMarker = createLineStripMarker(\n          poseArrayMessage,\n          settings.lineWidth,\n          colorStart,\n          colorEnd,\n        );\n        renderable.userData.lineStrip?.update(lineStripMarker, undefined);\n        break;\n      }\n    }\n  }\n}\n\nfunction getDefaultType(topic: Topic | undefined): DisplayType {\n  return topic != undefined && NAV_PATH_DATATYPES.has(topic.schemaName) ? \"line\" : DEFAULT_TYPE;\n}\n\nfunction setObjectPose(object: THREE.Object3D, pose: Pose): void {\n  const p = pose.position;\n  const q = pose.orientation;\n  object.position.set(p.x, p.y, p.z);\n  object.quaternion.set(q.x, q.y, q.z, q.w);\n  object.updateMatrix();\n}\n\nfunction createLineStripMarker(\n  message: PoseArray,\n  lineWidth: number,\n  colorStart: ColorRGBA,\n  colorEnd: ColorRGBA,\n): Marker {\n  // Create a gradient of colors for the line strip\n  const colors: ColorRGBA[] = [];\n  for (let i = 0; i < message.poses.length; i++) {\n    const t = i / (message.poses.length - 1);\n    colors.push(rgbaGradient(makeRgba(), colorStart, colorEnd, t));\n  }\n\n  return {\n    header: message.header,\n    ns: \"\",\n    id: 0,\n    type: MarkerType.LINE_STRIP,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: lineWidth, y: 1, z: 1 },\n    color: COLOR_WHITE,\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: message.poses.map((pose) => pose.position),\n    colors,\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction normalizePoseArray(poseArray: PartialMessage<PoseArray>): PoseArray {\n  return {\n    header: normalizeHeader(poseArray.header),\n    poses: poseArray.poses?.map((p) => normalizePose(p)) ?? [],\n  };\n}\n\nfunction normalizeNavPathToPoseArray(navPath: PartialMessage<NavPath>): PoseArray {\n  return {\n    header: normalizeHeader(navPath.header),\n    poses: navPath.poses?.map((p) => normalizePose(p?.pose)) ?? [],\n  };\n}\n\nfunction normalizePosesInFrameToPoseArray(poseArray: PartialMessage<PosesInFrame>): PoseArray {\n  return {\n    header: { stamp: normalizeTime(poseArray.timestamp), frame_id: poseArray.frame_id ?? \"\" },\n    poses: poseArray.poses?.map(normalizePose) ?? [],\n  };\n}\n\nfunction validateNavPath(messageEvent: PartialMessageEvent<NavPath>, renderer: IRenderer): boolean {\n  const { topic, message: navPath } = messageEvent;\n  if (navPath.poses) {\n    const baseFrameId = renderer.normalizeFrameId(navPath.header?.frame_id ?? \"\");\n    for (const pose of navPath.poses) {\n      const curFrameId = renderer.normalizeFrameId(pose?.header?.frame_id ?? \"\");\n      if (baseFrameId !== curFrameId) {\n        renderer.settings.errors.addToTopic(\n          topic,\n          MISMATCHED_FRAME_ID,\n          `Path poses must all have the same frame_id. \"${baseFrameId}\" != \"${curFrameId}\"`,\n        );\n        return false;\n      }\n    }\n  }\n  return true;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableArrow } from \"./markers/RenderableArrow\";\nimport { RenderableSphere } from \"./markers/RenderableSphere\";\nimport type { IRenderer } from \"../IRenderer\";\nimport { Renderable, BaseUserData } from \"../Renderable\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { Marker, MarkerAction, MarkerType, TIME_ZERO } from \"../ros\";\nimport { makePose, Point, Pose } from \"../transforms/geometry\";\n\nconst UNIT_X = new THREE.Vector3(1, 0, 0);\nconst tempVec3 = new THREE.Vector3();\nexport type PublishClickType = \"pose_estimate\" | \"pose\" | \"point\";\n\nexport type PublishClickState = \"idle\" | \"place-first-point\" | \"place-second-point\";\n\nfunction makeArrowMarker(type: PublishClickType): Marker {\n  return {\n    header: { frame_id: \"\", stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.ARROW,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: 2, y: 0.25, z: 0.25 },\n    color: type === \"pose_estimate\" ? { r: 0, g: 1, b: 1, a: 1 } : { r: 1, g: 0, b: 1, a: 1 },\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction makeSphereMarker(): Marker {\n  return {\n    header: { frame_id: \"\", stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.SPHERE,\n    action: MarkerAction.ADD,\n    pose: makePose(),\n    scale: { x: 0.25, y: 0.25, z: 0.25 },\n    color: { r: 1, g: 1, b: 0, a: 1 },\n    lifetime: TIME_ZERO,\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nexport type PublishClickEvent =\n  | { type: \"foxglove.publish-start\" }\n  | { type: \"foxglove.publish-end\" }\n  | { type: \"foxglove.publish-type-change\" }\n  | { type: \"foxglove.publish-submit\"; publishClickType: \"point\"; point: Point }\n  | { type: \"foxglove.publish-submit\"; publishClickType: \"pose\" | \"pose_estimate\"; pose: Pose };\n\nexport class PublishClickTool extends SceneExtension<Renderable<BaseUserData>, PublishClickEvent> {\n  #sphere: RenderableSphere;\n  #arrow: RenderableArrow;\n\n  public publishClickType: PublishClickType = \"point\";\n  public state: PublishClickState = \"idle\";\n\n  #point1?: THREE.Vector3;\n  #point2?: THREE.Vector3;\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.PublishClickTool\", renderer);\n\n    this.#sphere = new RenderableSphere(\"\", makeSphereMarker(), undefined, this.renderer);\n    this.#arrow = new RenderableArrow(\n      \"\",\n      makeArrowMarker(this.publishClickType),\n      undefined,\n      this.renderer,\n    );\n    this.#sphere.visible = false;\n    this.#sphere.mesh.userData.picking = false;\n    this.#arrow.visible = false;\n    this.#arrow.shaftMesh.userData.picking = false;\n    this.#arrow.headMesh.userData.picking = false;\n    this.add(this.#sphere);\n    this.add(this.#arrow);\n    this.#setState(\"idle\");\n  }\n\n  public override dispose(): void {\n    super.dispose();\n    this.#arrow.dispose();\n    this.#sphere.dispose();\n    this.renderer.input.removeListener(\"click\", this.#handleClick);\n    this.renderer.input.removeListener(\"mousemove\", this.#handleMouseMove);\n  }\n\n  public setPublishClickType(type: PublishClickType): void {\n    this.publishClickType = type;\n    this.#arrow.update(makeArrowMarker(this.publishClickType), undefined);\n    this.dispatchEvent({ type: \"foxglove.publish-type-change\" });\n  }\n\n  public start(): void {\n    this.#setState(\"place-first-point\");\n  }\n\n  public stop(): void {\n    this.#setState(\"idle\");\n  }\n\n  #setState(state: PublishClickState): void {\n    this.state = state;\n    switch (state) {\n      case \"idle\":\n        this.#point1 = this.#point2 = undefined;\n        this.renderer.input.removeListener(\"click\", this.#handleClick);\n        this.renderer.input.removeListener(\"mousemove\", this.#handleMouseMove);\n        this.dispatchEvent({ type: \"foxglove.publish-end\" });\n        break;\n      case \"place-first-point\":\n        this.renderer.input.addListener(\"click\", this.#handleClick);\n        this.renderer.input.addListener(\"mousemove\", this.#handleMouseMove);\n        this.dispatchEvent({ type: \"foxglove.publish-start\" });\n        break;\n      case \"place-second-point\":\n        break;\n    }\n    this.#render();\n  }\n\n  #handleMouseMove = (\n    _cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    _event: MouseEvent,\n  ) => {\n    if (!worldSpaceCursorCoords) {\n      return;\n    }\n    switch (this.state) {\n      case \"idle\":\n        break;\n      case \"place-first-point\":\n        (this.#point1 ??= new THREE.Vector3()).copy(worldSpaceCursorCoords);\n        break;\n      case \"place-second-point\":\n        (this.#point2 ??= new THREE.Vector3()).copy(worldSpaceCursorCoords);\n        break;\n    }\n    this.#render();\n  };\n\n  #handleClick = (\n    _cursorCoords: THREE.Vector2,\n    worldSpaceCursorCoords: THREE.Vector3 | undefined,\n    _event: MouseEvent,\n  ) => {\n    if (!worldSpaceCursorCoords) {\n      return;\n    }\n\n    switch (this.state) {\n      case \"idle\":\n        break;\n      case \"place-first-point\":\n        this.#point1 = worldSpaceCursorCoords.clone();\n        if (this.publishClickType === \"point\") {\n          this.dispatchEvent({\n            type: \"foxglove.publish-submit\",\n            publishClickType: this.publishClickType,\n            point: { x: this.#point1.x, y: this.#point1.y, z: this.#point1.z },\n          });\n          this.#setState(\"idle\");\n        } else {\n          this.#setState(\"place-second-point\");\n        }\n        break;\n      case \"place-second-point\":\n        this.#point2 = worldSpaceCursorCoords.clone();\n        if (this.#point1 && this.publishClickType !== \"point\") {\n          const p = this.#point1.clone();\n          const q = new THREE.Quaternion().setFromUnitVectors(\n            UNIT_X,\n            tempVec3.subVectors(this.#point2, this.#point1).normalize(),\n          );\n          this.dispatchEvent({\n            type: \"foxglove.publish-submit\",\n            publishClickType: this.publishClickType,\n            pose: {\n              position: { x: p.x, y: p.y, z: p.z },\n              orientation: { x: q.x, y: q.y, z: q.z, w: q.w },\n            },\n          });\n        }\n        this.#setState(\"idle\");\n        break;\n    }\n    this.#render();\n  };\n\n  #render() {\n    if (this.publishClickType === \"point\") {\n      this.#arrow.visible = false;\n      if (this.#point1) {\n        this.#sphere.visible = true;\n        this.#sphere.position.copy(this.#point1);\n      } else {\n        this.#sphere.visible = false;\n      }\n    } else {\n      this.#sphere.visible = false;\n      if (this.#point1) {\n        this.#arrow.visible = true;\n\n        this.#arrow.position.copy(this.#point1);\n        if (this.#point2) {\n          this.#arrow.quaternion.setFromUnitVectors(\n            UNIT_X,\n            tempVec3.subVectors(this.#point2, this.#point1).normalize(),\n          );\n        } else {\n          this.#arrow.quaternion.set(0, 0, 0, 1);\n        }\n      } else {\n        this.#arrow.visible = false;\n      }\n    }\n\n    this.renderer.queueAnimationFrame();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nexport enum PrimitiveType {\n  CUBES = \"CUBES\",\n  MODELS = \"MODELS\",\n  LINES = \"LINES\",\n  CYLINDERS = \"CYLINDERS\",\n  ARROWS = \"ARROWS\",\n  SPHERES = \"SPHERES\",\n  TEXTS = \"TEXTS\",\n  TRIANGLES = \"TRIANGLES\",\n}\n\nexport const ALL_PRIMITIVE_TYPES = [\n  PrimitiveType.CUBES,\n  PrimitiveType.MODELS,\n  PrimitiveType.LINES,\n  PrimitiveType.CYLINDERS,\n  PrimitiveType.ARROWS,\n  PrimitiveType.SPHERES,\n  PrimitiveType.TEXTS,\n  PrimitiveType.TRIANGLES,\n];\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SceneEntity, SceneEntityDeletion, SceneEntityDeletionType } from \"@foxglove/schemas\";\n\nimport { PrimitivePool } from \"./primitives/PrimitivePool\";\nimport { RenderableArrows } from \"./primitives/RenderableArrows\";\nimport { RenderableCubes } from \"./primitives/RenderableCubes\";\nimport { RenderableCylinders } from \"./primitives/RenderableCylinders\";\nimport { RenderableLines } from \"./primitives/RenderableLines\";\nimport { RenderableModels } from \"./primitives/RenderableModels\";\nimport { RenderableSpheres } from \"./primitives/RenderableSpheres\";\nimport { RenderableTexts } from \"./primitives/RenderableTexts\";\nimport { RenderableTriangles } from \"./primitives/RenderableTriangles\";\nimport { ALL_PRIMITIVE_TYPES, PrimitiveType } from \"./primitives/types\";\nimport { missingTransformMessage, MISSING_TRANSFORM } from \"./transforms\";\nimport type { IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { LayerSettingsEntity } from \"../settings\";\nimport { updatePose } from \"../updatePose\";\n\nconst INVALID_DELETION_TYPE = \"INVALID_DELETION_TYPE\";\n\nexport type EntityTopicUserData = BaseUserData & {\n  topic: string;\n  settings: LayerSettingsEntity;\n};\n\ntype EntityRenderables = {\n  [PrimitiveType.CUBES]?: RenderableCubes;\n  [PrimitiveType.MODELS]?: RenderableModels;\n  [PrimitiveType.LINES]?: RenderableLines;\n  [PrimitiveType.CYLINDERS]?: RenderableCylinders;\n  [PrimitiveType.ARROWS]?: RenderableArrows;\n  [PrimitiveType.SPHERES]?: RenderableSpheres;\n  [PrimitiveType.TEXTS]?: RenderableTexts;\n  [PrimitiveType.TRIANGLES]?: RenderableTriangles;\n};\n\nconst PRIMITIVE_KEYS = {\n  [PrimitiveType.CUBES]: \"cubes\",\n  [PrimitiveType.MODELS]: \"models\",\n  [PrimitiveType.LINES]: \"lines\",\n  [PrimitiveType.CYLINDERS]: \"cylinders\",\n  [PrimitiveType.ARROWS]: \"arrows\",\n  [PrimitiveType.SPHERES]: \"spheres\",\n  [PrimitiveType.TEXTS]: \"texts\",\n  [PrimitiveType.TRIANGLES]: \"triangles\",\n} as const;\n\nexport class TopicEntities extends Renderable<EntityTopicUserData> {\n  public override pickable = false;\n  #renderablesById = new Map<string, EntityRenderables>();\n\n  public constructor(\n    name: string,\n    private primitivePool: PrimitivePool,\n    renderer: IRenderer,\n    userData: EntityTopicUserData,\n  ) {\n    super(name, renderer, userData);\n  }\n\n  public override dispose(): void {\n    this.children.length = 0;\n    this.#deleteAllEntities();\n  }\n\n  public updateSettings(): void {\n    // Updates each individual primitive renderable using the current topic settings\n    for (const renderables of this.#renderablesById.values()) {\n      for (const renderable of Object.values(renderables)) {\n        renderable.updateSettings(this.userData.settings);\n      }\n    }\n  }\n\n  public setColorScheme(colorScheme: \"dark\" | \"light\"): void {\n    for (const renderables of this.#renderablesById.values()) {\n      for (const renderable of Object.values(renderables)) {\n        renderable.setColorScheme(colorScheme);\n      }\n    }\n  }\n\n  public startFrame(currentTime: bigint, renderFrameId: string, fixedFrameId: string): void {\n    this.visible = this.userData.settings.visible;\n    if (!this.visible) {\n      this.renderer.settings.errors.clearTopic(this.topic);\n      return;\n    }\n\n    for (const renderables of this.#renderablesById.values()) {\n      for (const renderable of Object.values(renderables)) {\n        const entity = renderable.userData.entity;\n        if (!entity) {\n          continue;\n        }\n\n        // Check if this entity has expired\n        const expiresAt = renderable.userData.expiresAt;\n        if (expiresAt != undefined && currentTime > expiresAt) {\n          this.#deleteEntity(entity.id);\n          break;\n        }\n\n        const frameId = this.renderer.normalizeFrameId(entity.frame_id);\n        const srcTime = entity.frame_locked ? currentTime : toNanoSec(entity.timestamp);\n        const updated = updatePose(\n          renderable,\n          this.renderer.transformTree,\n          renderFrameId,\n          fixedFrameId,\n          frameId,\n          currentTime,\n          srcTime,\n        );\n        renderable.visible = updated;\n        const topic = this.userData.topic;\n        if (!updated) {\n          const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n          this.renderer.settings.errors.addToTopic(topic, MISSING_TRANSFORM, message);\n        } else {\n          this.renderer.settings.errors.removeFromTopic(topic, MISSING_TRANSFORM);\n        }\n      }\n    }\n  }\n\n  public addOrUpdateEntity(entity: SceneEntity, receiveTime: bigint): void {\n    let renderables = this.#renderablesById.get(entity.id);\n    if (!renderables) {\n      renderables = {};\n      this.#renderablesById.set(entity.id, renderables);\n    }\n\n    for (const primitiveType of ALL_PRIMITIVE_TYPES) {\n      const hasPrimitives = entity[PRIMITIVE_KEYS[primitiveType]].length > 0;\n      let renderable = renderables[primitiveType];\n      if (hasPrimitives) {\n        if (!renderable) {\n          renderable = this.primitivePool.acquire(primitiveType);\n          renderable.name = `${entity.id}:${primitiveType} on ${this.topic}`;\n          renderable.userData.settingsPath = this.userData.settingsPath;\n          renderable.setColorScheme(this.renderer.colorScheme);\n          // @ts-expect-error TS doesn't know that renderable matches primitiveType\n          renderables[primitiveType] = renderable;\n          this.add(renderable);\n        }\n        renderable.update(this.userData.topic, entity, this.userData.settings, receiveTime);\n      } else if (renderable) {\n        this.remove(renderable);\n        delete renderables[primitiveType];\n        this.primitivePool.release(primitiveType, renderable);\n      }\n    }\n  }\n\n  public deleteEntities(deletion: SceneEntityDeletion): void {\n    switch (deletion.type) {\n      case SceneEntityDeletionType.MATCHING_ID:\n        this.#deleteEntity(deletion.id);\n        break;\n      case SceneEntityDeletionType.ALL:\n        this.#deleteAllEntities();\n        break;\n      default:\n        // Unknown action\n        this.renderer.settings.errors.addToTopic(\n          this.topic,\n          INVALID_DELETION_TYPE,\n          `Invalid deletion type ${deletion.type}`,\n        );\n    }\n  }\n\n  #removeRenderables(renderables: EntityRenderables): void {\n    for (const [primitiveType, primitive] of Object.entries(renderables) as [\n      PrimitiveType,\n      EntityRenderables[PrimitiveType],\n    ][]) {\n      if (primitive) {\n        this.remove(primitive);\n        this.primitivePool.release(primitiveType, primitive);\n      }\n    }\n  }\n\n  #deleteEntity(id: string) {\n    const renderables = this.#renderablesById.get(id);\n    if (renderables) {\n      this.#removeRenderables(renderables);\n    }\n    this.#renderablesById.delete(id);\n  }\n\n  #deleteAllEntities() {\n    for (const renderables of this.#renderablesById.values()) {\n      this.#removeRenderables(renderables);\n    }\n    this.#renderablesById.clear();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SceneEntity } from \"@foxglove/schemas\";\nimport { IRenderer } from \"@foxglove/studio-base/panels/ThreeDeeRender/IRenderer\";\nimport { BaseUserData, Renderable } from \"@foxglove/studio-base/panels/ThreeDeeRender/Renderable\";\nimport { RosValue } from \"@foxglove/studio-base/players/types\";\nimport { emptyPose } from \"@foxglove/studio-base/util/Pose\";\n\nimport { LayerSettingsEntity } from \"../../settings\";\n\nexport type EntityRenderableUserData = BaseUserData & {\n  topic?: string;\n  entity?: SceneEntity;\n  expiresAt?: bigint;\n  settings?: LayerSettingsEntity;\n};\n\nconst PRIMITIVE_DEFAULT_SETTINGS: LayerSettingsEntity = {\n  showOutlines: true,\n  visible: false,\n  color: undefined,\n  selectedIdVariable: undefined,\n};\nexport class RenderablePrimitive extends Renderable<EntityRenderableUserData> {\n  public constructor(\n    name: string,\n    renderer: IRenderer,\n    userData: EntityRenderableUserData = {\n      receiveTime: -1n,\n      messageTime: -1n,\n      frameId: \"\",\n      pose: emptyPose(),\n      settings: PRIMITIVE_DEFAULT_SETTINGS,\n      settingsPath: [],\n      entity: undefined,\n    },\n  ) {\n    super(name, renderer, userData);\n  }\n  public update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    this.userData.topic = topic;\n    this.userData.entity = entity;\n    this.userData.settings = settings;\n    this.userData.receiveTime = receiveTime;\n  }\n\n  public override idFromMessage(): number | string | undefined {\n    return this.userData.entity?.id;\n  }\n\n  public override selectedIdVariable(): string | undefined {\n    const settings = this.getSettings();\n    return settings?.selectedIdVariable;\n  }\n\n  public getSettings(): LayerSettingsEntity | undefined {\n    if (this.userData.topic == undefined) {\n      return undefined;\n    }\n    return this.userData.settings;\n  }\n\n  public override details(): Record<string, RosValue> {\n    return this.userData.entity ?? {};\n  }\n\n  public setColorScheme(colorScheme: \"dark\" | \"light\"): void {\n    void colorScheme;\n  }\n\n  public prepareForReuse(): void {\n    this.userData.entity = undefined;\n    this.userData.pose = emptyPose();\n  }\n\n  public addError(errorId: string, message: string): void {\n    this.renderer.settings.errors.add(this.userData.settingsPath, errorId, message);\n  }\n\n  public clearErrors(): void {\n    // presumably a renderable has not been assigned a settings path if it is 0\n    // running clearPath([]) will clear all errors from the settings tree\n    if (this.userData.settingsPath.length > 0) {\n      this.renderer.settings.errors.clearPath(this.userData.settingsPath);\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\n// Same as MeshStandardMaterial, but supporting a per-instance alpha using an `instanceOpacity` attribute.\n// Based on https://github.com/pailhead/three-instanced-mesh/pull/35\nexport class MeshStandardMaterialWithInstanceOpacity extends THREE.MeshStandardMaterial {\n  public override onBeforeCompile(shader: THREE.Shader, renderer: THREE.WebGLRenderer): void {\n    super.onBeforeCompile(shader, renderer);\n    shader.vertexShader = shader.vertexShader\n      .replace(\n        \"#include <color_pars_vertex>\",\n        `\n        #include <color_pars_vertex>\n        attribute float instanceOpacity;\n        varying float vInstanceOpacity;\n        `,\n      )\n      .replace(\n        \"#include <color_vertex>\",\n        `\n        #include <color_vertex>\n        vInstanceOpacity = instanceOpacity;\n        `,\n      );\n\n    shader.fragmentShader = shader.fragmentShader\n      .replace(\n        \"#include <color_pars_fragment>\",\n        `\n        #include <color_pars_fragment>\n        varying float vInstanceOpacity;\n        `,\n      )\n      .replace(\n        \"#include <color_fragment>\",\n        `\n        #include <color_fragment>\n        diffuseColor.a = vInstanceOpacity * opacity;\n        `,\n      );\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { ArrowPrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../../settings\";\nimport { MeshStandardMaterialWithInstanceOpacity } from \"../materials/MeshStandardMaterialWithInstanceOpacity\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec3_2 = new THREE.Vector3();\nconst tempMat4 = new THREE.Matrix4();\nconst tempQuat = new THREE.Quaternion();\nconst tempRgba = makeRgba();\n\nexport class RenderableArrows extends RenderablePrimitive {\n  // Each needs its own geometries because we attach additional custom attributes to them.\n  // so we will need to clone or copy when assigning from shared geometry\n  #shaftGeometry: THREE.CylinderGeometry;\n  #headGeometry: THREE.ConeGeometry;\n  #shaftOutlineGeometry: THREE.InstancedBufferGeometry;\n  #headOutlineGeometry: THREE.InstancedBufferGeometry;\n\n  #shaftMesh: THREE.InstancedMesh<THREE.CylinderGeometry, MeshStandardMaterialWithInstanceOpacity>;\n  #headMesh: THREE.InstancedMesh<THREE.ConeGeometry, MeshStandardMaterialWithInstanceOpacity>;\n  #instanceOpacity: THREE.InstancedBufferAttribute;\n  #material = new MeshStandardMaterialWithInstanceOpacity({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n  });\n\n  /**\n   * The initial count passed to `mesh`'s constructor, i.e. the maximum number of instances it can\n   * render before we need to create a new mesh object\n   */\n  #maxInstances: number;\n\n  #shaftOutline: THREE.LineSegments;\n  #headOutline: THREE.LineSegments;\n\n  public constructor(renderer: IRenderer) {\n    super(\"\", renderer, undefined);\n\n    this.#maxInstances = 16;\n    this.#instanceOpacity = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.#maxInstances),\n      1,\n    );\n\n    this.#shaftGeometry = renderer.sharedGeometry\n      .getGeometry(`${this.constructor.name}-shaft`, createShaftGeometry)\n      .clone() as THREE.CylinderGeometry;\n    this.#shaftGeometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n    this.#shaftMesh = new THREE.InstancedMesh(\n      this.#shaftGeometry,\n      this.#material,\n      this.#maxInstances,\n    );\n    this.#shaftMesh.count = 0;\n    this.add(this.#shaftMesh);\n\n    this.#headGeometry = renderer.sharedGeometry\n      .getGeometry(`${this.constructor.name}-head`, createHeadGeometry)\n      .clone() as THREE.ConeGeometry;\n    this.#headGeometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n    this.#headMesh = new THREE.InstancedMesh(\n      this.#headGeometry,\n      this.#material,\n      this.#maxInstances,\n    );\n    this.#headMesh.count = 0;\n    this.add(this.#headMesh);\n\n    const shaftEdgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-shaftedges`,\n      () => createShaftEdgesGeometry(this.#shaftGeometry),\n    );\n    this.#shaftOutlineGeometry = new THREE.InstancedBufferGeometry().copy(shaftEdgesGeometry);\n    this.#shaftOutlineGeometry.setAttribute(\"instanceMatrix\", this.#shaftMesh.instanceMatrix);\n    this.#shaftOutline = new THREE.LineSegments(\n      this.#shaftOutlineGeometry,\n      renderer.instancedOutlineMaterial,\n    );\n    this.#shaftOutline.frustumCulled = false;\n    this.#shaftOutline.userData.picking = false;\n    this.add(this.#shaftOutline);\n\n    const headEdgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-headedges`,\n      () => createHeadEdgesGeometry(this.#headGeometry),\n    );\n    this.#headOutlineGeometry = new THREE.InstancedBufferGeometry().copy(headEdgesGeometry);\n    this.#headOutlineGeometry.setAttribute(\"instanceMatrix\", this.#headMesh.instanceMatrix);\n    this.#headOutline = new THREE.LineSegments(\n      this.#headOutlineGeometry,\n      renderer.instancedOutlineMaterial,\n    );\n    this.#headOutline.frustumCulled = false;\n    this.#headOutline.userData.picking = false;\n    this.add(this.#headOutline);\n  }\n\n  #ensureCapacity(numArrows: number) {\n    if (numArrows > this.#maxInstances) {\n      const newCapacity = Math.ceil(numArrows * 1.5) + 16;\n      this.#maxInstances = newCapacity;\n\n      this.#instanceOpacity = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.#maxInstances),\n        1,\n      );\n\n      this.#shaftMesh.removeFromParent();\n      this.#shaftMesh.dispose();\n      this.#shaftMesh = new THREE.InstancedMesh(\n        this.#shaftGeometry,\n        this.#material,\n        this.#maxInstances,\n      );\n      this.#shaftGeometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n      this.add(this.#shaftMesh);\n\n      this.#headMesh.removeFromParent();\n      this.#headMesh.dispose();\n      this.#headMesh = new THREE.InstancedMesh(\n        this.#headGeometry,\n        this.#material,\n        this.#maxInstances,\n      );\n      this.#headGeometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n      this.add(this.#headMesh);\n\n      // THREE.js doesn't correctly recompute the new max instance count when dynamically\n      // reassigning the attribute of InstancedBufferGeometry, so we just create a new geometry\n\n      this.#shaftOutlineGeometry.dispose();\n      const shaftEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n        `${this.constructor.name}-shaftedges`,\n        () => createShaftEdgesGeometry(this.#shaftGeometry),\n      );\n      this.#shaftOutlineGeometry = new THREE.InstancedBufferGeometry().copy(shaftEdgesGeometry);\n      this.#shaftOutlineGeometry.instanceCount = newCapacity;\n      this.#shaftOutlineGeometry.setAttribute(\"instanceMatrix\", this.#shaftMesh.instanceMatrix);\n      this.#shaftOutline.geometry = this.#shaftOutlineGeometry;\n\n      this.#headOutlineGeometry.dispose();\n      const headEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n        `${this.constructor.name}-headedges`,\n        () => createHeadEdgesGeometry(this.#headGeometry),\n      );\n      this.#headOutlineGeometry = new THREE.InstancedBufferGeometry().copy(headEdgesGeometry);\n      this.#headOutlineGeometry.instanceCount = newCapacity;\n      this.#headOutlineGeometry.setAttribute(\"instanceMatrix\", this.#headMesh.instanceMatrix);\n      this.#headOutline.geometry = this.#headOutlineGeometry;\n    }\n  }\n\n  #updateMesh(arrows: ArrowPrimitive[]) {\n    let isTransparent = false;\n\n    this.#ensureCapacity(arrows.length);\n\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const arrow of arrows) {\n      const color = overrideColor ?? arrow.color;\n      if (color.a < 1) {\n        isTransparent = true;\n      }\n      this.#shaftMesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.#headMesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.#instanceOpacity.setX(i, color.a);\n      tempQuat.set(\n        arrow.pose.orientation.x,\n        arrow.pose.orientation.y,\n        arrow.pose.orientation.z,\n        arrow.pose.orientation.w,\n      );\n      this.#shaftMesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3.set(arrow.pose.position.x, arrow.pose.position.y, arrow.pose.position.z),\n          tempQuat,\n          tempVec3_2.set(arrow.shaft_length, arrow.shaft_diameter, arrow.shaft_diameter),\n        ),\n      );\n\n      // offset head position by shaft length in direction of arrow pose\n      tempVec3.add(tempVec3_2.set(arrow.shaft_length, 0, 0).applyQuaternion(tempQuat));\n\n      this.#headMesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3,\n          tempQuat,\n          tempVec3_2.set(arrow.head_length, arrow.head_diameter, arrow.head_diameter),\n        ),\n      );\n      i++;\n    }\n\n    if (this.#material.transparent !== isTransparent) {\n      this.#material.transparent = isTransparent;\n      this.#material.depthWrite = !isTransparent;\n      this.#material.needsUpdate = true;\n    }\n\n    if (this.#shaftMesh.count === 0 && arrows.length > 0) {\n      // needed to make colors work: https://discourse.threejs.org/t/instancedmesh-color-doesnt-work-when-initial-count-is-0/41355\n      this.#material.needsUpdate = true;\n    }\n    this.#shaftMesh.count = arrows.length;\n    this.#headMesh.count = arrows.length;\n    this.#shaftOutlineGeometry.instanceCount = arrows.length;\n    this.#headOutlineGeometry.instanceCount = arrows.length;\n    this.#shaftMesh.instanceMatrix.needsUpdate = true;\n    this.#headMesh.instanceMatrix.needsUpdate = true;\n    this.#instanceOpacity.needsUpdate = true;\n\n    // may be null if we were initialized with count 0 and still have 0 primitives\n    if (this.#shaftMesh.instanceColor) {\n      this.#shaftMesh.instanceColor.needsUpdate = true;\n    }\n    if (this.#headMesh.instanceColor) {\n      this.#headMesh.instanceColor.needsUpdate = true;\n    }\n  }\n\n  public override dispose(): void {\n    this.#material.dispose();\n    this.#shaftMesh.dispose();\n    this.#headMesh.dispose();\n    this.#shaftGeometry.dispose();\n    this.#headGeometry.dispose();\n    this.#shaftOutlineGeometry.dispose();\n    this.#headOutlineGeometry.dispose();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this.#updateMesh(entity.arrows);\n\n      this.#headOutline.visible = settings.showOutlines ?? true;\n      this.#shaftOutline.visible = settings.showOutlines ?? true;\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nfunction createShaftGeometry() {\n  const shaftGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, 16);\n  // Adjust cylinder so ends are centered on (0,0,0) and (1,0,0)\n  shaftGeometry.rotateZ(-Math.PI / 2).translate(0.5, 0, 0);\n  shaftGeometry.computeBoundingSphere();\n  return shaftGeometry;\n}\n\nfunction createShaftEdgesGeometry(geometry: THREE.CylinderGeometry) {\n  const shaftEdgesGeometry = new THREE.EdgesGeometry(geometry, 40);\n  shaftEdgesGeometry.computeBoundingSphere();\n  return shaftEdgesGeometry;\n}\n\nfunction createHeadGeometry() {\n  const headGeometry = new THREE.ConeGeometry(0.5, 1, 16);\n  // Adjust cone so base is centered on (0,0,0) and tip is at (1,0,0)\n  headGeometry.rotateZ(-Math.PI / 2).translate(0.5, 0, 0);\n  headGeometry.computeBoundingSphere();\n  return headGeometry;\n}\n\nfunction createHeadEdgesGeometry(geometry: THREE.ConeGeometry) {\n  const headEdgesGeometry = new THREE.EdgesGeometry(geometry, 40);\n  headEdgesGeometry.computeBoundingSphere();\n  return headEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { CubePrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../../settings\";\nimport { MeshStandardMaterialWithInstanceOpacity } from \"../materials/MeshStandardMaterialWithInstanceOpacity\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec3_2 = new THREE.Vector3();\nconst tempMat4 = new THREE.Matrix4();\nconst tempQuat = new THREE.Quaternion();\nconst tempRgba = makeRgba();\n\nexport class RenderableCubes extends RenderablePrimitive {\n  // Each RenderableCubes needs its own geometry because we attach additional custom attributes to it.\n  #mesh: THREE.InstancedMesh<THREE.BoxGeometry, MeshStandardMaterialWithInstanceOpacity>;\n  #instanceOpacity: THREE.InstancedBufferAttribute;\n  #material = new MeshStandardMaterialWithInstanceOpacity({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n  });\n\n  /**\n   * The initial count passed to `mesh`'s constructor, i.e. the maximum number of instances it can\n   * render before we need to create a new mesh object\n   */\n  #maxInstances: number;\n\n  #outlineGeometry: THREE.InstancedBufferGeometry;\n  #outline: THREE.LineSegments;\n  #geometry: THREE.BoxGeometry;\n  // actual shared geometry across instances, only copy -- do not modify\n  // stored for ease of use\n  #sharedEdgesGeometry: THREE.EdgesGeometry<THREE.BufferGeometry>;\n\n  public constructor(renderer: IRenderer) {\n    super(\"\", renderer);\n\n    // Cube mesh\n    this.#geometry = renderer.sharedGeometry\n      .getGeometry(`${this.constructor.name}-cube`, createCubeGeometry)\n      .clone() as THREE.BoxGeometry;\n\n    this.#maxInstances = 16;\n    this.#mesh = new THREE.InstancedMesh(this.#geometry, this.#material, this.#maxInstances);\n    this.#instanceOpacity = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.#maxInstances),\n      1,\n    );\n    this.#geometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n    this.#mesh.count = 0;\n    this.add(this.#mesh);\n\n    // Cube outline\n    this.#sharedEdgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-edges`,\n      () => createEdgesGeometry(this.#geometry),\n    );\n    this.#outlineGeometry = new THREE.InstancedBufferGeometry().copy(this.#sharedEdgesGeometry);\n    this.#outlineGeometry.setAttribute(\"instanceMatrix\", this.#mesh.instanceMatrix);\n    this.#outline = new THREE.LineSegments(\n      this.#outlineGeometry,\n      renderer.instancedOutlineMaterial,\n    );\n    this.#outline.frustumCulled = false;\n    this.#outline.userData.picking = false;\n    this.add(this.#outline);\n  }\n\n  #ensureCapacity(numCubes: number) {\n    if (numCubes > this.#maxInstances) {\n      const newCapacity = Math.trunc(numCubes * 1.5) + 16;\n      this.#maxInstances = newCapacity;\n\n      this.#mesh.removeFromParent();\n      this.#mesh.dispose();\n      this.#mesh = new THREE.InstancedMesh(this.#geometry, this.#material, this.#maxInstances);\n      this.#instanceOpacity = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.#maxInstances),\n        1,\n      );\n      this.#geometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n      this.add(this.#mesh);\n\n      // THREE.js doesn't correctly recompute the new max instance count when dynamically\n      // reassigning the attribute of InstancedBufferGeometry, so we just create a new geometry\n      this.#outlineGeometry.dispose();\n      this.#outlineGeometry = new THREE.InstancedBufferGeometry().copy(this.#sharedEdgesGeometry);\n      this.#outlineGeometry.instanceCount = newCapacity;\n      this.#outlineGeometry.setAttribute(\"instanceMatrix\", this.#mesh.instanceMatrix);\n      this.#outline.geometry = this.#outlineGeometry;\n    }\n  }\n\n  #updateMesh(cubes: CubePrimitive[]) {\n    let isTransparent = false;\n\n    this.#ensureCapacity(cubes.length);\n\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const cube of cubes) {\n      const color = overrideColor ?? cube.color;\n      if (color.a < 1) {\n        isTransparent = true;\n      }\n      this.#mesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.#instanceOpacity.setX(i, color.a);\n      this.#mesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3.set(cube.pose.position.x, cube.pose.position.y, cube.pose.position.z),\n          tempQuat.set(\n            cube.pose.orientation.x,\n            cube.pose.orientation.y,\n            cube.pose.orientation.z,\n            cube.pose.orientation.w,\n          ),\n          tempVec3_2.set(cube.size.x, cube.size.y, cube.size.z),\n        ),\n      );\n      i++;\n    }\n\n    if (this.#material.transparent !== isTransparent) {\n      this.#material.transparent = isTransparent;\n      this.#material.depthWrite = !isTransparent;\n      this.#material.needsUpdate = true;\n    }\n\n    if (this.#mesh.count === 0 && cubes.length > 0) {\n      // needed to make colors work: https://discourse.threejs.org/t/instancedmesh-color-doesnt-work-when-initial-count-is-0/41355\n      this.#material.needsUpdate = true;\n    }\n    this.#mesh.count = cubes.length;\n    this.#outlineGeometry.instanceCount = cubes.length;\n    this.#mesh.instanceMatrix.needsUpdate = true;\n    this.#instanceOpacity.needsUpdate = true;\n\n    // may be null if we were initialized with count 0 and still have 0 primitives\n    if (this.#mesh.instanceColor) {\n      this.#mesh.instanceColor.needsUpdate = true;\n    }\n  }\n\n  public override dispose(): void {\n    this.#mesh.dispose();\n    this.#geometry.dispose();\n    this.#material.dispose();\n    this.#outlineGeometry.dispose();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this.#updateMesh(entity.cubes);\n      this.#outline.visible = settings.showOutlines ?? true;\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nfunction createCubeGeometry(): THREE.BoxGeometry {\n  const cubeGeometry = new THREE.BoxGeometry(1, 1, 1);\n  cubeGeometry.computeBoundingSphere();\n  return cubeGeometry;\n}\n\nfunction createEdgesGeometry(cubeGeometry: THREE.BoxGeometry): THREE.EdgesGeometry {\n  const cubeEdgesGeometry = new THREE.EdgesGeometry(cubeGeometry, 40);\n  cubeEdgesGeometry.computeBoundingSphere();\n  return cubeEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { CylinderPrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { DARK_OUTLINE, LIGHT_OUTLINE, makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../../settings\";\nimport { MeshStandardMaterialWithInstanceOpacity } from \"../materials/MeshStandardMaterialWithInstanceOpacity\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec3_2 = new THREE.Vector3();\nconst tempMat4 = new THREE.Matrix4();\nconst tempQuat = new THREE.Quaternion();\nconst tempRgba = makeRgba();\n\nexport class RenderableCylinders extends RenderablePrimitive {\n  // Each RenderableCylinders needs its own geometry because we attach additional custom attributes to it.\n  #mesh: THREE.InstancedMesh<THREE.CylinderGeometry, MeshStandardMaterialWithInstanceOpacity>;\n  #geometry: THREE.CylinderGeometry;\n  // actual shared geometry across instances, only copy -- do not modify\n  // stored for ease of use\n  #sharedEdgesGeometry: THREE.EdgesGeometry<THREE.BufferGeometry>;\n  #instanceOpacity: THREE.InstancedBufferAttribute;\n  #instanceTopScale: THREE.InstancedBufferAttribute;\n  #instanceBottomScale: THREE.InstancedBufferAttribute;\n  #outlineMaterial = new CylinderOutlineMaterial();\n  #material = new CylinderMaterial();\n  #pickingMaterial = new CylinderPickingMaterial();\n\n  /**\n   * The initial count passed to `mesh`'s constructor, i.e. the maximum number of instances it can\n   * render before we need to create a new mesh object\n   */\n  #maxInstances: number;\n\n  #outlineGeometry: THREE.InstancedBufferGeometry;\n  #outline: THREE.LineSegments;\n\n  public constructor(renderer: IRenderer) {\n    super(\"\", renderer);\n\n    this.#geometry = renderer.sharedGeometry\n      .getGeometry(`${this.constructor.name}-cylinder`, createGeometry)\n      .clone() as THREE.CylinderGeometry;\n    this.#maxInstances = 16;\n    this.#mesh = new THREE.InstancedMesh(this.#geometry, this.#material, this.#maxInstances);\n    this.#mesh.userData.pickingMaterial = this.#pickingMaterial;\n    this.#instanceOpacity = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.#maxInstances),\n      1,\n    );\n    this.#instanceBottomScale = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.#maxInstances),\n      1,\n    );\n    this.#instanceTopScale = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.#maxInstances),\n      1,\n    );\n    this.#geometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n    this.#geometry.setAttribute(\"instanceBottomScale\", this.#instanceBottomScale);\n    this.#geometry.setAttribute(\"instanceTopScale\", this.#instanceTopScale);\n    this.#mesh.count = 0;\n    this.add(this.#mesh);\n\n    this.#sharedEdgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-edges`,\n      () => createEdgesGeometry(this.#geometry),\n    );\n    this.#outlineGeometry = new THREE.InstancedBufferGeometry().copy(this.#sharedEdgesGeometry);\n    this.#outlineGeometry.setAttribute(\"instanceMatrix\", this.#mesh.instanceMatrix);\n    this.#outlineGeometry.setAttribute(\"instanceBottomScale\", this.#instanceBottomScale);\n    this.#outlineGeometry.setAttribute(\"instanceTopScale\", this.#instanceTopScale);\n    this.#outline = new THREE.LineSegments(this.#outlineGeometry, this.#outlineMaterial);\n    this.#outline.frustumCulled = false;\n    this.#outline.userData.picking = false;\n    this.add(this.#outline);\n  }\n\n  public override setColorScheme(colorScheme: \"dark\" | \"light\"): void {\n    this.#outlineMaterial.color.copy(colorScheme === \"dark\" ? DARK_OUTLINE : LIGHT_OUTLINE);\n    this.#outlineMaterial.needsUpdate = true;\n  }\n\n  #ensureCapacity(numCubes: number) {\n    if (numCubes > this.#maxInstances) {\n      const newCapacity = Math.trunc(numCubes * 1.5) + 16;\n      this.#maxInstances = newCapacity;\n\n      this.#instanceOpacity = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.#maxInstances),\n        1,\n      );\n      this.#instanceBottomScale = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.#maxInstances),\n        1,\n      );\n      this.#instanceTopScale = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.#maxInstances),\n        1,\n      );\n      this.#geometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n      this.#geometry.setAttribute(\"instanceBottomScale\", this.#instanceBottomScale);\n      this.#geometry.setAttribute(\"instanceTopScale\", this.#instanceTopScale);\n\n      this.#mesh.removeFromParent();\n      this.#mesh.dispose();\n      this.#mesh = new THREE.InstancedMesh(this.#geometry, this.#material, this.#maxInstances);\n      this.#mesh.userData.pickingMaterial = this.#pickingMaterial;\n      this.add(this.#mesh);\n\n      // THREE.js doesn't correctly recompute the new max instance count when dynamically\n      // reassigning the attribute of InstancedBufferGeometry, so we just create a new geometry\n      this.#outlineGeometry.dispose();\n      this.#outlineGeometry = new THREE.InstancedBufferGeometry().copy(this.#sharedEdgesGeometry);\n      this.#outlineGeometry.instanceCount = newCapacity;\n      this.#outlineGeometry.setAttribute(\"instanceMatrix\", this.#mesh.instanceMatrix);\n      this.#outlineGeometry.setAttribute(\"instanceBottomScale\", this.#instanceBottomScale);\n      this.#outlineGeometry.setAttribute(\"instanceTopScale\", this.#instanceTopScale);\n      this.#outline.geometry = this.#outlineGeometry;\n    }\n  }\n\n  #updateMesh(cylinders: CylinderPrimitive[]) {\n    let isTransparent = false;\n\n    this.#ensureCapacity(cylinders.length);\n\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const cylinder of cylinders) {\n      const color = overrideColor ?? cylinder.color;\n      if (color.a < 1) {\n        isTransparent = true;\n      }\n      this.#mesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.#instanceOpacity.setX(i, color.a);\n      this.#instanceBottomScale.setX(i, cylinder.bottom_scale);\n      this.#instanceTopScale.setX(i, cylinder.top_scale);\n      this.#mesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3.set(\n            cylinder.pose.position.x,\n            cylinder.pose.position.y,\n            cylinder.pose.position.z,\n          ),\n          tempQuat.set(\n            cylinder.pose.orientation.x,\n            cylinder.pose.orientation.y,\n            cylinder.pose.orientation.z,\n            cylinder.pose.orientation.w,\n          ),\n          tempVec3_2.set(cylinder.size.x, cylinder.size.y, cylinder.size.z),\n        ),\n      );\n      i++;\n    }\n\n    if (this.#material.transparent !== isTransparent) {\n      this.#material.transparent = isTransparent;\n      this.#material.depthWrite = !isTransparent;\n      this.#material.needsUpdate = true;\n    }\n\n    if (this.#mesh.count === 0 && cylinders.length > 0) {\n      // needed to make colors work: https://discourse.threejs.org/t/instancedmesh-color-doesnt-work-when-initial-count-is-0/41355\n      this.#material.needsUpdate = true;\n    }\n    this.#mesh.count = cylinders.length;\n    this.#outlineGeometry.instanceCount = cylinders.length;\n    this.#mesh.instanceMatrix.needsUpdate = true;\n    this.#instanceOpacity.needsUpdate = true;\n    this.#instanceBottomScale.needsUpdate = true;\n    this.#instanceTopScale.needsUpdate = true;\n\n    // may be null if we were initialized with count 0 and still have 0 primitives\n    if (this.#mesh.instanceColor) {\n      this.#mesh.instanceColor.needsUpdate = true;\n    }\n  }\n\n  public override dispose(): void {\n    this.#mesh.dispose();\n    this.#geometry.dispose();\n    this.#material.dispose();\n    this.#pickingMaterial.dispose();\n    this.#outlineMaterial.dispose();\n    this.#outlineGeometry.dispose();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this.#updateMesh(entity.cylinders);\n      this.#outline.visible = settings.showOutlines ?? true;\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\nfunction createGeometry() {\n  const cylinderGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, 16);\n  cylinderGeometry.rotateX(Math.PI / 2);\n  cylinderGeometry.computeBoundingSphere();\n  return cylinderGeometry;\n}\n\nfunction createEdgesGeometry(geometry: THREE.CylinderGeometry) {\n  const cylinderEdgesGeometry = new THREE.EdgesGeometry(geometry, 40);\n  cylinderEdgesGeometry.computeBoundingSphere();\n  return cylinderEdgesGeometry;\n}\n\n/** Modify the given vertex shader so it transforms positions to support bottom_scale and top_scale. */\nfunction makeCylinderVertexShader(source: string): string {\n  return source\n    .replace(\n      \"#include <color_pars_vertex>\",\n      `\n  #include <color_pars_vertex>\n  attribute float instanceBottomScale, instanceTopScale;\n  `,\n    )\n    .replace(\n      \"#include <begin_vertex>\",\n      `\n  #include <begin_vertex>\n  transformed.xy *= mix(instanceBottomScale, instanceTopScale, transformed.z + 0.5);\n  `,\n    );\n}\n\nclass CylinderMaterial extends MeshStandardMaterialWithInstanceOpacity {\n  public constructor() {\n    super({ metalness: 0, roughness: 1, dithering: true });\n  }\n\n  public override onBeforeCompile(shader: THREE.Shader, renderer: THREE.WebGLRenderer): void {\n    super.onBeforeCompile(shader, renderer);\n    shader.vertexShader = makeCylinderVertexShader(shader.vertexShader);\n  }\n}\n\nclass CylinderOutlineMaterial extends THREE.LineBasicMaterial {\n  public constructor() {\n    super();\n    this.defines ??= {};\n    this.defines.USE_INSTANCING = true;\n  }\n\n  public override onBeforeCompile(shader: THREE.Shader, renderer: THREE.WebGLRenderer): void {\n    super.onBeforeCompile(shader, renderer);\n    shader.vertexShader = makeCylinderVertexShader(shader.vertexShader);\n  }\n}\n\nclass CylinderPickingMaterial extends THREE.ShaderMaterial {\n  public constructor() {\n    super({\n      vertexShader: makeCylinderVertexShader(THREE.ShaderChunk.meshbasic_vert),\n      fragmentShader: `\n          uniform vec4 objectId;\n          void main() {\n            gl_FragColor = objectId;\n          }\n        `,\n      uniforms: {\n        objectId: { value: [NaN, NaN, NaN, NaN] },\n      },\n    });\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\nimport { assert } from \"ts-essentials\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { LinePrimitive, LineType, SceneEntity } from \"@foxglove/schemas\";\nimport { LineMaterialWithAlphaVertex } from \"@foxglove/studio-base/panels/ThreeDeeRender/LineMaterialWithAlphaVertex\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { makeRgba, rgbToThreeColor, SRGBToLinear, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../../settings\";\n\nconst tempRgba = makeRgba();\n\nexport class RenderableLines extends RenderablePrimitive {\n  #lines: LinePrimitiveRenderable[] = [];\n  public constructor(renderer: IRenderer) {\n    super(\"\", renderer);\n  }\n\n  #updateLines(lines: LinePrimitive[]) {\n    this.clear();\n\n    let idx = 0;\n    for (idx; idx < lines.length; idx++) {\n      const primitive = lines[idx]!;\n      if (primitive.points.length === 0) {\n        continue;\n      }\n      let lineRenderable = this.#lines[idx];\n      if (lineRenderable == undefined) {\n        lineRenderable = new LinePrimitiveRenderable(primitive, this.renderer.input.canvasSize);\n        this.#lines.push(lineRenderable);\n      }\n      lineRenderable.setPrimitive(primitive);\n      lineRenderable.setSettings(this.userData.settings);\n\n      lineRenderable.update();\n\n      lineRenderable.position.set(\n        primitive.pose.position.x,\n        primitive.pose.position.y,\n        primitive.pose.position.z,\n      );\n      lineRenderable.quaternion.set(\n        primitive.pose.orientation.x,\n        primitive.pose.orientation.y,\n        primitive.pose.orientation.z,\n        primitive.pose.orientation.w,\n      );\n      this.add(lineRenderable);\n    }\n  }\n\n  public override dispose(): void {\n    for (const line of this.#lines) {\n      line.dispose();\n      line.removeFromParent();\n    }\n    this.clear();\n    this.#lines.length = 0;\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this.#updateLines(entity.lines);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nclass LinePrimitiveRenderable extends THREE.Object3D {\n  #geometry: LineSegmentsGeometry | LineGeometry | undefined;\n  #positionBuffer: Float32Array | undefined;\n  #colorBuffer: Float32Array | undefined;\n\n  #material: LineMaterialWithAlphaVertex;\n  #pickingMaterial: PickingMaterial;\n  #transparent: boolean = true;\n  #line: LineSegments2 | Line2 | undefined;\n\n  #primitiveChanged: boolean = true;\n  #primitive?: LinePrimitive;\n\n  // Settings\n  #colorChanged: boolean = true;\n  #color: string | undefined;\n\n  #lineType: LineType | undefined;\n\n  public constructor(primitive: LinePrimitive, canvasSize: THREE.Vector2) {\n    super();\n\n    this.#material = new LineMaterialWithAlphaVertex({\n      worldUnits: !primitive.scale_invariant,\n      linewidth: primitive.thickness,\n      transparent: this.#transparent,\n      depthWrite: !this.#transparent,\n      resolution: canvasSize.clone(),\n    });\n    this.#material.linewidth = primitive.thickness; // Fix for THREE.js type annotations\n\n    this.#pickingMaterial = new PickingMaterial();\n    this.#pickingMaterial.resolution.set(canvasSize.x, canvasSize.y);\n    this.#pickingMaterial.linewidth = primitive.thickness;\n    this.#pickingMaterial.worldUnits = !primitive.scale_invariant;\n    this.#pickingMaterial.needsUpdate = true;\n  }\n\n  public setSettings(settings: LayerSettingsEntity): void {\n    this.#colorChanged ||= this.#color !== settings.color;\n    this.#color = settings.color;\n  }\n\n  public setPrimitive(primitive: LinePrimitive): void {\n    this.#primitiveChanged ||= this.#primitive !== primitive;\n    this.#primitive = primitive;\n  }\n\n  public update(): void {\n    if (this.#primitive == undefined) {\n      this.visible = false;\n      return;\n    }\n    this.visible = true;\n    const isLoop = this.#primitive.type === LineType.LINE_LOOP;\n    const isSegments = this.#primitive.type === LineType.LINE_LIST;\n    const useIndices = this.#primitive.indices.length > 0;\n\n    const numVertices =\n      (useIndices ? this.#primitive.indices.length : this.#primitive.points.length) +\n      (isLoop ? 1 : 0);\n    const necessaryPositionBufferSize = numVertices * 3;\n\n    if (this.#primitiveChanged) {\n      const geometryNeedsRecreated =\n        this.#geometry == undefined ||\n        this.#lineType !== this.#primitive.type ||\n        !this.#positionBuffer ||\n        this.#positionBuffer.length < necessaryPositionBufferSize;\n      if (geometryNeedsRecreated) {\n        if (this.#geometry != undefined) {\n          this.#geometry.dispose();\n          this.#positionBuffer = undefined;\n          this.#colorBuffer = undefined;\n        }\n        if (this.#line != undefined) {\n          this.#line.removeFromParent();\n        }\n\n        this.#lineType = this.#primitive.type;\n        switch (this.#primitive.type) {\n          case LineType.LINE_STRIP:\n          case LineType.LINE_LOOP: {\n            const lineGeometry = new LineGeometry(); // separate variable to work around typescript refinement\n            this.#geometry = lineGeometry;\n            this.#positionBuffer = new Float32Array(necessaryPositionBufferSize);\n            this.#line = new Line2(lineGeometry, this.#material);\n            break;\n          }\n          case LineType.LINE_LIST: {\n            this.#geometry = new LineSegmentsGeometry();\n            this.#positionBuffer = new Float32Array(necessaryPositionBufferSize);\n            this.#line = new LineSegments2(this.#geometry, this.#material);\n            break;\n          }\n        }\n        this.#line.userData.pickingMaterial = this.#pickingMaterial;\n        this.userData.pickingMaterial = this.#pickingMaterial;\n        this.add(this.#line);\n      }\n\n      assert(this.#positionBuffer, \"Position buffer must be initialized\");\n      assert(this.#geometry, \"Geometry must be initialized\");\n\n      // Set an explicit instance count, because three.js ignores attribute offsets when\n      // automatically computing the instance count (and results differ across browsers because they\n      // depend on the key iteration order, since three.js derives the count from the first\n      // instanced interleaved attribute it sees).\n      // this represent the number of _lines_ to render\n      this.#geometry.instanceCount = isSegments\n        ? numVertices >>> 1\n        : isLoop\n        ? numVertices\n        : Math.max(numVertices - 1, 0);\n\n      if (useIndices) {\n        serializePositionsWithIndices(this.#positionBuffer, this.#primitive);\n      } else {\n        serializePositions(this.#positionBuffer, this.#primitive);\n      }\n\n      // setPosition requires the position array to be >= 6 length or else it will error\n      // we skip primitives with empty points before calling this function\n      this.#geometry.setPositions(this.#positionBuffer);\n    }\n\n    if (this.#colorChanged || this.#primitiveChanged) {\n      const singleColor = this.#color\n        ? stringToRgba(tempRgba, this.#color)\n        : this.#primitive.colors.length === 0\n        ? this.#primitive.color\n        : undefined;\n\n      if (singleColor == undefined) {\n        assert(this.#geometry, \"Line Group geometry must exist\");\n        this.#material.color.setRGB(1, 1, 1);\n\n        const necessaryColorBufferSize = numVertices * 4;\n\n        if (this.#colorBuffer == undefined || this.#colorBuffer.length < necessaryColorBufferSize) {\n          this.#colorBuffer = new Float32Array(necessaryColorBufferSize);\n        }\n        this.#material.vertexColors = true;\n        (this.#material.color as THREE.Color).setRGB(1, 1, 1); // any non-white color will tint the vertex colors\n        this.#material.opacity = 1;\n        this.#material.uniforms.opacity!.value = 1;\n        if (useIndices) {\n          serializeColorsWithIndices(this.#colorBuffer, this.#primitive);\n        } else {\n          serializeColors(this.#colorBuffer, this.#primitive);\n        }\n        const instanceColorBuffer = new THREE.InstancedInterleavedBuffer(\n          this.#colorBuffer,\n          isSegments ? 8 : 4,\n          1,\n        );\n        this.#geometry.setAttribute(\n          \"instanceColorStart\",\n          new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 0),\n        );\n        this.#geometry.setAttribute(\n          \"instanceColorEnd\",\n          new THREE.InterleavedBufferAttribute(instanceColorBuffer, 4, 4),\n        );\n      } else {\n        this.#material.vertexColors = false;\n        const color = this.#material.color as THREE.Color;\n        rgbToThreeColor(color, singleColor);\n        // material.opacity = singleColor.a; // does not work for some reason\n        this.#material.uniforms.opacity!.value = singleColor.a;\n      }\n\n      this.#updateMaterial();\n    }\n\n    this.#primitiveChanged = false;\n    this.#colorChanged = false;\n  }\n\n  #updateMaterial() {\n    if (this.#primitive == undefined) {\n      return;\n    }\n    this.#material.lineWidth = this.#primitive.thickness;\n    this.#material.transparent = this.#transparent;\n    this.#material.worldUnits = !this.#primitive.scale_invariant;\n    this.#material.needsUpdate = true;\n\n    this.#pickingMaterial.lineWidth = this.#primitive.thickness;\n    this.#pickingMaterial.worldUnits = !this.#primitive.scale_invariant;\n    this.#pickingMaterial.uniformsNeedUpdate = true;\n    this.#pickingMaterial.needsUpdate = true;\n  }\n\n  public dispose(): void {\n    this.#line?.removeFromParent();\n    this.#geometry?.dispose();\n    this.#material.dispose();\n    this.#pickingMaterial.dispose();\n  }\n}\n\nfunction serializePositions(positionsOut: Float32Array, primitive: LinePrimitive): void {\n  let i = 0;\n  assert(\n    positionsOut.length >= primitive.points.length * 3,\n    `positionsOut must have a length (${positionsOut.length})  >= to primitive.points.length (${primitive.points.length}) * 3`,\n  );\n  for (const { x, y, z } of primitive.points) {\n    positionsOut[i++] = x;\n    positionsOut[i++] = y;\n    positionsOut[i++] = z;\n  }\n\n  const isLoop = primitive.type === LineType.LINE_LOOP;\n  if (isLoop && positionsOut.length > 3) {\n    positionsOut.copyWithin(i, 0, 3);\n  }\n}\n\nfunction serializePositionsWithIndices(positionsOut: Float32Array, primitive: LinePrimitive): void {\n  const indices = primitive.indices;\n  assert(\n    positionsOut.length >= primitive.indices.length * 3,\n    `positionsOut must have a length (${positionsOut.length})  >= to primitive.indices.length (${primitive.indices.length}) * 3`,\n  );\n  let i = 0;\n  for (const idx of indices) {\n    const { x, y, z } = primitive.points[idx]!;\n    positionsOut[i++] = x;\n    positionsOut[i++] = y;\n    positionsOut[i++] = z;\n  }\n\n  const isLoop = primitive.type === LineType.LINE_LOOP;\n  if (isLoop && positionsOut.length > 3) {\n    positionsOut.copyWithin(i, 0, 3);\n  }\n}\n\nfunction serializeColors(colorsOut: Float32Array, primitive: LinePrimitive): void {\n  assert(\n    colorsOut.length >= primitive.colors.length * 4,\n    `colorsOut buffer must have a length (${colorsOut.length}) >= to the primitive.colors.length (${primitive.colors.length}) * 4`,\n  );\n  assert(primitive.colors.length > 0, \"invariant: expected not to be using vertex colors\");\n  let i = 0;\n  for (const { r, g, b, a } of primitive.colors) {\n    colorsOut[i++] = SRGBToLinear(r);\n    colorsOut[i++] = SRGBToLinear(g);\n    colorsOut[i++] = SRGBToLinear(b);\n    colorsOut[i++] = a;\n  }\n\n  const isLoop = primitive.type === LineType.LINE_LOOP;\n  if (isLoop && colorsOut.length > 4) {\n    colorsOut.copyWithin(i, 0, 4);\n  }\n}\n\nfunction serializeColorsWithIndices(colorsOut: Float32Array, primitive: LinePrimitive): void {\n  const indices = primitive.indices;\n  assert(indices.length > 0, \"Indices must have length\");\n  assert(\n    colorsOut.length >= indices.length * 4,\n    `colorsOut buffer must have a length (${colorsOut.length}) >= to primitive.indices.length (${primitive.indices.length}) * 4`,\n  );\n  assert(primitive.colors.length > 0, \"Invariant: expected not to be using vertex colors\");\n\n  let i = 0;\n  for (const idx of indices) {\n    const { r, g, b, a } = primitive.colors[idx]!;\n    colorsOut[i++] = SRGBToLinear(r);\n    colorsOut[i++] = SRGBToLinear(g);\n    colorsOut[i++] = SRGBToLinear(b);\n    colorsOut[i++] = a;\n  }\n  const isLoop = primitive.type === LineType.LINE_LOOP;\n  if (isLoop && colorsOut.length > 4) {\n    colorsOut.copyWithin(i, 0, 4);\n  }\n}\n\nclass PickingMaterial extends LineMaterialWithAlphaVertex {\n  public constructor() {\n    super({\n      worldUnits: false,\n      vertexColors: false,\n      linewidth: 0,\n      transparent: false,\n    });\n    this.uniforms.objectId = { value: [NaN, NaN, NaN, NaN] };\n  }\n\n  public override onBeforeCompile(shader: THREE.Shader, renderer: THREE.WebGLRenderer): void {\n    super.onBeforeCompile(shader, renderer);\n    shader.fragmentShader = /* glsl */ `\n      uniform vec4 objectId;\n      void main() {\n        gl_FragColor = objectId;\n      }\n    `;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nexport function disposeMaterial(material: THREE.Material): void {\n  if (material instanceof THREE.MeshStandardMaterial) {\n    material.map?.dispose();\n    material.lightMap?.dispose();\n    material.aoMap?.dispose();\n    material.emissiveMap?.dispose();\n    material.bumpMap?.dispose();\n    material.normalMap?.dispose();\n    material.displacementMap?.dispose();\n    material.roughnessMap?.dispose();\n    material.metalnessMap?.dispose();\n    material.alphaMap?.dispose();\n    material.envMap?.dispose();\n  }\n  material.dispose();\n}\n\nexport function disposeMeshesRecursive(object: THREE.Object3D): void {\n  object.traverse((child) => {\n    if (child instanceof THREE.Mesh) {\n      child.geometry.dispose();\n      if (Array.isArray(child.material)) {\n        for (const material of child.material) {\n          if (material instanceof THREE.Material) {\n            disposeMaterial(material);\n          }\n        }\n      } else if (child.material instanceof THREE.Material) {\n        disposeMaterial(child.material);\n      }\n    }\n  });\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { LoadedModel } from \"../ModelCache\";\n\nexport type GltfMesh = THREE.Mesh<\n  THREE.BufferGeometry,\n  THREE.MeshStandardMaterial | THREE.MeshStandardMaterial[]\n>;\n\nexport function removeLights(model: LoadedModel): void {\n  // Remove lights from the model\n  const lights: THREE.Light[] = [];\n  model.traverse((child: THREE.Object3D) => {\n    const maybeLight = child as Partial<THREE.Light>;\n    if (maybeLight.isLight === true) {\n      lights.push(maybeLight as THREE.Light);\n    }\n  });\n  for (const light of lights) {\n    light.dispose();\n    light.removeFromParent();\n  }\n}\n\nexport function replaceMaterials(model: LoadedModel, material: THREE.MeshStandardMaterial): void {\n  model.traverse((child: THREE.Object3D) => {\n    if (!(child instanceof THREE.Mesh)) {\n      return;\n    }\n\n    // Dispose of any allocated textures and the material and swap it with\n    // our own material\n    const meshChild = child as GltfMesh;\n    if (Array.isArray(meshChild.material)) {\n      for (const embeddedMaterial of meshChild.material) {\n        disposeStandardMaterial(embeddedMaterial);\n      }\n    } else {\n      disposeStandardMaterial(meshChild.material);\n    }\n    meshChild.material = material;\n    if (!meshChild.geometry.attributes.normal) {\n      meshChild.geometry.computeVertexNormals();\n    }\n  });\n}\n\n/** Generic MeshStandardMaterial dispose function for materials loaded from an external source */\nfunction disposeStandardMaterial(material: THREE.MeshStandardMaterial): void {\n  material.map?.dispose();\n  material.lightMap?.dispose();\n  material.aoMap?.dispose();\n  material.emissiveMap?.dispose();\n  material.bumpMap?.dispose();\n  material.normalMap?.dispose();\n  material.displacementMap?.dispose();\n  material.roughnessMap?.dispose();\n  material.metalnessMap?.dispose();\n  material.alphaMap?.dispose();\n  material.envMap?.dispose();\n  material.dispose();\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { crc32 } from \"@foxglove/crc\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { ModelPrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { EDGE_LINE_SEGMENTS_NAME, LoadedModel } from \"../../ModelCache\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { disposeMeshesRecursive } from \"../../dispose\";\nimport { LayerSettingsEntity } from \"../../settings\";\nimport { removeLights, replaceMaterials } from \"../models\";\n\nconst tempRgba = makeRgba();\n\nconst MODEL_FETCH_FAILED = \"MODEL_FETCH_FAILED\";\n\ntype RenderableModel = {\n  /** Material used to override the model's colors when embedded_materials is false */\n  material?: THREE.MeshStandardMaterial;\n  /** Model wrapped in a Group to allow setting the group's position/orientation/scale without affecting the model */\n  model: THREE.Group;\n  /** Reference to the original model before modification so it can be re-cloned if necessary. */\n  cachedModel: LoadedModel;\n  /** Reference to the original message for checking whether this renderable can be reused */\n  primitive: ModelPrimitive;\n};\n\nfunction byteArraysEqual(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport class RenderableModels extends RenderablePrimitive {\n  /** Renderables loaded from embedded data */\n  #renderablesByDataCrc = new Map<number, RenderableModel[]>();\n  /** Renderables loaded from URLs */\n  #renderablesByUrl = new Map<string, RenderableModel[]>();\n  #updateCount = 0;\n\n  public constructor(renderer: IRenderer) {\n    super(\"\", renderer);\n  }\n\n  /**\n   * Reuse a renderable from `prevRenderables` if a matching one is found using `primitivesMatch()`, otherwise load a new one.\n   * @param getURL Called to retrieve the URL that should be used to load the primitive\n   * @param revokeURL Called with the URL returned by getURL after loading is complete\n   */\n  async #createOrUpdateRenderable(\n    primitive: ModelPrimitive,\n    prevRenderables: RenderableModel[] | undefined,\n    primitivesMatch: (a: ModelPrimitive, b: ModelPrimitive) => boolean,\n    getURL: (_: ModelPrimitive) => string,\n    revokeURL: (_: string) => void,\n  ): Promise<RenderableModel | undefined> {\n    let renderable: RenderableModel | undefined;\n    if (prevRenderables) {\n      const idx = prevRenderables.findIndex((prev) => primitivesMatch(prev.primitive, primitive));\n      if (idx >= 0) {\n        renderable = prevRenderables.splice(idx, 1)[0]!;\n      }\n    }\n    if (renderable) {\n      this.#updateModel(renderable, primitive);\n      return renderable;\n    }\n\n    const url = getURL(primitive);\n    try {\n      // Load the model if necessary\n      const cachedModel = await this.#loadCachedModel(url, {\n        overrideMediaType: primitive.media_type.length > 0 ? primitive.media_type : undefined,\n      });\n      if (cachedModel) {\n        renderable = { model: cloneAndPrepareModel(cachedModel), cachedModel, primitive };\n        this.#updateModel(renderable, primitive);\n      }\n    } finally {\n      revokeURL(url);\n    }\n    return renderable;\n  }\n\n  #updateModels(models: ModelPrimitive[]) {\n    this.clear();\n\n    const originalUpdateCount = ++this.#updateCount;\n\n    const prevRenderablesByUrl = this.#renderablesByUrl;\n    this.#renderablesByUrl = new Map();\n\n    const prevRenderablesByDataCrc = this.#renderablesByDataCrc;\n    this.#renderablesByDataCrc = new Map();\n\n    Promise.all(\n      models.map(async (primitive) => {\n        let prevRenderables: RenderableModel[] | undefined;\n        let newRenderables: RenderableModel[] | undefined;\n        let renderable: RenderableModel | undefined;\n        if (primitive.url.length === 0) {\n          const dataCrc = crc32(primitive.data);\n          prevRenderables = prevRenderablesByDataCrc.get(dataCrc);\n          newRenderables = this.#renderablesByDataCrc.get(dataCrc);\n          if (!newRenderables) {\n            newRenderables = [];\n            this.#renderablesByDataCrc.set(dataCrc, newRenderables);\n          }\n\n          try {\n            renderable = await this.#createOrUpdateRenderable(\n              primitive,\n              prevRenderables,\n              (model1, model2) =>\n                model1.media_type === model2.media_type &&\n                byteArraysEqual(model1.data, model2.data),\n              (model) => URL.createObjectURL(new Blob([model.data], { type: model.media_type })),\n              (url) => URL.revokeObjectURL(url),\n            );\n          } catch (err) {\n            this.renderer.settings.errors.add(\n              this.userData.settingsPath,\n              MODEL_FETCH_FAILED,\n              `Unhandled error loading model from ${primitive.data.byteLength}-byte data: ${err.message}`,\n            );\n          }\n        } else {\n          prevRenderables = prevRenderablesByUrl.get(primitive.url);\n          newRenderables = this.#renderablesByUrl.get(primitive.url);\n          if (!newRenderables) {\n            newRenderables = [];\n            this.#renderablesByUrl.set(primitive.url, newRenderables);\n          }\n\n          try {\n            renderable = await this.#createOrUpdateRenderable(\n              primitive,\n              prevRenderables,\n              (model1, model2) =>\n                model1.url === model2.url && model1.media_type === model2.media_type,\n              (model) => model.url,\n              (_url) => {},\n            );\n          } catch (err) {\n            this.renderer.settings.errors.add(\n              this.userData.settingsPath,\n              MODEL_FETCH_FAILED,\n              `Unhandled error loading model from \"${primitive.url}\": ${err.message}`,\n            );\n          }\n        }\n\n        if (originalUpdateCount !== this.#updateCount) {\n          // another update has come in, bail before doing any mutations\n          return;\n        }\n        if (renderable) {\n          newRenderables.push(renderable);\n          this.add(renderable.model);\n\n          // Render a new frame now that the model is loaded\n          this.renderer.queueAnimationFrame();\n        }\n      }),\n    )\n      .then(() => {\n        // Remove any mesh fetch error message since loading was successful\n        this.renderer.settings.errors.remove(this.userData.settingsPath, MODEL_FETCH_FAILED);\n      })\n      .catch(console.error)\n      .finally(() => {\n        // remove remaining models that are no longer used\n        for (const renderables of prevRenderablesByUrl.values()) {\n          for (const renderable of renderables) {\n            renderable.model.removeFromParent();\n            this.#disposeModel(renderable);\n          }\n        }\n        for (const renderables of prevRenderablesByDataCrc.values()) {\n          for (const renderable of renderables) {\n            renderable.model.removeFromParent();\n            this.#disposeModel(renderable);\n          }\n        }\n        this.#updateOutlineVisibility();\n        this.renderer.queueAnimationFrame();\n      });\n  }\n\n  public override dispose(): void {\n    for (const renderables of this.#renderablesByUrl.values()) {\n      for (const renderable of renderables) {\n        this.#disposeModel(renderable);\n      }\n    }\n    this.#renderablesByUrl.clear();\n\n    for (const renderables of this.#renderablesByDataCrc.values()) {\n      for (const renderable of renderables) {\n        this.#disposeModel(renderable);\n      }\n    }\n    this.#renderablesByDataCrc.clear();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this.#updateModels(entity.models);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n\n  #updateOutlineVisibility(): void {\n    const showOutlines = this.getSettings()?.showOutlines ?? true;\n    this.traverse((lineSegments) => {\n      // Want to avoid picking up the LineSegments from the model itself\n      // only update line segments that we've added with the special name\n      if (\n        lineSegments instanceof THREE.LineSegments &&\n        lineSegments.name === EDGE_LINE_SEGMENTS_NAME\n      ) {\n        lineSegments.visible = showOutlines;\n      }\n    });\n  }\n\n  async #loadCachedModel(\n    url: string,\n    opts: { overrideMediaType?: string },\n  ): Promise<LoadedModel | undefined> {\n    const cachedModel = await this.renderer.modelCache.load(\n      url,\n      { overrideMediaType: opts.overrideMediaType },\n      (err) => {\n        this.renderer.settings.errors.add(\n          this.userData.settingsPath,\n          MODEL_FETCH_FAILED,\n          `Error loading model from \"${url}\": ${err.message}`,\n        );\n      },\n    );\n\n    if (!cachedModel) {\n      if (!this.renderer.settings.errors.hasError(this.userData.settingsPath, MODEL_FETCH_FAILED)) {\n        this.renderer.settings.errors.add(\n          this.userData.settingsPath,\n          MODEL_FETCH_FAILED,\n          `Failed to load model from \"${url}\"`,\n        );\n      }\n      return undefined;\n    }\n\n    return cachedModel;\n  }\n\n  #updateModel(renderable: RenderableModel, primitive: ModelPrimitive) {\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : primitive.override_color\n      ? primitive.color\n      : undefined;\n    if (overrideColor) {\n      if (!renderable.material) {\n        renderable.material = new THREE.MeshStandardMaterial({\n          metalness: 0,\n          roughness: 1,\n          dithering: true,\n        });\n        replaceMaterials(renderable.model, renderable.material);\n      }\n      rgbToThreeColor(renderable.material.color, overrideColor);\n      const transparent = overrideColor.a < 1;\n      renderable.material.opacity = overrideColor.a;\n      renderable.material.transparent = transparent;\n      renderable.material.depthWrite = !transparent;\n      renderable.material.needsUpdate = true;\n    } else if (renderable.material) {\n      // We already discarded the original materials, need to re-clone them from the original model\n      renderable.model = cloneAndPrepareModel(renderable.cachedModel);\n      renderable.material = undefined;\n    }\n\n    renderable.model.scale.set(primitive.scale.x, primitive.scale.y, primitive.scale.z);\n    renderable.model.position.set(\n      primitive.pose.position.x,\n      primitive.pose.position.y,\n      primitive.pose.position.z,\n    );\n    renderable.model.quaternion.set(\n      primitive.pose.orientation.x,\n      primitive.pose.orientation.y,\n      primitive.pose.orientation.z,\n      primitive.pose.orientation.w,\n    );\n  }\n\n  #disposeModel(renderable: RenderableModel) {\n    renderable.material?.dispose();\n    disposeMeshesRecursive(renderable.model);\n    disposeMeshesRecursive(renderable.cachedModel);\n  }\n}\n\nfunction cloneAndPrepareModel(cachedModel: LoadedModel) {\n  const model = cachedModel.clone(true);\n  removeLights(model);\n  return new THREE.Group().add(model);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SpherePrimitive, SceneEntity } from \"@foxglove/schemas\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { makeRgba, rgbToThreeColor, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../../settings\";\nimport { MeshStandardMaterialWithInstanceOpacity } from \"../materials/MeshStandardMaterialWithInstanceOpacity\";\n\nconst tempColor = new THREE.Color();\nconst tempVec3 = new THREE.Vector3();\nconst tempVec3_2 = new THREE.Vector3();\nconst tempMat4 = new THREE.Matrix4();\nconst tempQuat = new THREE.Quaternion();\nconst tempRgba = makeRgba();\n\nexport class RenderableSpheres extends RenderablePrimitive {\n  #geometry: THREE.SphereGeometry;\n  #mesh: THREE.InstancedMesh<THREE.SphereGeometry, MeshStandardMaterialWithInstanceOpacity>;\n  #instanceOpacity: THREE.InstancedBufferAttribute;\n  #material = new MeshStandardMaterialWithInstanceOpacity({\n    metalness: 0,\n    roughness: 1,\n    dithering: true,\n  });\n\n  /**\n   * The initial count passed to `mesh`'s constructor, i.e. the maximum number of instances it can\n   * render before we need to create a new mesh object\n   */\n  #maxInstances: number;\n\n  public constructor(renderer: IRenderer) {\n    super(\"\", renderer);\n\n    // Sphere mesh\n    this.#geometry = renderer.sharedGeometry\n      .getGeometry(this.constructor.name, createGeometry)\n      .clone() as THREE.SphereGeometry;\n    this.#maxInstances = 16;\n    this.#mesh = new THREE.InstancedMesh(this.#geometry, this.#material, this.#maxInstances);\n    this.#instanceOpacity = new THREE.InstancedBufferAttribute(\n      new Float32Array(this.#maxInstances),\n      1,\n    );\n    this.#geometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n    this.#mesh.count = 0;\n    this.add(this.#mesh);\n  }\n\n  #ensureCapacity(numInstances: number) {\n    if (numInstances > this.#maxInstances) {\n      const newCapacity = Math.trunc(numInstances * 1.5) + 16;\n      this.#maxInstances = newCapacity;\n\n      this.#mesh.removeFromParent();\n      this.#mesh.dispose();\n      this.#mesh = new THREE.InstancedMesh(this.#mesh.geometry, this.#material, this.#maxInstances);\n      this.#instanceOpacity = new THREE.InstancedBufferAttribute(\n        new Float32Array(this.#maxInstances),\n        1,\n      );\n      this.#geometry.setAttribute(\"instanceOpacity\", this.#instanceOpacity);\n      this.add(this.#mesh);\n    }\n  }\n\n  #updateMesh(spheres: SpherePrimitive[]) {\n    let isTransparent = false;\n\n    this.#ensureCapacity(spheres.length);\n\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const sphere of spheres) {\n      const color = overrideColor ?? sphere.color;\n      if (color.a < 1) {\n        isTransparent = true;\n      }\n      this.#mesh.setColorAt(i, rgbToThreeColor(tempColor, color));\n      this.#instanceOpacity.setX(i, color.a);\n      this.#mesh.setMatrixAt(\n        i,\n        tempMat4.compose(\n          tempVec3.set(sphere.pose.position.x, sphere.pose.position.y, sphere.pose.position.z),\n          tempQuat.set(\n            sphere.pose.orientation.x,\n            sphere.pose.orientation.y,\n            sphere.pose.orientation.z,\n            sphere.pose.orientation.w,\n          ),\n          tempVec3_2.set(sphere.size.x, sphere.size.y, sphere.size.z),\n        ),\n      );\n      i++;\n    }\n\n    if (this.#material.transparent !== isTransparent) {\n      this.#material.transparent = isTransparent;\n      this.#material.depthWrite = !isTransparent;\n      this.#material.needsUpdate = true;\n    }\n\n    if (this.#mesh.count === 0 && spheres.length > 0) {\n      // needed to make colors work: https://discourse.threejs.org/t/instancedmesh-color-doesnt-work-when-initial-count-is-0/41355\n      this.#material.needsUpdate = true;\n    }\n    this.#mesh.count = spheres.length;\n    this.#mesh.instanceMatrix.needsUpdate = true;\n    this.#instanceOpacity.needsUpdate = true;\n\n    // may be null if we were initialized with count 0 and still have 0 spheres\n    if (this.#mesh.instanceColor) {\n      this.#mesh.instanceColor.needsUpdate = true;\n    }\n  }\n\n  public override dispose(): void {\n    this.#mesh.dispose();\n    this.#geometry.dispose();\n    this.#material.dispose();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this.#updateMesh(entity.spheres);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nfunction createGeometry(): THREE.SphereGeometry {\n  const sphereGeometry = new THREE.SphereGeometry(0.5, 16, 16);\n  sphereGeometry.computeBoundingSphere();\n  return sphereGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SceneEntity, TextPrimitive } from \"@foxglove/schemas\";\nimport { Label, LabelPool } from \"@foxglove/three-text\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { getLuminance, makeRgba, SRGBToLinear, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../../settings\";\n\nconst tempRgba = makeRgba();\n\nexport class RenderableTexts extends RenderablePrimitive {\n  #labelPool: LabelPool;\n  #labels: Label[] = [];\n\n  public constructor(renderer: IRenderer) {\n    super(\"\", renderer);\n\n    this.#labelPool = renderer.labelPool;\n  }\n  #ensureCapacity(newLength: number): void {\n    const oldLength = this.#labels.length;\n    if (newLength > oldLength) {\n      for (let i = oldLength; i < newLength; i++) {\n        const newLabel = this.#labelPool.acquire();\n        this.#labels.push(newLabel);\n        this.add(newLabel);\n      }\n    }\n  }\n\n  #updateTexts(texts: TextPrimitive[]) {\n    this.#ensureCapacity(texts.length);\n    const overrideColor = this.userData.settings.color\n      ? stringToRgba(tempRgba, this.userData.settings.color)\n      : undefined;\n\n    let i = 0;\n    for (const text of texts) {\n      const color = overrideColor ?? text.color;\n      const label = this.#labels[i];\n\n      if (!label) {\n        throw new Error(\"invariant: labels array smaller than requested\");\n      }\n\n      label.setText(text.text);\n      label.setColor(SRGBToLinear(color.r), SRGBToLinear(color.g), SRGBToLinear(color.b));\n\n      const foregroundIsDark = getLuminance(color.r, color.g, color.b) < 0.5;\n      if (foregroundIsDark) {\n        label.setBackgroundColor(1, 1, 1);\n      } else {\n        label.setBackgroundColor(0, 0, 0);\n      }\n      label.setOpacity(color.a);\n      label.setLineHeight(text.font_size);\n      // note that billboard needs to be true for scale_invariant to work\n      label.setBillboard(text.billboard);\n      // attenuation -> size accounts for distance from camera\n      // scale_invariant negates this and should make it the same size always\n      label.setSizeAttenuation(!text.scale_invariant);\n      label.quaternion.set(\n        text.pose.orientation.x,\n        text.pose.orientation.y,\n        text.pose.orientation.z,\n        text.pose.orientation.w,\n      );\n\n      label.position.set(text.pose.position.x, text.pose.position.y, text.pose.position.z);\n      i++;\n    }\n    // need to release the no longer used labels so that they don't linger on the scene\n    if (i < this.#labels.length) {\n      // cuts off remaining labels and loops through  them  release to from labelpool\n      for (const label of this.#labels.splice(i)) {\n        this.#labelPool.release(label);\n      }\n    }\n  }\n\n  public override dispose(): void {\n    for (const label of this.#labels) {\n      this.#labelPool.release(label);\n    }\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this.#updateTexts(entity.texts);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { Point3, SceneEntity, TriangleListPrimitive } from \"@foxglove/schemas\";\nimport { DynamicBufferGeometry } from \"@foxglove/studio-base/panels/ThreeDeeRender/DynamicBufferGeometry\";\n\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { makeRgba, rgbToThreeColor, SRGBToLinear, stringToRgba } from \"../../color\";\nimport { LayerSettingsEntity } from \"../../settings\";\n\nconst tempRgba = makeRgba();\nconst tempColor = new THREE.Color();\nconst missingColor = { r: 0, g: 1.0, b: 0, a: 1.0 };\n\nconst COLOR_LENGTH_ERROR_ID = \"INVALID_COLOR_LENGTH\";\nconst INVALID_POINT_ERROR_ID = \"INVALID_POINT\";\n\ntype TriangleMesh = THREE.Mesh<DynamicBufferGeometry, THREE.MeshStandardMaterial>;\nexport class RenderableTriangles extends RenderablePrimitive {\n  #triangleMeshes: TriangleMesh[] = [];\n  public constructor(renderer: IRenderer) {\n    super(\"\", renderer);\n  }\n\n  #ensureCapacity(triCount: number) {\n    while (triCount > this.#triangleMeshes.length) {\n      this.#triangleMeshes.push(makeTriangleMesh());\n    }\n  }\n  #updateTriangleMeshes(tris: TriangleListPrimitive[]) {\n    this.#ensureCapacity(tris.length);\n    // removes all children so that meshes that are still in the _triangleMesh array\n    // but don't have a new corresponding primitive  won't be rendered\n    this.clear();\n\n    let triMeshIdx = 0;\n    for (const primitive of tris) {\n      const mesh = this.#triangleMeshes[triMeshIdx];\n      if (!mesh) {\n        continue;\n      }\n      const { geometry, material } = mesh;\n      let transparent = false;\n\n      let vertChanged = false;\n      let colorChanged = false;\n\n      // note this sets the drawrange to the count\n      // we set the drawrange again for indexed geometries below\n      geometry.resize(primitive.points.length);\n\n      if (!geometry.attributes.position) {\n        geometry.createAttribute(\"position\", Float32Array, 3);\n      }\n      if (!geometry.attributes.normal) {\n        geometry.createAttribute(\"normal\", Float32Array, 3);\n      }\n      const vertices = geometry.attributes.position!;\n\n      const singleColor = this.userData.settings.color\n        ? stringToRgba(tempRgba, this.userData.settings.color)\n        : primitive.colors.length === 0\n        ? primitive.color\n        : undefined;\n\n      if (!singleColor && !geometry.attributes.color) {\n        geometry.createAttribute(\"color\", Uint8Array, 4, true);\n      }\n      const colors = geometry.attributes.color;\n\n      for (let i = 0; i < primitive.points.length; i++) {\n        const point = primitive.points[i]!;\n        if (!isPointValid(point)) {\n          this.addError(\n            `${this.name}-${INVALID_POINT_ERROR_ID}`,\n            `Entity: ${this.userData.entity?.id}.triangles[${triMeshIdx}](1st index) - Point definition at index ${i} is not finite`,\n          );\n          continue;\n        }\n        vertChanged =\n          vertChanged ||\n          vertices.getX(i) !== point.x ||\n          vertices.getY(i) !== point.y ||\n          vertices.getZ(i) !== point.z;\n        vertices.setXYZ(i, point.x, point.y, point.z);\n\n        if (!singleColor && colors && primitive.colors.length > 0) {\n          const color = primitive.colors[i] ?? missingColor;\n          // only trigger on last point index\n          if (i === primitive.points.length - 1 && color === missingColor) {\n            // will only show 1st triMeshIdx of issue -- addError prevents the adding of errors with duplicate errorIds\n            this.addError(\n              `${this.name}-${COLOR_LENGTH_ERROR_ID}`,\n              `Entity: ${this.userData.entity?.id}.triangles[${triMeshIdx}](1st index) - Colors array should be same size as points array, showing #00ff00 instead`,\n            );\n          }\n          const r = SRGBToLinear(color.r);\n          const g = SRGBToLinear(color.g);\n          const b = SRGBToLinear(color.b);\n          const a = color.a;\n          colorChanged =\n            colorChanged ||\n            colors.getX(i) !== r ||\n            colors.getY(i) !== g ||\n            colors.getZ(i) !== b ||\n            colors.getW(i) !== a;\n          colors.setXYZW(i, r, g, b, a);\n          if (!transparent && a < 1.0) {\n            transparent = true;\n          }\n        }\n      }\n      if (vertChanged) {\n        geometry.computeVertexNormals();\n        geometry.computeBoundingSphere();\n        geometry.attributes.position!.needsUpdate = true;\n      }\n\n      // covers the case where a geometry went from being defined by a single color to vertex colors\n      // but there was no difference in the vertex colors that already existed and the new ones\n      // we can tell this by checking the current vertexColors of the material, if false -> previously singleColor\n      colorChanged = !material.vertexColors && !singleColor && primitive.colors.length > 0;\n      if (colorChanged) {\n        material.vertexColors = true;\n        // need to set overall material color back or else it will blend them with the vertex colors\n        material.color.setRGB(1, 1, 1);\n        material.opacity = 1.0;\n        // can assume that color exists since colorchanged is true\n        geometry.attributes.color!.needsUpdate = true;\n        material.needsUpdate = true;\n      } else if (singleColor) {\n        transparent = singleColor.a < 1.0;\n        const newColor = rgbToThreeColor(tempColor, singleColor);\n        const materialNeedsUpdate =\n          material.vertexColors ||\n          !material.color.equals(newColor) ||\n          mesh.material.opacity !== singleColor.a;\n        if (materialNeedsUpdate) {\n          material.vertexColors = false;\n          material.color.copy(tempColor);\n          mesh.material.opacity = singleColor.a;\n          material.needsUpdate = true;\n        }\n      }\n\n      if (material.transparent !== transparent) {\n        material.transparent = transparent;\n        material.depthWrite = !transparent;\n        material.needsUpdate = true;\n      }\n\n      const indices = primitive.indices;\n      if (indices.length > 0) {\n        if (!geometry.index || geometry.index.count < indices.length) {\n          const array = new Uint32Array(Math.round(indices.length * 1.5) + 16);\n          array.set(indices);\n          geometry.index = new THREE.BufferAttribute(array, 1);\n          geometry.index.count = indices.length;\n        } else {\n          const array = geometry.index.array as Uint32Array;\n          let needsUpdate = false;\n          for (let i = 0; i < indices.length; i++) {\n            if (array[i] !== indices[i]) {\n              array[i] = indices[i]!;\n              needsUpdate = true;\n            }\n          }\n          geometry.index.needsUpdate = needsUpdate;\n        }\n\n        // this is set in `geometry.resize` to itemCount\n        // which works for non-indexed geometries but not for indexed geoms\n        geometry.setDrawRange(0, indices.length);\n      } else {\n        // eslint-disable-next-line no-restricted-syntax\n        geometry.index = null;\n      }\n\n      mesh.position.set(\n        primitive.pose.position.x,\n        primitive.pose.position.y,\n        primitive.pose.position.z,\n      );\n      mesh.quaternion.set(\n        primitive.pose.orientation.x,\n        primitive.pose.orientation.y,\n        primitive.pose.orientation.z,\n        primitive.pose.orientation.w,\n      );\n      this.add(mesh);\n      triMeshIdx++;\n    }\n  }\n\n  public override dispose(): void {\n    for (const mesh of this.#triangleMeshes) {\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n    }\n    this.clear();\n    this.#triangleMeshes.length = 0;\n    this.clearErrors();\n  }\n\n  public override update(\n    topic: string | undefined,\n    entity: SceneEntity | undefined,\n    settings: LayerSettingsEntity,\n    receiveTime: bigint,\n  ): void {\n    super.update(topic, entity, settings, receiveTime);\n    if (entity) {\n      const lifetimeNs = toNanoSec(entity.lifetime);\n      this.userData.expiresAt = lifetimeNs === 0n ? undefined : receiveTime + lifetimeNs;\n      this.#updateTriangleMeshes(entity.triangles);\n    }\n  }\n\n  public updateSettings(settings: LayerSettingsEntity): void {\n    this.update(this.userData.topic, this.userData.entity, settings, this.userData.receiveTime);\n  }\n}\n\nfunction makeTriangleMesh(): TriangleMesh {\n  return new THREE.Mesh(\n    new DynamicBufferGeometry(),\n    new THREE.MeshStandardMaterial({\n      metalness: 0,\n      roughness: 1,\n      flatShading: true,\n      side: THREE.DoubleSide,\n    }),\n  );\n}\n\nfunction isPointValid(pt: Point3): boolean {\n  return Number.isFinite(pt.x) && Number.isFinite(pt.y) && Number.isFinite(pt.z);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { RenderableArrows } from \"./RenderableArrows\";\nimport { RenderableCubes } from \"./RenderableCubes\";\nimport { RenderableCylinders } from \"./RenderableCylinders\";\nimport { RenderableLines } from \"./RenderableLines\";\nimport { RenderableModels } from \"./RenderableModels\";\nimport { RenderablePrimitive } from \"./RenderablePrimitive\";\nimport { RenderableSpheres } from \"./RenderableSpheres\";\nimport { RenderableTexts } from \"./RenderableTexts\";\nimport { RenderableTriangles } from \"./RenderableTriangles\";\nimport { PrimitiveType } from \"./types\";\nimport type { IRenderer } from \"../../IRenderer\";\n\nconst CONSTRUCTORS = {\n  [PrimitiveType.CUBES]: RenderableCubes,\n  [PrimitiveType.MODELS]: RenderableModels,\n  [PrimitiveType.LINES]: RenderableLines,\n  [PrimitiveType.CYLINDERS]: RenderableCylinders,\n  [PrimitiveType.ARROWS]: RenderableArrows,\n  [PrimitiveType.SPHERES]: RenderableSpheres,\n  [PrimitiveType.TEXTS]: RenderableTexts,\n  [PrimitiveType.TRIANGLES]: RenderableTriangles,\n};\n\n/**\n * An object pool for RenderablePrimitive subclass objects.\n */\nexport class PrimitivePool {\n  #primitivesByType = new Map<PrimitiveType, RenderablePrimitive[]>();\n  #disposed = false;\n\n  public constructor(private renderer: IRenderer) {}\n\n  public acquire<T extends PrimitiveType>(type: T): InstanceType<(typeof CONSTRUCTORS)[T]> {\n    if (this.#disposed) {\n      throw new Error(`Attempt to acquire PrimitiveType.${type} after PrimitivePool was disposed`);\n    }\n    const primitive = this.#primitivesByType.get(type)?.pop();\n    if (primitive) {\n      primitive.prepareForReuse();\n      return primitive as InstanceType<(typeof CONSTRUCTORS)[T]>;\n    }\n    // https://github.com/microsoft/TypeScript/issues/44049\n    return new CONSTRUCTORS[type](this.renderer) as InstanceType<(typeof CONSTRUCTORS)[T]>;\n  }\n\n  public release<T extends PrimitiveType>(\n    type: T,\n    primitive: InstanceType<(typeof CONSTRUCTORS)[T]>,\n  ): void {\n    if (this.#disposed) {\n      primitive.dispose();\n      return;\n    }\n    const primitives = this.#primitivesByType.get(type);\n    if (!primitives) {\n      this.#primitivesByType.set(type, [primitive]);\n    } else {\n      primitives.push(primitive);\n    }\n  }\n\n  public dispose(): void {\n    for (const primitives of this.#primitivesByType.values()) {\n      for (const primitive of primitives) {\n        primitive.dispose();\n      }\n    }\n    this.#primitivesByType.clear();\n    this.#disposed = true;\n  }\n\n  public setColorScheme(colorScheme: \"dark\" | \"light\"): void {\n    for (const primitives of this.#primitivesByType.values()) {\n      for (const primitive of primitives) {\n        primitive.setColorScheme(colorScheme);\n      }\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport {\n  ArrowPrimitive,\n  CubePrimitive,\n  CylinderPrimitive,\n  LinePrimitive,\n  LineType,\n  ModelPrimitive,\n  SceneEntity,\n  SceneEntityDeletion,\n  SceneEntityDeletionType,\n  SceneUpdate,\n  SpherePrimitive,\n  TextPrimitive,\n  TriangleListPrimitive,\n} from \"@foxglove/schemas\";\nimport { SettingsTreeAction } from \"@foxglove/studio\";\n\nimport { TopicEntities } from \"./TopicEntities\";\nimport { PrimitivePool } from \"./primitives/PrimitivePool\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { SELECTED_ID_VARIABLE } from \"../Renderable\";\nimport { PartialMessage, PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { SCENE_UPDATE_DATATYPES } from \"../foxglove\";\nimport {\n  normalizeColorRGBA,\n  normalizeColorRGBAs,\n  normalizePose,\n  normalizeTime,\n  normalizeVector3,\n  normalizeByteArray,\n} from \"../normalizeMessages\";\nimport { LayerSettingsEntity } from \"../settings\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\nconst SCENE_ENTITIES_DEFAULT_SETTINGS: LayerSettingsEntity = {\n  showOutlines: true,\n  visible: false,\n  color: undefined,\n  selectedIdVariable: undefined,\n};\n\nexport class FoxgloveSceneEntities extends SceneExtension<TopicEntities> {\n  #primitivePool = new PrimitivePool(this.renderer);\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.SceneEntities\", renderer);\n  }\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: SCENE_UPDATE_DATATYPES,\n        subscription: { handler: this.#handleSceneUpdate },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, SCENE_UPDATE_DATATYPES)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsEntity>;\n\n      const node: SettingsTreeNodeWithActionHandler = {\n        label: topic.name,\n        icon: \"Shapes\",\n        order: topic.name.toLocaleLowerCase(),\n        fields: {\n          color: { label: \"Color\", input: \"rgba\", value: config.color },\n          showOutlines: {\n            label: \"Show outlines\",\n            input: \"boolean\",\n            value: config.showOutlines ?? SCENE_ENTITIES_DEFAULT_SETTINGS.showOutlines,\n          },\n          selectedIdVariable: {\n            label: \"Selection Variable\",\n            input: \"string\",\n            help: \"When selecting a SceneEntity, this global variable will be set to the entity ID\",\n            value: config.selectedIdVariable,\n            placeholder: SELECTED_ID_VARIABLE,\n          },\n        },\n        visible: config.visible ?? SCENE_ENTITIES_DEFAULT_SETTINGS.visible,\n        handler: this.handleSettingsAction,\n      };\n\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Don't use SceneExtension#startFrame() because our renderables represent one topic each with\n    // many entities. Instead, call startFrame on each renderable\n    for (const renderable of this.renderables.values()) {\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  public override setColorScheme(\n    colorScheme: \"dark\" | \"light\",\n    _backgroundColor: THREE.Color | undefined,\n  ): void {\n    for (const renderable of this.renderables.values()) {\n      renderable.setColorScheme(colorScheme);\n    }\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the TopicEntities settings\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const settings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsEntity>\n        | undefined;\n      renderable.userData.settings = { ...SCENE_ENTITIES_DEFAULT_SETTINGS, ...settings };\n      renderable.updateSettings();\n    }\n  };\n\n  #handleSceneUpdate = (messageEvent: PartialMessageEvent<SceneUpdate>): void => {\n    const topic = messageEvent.topic;\n    const sceneUpdates = messageEvent.message;\n\n    for (const deletionMsg of sceneUpdates.deletions ?? []) {\n      if (deletionMsg) {\n        const deletion = normalizeSceneEntityDeletion(deletionMsg);\n        this.#getTopicEntities(topic).deleteEntities(deletion);\n      }\n    }\n\n    for (const entityMsg of sceneUpdates.entities ?? []) {\n      if (entityMsg) {\n        const entity = normalizeSceneEntity(entityMsg);\n        this.#getTopicEntities(topic).addOrUpdateEntity(\n          entity,\n          toNanoSec(messageEvent.receiveTime),\n        );\n      }\n    }\n  };\n\n  #getTopicEntities(topic: string): TopicEntities {\n    let topicEntities = this.renderables.get(topic);\n    if (!topicEntities) {\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsEntity>\n        | undefined;\n\n      topicEntities = new TopicEntities(topic, this.#primitivePool, this.renderer, {\n        receiveTime: -1n,\n        messageTime: -1n,\n        frameId: \"\",\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        topic,\n        settings: { ...SCENE_ENTITIES_DEFAULT_SETTINGS, ...userSettings },\n      });\n      this.renderables.set(topic, topicEntities);\n      this.add(topicEntities);\n    }\n    return topicEntities;\n  }\n\n  public override dispose(): void {\n    super.dispose();\n    this.#primitivePool.dispose();\n  }\n}\n\nfunction normalizeSceneEntity(entity: PartialMessage<SceneEntity>): SceneEntity {\n  return {\n    timestamp: normalizeTime(entity.timestamp),\n    frame_id: entity.frame_id ?? \"\",\n    id: entity.id ?? \"\",\n    lifetime: normalizeTime(entity.lifetime),\n    frame_locked: entity.frame_locked ?? false,\n    metadata: entity.metadata?.map((kv) => ({ key: kv?.key ?? \"\", value: kv?.value ?? \"\" })) ?? [],\n    arrows: entity.arrows?.map(normalizeArrowPrimitive) ?? [],\n    cubes: entity.cubes?.map(normalizeCubePrimitive) ?? [],\n    spheres: entity.spheres?.map(normalizeSpherePrimitive) ?? [],\n    cylinders: entity.cylinders?.map(normalizeCylinderPrimitive) ?? [],\n    lines: entity.lines?.map(normalizeLinePrimitive) ?? [],\n    triangles: entity.triangles?.map(normalizeTriangleListPrimitive) ?? [],\n    texts: entity.texts?.map(normalizeTextPrimitive) ?? [],\n    models: entity.models?.map(normalizeModelPrimitive) ?? [],\n  };\n}\n\nfunction normalizeSceneEntityDeletion(\n  entity: PartialMessage<SceneEntityDeletion>,\n): SceneEntityDeletion {\n  return {\n    timestamp: normalizeTime(entity.timestamp),\n    type: entity.type ?? SceneEntityDeletionType.MATCHING_ID,\n    id: entity.id ?? \"\",\n  };\n}\n\nfunction normalizeArrowPrimitive(\n  arrow: PartialMessage<ArrowPrimitive> | undefined,\n): ArrowPrimitive {\n  return {\n    pose: normalizePose(arrow?.pose),\n    shaft_length: arrow?.shaft_length ?? 0.8,\n    shaft_diameter: arrow?.shaft_diameter ?? 0.1,\n    head_length: arrow?.head_length ?? 0.2,\n    head_diameter: arrow?.head_diameter ?? 0.2,\n    color: normalizeColorRGBA(arrow?.color),\n  };\n}\n\nfunction normalizeCubePrimitive(cube: PartialMessage<CubePrimitive> | undefined): CubePrimitive {\n  return {\n    pose: normalizePose(cube?.pose),\n    size: normalizeVector3(cube?.size),\n    color: normalizeColorRGBA(cube?.color),\n  };\n}\n\nfunction normalizeSpherePrimitive(\n  sphere: PartialMessage<SpherePrimitive> | undefined,\n): SpherePrimitive {\n  return {\n    pose: normalizePose(sphere?.pose),\n    size: normalizeVector3(sphere?.size),\n    color: normalizeColorRGBA(sphere?.color),\n  };\n}\n\nfunction normalizeCylinderPrimitive(\n  cylinder: PartialMessage<CylinderPrimitive> | undefined,\n): CylinderPrimitive {\n  return {\n    pose: normalizePose(cylinder?.pose),\n    size: normalizeVector3(cylinder?.size),\n    bottom_scale: cylinder?.bottom_scale ?? 1,\n    top_scale: cylinder?.top_scale ?? 1,\n    color: normalizeColorRGBA(cylinder?.color),\n  };\n}\n\nfunction normalizeLinePrimitive(line: PartialMessage<LinePrimitive> | undefined): LinePrimitive {\n  return {\n    type: line?.type ?? LineType.LINE_STRIP,\n    pose: normalizePose(line?.pose),\n    thickness: line?.thickness ?? 0.05,\n    scale_invariant: line?.scale_invariant ?? false,\n    points: line?.points?.map(normalizeVector3) ?? [],\n    color: normalizeColorRGBA(line?.color),\n    colors: normalizeColorRGBAs(line?.colors),\n    indices: line?.indices?.map((idx) => idx ?? NaN) ?? [],\n  };\n}\n\nfunction normalizeTriangleListPrimitive(\n  triangles: PartialMessage<TriangleListPrimitive> | undefined,\n): TriangleListPrimitive {\n  return {\n    pose: normalizePose(triangles?.pose),\n    points: triangles?.points?.map(normalizeVector3) ?? [],\n    color: normalizeColorRGBA(triangles?.color),\n    colors: normalizeColorRGBAs(triangles?.colors),\n    indices: triangles?.indices?.map((idx) => idx ?? NaN) ?? [],\n  };\n}\n\nfunction normalizeTextPrimitive(text: PartialMessage<TextPrimitive> | undefined): TextPrimitive {\n  return {\n    pose: normalizePose(text?.pose),\n    billboard: text?.billboard ?? true,\n    font_size: text?.font_size ?? (text?.scale_invariant ?? false ? 16 : 0.25),\n    scale_invariant: text?.scale_invariant ?? false,\n    color: normalizeColorRGBA(text?.color),\n    text: text?.text ?? \"\",\n  };\n}\n\nfunction normalizeModelPrimitive(\n  model: PartialMessage<ModelPrimitive> | undefined,\n): ModelPrimitive {\n  return {\n    pose: normalizePose(model?.pose),\n    scale: normalizeVector3(model?.scale),\n    color: normalizeColorRGBA(model?.color),\n    override_color: model?.override_color ?? false,\n    url: model?.url ?? \"\",\n    media_type: model?.media_type ?? \"\",\n    data: normalizeByteArray(model?.data),\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport {\n  Color,\n  Inertia,\n  JointType,\n  Pose,\n  UrdfCollider,\n  UrdfGeometry,\n  UrdfInertial,\n  UrdfJoint,\n  UrdfLink,\n  UrdfMaterial,\n  UrdfRobot,\n  UrdfVisual,\n  Vector3,\n} from \"./types\";\n\nconst JOINT_TYPES = [\"fixed\", \"continuous\", \"revolute\", \"planar\", \"prismatic\", \"floating\"];\n\nexport function parseUrdf(xml: XMLDocument | string): UrdfRobot {\n  const parser = new DOMParser();\n  const urdf =\n    xml instanceof XMLDocument ? xml : (parser.parseFromString(xml, \"text/xml\") as XMLDocument);\n\n  for (let i = 0; i < urdf.children.length; i++) {\n    const child = urdf.children[i]!;\n    if (child.nodeName === \"robot\") {\n      return parseRobot(child);\n    }\n  }\n\n  throw new Error(`No robot found in URDF`);\n}\n\nfunction parseRobot(xml: Element): UrdfRobot {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  if (name == undefined) {\n    throw new Error(\"<robot> name is missing\");\n  }\n  const links = new Map<string, UrdfLink>();\n  const joints = new Map<string, UrdfJoint>();\n  const materials = new Map<string, UrdfMaterial>();\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    const childName = child.getAttribute(\"name\");\n    if (childName == undefined) {\n      continue;\n    }\n\n    switch (child.nodeName) {\n      case \"link\":\n        links.set(childName, parseLink(child));\n        break;\n      case \"joint\":\n        joints.set(childName, parseJoint(child));\n        break;\n      case \"material\":\n        materials.set(childName, parseMaterial(child));\n        break;\n    }\n  }\n\n  return { name, links, joints, materials };\n}\n\nfunction parseLink(xml: Element): UrdfLink {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  if (name == undefined) {\n    throw new Error(`missing attribute \"name\" in ${xml}`);\n  }\n\n  const link: UrdfLink = { name, visuals: [], colliders: [] };\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"inertial\":\n        link.inertial = parseInertial(child);\n        break;\n      case \"visual\":\n        link.visuals.push(parseVisual(child));\n        break;\n      case \"collision\":\n        link.colliders.push(parseCollision(child));\n        break;\n    }\n  }\n\n  return link;\n}\n\nfunction parseInertial(xml: Element): UrdfInertial {\n  let origin: Pose | undefined;\n  let mass: number | undefined;\n  let inertia: Inertia | undefined;\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"origin\":\n        origin = parsePose(child);\n        break;\n      case \"mass\":\n        mass = parseFloatContent(child);\n        break;\n      case \"inertia\":\n        inertia = parseInertia(child);\n        break;\n    }\n  }\n\n  if (mass == undefined || inertia == undefined) {\n    throw new Error(\"<inertial> must have mass and inertia\");\n  }\n\n  return { origin: origin ?? defaultPose(), mass, inertia };\n}\n\nfunction parseJoint(xml: Element): UrdfJoint {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  const jointType = xml.getAttribute(\"type\") ?? undefined;\n  let origin: Pose | undefined;\n  let parentLink: string | undefined;\n  let childLink: string | undefined;\n  let axis: Vector3 | undefined;\n  let calibration: { rising?: number; falling?: number } | undefined;\n  let dynamics: { damping: number; friction: number } | undefined;\n  let limit: { lower: number; upper: number; effort: number; velocity: number } | undefined;\n  let mimic: { joint: string; multiplier: number; offset: number } | undefined;\n  let safetyController:\n    | {\n        softLowerLimit: number;\n        softUpperLimit: number;\n        kPosition: number;\n        kVelocity: number;\n      }\n    | undefined;\n\n  if (name == undefined) {\n    throw new Error(`missing attribute \"name\" in ${xml}`);\n  }\n  if (!JOINT_TYPES.includes(jointType ?? \"\")) {\n    throw new Error(`invalid joint type \"${jointType}\" in ${xml}`);\n  }\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"origin\":\n        origin = parsePose(child);\n        break;\n      case \"parent\":\n        parentLink = child.getAttribute(\"link\") ?? undefined;\n        break;\n      case \"child\":\n        childLink = child.getAttribute(\"link\") ?? undefined;\n        break;\n      case \"axis\":\n        axis = parseVec3Attribute(child, \"xyz\");\n        if (axis == undefined) {\n          throw new Error(`missing attribute \"xyz\" in ${child}`);\n        }\n        break;\n      case \"calibration\":\n        calibration = {\n          rising: parseFloatAttributeOptional(child, \"rising\"),\n          falling: parseFloatAttributeOptional(child, \"falling\"),\n        };\n        break;\n      case \"dynamics\":\n        dynamics = {\n          damping: parseFloatAttributeOptional(child, \"damping\") ?? 0,\n          friction: parseFloatAttributeOptional(child, \"friction\") ?? 0,\n        };\n        break;\n      case \"limit\":\n        limit = {\n          lower: parseFloatAttributeOptional(child, \"lower\") ?? 0,\n          upper: parseFloatAttributeOptional(child, \"upper\") ?? 0,\n          effort: parseFloatAttribute(child, \"effort\"),\n          velocity: parseFloatAttribute(child, \"velocity\"),\n        };\n        break;\n      case \"mimic\": {\n        const joint = child.getAttribute(\"joint\") ?? undefined;\n        if (joint == undefined) {\n          throw new Error(`missing attribute \"joint\" in ${child}`);\n        }\n        mimic = {\n          joint,\n          multiplier: parseFloatAttributeOptional(child, \"multiplier\") ?? 1,\n          offset: parseFloatAttributeOptional(child, \"offset\") ?? 0,\n        };\n        break;\n      }\n      case \"safety_controller\":\n        safetyController = {\n          softLowerLimit: parseFloatAttributeOptional(child, \"soft_lower_limit\") ?? 0,\n          softUpperLimit: parseFloatAttributeOptional(child, \"soft_upper_limit\") ?? 0,\n          kPosition: parseFloatAttributeOptional(child, \"k_position\") ?? 0,\n          kVelocity: parseFloatAttribute(child, \"k_velocity\"),\n        };\n        break;\n    }\n  }\n\n  if (parentLink == undefined || childLink == undefined) {\n    throw new Error(`missing parent or child in ${xml}`);\n  }\n\n  return {\n    name,\n    jointType: jointType as JointType,\n    origin: origin ?? defaultPose(),\n    parent: parentLink,\n    child: childLink,\n    axis: axis ?? { x: 1, y: 0, z: 0 },\n    calibration,\n    dynamics,\n    limit,\n    mimic,\n    safetyController,\n  };\n}\n\nfunction parseVisual(xml: Element): UrdfVisual {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  let origin: Pose | undefined;\n  let geometry: UrdfGeometry | undefined;\n  let material: UrdfMaterial | undefined;\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"origin\":\n        origin = parsePose(child);\n        break;\n      case \"geometry\":\n        geometry = parseGeometry(child);\n        break;\n      case \"material\":\n        material = parseMaterial(child);\n        break;\n    }\n  }\n\n  if (geometry == undefined) {\n    throw new Error(\"<visual> must have geometry\");\n  }\n\n  return { name, origin: origin ?? defaultPose(), geometry, material };\n}\n\nfunction parseCollision(xml: Element): UrdfCollider {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  let origin: Pose | undefined;\n  let geometry: UrdfGeometry | undefined;\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"origin\":\n        origin = parsePose(child);\n        break;\n      case \"geometry\":\n        geometry = parseGeometry(child);\n        break;\n    }\n  }\n\n  if (geometry == undefined) {\n    throw new Error(\"<collision> must have geometry\");\n  }\n\n  return { name, origin: origin ?? defaultPose(), geometry };\n}\n\nfunction parseMaterial(xml: Element): UrdfMaterial {\n  const name = xml.getAttribute(\"name\") ?? undefined;\n  let color: Color | undefined;\n  let texture: string | undefined;\n\n  for (let i = 0; i < xml.children.length; i++) {\n    const child = xml.children[i]!;\n    switch (child.nodeName) {\n      case \"color\":\n        color = parseColorAttribute(child, \"rgba\");\n        break;\n      case \"texture\":\n        texture = child.getAttribute(\"filename\") ?? undefined;\n        break;\n    }\n  }\n\n  return { name, color, texture };\n}\n\nfunction parseInertia(xml: Element): Inertia {\n  const ixx = parseFloatAttribute(xml, \"ixx\");\n  const ixy = parseFloatAttribute(xml, \"ixy\");\n  const ixz = parseFloatAttribute(xml, \"ixz\");\n  const iyy = parseFloatAttribute(xml, \"iyy\");\n  const iyz = parseFloatAttribute(xml, \"iyz\");\n  const izz = parseFloatAttribute(xml, \"izz\");\n  return { ixx, ixy, ixz, iyy, iyz, izz };\n}\n\nfunction parseGeometry(xml: Element): UrdfGeometry {\n  if (xml.children.length < 1) {\n    throw new Error(\"<geometry> must contain box, cylinder, sphere, or mesh\");\n  }\n\n  const child = xml.children[0]!;\n  switch (child.nodeName) {\n    case \"box\": {\n      const size = parseVec3Attribute(child, \"size\");\n      if (size == undefined) {\n        throw new Error(`missing attribute \"size\" in ${xml}`);\n      }\n      return { geometryType: \"box\", size };\n    }\n    case \"cylinder\": {\n      const length = parseFloatAttribute(child, \"length\");\n      const radius = parseFloatAttribute(child, \"radius\");\n      return { geometryType: \"cylinder\", length, radius };\n    }\n    case \"sphere\": {\n      const radius = parseFloatAttribute(child, \"radius\");\n      return { geometryType: \"sphere\", radius };\n    }\n    case \"mesh\": {\n      const filename = child.getAttribute(\"filename\") ?? undefined;\n      const scale = parseVec3Attribute(child, \"scale\");\n      if (filename == undefined) {\n        throw new Error(`missing attribute \"filename\" in ${xml}`);\n      }\n      return { geometryType: \"mesh\", filename, scale };\n    }\n    default:\n      throw new Error(\"<geometry> must contain box, cylinder, sphere, or mesh\");\n  }\n}\n\nfunction parsePose(xml: Element): Pose {\n  const xyz = parseVec3Attribute(xml, \"xyz\") ?? { x: 0, y: 0, z: 0 };\n  const rpy = parseVec3Attribute(xml, \"rpy\") ?? { x: 0, y: 0, z: 0 };\n  return { xyz, rpy };\n}\n\nfunction parseVec3Attribute(xml: Element, attribName: string): Vector3 | undefined {\n  const parts = xml.getAttribute(attribName)?.trim().split(/\\s+/);\n  if (parts?.length !== 3) {\n    return undefined;\n  }\n\n  const [x, y, z] = parts as [string, string, string];\n  return { x: parseFloat(x), y: parseFloat(y), z: parseFloat(z) };\n}\n\nfunction parseColorAttribute(xml: Element, attribName: string): Color | undefined {\n  const parts = xml.getAttribute(attribName)?.trim().split(/\\s+/);\n  if (parts?.length !== 4) {\n    return undefined;\n  }\n\n  const [r, g, b, a] = parts as [string, string, string, string];\n  return { r: parseFloat(r), g: parseFloat(g), b: parseFloat(b), a: parseFloat(a) };\n}\n\nfunction parseFloatAttribute(xml: Element, attribName: string): number {\n  const value = xml.getAttribute(attribName);\n  if (value == undefined) {\n    throw new Error(`missing attribute \"${attribName}\" in ${xml}`);\n  }\n  return parseFloat(value);\n}\n\nfunction parseFloatAttributeOptional(xml: Element, attribName: string): number | undefined {\n  const value = xml.getAttribute(attribName);\n  if (value == undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n}\n\nfunction parseFloatContent(xml: Element): number {\n  if (xml.textContent == undefined) {\n    throw new Error(`expected float value in \"${xml}\"`);\n  }\n  return parseFloat(xml.textContent);\n}\n\nfunction defaultPose(): Pose {\n  return { xyz: { x: 0, y: 0, z: 0 }, rpy: { x: 0, y: 0, z: 0 } };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { XacroParser } from \"xacro-parser\";\n\nimport { parseUrdf } from \"./parser\";\nimport { UrdfRobot } from \"./types\";\n\nexport * from \"./types\";\n\nexport async function parseRobot(\n  urdfContents: string,\n  getFileContents: (url: string) => Promise<string>,\n): Promise<UrdfRobot> {\n  const xacroParser = new XacroParser();\n  xacroParser.rospackCommands = { find: (targetPkg) => `package://${targetPkg}` };\n  xacroParser.getFileContents = getFileContents;\n\n  const urdf = await xacroParser.parse(urdfContents);\n  return parseUrdf(urdf);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nexport type Point = { x: number; y: number; z: number };\n\nexport type Quaternion = { x: number; y: number; z: number; w: number };\n\nexport type Vector3 = { x: number; y: number; z: number };\n\nexport function eulerToQuaternion(rpy: Vector3): Quaternion {\n  const roll = rpy.x;\n  const pitch = rpy.y;\n  const yaw = rpy.z;\n\n  const cy = Math.cos(yaw * 0.5);\n  const sy = Math.sin(yaw * 0.5);\n  const cr = Math.cos(roll * 0.5);\n  const sr = Math.sin(roll * 0.5);\n  const cp = Math.cos(pitch * 0.5);\n  const sp = Math.sin(pitch * 0.5);\n\n  const w = cy * cr * cp + sy * sr * sp;\n  const x = cy * sr * cp - sy * cr * sp;\n  const y = cy * cr * sp + sy * sr * cp;\n  const z = sy * cr * cp - cy * sr * sp;\n\n  return { x, y, z, w };\n}\n\nexport type Euler = {\n  roll: number;\n  pitch: number;\n  yaw: number;\n};\n\n/**\n * Converts a quaternion to a Euler roll, pitch, yaw representation, in degrees.\n *\n * @param quaternion Input quaternion.\n * @returns Converted Euler angle roll, pitch, yaw representation, in degrees.\n */\nexport function quaternionToEuler(quaternion: Quaternion): Euler {\n  const { x, y, z, w } = quaternion;\n\n  const toDegrees = 180 / Math.PI;\n  const dcm00 = w * w + x * x - y * y - z * z;\n  const dcm10 = 2 * (x * y + w * z);\n  const dcm20 = 2 * (x * z - w * y);\n  const dcm21 = 2 * (w * x + y * z);\n  const dcm22 = w * w - x * x - y * y + z * z;\n  const roll = toDegrees * Math.atan2(dcm21, dcm22);\n  const pitch = toDegrees * Math.asin(-dcm20);\n  const yaw = toDegrees * Math.atan2(dcm10, dcm00);\n  return {\n    roll,\n    pitch,\n    yaw,\n  };\n}\n\n\nexport function makeCovarianceArray(xDev: number, yDev: number, thetaDev: number): number[] {\n  const covariance = Array(36).fill(0);\n  covariance[6 * 0 + 0] = Math.pow(xDev, 2);\n  covariance[6 * 1 + 1] = Math.pow(yDev, 2);\n  covariance[6 * 5 + 5] = Math.pow(thetaDev, 2);\n  return covariance;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableCube extends RenderableMarker {\n  #mesh: THREE.Mesh<THREE.BoxGeometry, THREE.MeshStandardMaterial>;\n  #outline: THREE.LineSegments;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Cube mesh\n    const cubeGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-cube`,\n      createGeometry,\n    );\n    const cubeEdgesGeometry = this.renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-cube-edges`,\n      () => createEdgesGeometry(cubeGeometry),\n    );\n    this.#mesh = new THREE.Mesh(cubeGeometry, makeStandardMaterial(marker.color));\n    this.#mesh.castShadow = true;\n    this.#mesh.receiveShadow = true;\n    this.add(this.#mesh);\n\n    // Cube outline\n    this.#outline = new THREE.LineSegments(cubeEdgesGeometry, renderer.outlineMaterial);\n    this.#outline.userData.picking = false;\n    this.#mesh.add(this.#outline);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.#mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.#mesh.material.transparent) {\n      this.#mesh.material.transparent = transparent;\n      this.#mesh.material.depthWrite = !transparent;\n      this.#mesh.material.needsUpdate = true;\n    }\n\n    this.#outline.visible = this.getSettings()?.showOutlines ?? true;\n\n    rgbToThreeColor(this.#mesh.material.color, marker.color);\n    this.#mesh.material.opacity = marker.color.a;\n\n    this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n  }\n}\n\nexport function createGeometry(): THREE.BoxGeometry {\n  const cubeGeometry = new THREE.BoxGeometry(1, 1, 1);\n  cubeGeometry.computeBoundingSphere();\n  return cubeGeometry;\n}\nfunction createEdgesGeometry(cubeGeometry: THREE.BoxGeometry): THREE.EdgesGeometry {\n  const cubeEdgesGeometry = new THREE.EdgesGeometry(cubeGeometry, 40);\n  cubeEdgesGeometry.computeBoundingSphere();\n  return cubeEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { cylinderSubdivisions, DetailLevel } from \"../../lod\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableCylinder extends RenderableMarker {\n  #mesh: THREE.Mesh<THREE.CylinderGeometry, THREE.MeshStandardMaterial>;\n  #outline: THREE.LineSegments;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Cylinder mesh\n    const material = makeStandardMaterial(marker.color);\n    const cylinderGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-cylinder-${renderer.maxLod}`,\n      () => createGeometry(renderer.maxLod),\n    );\n    this.#mesh = new THREE.Mesh(cylinderGeometry, material);\n    this.#mesh.castShadow = true;\n    this.#mesh.receiveShadow = true;\n    this.add(this.#mesh);\n\n    // Cylinder outline\n    const edgesGeometry = renderer.sharedGeometry.getGeometry(\n      `${this.constructor.name}-edges-${renderer.maxLod}`,\n      () => createEdgesGeometry(cylinderGeometry),\n    );\n    this.#outline = new THREE.LineSegments(edgesGeometry, renderer.outlineMaterial);\n    this.#outline.userData.picking = false;\n    this.#mesh.add(this.#outline);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.#mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.#mesh.material.transparent) {\n      this.#mesh.material.transparent = transparent;\n      this.#mesh.material.depthWrite = !transparent;\n      this.#mesh.material.needsUpdate = true;\n    }\n\n    this.#outline.visible = this.getSettings()?.showOutlines ?? true;\n\n    rgbToThreeColor(this.#mesh.material.color, marker.color);\n    this.#mesh.material.opacity = marker.color.a;\n\n    this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n  }\n}\nfunction createGeometry(lod: DetailLevel): THREE.CylinderGeometry {\n  const subdivisions = cylinderSubdivisions(lod);\n  const cylinderGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, subdivisions);\n  cylinderGeometry.rotateX(Math.PI / 2); // Make the cylinder geometry stand upright\n  cylinderGeometry.computeBoundingSphere();\n  return cylinderGeometry;\n}\n\nfunction createEdgesGeometry(geometry: THREE.CylinderGeometry): THREE.EdgesGeometry {\n  const cylinderEdgesGeometry = new THREE.EdgesGeometry(geometry, 40);\n  cylinderEdgesGeometry.computeBoundingSphere();\n  return cylinderEdgesGeometry;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { EDGE_LINE_SEGMENTS_NAME } from \"@foxglove/studio-base/panels/ThreeDeeRender/ModelCache\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { makeStandardMaterial } from \"./materials\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { rgbToThreeColor } from \"../../color\";\nimport { disposeMeshesRecursive } from \"../../dispose\";\nimport { Marker } from \"../../ros\";\nimport { removeLights, replaceMaterials } from \"../models\";\n\nconst MESH_FETCH_FAILED = \"MESH_FETCH_FAILED\";\n\nexport class RenderableMeshResource extends RenderableMarker {\n  #mesh: THREE.Group | THREE.Scene | undefined;\n  #material: THREE.MeshStandardMaterial;\n\n  /** Track updates to avoid race conditions when asynchronously loading models */\n  #updateId = 0;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.#material = makeStandardMaterial(marker.color);\n    this.update(marker, receiveTime, true);\n  }\n\n  public override dispose(): void {\n    if (this.#mesh) {\n      disposeMeshesRecursive(this.#mesh);\n    }\n    this.#material.dispose();\n  }\n\n  public override update(\n    newMarker: Marker,\n    receiveTime: bigint | undefined,\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    forceLoad?: boolean,\n  ): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = marker.color.a < 1;\n    if (transparent !== this.#material.transparent) {\n      this.#material.transparent = transparent;\n      this.#material.depthWrite = !transparent;\n      this.#material.needsUpdate = true;\n    }\n\n    rgbToThreeColor(this.#material.color, marker.color);\n    this.#material.opacity = marker.color.a;\n\n    if (forceLoad === true || marker.mesh_resource !== prevMarker.mesh_resource) {\n      const curUpdateId = ++this.#updateId;\n\n      const opts = { useEmbeddedMaterials: marker.mesh_use_embedded_materials };\n      const errors = this.renderer.settings.errors;\n      if (this.#mesh) {\n        this.remove(this.#mesh);\n        disposeMeshesRecursive(this.#mesh);\n        this.#mesh = undefined;\n      }\n      this.#loadModel(marker.mesh_resource, opts)\n        .then((mesh) => {\n          if (!mesh) {\n            return;\n          }\n          if (this.#updateId !== curUpdateId) {\n            // another update has started\n            disposeMeshesRecursive(mesh);\n            return;\n          }\n          this.#mesh = mesh;\n          this.add(mesh);\n          this.#updateOutlineVisibility();\n\n          // Remove any mesh fetch error message since loading was successful\n          this.renderer.settings.errors.remove(this.userData.settingsPath, MESH_FETCH_FAILED);\n          // Render a new frame now that the model is loaded\n          this.renderer.queueAnimationFrame();\n        })\n        .catch((err) => {\n          errors.add(\n            this.userData.settingsPath,\n            MESH_FETCH_FAILED,\n            `Unhandled error loading mesh from \"${marker.mesh_resource}\": ${err.message}`,\n          );\n        });\n    }\n    this.#updateOutlineVisibility();\n\n    this.scale.set(marker.scale.x, marker.scale.y, marker.scale.z);\n  }\n\n  #updateOutlineVisibility(): void {\n    const showOutlines = this.getSettings()?.showOutlines ?? true;\n    this.traverse((lineSegments) => {\n      // Want to avoid picking up the LineSegments from the model itself\n      // only update line segments that we've added with the special name\n      if (\n        lineSegments instanceof THREE.LineSegments &&\n        lineSegments.name === EDGE_LINE_SEGMENTS_NAME\n      ) {\n        lineSegments.visible = showOutlines;\n      }\n    });\n  }\n\n  async #loadModel(\n    url: string,\n    opts: { useEmbeddedMaterials: boolean },\n  ): Promise<THREE.Group | THREE.Scene | undefined> {\n    const cachedModel = await this.renderer.modelCache.load(url, {}, (err) => {\n      this.renderer.settings.errors.add(\n        this.userData.settingsPath,\n        MESH_FETCH_FAILED,\n        `Error loading mesh from \"${url}\": ${err.message}`,\n      );\n    });\n\n    if (!cachedModel) {\n      if (!this.renderer.settings.errors.hasError(this.userData.settingsPath, MESH_FETCH_FAILED)) {\n        this.renderer.settings.errors.add(\n          this.userData.settingsPath,\n          MESH_FETCH_FAILED,\n          `Failed to load mesh from \"${url}\"`,\n        );\n      }\n      return undefined;\n    }\n\n    const mesh = cachedModel.clone(true);\n    removeLights(mesh);\n    if (!opts.useEmbeddedMaterials) {\n      replaceMaterials(mesh, this.#material);\n    }\n\n    return mesh;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { vec3 } from \"gl-matrix\";\nimport i18next from \"i18next\";\nimport { maxBy } from \"lodash\";\nimport * as THREE from \"three\";\n\nimport { UrdfGeometryMesh, UrdfRobot, UrdfVisual, parseRobot, UrdfJoint } from \"@foxglove/den/urdf\";\nimport Logger from \"@foxglove/log\";\nimport { toNanoSec } from \"@foxglove/rostime\";\nimport { SettingsTreeAction, SettingsTreeChildren, SettingsTreeFields } from \"@foxglove/studio\";\nimport { eulerToQuaternion } from \"@foxglove/studio-base/util/geometry\";\nimport isDesktopApp from \"@foxglove/studio-base/util/isDesktopApp\";\n\nimport { RenderableCube } from \"./markers/RenderableCube\";\nimport { RenderableCylinder } from \"./markers/RenderableCylinder\";\nimport { RenderableMeshResource } from \"./markers/RenderableMeshResource\";\nimport { RenderableSphere } from \"./markers/RenderableSphere\";\nimport { missingTransformMessage, MISSING_TRANSFORM } from \"./transforms\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { PartialMessageEvent, SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport {\n  ColorRGBA,\n  JointState,\n  JOINTSTATE_DATATYPES,\n  Marker,\n  MarkerAction,\n  MarkerType,\n  Quaternion,\n  Vector3,\n} from \"../ros\";\nimport {\n  BaseSettings,\n  CustomLayerSettings,\n  PRECISION_DEGREES,\n  PRECISION_DISTANCE,\n} from \"../settings\";\nimport { Pose, makePose, TransformTree } from \"../transforms\";\nimport { updatePose } from \"../updatePose\";\n\nconst log = Logger.getLogger(__filename);\n\nconst LAYER_ID = \"foxglove.Urdf\";\nconst TOPIC_NAME = \"/robot_description\";\n\n/** ID of fake \"topic\" used to represent the /robot_description parameter */\nconst PARAM_KEY = \"param:/robot_description\";\n/** Standard parameter name used for URDF data in ROS */\nconst PARAM_NAME = \"/robot_description\";\nconst PARAM_DISPLAY_NAME = \"/robot_description (parameter)\";\n\nconst VALID_URL_ERR = \"ValidUrl\";\nconst FETCH_URDF_ERR = \"FetchUrdf\";\nconst PARSE_URDF_ERR = \"ParseUrdf\";\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\nconst DEFAULT_COLOR = { r: 1, g: 1, b: 1, a: 1 };\nconst VEC3_ONE = { x: 1, y: 1, z: 1 };\nconst XYZ_LABEL: [string, string, string] = [\"X\", \"Y\", \"Z\"];\nconst RPY_LABEL: [string, string, string] = [\"R\", \"P\", \"Y\"];\n\nexport type LayerSettingsUrdf = BaseSettings & {\n  instanceId: string; // This will be set to the topic name\n};\n\nexport type LayerSettingsCustomUrdf = CustomLayerSettings & {\n  layerId: \"foxglove.Urdf\";\n  url: string;\n};\n\nconst DEFAULT_SETTINGS: LayerSettingsUrdf = {\n  visible: false,\n  frameLocked: true,\n  instanceId: \"invalid\",\n};\n\nconst DEFAULT_CUSTOM_SETTINGS: LayerSettingsCustomUrdf = {\n  visible: true,\n  frameLocked: true,\n  label: \"URDF\",\n  instanceId: \"invalid\",\n  layerId: LAYER_ID,\n  url: \"\",\n};\n\nconst tempVec3a = new THREE.Vector3();\nconst tempVec3b = new THREE.Vector3();\nconst tempQuaternion1 = new THREE.Quaternion();\nconst tempQuaternion2 = new THREE.Quaternion();\nconst tempEuler = new THREE.Euler();\n\nexport type UrdfUserData = BaseUserData & {\n  settings: LayerSettingsUrdf | LayerSettingsCustomUrdf;\n  fetching?: { url: string; control: AbortController };\n  url: string | undefined;\n  urdf: string | undefined;\n  renderables: Map<string, Renderable>;\n};\n\nenum EmbeddedMaterialUsage {\n  Use,\n  Ignore,\n}\n\ntype TransformData = {\n  parent: string;\n  child: string;\n  translation: Vector3;\n  rotation: Quaternion;\n  joint: UrdfJoint;\n};\n\ntype ParsedUrdf = {\n  robot: UrdfRobot;\n  frames: string[];\n  transforms: TransformData[];\n};\n\ntype JointPosition = {\n  timestamp: bigint;\n  position: number;\n};\n\n// One day we can think about using feature detection. Until that day comes we acknowledge the\n// realities of only having two platforms: web and desktop.\nconst supportsPackageUrl = isDesktopApp();\n\nexport class UrdfRenderable extends Renderable<UrdfUserData> {\n  public override dispose(): void {\n    this.removeChildren();\n    this.userData.urdf = undefined;\n    super.dispose();\n  }\n\n  public removeChildren(): void {\n    for (const childRenderable of this.userData.renderables.values()) {\n      childRenderable.dispose();\n    }\n    this.children.length = 0;\n    this.userData.renderables.clear();\n  }\n}\n\nexport class Urdfs extends SceneExtension<UrdfRenderable> {\n  #framesByInstanceId = new Map<string, string[]>();\n  #transformsByInstanceId = new Map<string, TransformData[]>();\n  #jointStates = new Map<string, JointPosition>();\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.Urdfs\", renderer);\n\n    renderer.on(\"parametersChange\", this.#handleParametersChange);\n    renderer.addCustomLayerAction({\n      layerId: LAYER_ID,\n      label: i18next.t(\"threeDee:addURDF\"),\n      icon: \"PrecisionManufacturing\",\n      handler: this.#handleAddUrdf,\n    });\n\n    // Load existing URDF layers from the config\n    for (const [instanceId, entry] of Object.entries(renderer.config.layers)) {\n      if (entry?.layerId === LAYER_ID) {\n        this.#loadUrdf(instanceId, undefined);\n      }\n    }\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"topic\",\n        topicName: TOPIC_NAME,\n        subscription: { handler: this.#handleRobotDescription },\n      },\n\n      // Note that this subscription will never happen because it does not appear as a topic in the\n      // topic list that can have its visibility toggled on. The ThreeDeeRender subscription logic\n      // needs to become more flexible to make this possible\n      {\n        type: \"schema\",\n        schemaNames: JOINTSTATE_DATATYPES,\n        subscription: { handler: this.#handleJointState },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const entries: SettingsTreeEntry[] = [];\n\n    // /robot_description topic entry\n    const topic = this.renderer.topicsByName?.get(TOPIC_NAME);\n    if (topic != undefined) {\n      const config = (this.renderer.config.topics[TOPIC_NAME] ?? {}) as Partial<LayerSettingsUrdf>;\n      entries.push({\n        path: [\"topics\", TOPIC_NAME],\n        node: {\n          label: TOPIC_NAME,\n          icon: \"PrecisionManufacturing\",\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler: this.#handleTopicSettingsAction,\n          children: urdfChildren(\n            this.#transformsByInstanceId.get(TOPIC_NAME),\n            this.renderer.transformTree,\n            this.#jointStates,\n          ),\n        },\n      });\n    }\n\n    // /robot_description parameter entry\n    const parameter = this.renderer.parameters?.get(PARAM_NAME);\n    if (parameter != undefined) {\n      const config = (this.renderer.config.topics[PARAM_KEY] ?? {}) as Partial<LayerSettingsUrdf>;\n\n      const fields: SettingsTreeFields = {};\n\n      entries.push({\n        path: [\"topics\", PARAM_KEY],\n        node: {\n          label: PARAM_DISPLAY_NAME,\n          icon: \"PrecisionManufacturing\",\n          fields,\n          visible: config.visible ?? DEFAULT_SETTINGS.visible,\n          handler: this.#handleTopicSettingsAction,\n          children: urdfChildren(\n            this.#transformsByInstanceId.get(PARAM_KEY),\n            this.renderer.transformTree,\n            this.#jointStates,\n          ),\n        },\n      });\n    }\n\n    // Custom layer entries\n    for (const [instanceId, layerConfig] of Object.entries(this.renderer.config.layers)) {\n      if (layerConfig?.layerId === LAYER_ID) {\n        const config = layerConfig as Partial<LayerSettingsCustomUrdf>;\n        const placeholder = supportsPackageUrl ? \"package://\" : undefined;\n        const help = supportsPackageUrl\n          ? \"package:// URL or http(s) URL pointing to a Unified Robot Description Format (URDF) XML file\"\n          : \"http(s) URL pointing to a Unified Robot Description Format (URDF) XML file\";\n\n        const fields: SettingsTreeFields = {\n          url: { label: \"URL\", input: \"string\", placeholder, help, value: config.url ?? \"\" },\n        };\n\n        entries.push({\n          path: [\"layers\", instanceId],\n          node: {\n            label: config.label ?? \"Grid\",\n            icon: \"PrecisionManufacturing\",\n            fields,\n            visible: config.visible ?? DEFAULT_CUSTOM_SETTINGS.visible,\n            actions: [{ type: \"action\", id: \"delete\", label: \"Delete\" }],\n            order: layerConfig.order,\n            handler: this.#handleLayerSettingsAction,\n            children: urdfChildren(\n              this.#transformsByInstanceId.get(instanceId),\n              this.renderer.transformTree,\n              this.#jointStates,\n            ),\n          },\n        });\n      }\n    }\n\n    return entries;\n  }\n\n  public override removeAllRenderables(): void {\n    // Re-add coordinate frames and transforms since the scene has been cleared\n    this.#refreshTransforms();\n  }\n\n  /**\n   * Re-add coordinate frames and transforms corresponding to existing custom URDFs\n   */\n  #refreshTransforms() {\n    for (const [instanceId, frames] of this.#framesByInstanceId) {\n      this.#loadFrames(instanceId, frames);\n    }\n    for (const [instanceId, transforms] of this.#transformsByInstanceId) {\n      this.#loadTransforms(instanceId, transforms);\n    }\n  }\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    for (const renderable of this.renderables.values()) {\n      const path = renderable.userData.settingsPath;\n      let hasTfError = false;\n\n      renderable.visible = renderable.userData.settings.visible;\n      if (!renderable.visible) {\n        this.renderer.settings.errors.clearPath(path);\n        continue;\n      }\n\n      // UrdfRenderables always stay at the origin. Their children renderables\n      // are individually updated since each child exists in a different frame\n      for (const childRenderable of renderable.userData.renderables.values()) {\n        const srcTime = currentTime;\n        const frameId = childRenderable.userData.frameId;\n        const updated = updatePose(\n          childRenderable,\n          this.renderer.transformTree,\n          renderFrameId,\n          fixedFrameId,\n          frameId,\n          currentTime,\n          srcTime,\n        );\n        if (!updated) {\n          const message = missingTransformMessage(renderFrameId, fixedFrameId, frameId);\n          this.renderer.settings.errors.add(path, MISSING_TRANSFORM, message);\n          hasTfError = true;\n        }\n      }\n\n      if (!hasTfError) {\n        this.renderer.settings.errors.remove(path, MISSING_TRANSFORM);\n      }\n    }\n  }\n\n  #handleTopicSettingsAction = (action: SettingsTreeAction): void => {\n    if (action.action === \"update\") {\n      this.#handleSettingsUpdate(action);\n      return;\n    }\n  };\n\n  #handleLayerSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    // Handle menu actions (delete)\n    if (action.action === \"perform-node-action\") {\n      if (path.length === 2 && action.payload.id === \"delete\") {\n        const instanceId = path[1]!;\n\n        // Remove this instance from the config\n        this.renderer.updateConfig((draft) => {\n          delete draft.layers[instanceId];\n        });\n\n        // Remove the renderable\n        const renderable = this.renderables.get(instanceId);\n        if (renderable) {\n          renderable.dispose();\n          this.remove(renderable);\n          this.renderables.delete(instanceId);\n        }\n\n        // Remove transforms from the TF tree\n        const transforms = this.#transformsByInstanceId.get(instanceId);\n        if (transforms) {\n          for (const { parent, child } of transforms) {\n            this.renderer.removeTransform(child, parent, 0n);\n          }\n        }\n        this.#framesByInstanceId.delete(instanceId);\n        this.#transformsByInstanceId.delete(instanceId);\n\n        // Re-add coordinate frames in case the deleted URDF shared frame names with other URDFs\n        this.#refreshTransforms();\n\n        // Update the settings tree\n        this.updateSettingsTree();\n        this.renderer.updateCustomLayersCount();\n      }\n      return;\n    } /* if (action.action === \"update\") */ else {\n      this.#handleSettingsUpdate(action);\n    }\n  };\n\n  #handleSettingsUpdate = (action: { action: \"update\" } & SettingsTreeAction): void => {\n    const path = action.payload.path;\n\n    if (path.length === 5 && path[2] === \"joints\") {\n      // [\"layers\", instanceId, \"joints\", jointName, \"manual\"]\n      const instanceId = path[1]!;\n      const jointName = path[3]!;\n      const transforms = this.#transformsByInstanceId.get(instanceId);\n      if (!transforms) {\n        return;\n      }\n\n      const transformData = transforms.find((t) => t.joint.name === jointName);\n      if (!transformData) {\n        return;\n      }\n\n      const joint = transformData.joint;\n      const frame = this.renderer.transformTree.getOrCreateFrame(transformData.child);\n      const frameKey = `frame:${frame.id}`;\n      const isAngular = joint.jointType === \"revolute\" || joint.jointType === \"continuous\";\n      const axis = tempVec3a.set(joint.axis.x, joint.axis.y, joint.axis.z);\n\n      if (isAngular) {\n        const degrees = action.payload.value as number;\n        const quaternion = tempQuaternion1.setFromAxisAngle(axis, degrees * DEG2RAD);\n        const euler = tempEuler.setFromQuaternion(quaternion);\n        frame.offsetEulerDegrees = [euler.x * RAD2DEG, euler.y * RAD2DEG, euler.z * RAD2DEG];\n        this.saveSetting([\"transforms\", frameKey, \"rpyOffset\"], frame.offsetEulerDegrees);\n      } else {\n        const scale = action.payload.value as number;\n        axis.multiplyScalar(scale);\n        frame.offsetPosition = [axis.x, axis.y, axis.z];\n        this.saveSetting([\"transforms\", frameKey, \"xyzOffset\"], frame.offsetPosition);\n      }\n    } else if (path.length === 3) {\n      // [\"layers\", instanceId, field]\n      this.saveSetting(path, action.payload.value);\n      const instanceId = path[1]!;\n      if (path[1] === PARAM_KEY) {\n        this.#loadUrdf(instanceId, this.renderer.parameters?.get(PARAM_NAME) as string | undefined);\n      } else {\n        this.#loadUrdf(instanceId, undefined);\n      }\n    }\n  };\n\n  #handleRobotDescription = (messageEvent: PartialMessageEvent<{ data: string }>): void => {\n    const robotDescription = messageEvent.message.data;\n    if (typeof robotDescription !== \"string\") {\n      return;\n    }\n    this.#loadUrdf(TOPIC_NAME, robotDescription);\n  };\n\n  #handleJointState = (messageEvent: PartialMessageEvent<JointState>): void => {\n    const msg = messageEvent.message;\n    const names = msg.name ?? [];\n    const positions = msg.position ?? [];\n    const timestamp = toNanoSec(messageEvent.receiveTime);\n\n    for (let i = 0; i < names.length; i++) {\n      const name = names[i]!;\n      const position = positions[i] ?? 0;\n\n      const prevTimestamp = this.#jointStates.get(name)?.timestamp;\n      if (prevTimestamp == undefined || timestamp >= prevTimestamp) {\n        this.#jointStates.set(name, { timestamp, position });\n      }\n    }\n  };\n\n  #handleParametersChange = (parameters: ReadonlyMap<string, unknown> | undefined): void => {\n    const robotDescription = parameters?.get(PARAM_NAME);\n    if (typeof robotDescription !== \"string\") {\n      return;\n    }\n    this.#loadUrdf(PARAM_KEY, robotDescription);\n  };\n\n  #handleAddUrdf = (instanceId: string): void => {\n    log.info(`Creating ${LAYER_ID} layer ${instanceId}`);\n\n    const config: LayerSettingsCustomUrdf = { ...DEFAULT_CUSTOM_SETTINGS, instanceId };\n\n    // Add this instance to the config\n    this.renderer.updateConfig((draft) => {\n      const maxOrderLayer = maxBy(Object.values(draft.layers), (layer) => layer?.order);\n      const order = 1 + (maxOrderLayer?.order ?? 0);\n      draft.layers[instanceId] = { ...config, order };\n    });\n\n    // Add the URDF renderable\n    this.#loadUrdf(instanceId, undefined);\n\n    // Update the settings tree\n    this.updateSettingsTree();\n  };\n\n  #fetchUrdf(instanceId: string, url: string): void {\n    const renderable = this.renderables.get(instanceId);\n    if (!renderable) {\n      throw new Error(`_fetchUrdf() should only be called for existing renderables`);\n    }\n\n    // Check if a valid URL was provided\n    if (!isValidUrl(url)) {\n      const path = renderable.userData.settingsPath;\n      this.renderer.settings.errors.add(path, VALID_URL_ERR, `Invalid URDF URL: \"${url}\"`);\n      return;\n    }\n    this.renderer.settings.errors.remove(renderable.userData.settingsPath, VALID_URL_ERR);\n\n    // Check if this URL has already been fetched\n    if (renderable.userData.url === url) {\n      return;\n    }\n\n    if (renderable.userData.fetching) {\n      // Check if this fetch is already in progress\n      if (renderable.userData.fetching.url === url) {\n        return;\n      }\n\n      // Cancel the previous fetch\n      renderable.userData.fetching.control.abort();\n    }\n\n    log.debug(`Fetching URDF from ${url}`);\n    renderable.userData.fetching = { url, control: new AbortController() };\n    fetch(url, { signal: renderable.userData.fetching.control.signal })\n      // eslint-disable-next-line @typescript-eslint/promise-function-async\n      .then((res) => res.text())\n      .then((urdf) => {\n        log.debug(`Fetched ${urdf.length} byte URDF from ${url}`);\n        this.renderer.settings.errors.remove([\"layers\", instanceId], FETCH_URDF_ERR);\n        this.#loadUrdf(instanceId, urdf);\n      })\n      .catch((unknown) => {\n        const err = unknown as Error;\n        const hasError = !err.message.startsWith(\"Failed to fetch\");\n        const errMessage = `Failed to load URDF from \"${url}\"${hasError ? `: ${err.message}` : \"\"}`;\n        this.renderer.settings.errors.add([\"layers\", instanceId], FETCH_URDF_ERR, errMessage);\n      });\n  }\n\n  #getCurrentSettings(instanceId: string) {\n    const isTopicOrParam = instanceId === TOPIC_NAME || instanceId === PARAM_KEY;\n    const baseSettings = isTopicOrParam ? DEFAULT_SETTINGS : DEFAULT_CUSTOM_SETTINGS;\n    const userSettings = isTopicOrParam\n      ? this.renderer.config.topics[instanceId]\n      : this.renderer.config.layers[instanceId];\n    const settings = { ...baseSettings, ...userSettings, instanceId };\n    return settings;\n  }\n\n  #loadUrdf(instanceId: string, urdf: string | undefined): void {\n    let renderable = this.renderables.get(instanceId);\n    if (renderable && urdf != undefined && renderable.userData.urdf === urdf) {\n      const settings = this.#getCurrentSettings(instanceId);\n      renderable.userData.settings = settings;\n      return;\n    }\n\n    // Clear any previous parsed data for this instanceId\n    this.#transformsByInstanceId.delete(instanceId);\n    this.#framesByInstanceId.delete(instanceId);\n    this.updateSettingsTree();\n\n    const isTopicOrParam = instanceId === TOPIC_NAME || instanceId === PARAM_KEY;\n    const frameId = this.renderer.fixedFrameId ?? \"\"; // Unused\n    const settingsPath = isTopicOrParam ? [\"topics\", instanceId] : [\"layers\", instanceId];\n    const settings = this.#getCurrentSettings(instanceId);\n    const url = (settings as Partial<LayerSettingsCustomUrdf>).url;\n\n    // Create a UrdfRenderable if it does not already exist\n    if (!renderable) {\n      renderable = new UrdfRenderable(instanceId, this.renderer, {\n        urdf,\n        url: urdf != undefined ? url : undefined,\n        fetching: undefined,\n        renderables: new Map(),\n        receiveTime: 0n,\n        messageTime: 0n,\n        frameId,\n        pose: makePose(),\n        settingsPath,\n        settings,\n      });\n      this.add(renderable);\n      this.renderables.set(instanceId, renderable);\n    }\n\n    renderable.userData.urdf = urdf;\n    renderable.userData.url = urdf != undefined ? url : undefined;\n    renderable.userData.settings = settings;\n    renderable.userData.fetching = undefined;\n\n    if (!urdf) {\n      renderable.removeChildren();\n\n      // Fetch the URDF from the URL if we have one\n      if (url != undefined) {\n        this.#fetchUrdf(instanceId, url);\n      }\n      return;\n    }\n\n    // Parse the URDF\n    const loadedRenderable = renderable;\n    parseUrdf(urdf)\n      .then((parsed) => {\n        this.#loadRobot(loadedRenderable, parsed);\n        // the frame from the settings update is called before the robot is loaded\n        // need to queue another animation frame after robot has been loaded\n        this.renderer.queueAnimationFrame();\n      })\n      .catch((unknown) => {\n        const err = unknown as Error;\n        log.error(`Failed to parse URDF: ${err.message}`);\n        this.renderer.settings.errors.add(\n          settingsPath,\n          PARSE_URDF_ERR,\n          `Failed to parse URDF: ${err.message}`,\n        );\n      });\n  }\n\n  #loadRobot(renderable: UrdfRenderable, { robot, frames, transforms }: ParsedUrdf): void {\n    const renderer = this.renderer;\n    const instanceId = renderable.userData.settings.instanceId;\n\n    this.#loadFrames(instanceId, frames);\n    this.#loadTransforms(instanceId, transforms);\n    this.updateSettingsTree();\n\n    // Dispose any existing renderables\n    renderable.removeChildren();\n\n    const createChild = (frameId: string, i: number, visual: UrdfVisual): void => {\n      const baseUrl = renderable.userData.url;\n      const childRenderable = createRenderable(visual, robot, i, frameId, renderer, baseUrl);\n      // Set the childRenderable settingsPath so errors route to the correct place\n      childRenderable.userData.settingsPath = renderable.userData.settingsPath;\n      renderable.userData.renderables.set(childRenderable.name, childRenderable);\n      renderable.add(childRenderable);\n    };\n\n    // Create a renderable for each link\n    for (const link of robot.links.values()) {\n      const frameId = link.name;\n\n      for (let i = 0; i < link.visuals.length; i++) {\n        createChild(frameId, i, link.visuals[i]!);\n      }\n\n      if (link.visuals.length === 0 && link.colliders.length > 0) {\n        // If there are no visuals, but there are colliders, render those instead\n        for (let i = 0; i < link.colliders.length; i++) {\n          createChild(frameId, i, link.colliders[i]!);\n        }\n      }\n    }\n  }\n\n  #loadFrames(instanceId: string, frames: string[]): void {\n    this.#framesByInstanceId.set(instanceId, frames);\n\n    // Import all coordinate frames from the URDF into the scene\n    for (const frameId of frames) {\n      this.renderer.addCoordinateFrame(frameId);\n    }\n  }\n\n  #loadTransforms(instanceId: string, transforms: TransformData[]): void {\n    this.#transformsByInstanceId.set(instanceId, transforms);\n\n    // Import all transforms from the URDF into the scene\n    const isTopicOrParam = instanceId === TOPIC_NAME || instanceId === PARAM_KEY;\n    const settingsPath = isTopicOrParam ? [\"topics\", instanceId] : [\"layers\", instanceId];\n    for (const { parent, child, translation, rotation } of transforms) {\n      this.renderer.addTransform(parent, child, 0n, translation, rotation, settingsPath);\n    }\n  }\n}\n\nasync function parseUrdf(text: string): Promise<ParsedUrdf> {\n  const fileFetcher = getFileFetch();\n\n  try {\n    log.debug(`Parsing ${text.length} byte URDF`);\n    const robot = await parseRobot(text, fileFetcher);\n\n    const frames = Array.from(robot.links.values(), (link) => link.name);\n    const transforms = Array.from(robot.joints.values(), (joint) => {\n      const translation = joint.origin.xyz;\n      const rotation = eulerToQuaternion(joint.origin.rpy);\n      const transform: TransformData = {\n        parent: joint.parent,\n        child: joint.child,\n        translation,\n        rotation,\n        joint,\n      };\n      return transform;\n    });\n\n    return { robot, frames, transforms };\n  } catch (err) {\n    throw new Error(`Failed to parse ${text.length} byte URDF: ${err}`);\n  }\n}\n\nfunction getFileFetch(): (url: string) => Promise<string> {\n  return async (url: string) => {\n    try {\n      log.debug(`fetch(${url}) requested`);\n      const res = await fetch(url);\n      return await res.text();\n    } catch (err) {\n      throw new Error(`Failed to fetch \"${url}\": ${err}`);\n    }\n  };\n}\n\nfunction createRenderable(\n  visual: UrdfVisual,\n  robot: UrdfRobot,\n  id: number,\n  frameId: string,\n  renderer: IRenderer,\n  baseUrl: string | undefined,\n): Renderable {\n  const name = `${frameId}-${id}-${visual.geometry.geometryType}`;\n  const orientation = eulerToQuaternion(visual.origin.rpy);\n  const pose = { position: visual.origin.xyz, orientation };\n  const color = getColor(visual, robot);\n  const type = visual.geometry.geometryType;\n  switch (type) {\n    case \"box\": {\n      const scale = visual.geometry.size;\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableCube(name, marker, undefined, renderer);\n    }\n    case \"cylinder\": {\n      const cylinder = visual.geometry;\n      const scale = { x: cylinder.radius * 2, y: cylinder.radius * 2, z: cylinder.length };\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableCylinder(name, marker, undefined, renderer);\n    }\n    case \"sphere\": {\n      const sphere = visual.geometry;\n      const scale = { x: sphere.radius * 2, y: sphere.radius * 2, z: sphere.radius * 2 };\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableSphere(name, marker, undefined, renderer);\n    }\n    case \"mesh\": {\n      const isCollada = visual.geometry.filename.toLowerCase().endsWith(\".dae\");\n      // Use embedded materials if the mesh is a Collada file or if no material is defined in the URDF\n      const embedded =\n        isCollada || !visual.material ? EmbeddedMaterialUsage.Use : EmbeddedMaterialUsage.Ignore;\n      const marker = createMeshMarker(frameId, pose, embedded, visual.geometry, baseUrl, color);\n      return new RenderableMeshResource(name, marker, undefined, renderer);\n    }\n    default:\n      throw new Error(`Unrecognized visual geometryType: ${type}`);\n  }\n}\n\nfunction getColor(visual: UrdfVisual, robot: UrdfRobot): ColorRGBA {\n  if (!visual.material) {\n    return DEFAULT_COLOR;\n  }\n  if (visual.material.color) {\n    return visual.material.color;\n  }\n  if (visual.material.name) {\n    return robot.materials.get(visual.material.name)?.color ?? DEFAULT_COLOR;\n  }\n  return DEFAULT_COLOR;\n}\n\nfunction createMarker(\n  frameId: string,\n  type: MarkerType,\n  pose: Pose,\n  scale: Vector3,\n  color: ColorRGBA,\n): Marker {\n  return {\n    header: { frame_id: frameId, stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type,\n    action: MarkerAction.ADD,\n    pose,\n    scale,\n    color,\n    lifetime: { sec: 0, nsec: 0 },\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}\n\nfunction createMeshMarker(\n  frameId: string,\n  pose: Pose,\n  embeddedMaterialUsage: EmbeddedMaterialUsage,\n  mesh: UrdfGeometryMesh,\n  baseUrl: string | undefined,\n  color: ColorRGBA,\n): Marker {\n  const scale = mesh.scale ?? VEC3_ONE;\n  return {\n    header: { frame_id: frameId, stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type: MarkerType.MESH_RESOURCE,\n    action: MarkerAction.ADD,\n    pose,\n    scale,\n    color,\n    lifetime: { sec: 0, nsec: 0 },\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: new URL(mesh.filename, baseUrl).toString(),\n    mesh_use_embedded_materials: embeddedMaterialUsage === EmbeddedMaterialUsage.Use,\n  };\n}\n\nconst VALID_PROTOCOLS = [\"https:\", \"http:\", \"file:\", \"data:\"];\n\nfunction isValidUrl(str: string): boolean {\n  try {\n    const url = new URL(str);\n    return (\n      (supportsPackageUrl && url.protocol === \"package:\") || VALID_PROTOCOLS.includes(url.protocol)\n    );\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction urdfChildren(\n  transforms: TransformData[] | undefined,\n  transformTree: TransformTree,\n  jointStates: Map<string, JointPosition>,\n): SettingsTreeChildren {\n  if (!transforms) {\n    return {};\n  }\n\n  const jointChildren: SettingsTreeChildren = {};\n  for (const { joint } of transforms) {\n    const frameId = joint.child;\n    const frame = transformTree.getOrCreateFrame(frameId);\n\n    const { x, y, z } = joint.origin.xyz;\n    const { x: roll, y: pitch, z: yaw } = joint.origin.rpy;\n    const { x: aX, y: aY, z: aZ } = joint.axis;\n    const fields: SettingsTreeFields = {};\n    fields.jointType = {\n      label: \"Type\",\n      input: \"string\",\n      readonly: true,\n      value: joint.jointType,\n    };\n\n    switch (joint.jointType) {\n      case \"fixed\":\n        break;\n      case \"continuous\":\n      case \"revolute\": {\n        const min = joint.limit ? joint.limit.lower * RAD2DEG : -180;\n        const max = joint.limit ? joint.limit.upper * RAD2DEG : 180;\n        let manualDegrees: number | undefined;\n        const jointStateRadians = jointStates.get(joint.name)?.position;\n\n        if (frame.offsetEulerDegrees) {\n          // Convert the Euler degrees to a quaternion\n          const quaternion = eulerDegreesToQuaternion(frame.offsetEulerDegrees);\n          const radians = signedAngleAroundAxis(quaternion, joint.axis);\n          manualDegrees = radians * RAD2DEG;\n        }\n\n        fields.manual = {\n          label: \"Manual angle\",\n          input: \"number\",\n          precision: PRECISION_DEGREES,\n          step: 1,\n          min,\n          max,\n          value: manualDegrees,\n        };\n\n        if (jointStateRadians != undefined) {\n          fields.jointState = {\n            label: \"JointState angle\",\n            input: \"number\",\n            precision: PRECISION_DEGREES,\n            min,\n            max,\n            readonly: true,\n            value: jointStateRadians * RAD2DEG,\n          };\n        }\n        break;\n      }\n      case \"prismatic\": {\n        const min = joint.limit?.lower;\n        const max = joint.limit?.upper;\n        const manualPosition = frame.offsetPosition\n          ? signedDistanceAlongAxis(frame.offsetPosition, joint.axis)\n          : undefined;\n        const jointStatePosition = jointStates.get(joint.name)?.position;\n\n        fields.manual = {\n          label: \"Manual position\",\n          input: \"number\",\n          precision: PRECISION_DISTANCE,\n          step: 0.01,\n          min,\n          max,\n          value: manualPosition,\n        };\n        if (jointStatePosition != undefined) {\n          fields.jointState = {\n            label: \"JointState position\",\n            input: \"number\",\n            precision: PRECISION_DISTANCE,\n            min,\n            max,\n            readonly: true,\n            value: jointStatePosition,\n          };\n        }\n        break;\n      }\n      case \"floating\":\n      case \"planar\":\n        // Motion could be supported for these types in the future\n        break;\n    }\n\n    fields.position = {\n      label: \"Position\",\n      input: \"vec3\",\n      labels: XYZ_LABEL,\n      precision: PRECISION_DISTANCE,\n      readonly: true,\n      value: [x, y, z],\n    };\n    fields.rotation = {\n      label: \"Rotation\",\n      input: \"vec3\",\n      labels: RPY_LABEL,\n      precision: PRECISION_DEGREES,\n      readonly: true,\n      value: [roll * RAD2DEG, pitch * RAD2DEG, yaw * RAD2DEG],\n    };\n    fields.parent = {\n      label: \"Parent\",\n      input: \"string\",\n      readonly: true,\n      value: joint.parent,\n    };\n    fields.child = {\n      label: \"Child\",\n      input: \"string\",\n      readonly: true,\n      value: joint.child,\n    };\n    if (joint.jointType !== \"fixed\") {\n      fields.axis = {\n        label: \"Axis\",\n        input: \"vec3\",\n        labels: XYZ_LABEL,\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: [aX, aY, aZ],\n      };\n    }\n    if (joint.calibration) {\n      const { rising, falling } = joint.calibration;\n      fields.calibration = {\n        label: \"Calibration\",\n        input: \"vec2\",\n        labels: [\"↑\", \"↓\"],\n        readonly: true,\n        value: [rising, falling],\n      };\n    }\n    if (joint.dynamics) {\n      const { damping, friction } = joint.dynamics;\n      fields.damping = {\n        label: \"Damping\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: damping,\n      };\n      fields.friction = {\n        label: \"Friction\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: friction,\n      };\n    }\n    if (joint.limit) {\n      const { effort, velocity } = joint.limit;\n      if (joint.jointType !== \"continuous\" && joint.jointType !== \"fixed\") {\n        const { upper, lower } = joint.limit;\n        const isAngular = joint.jointType === \"revolute\";\n        const upperValue = isAngular ? upper * RAD2DEG : upper;\n        const lowerValue = isAngular ? lower * RAD2DEG : lower;\n        fields.limit = {\n          label: \"Limit\",\n          input: \"vec2\",\n          labels: [\"↑\", \"↓\"],\n          readonly: true,\n          precision: isAngular ? PRECISION_DEGREES : PRECISION_DISTANCE,\n          value: [upperValue, lowerValue],\n        };\n      }\n      fields.effort = {\n        label: \"Limit effort\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: effort,\n      };\n      fields.velocity = {\n        label: \"Limit velocity\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: velocity,\n      };\n    }\n    if (joint.mimic) {\n      const { joint: mimicJoint, multiplier, offset } = joint.mimic;\n      fields.mimicJoint = {\n        label: \"Mimic joint\",\n        input: \"string\",\n        readonly: true,\n        value: mimicJoint,\n      };\n      fields.mimicMultiplier = {\n        label: \"Mimic multiplier\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: multiplier,\n      };\n      fields.mimicOffset = {\n        label: \"Mimic offset\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: offset,\n      };\n    }\n    if (joint.safetyController) {\n      const { softUpperLimit, softLowerLimit, kPosition, kVelocity } = joint.safetyController;\n      fields.softLimit = {\n        label: \"Soft limit\",\n        input: \"vec2\",\n        labels: [\"↑\", \"↓\"],\n        readonly: true,\n        value: [softUpperLimit, softLowerLimit],\n      };\n      fields.kPosition = {\n        label: \"k_position\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: kPosition,\n      };\n      fields.kVelocity = {\n        label: \"k_velocity\",\n        input: \"number\",\n        precision: PRECISION_DISTANCE,\n        readonly: true,\n        value: kVelocity,\n      };\n    }\n    jointChildren[joint.name] = { label: joint.name, fields, defaultExpansionState: \"collapsed\" };\n  }\n\n  const children: SettingsTreeChildren = {\n    joints: {\n      label: \"Joints\",\n      defaultExpansionState: \"collapsed\",\n      children: jointChildren,\n    },\n  };\n  return children;\n}\n\nfunction eulerDegreesToQuaternion(eulerDegrees: vec3): THREE.Quaternion {\n  tempEuler.set(eulerDegrees[0] * DEG2RAD, eulerDegrees[1] * DEG2RAD, eulerDegrees[2] * DEG2RAD);\n  return tempQuaternion1.setFromEuler(tempEuler);\n}\n\nfunction signedDistanceAlongAxis(position: Readonly<vec3>, axis: Readonly<Vector3>): number {\n  const p = tempVec3a.set(position[0], position[1], position[2]);\n  const targetAxis = tempVec3b.set(axis.x, axis.y, axis.z);\n\n  // Project the position on to axis\n  p.projectOnVector(targetAxis);\n  const distance = p.length();\n\n  // Calculate the sign\n  const dotProduct = p.dot(targetAxis);\n  const sign = dotProduct < 0 ? -1 : 1;\n\n  return sign * distance;\n}\n\n// Find the signed angle of a rotation around a given axis\nfunction signedAngleAroundAxis(rotation: Readonly<Quaternion>, axis: Readonly<Vector3>): number {\n  const rotationAxis = tempVec3a.set(rotation.x, rotation.y, rotation.z);\n  const targetAxis = tempVec3b.set(axis.x, axis.y, axis.z);\n\n  // Project the rotation axis onto the given axis\n  const p = rotationAxis.projectOnVector(targetAxis);\n\n  // Create a twist quaternion from the projected axis and original rotation angle\n  const twist = tempQuaternion2.set(p.x, p.y, p.z, rotation.w);\n  twist.normalize();\n\n  // Calculate the twist angle ([0, PI])\n  const angle = 2 * Math.acos(twist.w);\n\n  // Calculate the sign of the twist angle\n  const dotProduct = tempVec3a.set(twist.x, twist.y, twist.z).dot(targetAxis);\n  const sign = dotProduct < 0 ? -1 : 1;\n\n  return sign * angle;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { toNanoSec, toSec } from \"@foxglove/rostime\";\nimport { NumericType, PointCloud as FoxglovePointCloud } from \"@foxglove/schemas\";\nimport { MessageEvent, SettingsTreeAction } from \"@foxglove/studio\";\nimport {\n  createStixelMaterial,\n  PointCloudRenderable,\n} from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/PointClouds\";\nimport type { RosObject } from \"@foxglove/studio-base/players/types\";\nimport { VelodynePacket, VelodyneScan } from \"@foxglove/studio-base/types/Messages\";\nimport {\n  Calibration,\n  Model,\n  PointCloud,\n  PointFieldDataType,\n  RawPacket,\n  Transformer,\n} from \"@foxglove/velodyne-cloud\";\n\nimport {\n  autoSelectColorField,\n  createInstancePickingMaterial,\n  createPickingMaterial,\n  DEFAULT_POINT_SETTINGS,\n  LayerSettingsPointExtension,\n  pointSettingsNode,\n  pointCloudMaterial,\n  POINT_CLOUD_REQUIRED_FIELDS,\n} from \"./pointExtensionUtils\";\nimport type { AnyRendererSubscription, IRenderer } from \"../IRenderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry, SettingsTreeNodeWithActionHandler } from \"../SettingsManager\";\nimport { VELODYNE_SCAN_DATATYPES } from \"../ros\";\nimport { topicIsConvertibleToSchema } from \"../topicIsConvertibleToSchema\";\nimport { makePose } from \"../transforms\";\n\ntype LayerSettingsVelodyneScans = LayerSettingsPointExtension & {\n  stixelsEnabled: boolean;\n};\nconst DEFAULT_SETTINGS = { ...DEFAULT_POINT_SETTINGS, stixelsEnabled: false };\n\nexport function pointFieldDataTypeToNumericType(type: PointFieldDataType): NumericType {\n  switch (type) {\n    case PointFieldDataType.UINT8:\n      return NumericType.UINT8;\n    case PointFieldDataType.INT8:\n      return NumericType.INT8;\n    case PointFieldDataType.UINT16:\n      return NumericType.UINT16;\n    case PointFieldDataType.INT16:\n      return NumericType.INT16;\n    case PointFieldDataType.UINT32:\n      return NumericType.UINT32;\n    case PointFieldDataType.INT32:\n      return NumericType.INT32;\n    case PointFieldDataType.FLOAT32:\n      return NumericType.FLOAT32;\n    case PointFieldDataType.FLOAT64:\n      return NumericType.FLOAT64;\n    default:\n      return NumericType.UNKNOWN;\n  }\n}\n\n// Converts `velodyne_msgs/VelodyneScan` messages into `VelodyneScanDecoded`\n// objects which are an amalgamation of VelodyneScan and PointCloud2 ROS\n// messages plus marker-like SceneBuilder annotations\nclass VelodyneCloudConverter {\n  #transformers = new Map<Model, Transformer>();\n\n  public decode(scan: VelodyneScan): FoxglovePointCloud | undefined {\n    if (scan.packets.length === 0) {\n      return undefined;\n    }\n\n    const firstPacketData = scan.packets[0] as VelodynePacket;\n    const model = RawPacket.InferModel(firstPacketData.data);\n    if (model == undefined) {\n      return undefined;\n    }\n\n    const stamp = toSec(scan.header.stamp);\n    const maxPoints = RawPacket.MAX_POINTS_PER_PACKET * scan.packets.length;\n    const cloud = new PointCloud({ stamp, maxPoints });\n    const transformer = this.getTransformer(model);\n\n    for (const packet of scan.packets) {\n      transformer.unpack(new RawPacket(packet.data), stamp, toSec(packet.stamp), cloud);\n    }\n\n    cloud.trim();\n\n    if (cloud.width === 0 || cloud.height === 0) {\n      return undefined;\n    }\n\n    return {\n      timestamp: scan.header.stamp,\n      frame_id: scan.header.frame_id,\n      pose: makePose(),\n      point_stride: cloud.point_step,\n      fields: cloud.fields.map((field) => ({\n        name: field.name,\n        offset: field.offset,\n        type: pointFieldDataTypeToNumericType(field.datatype),\n      })),\n      data: cloud.data,\n    };\n  }\n\n  public getTransformer(model: Model): Transformer {\n    let transformer = this.#transformers.get(model);\n    if (transformer != undefined) {\n      return transformer;\n    }\n\n    transformer = new Transformer(new Calibration(model));\n    this.#transformers.set(model, transformer);\n    return transformer;\n  }\n}\n\nexport class VelodyneScans extends SceneExtension<PointCloudRenderable> {\n  #pointCloudFieldsByTopic = new Map<string, string[]>();\n  #velodyneCloudConverter = new VelodyneCloudConverter();\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.VelodyneScans\", renderer);\n  }\n\n  public override getSubscriptions(): readonly AnyRendererSubscription[] {\n    return [\n      {\n        type: \"schema\",\n        schemaNames: VELODYNE_SCAN_DATATYPES,\n        subscription: { handler: this.#handleVelodyneScan },\n      },\n    ];\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const configTopics = this.renderer.config.topics;\n    const handler = this.handleSettingsAction;\n    const entries: SettingsTreeEntry[] = [];\n    for (const topic of this.renderer.topics ?? []) {\n      if (!topicIsConvertibleToSchema(topic, VELODYNE_SCAN_DATATYPES)) {\n        continue;\n      }\n      const config = (configTopics[topic.name] ?? {}) as Partial<LayerSettingsVelodyneScans>;\n      const messageFields =\n        this.#pointCloudFieldsByTopic.get(topic.name) ?? POINT_CLOUD_REQUIRED_FIELDS;\n      const node: SettingsTreeNodeWithActionHandler = pointSettingsNode(\n        topic,\n        messageFields,\n        config,\n      );\n      node.fields!.stixelsEnabled = {\n        label: \"Stixel view\",\n        input: \"boolean\",\n        value: config.stixelsEnabled ?? DEFAULT_SETTINGS.stixelsEnabled,\n      };\n      node.handler = handler;\n      node.icon = \"Points\";\n      entries.push({ path: [\"topics\", topic.name], node });\n    }\n    return entries;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"update\" || path.length !== 3) {\n      return;\n    }\n\n    this.saveSetting(path, action.payload.value);\n\n    // Update the renderable\n    const topicName = path[1]!;\n    const renderable = this.renderables.get(topicName);\n    if (renderable) {\n      const prevSettings = this.renderer.config.topics[topicName] as\n        | Partial<LayerSettingsVelodyneScans>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...prevSettings };\n      renderable.updatePointCloud(\n        renderable.userData.pointCloud,\n        renderable.userData.originalMessage,\n        settings,\n        renderable.userData.receiveTime,\n      );\n    }\n  };\n\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    // Do not call super.startFrame() since we handle updatePose() manually.\n    // Instead of updating the pose for each Renderable in this.renderables, we\n    // update the pose of each THREE.Points object in the pointsHistory of each\n    // renderable\n\n    for (const renderable of this.renderables.values()) {\n      renderable.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n  }\n\n  #handleVelodyneScan = (messageEvent: MessageEvent<VelodyneScan>): void => {\n    const { topic } = messageEvent;\n    const receiveTime = toNanoSec(messageEvent.receiveTime);\n    const pointCloud = this.#velodyneCloudConverter.decode(messageEvent.message);\n    if (!pointCloud) {\n      return;\n    }\n\n    let renderable = this.renderables.get(topic);\n    if (!renderable) {\n      // Set the initial settings from default values merged with any user settings\n      const userSettings = this.renderer.config.topics[topic] as\n        | Partial<LayerSettingsVelodyneScans>\n        | undefined;\n      const settings = { ...DEFAULT_SETTINGS, ...userSettings };\n      if (settings.colorField == undefined) {\n        autoSelectColorField(settings, pointCloud, { supportsPackedRgbModes: false });\n\n        // Update user settings with the newly selected color field\n        this.renderer.updateConfig((draft) => {\n          const updatedUserSettings = { ...userSettings };\n          updatedUserSettings.colorField = settings.colorField;\n          updatedUserSettings.colorMode = settings.colorMode;\n          updatedUserSettings.colorMap = settings.colorMap;\n          draft.topics[topic] = updatedUserSettings;\n        });\n      }\n\n      const material = pointCloudMaterial(settings);\n      const pickingMaterial = createPickingMaterial(settings);\n      const instancePickingMaterial = createInstancePickingMaterial(settings);\n      const stixelMaterial = createStixelMaterial(settings);\n\n      const messageTime = toNanoSec(pointCloud.timestamp);\n      renderable = new PointCloudRenderable(topic, this.renderer, {\n        receiveTime,\n        messageTime,\n        frameId: this.renderer.normalizeFrameId(pointCloud.frame_id),\n        pose: makePose(),\n        settingsPath: [\"topics\", topic],\n        settings,\n        topic,\n        pointCloud,\n        originalMessage: messageEvent.message as RosObject,\n        material,\n        pickingMaterial,\n        instancePickingMaterial,\n        stixelMaterial,\n      });\n\n      this.add(renderable);\n      this.renderables.set(topic, renderable);\n    }\n\n    // Update the mapping of topic to point cloud field names if necessary\n    let fields = this.#pointCloudFieldsByTopic.get(messageEvent.topic);\n    if (!fields || fields.length !== pointCloud.fields.length) {\n      fields = pointCloud.fields.map((field) => field.name);\n      this.#pointCloudFieldsByTopic.set(messageEvent.topic, fields);\n      this.updateSettingsTree();\n    }\n\n    renderable.updatePointCloud(\n      pointCloud,\n      messageEvent.message as RosObject,\n      renderable.userData.settings,\n      receiveTime,\n    );\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { ColorRGBA, Vector3 } from \"./ros\";\n\nconst INITIAL_CAPACITY = 4;\n\nconst tempMat4 = new THREE.Matrix4();\n\n/**\n * Extends InstancedMesh with a set() method that takes a list of points and\n * colors and dynamically resizes the buffer attributes.\n */\nexport class DynamicInstancedMesh<\n  TGeometry extends THREE.BufferGeometry = THREE.BufferGeometry,\n  TMaterial extends THREE.Material | THREE.Material[] = THREE.Material | THREE.Material[],\n> extends THREE.InstancedMesh<TGeometry, TMaterial> {\n  // Total size of the buffer attributes, which can be larger than .count (instances in use)\n  #capacity: number;\n\n  public constructor(geometry: TGeometry, material: TMaterial, initialCapacity = INITIAL_CAPACITY) {\n    super(geometry, material, 0);\n\n    this.#capacity = initialCapacity;\n    this.#resize();\n  }\n\n  public set(\n    points: Vector3[],\n    scale: Vector3,\n    colors: ColorRGBA[],\n    defaultColor: ColorRGBA,\n  ): void {\n    const count = points.length;\n    this.#setCount(count);\n\n    const colorArray = this.instanceColor!.array as Uint8ClampedArray;\n    for (let i = 0; i < count; i++) {\n      const point = points[i]!;\n      const color = colors[i] ?? defaultColor;\n\n      tempMat4.makeTranslation(point.x, point.y, point.z);\n      tempMat4.scale(scale as THREE.Vector3);\n      this.setMatrixAt(i, tempMat4);\n\n      colorArray[i * 3 + 0] = (color.r * 255) | 0;\n      colorArray[i * 3 + 1] = (color.g * 255) | 0;\n      colorArray[i * 3 + 2] = (color.b * 255) | 0;\n    }\n    this.instanceMatrix.needsUpdate = true;\n    if (this.instanceColor) {\n      this.instanceColor.needsUpdate = true;\n    }\n  }\n\n  #setCount(count: number) {\n    while (count >= this.#capacity) {\n      this.#expand();\n    }\n    this.count = count;\n    this.instanceMatrix.count = count;\n    this.instanceColor!.count = count;\n  }\n\n  #expand() {\n    this.#capacity = this.#capacity + Math.trunc(this.#capacity / 2) + 16;\n    this.#resize();\n  }\n\n  #resize() {\n    const oldMatrixArray = this.instanceMatrix.array as Float32Array;\n    const oldColorArray = this.instanceColor?.array as Uint8ClampedArray | undefined;\n\n    const newMatrixArray = new Float32Array(this.#capacity * 16);\n    const newColorArray = new Uint8ClampedArray(this.#capacity * 3);\n\n    if (oldMatrixArray.length > 0) {\n      newMatrixArray.set(oldMatrixArray);\n    }\n    if (oldColorArray && oldColorArray.length > 0) {\n      newColorArray.set(oldColorArray);\n    }\n\n    this.instanceMatrix = new THREE.InstancedBufferAttribute(newMatrixArray, 16);\n    this.instanceColor = new THREE.InstancedBufferAttribute(newColorArray, 3, true);\n\n    this.instanceMatrix.setUsage(THREE.DynamicDrawUsage);\n    this.instanceColor.setUsage(THREE.DynamicDrawUsage);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { createGeometry as createCubeGeometry } from \"./RenderableCube\";\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { markerHasTransparency, makeStandardInstancedMaterial } from \"./materials\";\nimport { DynamicInstancedMesh } from \"../../DynamicInstancedMesh\";\nimport type { Renderer } from \"../../Renderer\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableCubeList extends RenderableMarker {\n  #mesh: DynamicInstancedMesh<THREE.BoxGeometry, THREE.MeshStandardMaterial>;\n  // outline: THREE.LineSegments | undefined;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Cube instanced mesh\n    const material = makeStandardInstancedMaterial(marker);\n    const geometry = renderer.sharedGeometry.getGeometry(\"RenderableCube\", createCubeGeometry);\n    this.#mesh = new DynamicInstancedMesh(geometry, material, marker.points.length);\n    this.#mesh.castShadow = true;\n    this.#mesh.receiveShadow = true;\n    this.add(this.#mesh);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.#mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = markerHasTransparency(marker);\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.#mesh.material.transparent = transparent;\n      this.#mesh.material.depthWrite = !transparent;\n      this.#mesh.material.needsUpdate = true;\n    }\n\n    this.#mesh.set(marker.points, marker.scale, marker.colors, marker.color);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { markerHasTransparency, makePointsMaterial } from \"./materials\";\nimport { DynamicBufferGeometry } from \"../../DynamicBufferGeometry\";\nimport type { IRenderer } from \"../../IRenderer\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderablePoints extends RenderableMarker {\n  #geometry: DynamicBufferGeometry;\n  #points: THREE.Points<DynamicBufferGeometry, THREE.PointsMaterial>;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: IRenderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.#geometry = new DynamicBufferGeometry();\n    this.#geometry.createAttribute(\"position\", Float32Array, 3);\n    this.#geometry.createAttribute(\"color\", Uint8Array, 4, true);\n\n    this.#points = new THREE.Points(this.#geometry, makePointsMaterial(marker));\n    this.add(this.#points);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.#points.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = markerHasTransparency(marker);\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.#points.material.transparent = transparent;\n      this.#points.material.depthWrite = !transparent;\n      this.#points.material.needsUpdate = true;\n    }\n\n    this.#points.material.size = marker.scale.x;\n\n    const pointsLength = marker.points.length;\n    this.#geometry.resize(pointsLength);\n    this.#setPositions(marker, pointsLength);\n    this.#setColors(marker, pointsLength);\n  }\n\n  #setPositions(marker: Marker, pointsLength: number): void {\n    const attribute = this.#geometry.getAttribute(\"position\") as THREE.BufferAttribute;\n    const positions = attribute.array as Float32Array;\n    for (let i = 0; i < pointsLength; i++) {\n      const point = marker.points[i]!;\n      positions[i * 3 + 0] = point.x;\n      positions[i * 3 + 1] = point.y;\n      positions[i * 3 + 2] = point.z;\n    }\n    attribute.needsUpdate = true;\n  }\n\n  #setColors(marker: Marker, pointsLength: number): void {\n    // Converts color-per-point to a flattened typed array\n    const attribute = this.#geometry.getAttribute(\"color\") as THREE.BufferAttribute;\n    const rgbaData = attribute.array as Uint8Array;\n    this._markerColorsToLinear(marker, pointsLength, (color, i) => {\n      rgbaData[4 * i + 0] = (color[0] * 255) | 0;\n      rgbaData[4 * i + 1] = (color[1] * 255) | 0;\n      rgbaData[4 * i + 2] = (color[2] * 255) | 0;\n      rgbaData[4 * i + 3] = (color[3] * 255) | 0;\n    });\n    attribute.needsUpdate = true;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { createGeometry as createSphereGeometry } from \"./RenderableSphere\";\nimport { markerHasTransparency, makeStandardInstancedMaterial } from \"./materials\";\nimport { DynamicInstancedMesh } from \"../../DynamicInstancedMesh\";\nimport type { Renderer } from \"../../Renderer\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableSphereList extends RenderableMarker {\n  #mesh: DynamicInstancedMesh<THREE.SphereGeometry, THREE.MeshStandardMaterial>;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    // Sphere instanced mesh\n    const geometry = renderer.sharedGeometry.getGeometry(\n      `RenderableSphere-${renderer.maxLod}`,\n      () => createSphereGeometry(renderer.maxLod),\n    );\n    const material = makeStandardInstancedMaterial(marker);\n    this.#mesh = new DynamicInstancedMesh(geometry, material, marker.points.length);\n    this.#mesh.castShadow = true;\n    this.#mesh.receiveShadow = true;\n    this.add(this.#mesh);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.#mesh.material.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    const transparent = markerHasTransparency(marker);\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.#mesh.material.transparent = transparent;\n      this.#mesh.material.depthWrite = !transparent;\n      this.#mesh.material.needsUpdate = true;\n    }\n\n    this.#mesh.set(marker.points, marker.scale, marker.colors, marker.color);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Label } from \"@foxglove/three-text\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport type { Renderer } from \"../../Renderer\";\nimport { getLuminance, SRGBToLinear } from \"../../color\";\nimport { Marker } from \"../../ros\";\n\nexport class RenderableTextViewFacing extends RenderableMarker {\n  #label: Label;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.#label = renderer.labelPool.acquire();\n    this.#label.setBillboard(true);\n\n    this.add(this.#label);\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.renderer.labelPool.release(this.#label);\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    this.#label.setText(marker.text);\n    this.#label.setColor(\n      SRGBToLinear(marker.color.r),\n      SRGBToLinear(marker.color.g),\n      SRGBToLinear(marker.color.b),\n    );\n\n    const foregroundIsDark = getLuminance(marker.color.r, marker.color.g, marker.color.b) < 0.5;\n    if (foregroundIsDark) {\n      this.#label.setBackgroundColor(1, 1, 1);\n    } else {\n      this.#label.setBackgroundColor(0, 0, 0);\n    }\n    this.#label.setOpacity(marker.color.a);\n    this.#label.setLineHeight(marker.scale.z);\n    this.#label.userData.pose = marker.pose;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nimport { RenderableMarker } from \"./RenderableMarker\";\nimport { markerHasTransparency, makeStandardVertexColorMaterial } from \"./materials\";\nimport { DynamicBufferGeometry } from \"../../DynamicBufferGeometry\";\nimport type { Renderer } from \"../../Renderer\";\nimport { rgbaToLinear } from \"../../color\";\nimport { Marker, Vector3 } from \"../../ros\";\n\nconst NOT_DIVISIBLE_ERR = \"NOT_DIVISIBLE\";\nconst EMPTY_ERR = \"EMPTY\";\nconst COLORS_MISMATCH_ERR = \"COLORS_MISMATCH\";\nconst INVALID_POINT_ERR = \"INVALID_POINT\";\n\nconst tempColor = { r: 0, g: 0, b: 0, a: 0 };\n\nexport class RenderableTriangleList extends RenderableMarker {\n  #mesh: THREE.Mesh<DynamicBufferGeometry, THREE.MeshStandardMaterial>;\n\n  public constructor(\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n    renderer: Renderer,\n  ) {\n    super(topic, marker, receiveTime, renderer);\n\n    this.#mesh = new THREE.Mesh(\n      new DynamicBufferGeometry(),\n      makeStandardVertexColorMaterial(marker),\n    );\n    this.#mesh.castShadow = true;\n    this.#mesh.receiveShadow = true;\n    this.add(this.#mesh);\n\n    this.update(marker, receiveTime);\n  }\n\n  public override dispose(): void {\n    this.#mesh.material.dispose();\n    this.#mesh.geometry.dispose();\n  }\n\n  public override update(newMarker: Marker, receiveTime: bigint | undefined): void {\n    const prevMarker = this.userData.marker;\n    super.update(newMarker, receiveTime);\n    const marker = this.userData.marker;\n\n    let vertexCount = marker.points.length;\n    if (vertexCount === 0) {\n      this.renderer.settings.errors.addToTopic(\n        this.userData.topic,\n        EMPTY_ERR,\n        `TRIANGLE_LIST: points is empty`,\n      );\n      this.#mesh.geometry.resize(0);\n      return;\n    }\n    if (vertexCount % 3 !== 0) {\n      const markerId = `${marker.ns.length > 0 ? marker.ns + \":\" : \"\"}${marker.id}`;\n      this.renderer.settings.errors.addToTopic(\n        this.userData.topic,\n        NOT_DIVISIBLE_ERR,\n        `TRIANGLE_LIST: points.length ${vertexCount} is not divisible by 3 for marker ${markerId}`,\n      );\n      vertexCount = Math.floor(vertexCount / 3) * 3;\n    }\n    if (marker.colors.length !== 0 && marker.colors.length !== vertexCount) {\n      const markerId = `${marker.ns.length > 0 ? marker.ns + \":\" : \"\"}${marker.id}`;\n      this.renderer.settings.errors.addToTopic(\n        this.userData.topic,\n        COLORS_MISMATCH_ERR,\n        `TRIANGLE_LIST: colors.length ${marker.colors.length} != points.length ${vertexCount} for marker ${markerId}`,\n      );\n      // Non-critical, we'll fall back to the default color if needed\n    }\n\n    const transparent = markerHasTransparency(marker);\n    if (transparent !== markerHasTransparency(prevMarker)) {\n      this.#mesh.material.transparent = transparent;\n      this.#mesh.material.depthWrite = !transparent;\n      this.#mesh.material.needsUpdate = true;\n    }\n\n    const geometry = this.#mesh.geometry;\n    geometry.resize(vertexCount);\n    if (!geometry.attributes.position) {\n      geometry.createAttribute(\"position\", Float32Array, 3);\n    }\n    if (!geometry.attributes.normal) {\n      geometry.createAttribute(\"normal\", Float32Array, 3);\n    }\n    if (!geometry.attributes.color) {\n      geometry.createAttribute(\"color\", Uint8Array, 4, true);\n    }\n\n    const vertices = geometry.attributes.position!;\n    const colors = geometry.attributes.color!;\n\n    // Update position/color buffers with the new marker data\n    let dataChanged = false;\n    for (let i = 0; i < vertexCount; i++) {\n      const point = marker.points[i]!;\n      if (!isPointValid(point)) {\n        this.renderer.settings.errors.addToTopic(\n          this.userData.topic,\n          INVALID_POINT_ERR,\n          `TRIANGLE_LIST: point at index ${i} is not finite`,\n        );\n        continue;\n      }\n      dataChanged =\n        dataChanged ||\n        vertices.getX(i) !== point.x ||\n        vertices.getY(i) !== point.y ||\n        vertices.getZ(i) !== point.z;\n      vertices.setXYZ(i, point.x, point.y, point.z);\n\n      rgbaToLinear(tempColor, marker.colors[i] ?? marker.color);\n      dataChanged =\n        dataChanged ||\n        colors.getX(i) !== tempColor.r ||\n        colors.getY(i) !== tempColor.g ||\n        colors.getZ(i) !== tempColor.b ||\n        colors.getW(i) !== tempColor.a;\n      colors.setXYZW(i, tempColor.r, tempColor.g, tempColor.b, tempColor.a);\n    }\n\n    if (dataChanged) {\n      // Explicitly tell three.js to send position and color buffers to the GPU\n      vertices.needsUpdate = true;\n      colors.needsUpdate = true;\n      // Build the vertex normal attribute from the position buffer (averaging face normals)\n      geometry.computeVertexNormals();\n      geometry.computeBoundingSphere();\n    }\n  }\n}\n\nfunction isPointValid(pt: Vector3): boolean {\n  return Number.isFinite(pt.x) && Number.isFinite(pt.y) && Number.isFinite(pt.z);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { RenderableArrow } from \"./RenderableArrow\";\nimport { RenderableCube } from \"./RenderableCube\";\nimport { RenderableCubeList } from \"./RenderableCubeList\";\nimport { RenderableCylinder } from \"./RenderableCylinder\";\nimport { RenderableLineList } from \"./RenderableLineList\";\nimport { RenderableLineStrip } from \"./RenderableLineStrip\";\nimport { RenderableMarker, getMarkerId } from \"./RenderableMarker\";\nimport { RenderableMeshResource } from \"./RenderableMeshResource\";\nimport { RenderablePoints } from \"./RenderablePoints\";\nimport { RenderableSphere } from \"./RenderableSphere\";\nimport { RenderableSphereList } from \"./RenderableSphereList\";\nimport { RenderableTextViewFacing } from \"./RenderableTextViewFacing\";\nimport { RenderableTriangleList } from \"./RenderableTriangleList\";\nimport type { Renderer } from \"../../Renderer\";\nimport { MarkerType, Marker } from \"../../ros\";\n\nconst CONSTRUCTORS = {\n  [MarkerType.ARROW]: RenderableArrow,\n  [MarkerType.CUBE]: RenderableCube,\n  [MarkerType.SPHERE]: RenderableSphere,\n  [MarkerType.CYLINDER]: RenderableCylinder,\n  [MarkerType.LINE_STRIP]: RenderableLineStrip,\n  [MarkerType.LINE_LIST]: RenderableLineList,\n  [MarkerType.CUBE_LIST]: RenderableCubeList,\n  [MarkerType.SPHERE_LIST]: RenderableSphereList,\n  [MarkerType.POINTS]: RenderablePoints,\n  [MarkerType.TEXT_VIEW_FACING]: RenderableTextViewFacing,\n  [MarkerType.MESH_RESOURCE]: RenderableMeshResource,\n  [MarkerType.TRIANGLE_LIST]: RenderableTriangleList,\n};\n\n/**\n * An object pool for RenderableMarker subclass objects.\n */\nexport class MarkerPool {\n  #renderablesByType = new Map<MarkerType, RenderableMarker[]>();\n\n  public constructor(private renderer: Renderer) {}\n\n  public acquire<T extends MarkerType>(\n    type: T,\n    topic: string,\n    marker: Marker,\n    receiveTime: bigint | undefined,\n  ): RenderableMarker {\n    const renderables = this.#renderablesByType.get(type);\n    if (renderables) {\n      const renderable = renderables.pop();\n      if (renderable) {\n        renderable.userData.settingsPath = [\"topics\", topic];\n        renderable.userData.settings = { visible: true, frameLocked: marker.frame_locked };\n        renderable.userData.topic = topic;\n        renderable.name = getMarkerId(topic, marker.ns, marker.id);\n        renderable.update(marker, receiveTime);\n        return renderable;\n      }\n    }\n    const renderable = new CONSTRUCTORS[type](topic, marker, receiveTime, this.renderer);\n    return renderable;\n  }\n\n  public release(renderable: RenderableMarker): void {\n    const type = renderable.userData.marker.type as MarkerType;\n    const renderables = this.#renderablesByType.get(type);\n    if (!renderables) {\n      this.#renderablesByType.set(type, [renderable]);\n    } else {\n      renderables.push(renderable);\n    }\n  }\n\n  public dispose(): void {\n    for (const renderables of this.#renderablesByType.values()) {\n      for (const renderable of renderables) {\n        renderable.dispose();\n      }\n    }\n    this.#renderablesByType.clear();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SettingsTreeAction, SettingsTreeChildren, SettingsTreeFields } from \"@foxglove/studio\";\n\nimport type { IRenderer } from \"../IRenderer\";\nimport { SceneExtension } from \"../SceneExtension\";\nimport { SettingsTreeEntry } from \"../SettingsManager\";\nimport { BaseUserData, Renderable } from \"../Renderable\";\nimport { BaseSettings, CustomLayerSettings } from \"../settings\";\nimport Logger from \"@foxglove/log\";\nimport { UrdfGeometry, UrdfVisual } from \"@foxglove/den/urdf/types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Pose, makePose, xyzrpyToPose } from \"../transforms\";\n\nimport {\n  ColorRGBA,\n  Marker,\n  MarkerAction,\n  MarkerType,\n  Vector3,\n} from \"../ros\";\n\nimport { Euler, eulerToQuaternion, quaternionToEuler } from \"@foxglove/studio-base/util/geometry\";\nimport { RenderableCube } from \"./markers/RenderableCube\";\nimport { RenderableCylinder } from \"./markers/RenderableCylinder\";\nimport { RenderableSphere } from \"./markers/RenderableSphere\";\nimport { updatePose } from \"../updatePose\";\nimport { LayerSettingsCustomUrdf, Urdfs } from \"./Urdfs\";\nimport {\n  PRECISION_DISTANCE,\n  PRECISION_DEGREES,\n} from \"../settings\";\nimport { Path } from \"../LayerErrors\";\nimport { vec3 } from \"gl-matrix\";\nimport { DEG2RAD } from \"three/src/math/MathUtils\";\nimport { rgbaToCssString, stringToRgba } from \"../color\";\n\nconst log = Logger.getLogger(__filename);\n\nconst URDF_SAVE_API_ENDPOINT = \"/api/sim2real/urdf/save\";\n\nconst LAYER_ID = \"foxglove.SceneEditor\";\nconst XYZ_LABEL: [string, string, string] = [\"X\", \"Y\", \"Z\"];\nconst RPY_LABEL: [string, string, string] = [\"R\", \"P\", \"Y\"];\nconst POSITION_STEP = 0.01;\n\nexport type LayerSettingsScene = BaseSettings & {\n  instanceId: string;\n  shape: \"box\" | \"sphere\" | \"cylinder\";\n  shapeLabel: string;\n  selectedUrdfFileName: string;\n};\n\nexport type LayerSettingsCustomScene = CustomLayerSettings & {\n  layerId: \"foxglove.SceneEditor\";\n  shape: \"box\" | \"sphere\" | \"cylinder\";\n  shapeLabel: string;\n  selectedUrdfFileName: \"\";\n};\n\nconst DEFAULT_CUSTOM_SETTINGS: LayerSettingsCustomScene = {\n  visible: true,\n  frameLocked: true,\n  instanceId: \"invalid\",\n  layerId: LAYER_ID,\n  label: \"Scene Editor\",\n  shape: \"box\",\n  shapeLabel: \"\",\n  selectedUrdfFileName: \"\",\n};\n\nexport type SceneEditorUserData = BaseUserData & {\n  settings: LayerSettingsScene | LayerSettingsCustomScene;\n  renderables: Map<string, Renderable>;\n};\n\nexport class SceneRenderable extends Renderable<SceneEditorUserData> {\n  public override dispose(): void {\n    this.removeChildren();\n    super.dispose();\n  }\n\n  public removeChildren(): void {\n    for (const childRenderable of this.userData.renderables.values()) {\n      childRenderable.dispose();\n    }\n    this.children.length = 0;\n    this.userData.renderables.clear();\n  }\n}\n\n\nexport class SceneEditor extends SceneExtension<SceneRenderable> {\n\n  public constructor(renderer: IRenderer) {\n    super(\"foxglove.SceneEditor\", renderer);\n    this.userData.overwriteDialogOpen = false;\n    this.userData.savedDialogOpen = false;\n  }\n\n  public override dispose(): void {\n\n    super.dispose();\n  }\n  public override startFrame(\n    currentTime: bigint,\n    renderFrameId: string,\n    fixedFrameId: string,\n  ): void {\n    for (const renderable of this.renderables.values()) {\n      const path = renderable.userData.settingsPath;\n\n      renderable.visible = renderable.userData.settings.visible;\n      if (!renderable.visible) {\n        this.renderer.settings.errors.clearPath(path);\n        continue;\n      }\n\n      // UrdfRenderables always stay at the origin. Their children renderables\n      // are individually updated since each child exists in a different frame\n      for (const childRenderable of renderable.userData.renderables.values()) {\n        const srcTime = currentTime;\n        const frameId = renderable.userData.frameId;\n        updatePose(\n          childRenderable,\n          this.renderer.transformTree,\n          renderFrameId,\n          fixedFrameId,\n          frameId,\n          currentTime,\n          srcTime,\n        );\n      }\n    }\n  }\n\n  public override settingsNodes(): SettingsTreeEntry[] {\n    const children: SettingsTreeChildren = {};\n    const handler = this.handleSettingsAction;\n    const frames: Array<{ label: string; value: undefined | string }> = [...this.renderer.transformTree.frames()].map(([frameId, _]) => { return { label: frameId, value: frameId } });\n    for (const renderable of this.renderables.values()) {\n      const settings = renderable.userData.settings;\n      const { instanceId } = settings;\n      const label = settings.shapeLabel;\n      const childRenderable = renderable.userData.renderables.values().next().value;\n\n      const position: [number, number, number] = [childRenderable.userData.pose.position.x, childRenderable.userData.pose.position.y, childRenderable.userData.pose.position.z];\n      const orientation: Euler = quaternionToEuler(childRenderable.userData.pose.orientation);\n      const color = rgbaToCssString(childRenderable.userData.marker.color);\n      \n      let customFields: SettingsTreeFields;\n      switch (settings.shape) {\n        case \"box\":\n          customFields = {\n            frameId: {\n              label: \"Parent Frame\",\n              input: \"select\",\n              value: renderable.userData.frameId,\n              options: frames,\n            },\n            \"pose.position\": {\n              label: \"Position\",\n              input: \"vec3\",\n              labels: XYZ_LABEL,\n              precision: PRECISION_DISTANCE,\n              step: POSITION_STEP,\n              value: position,\n            },\n            \"pose.orientation\": {\n              label: \"Orientation\",\n              input: \"vec3\",\n              labels: RPY_LABEL,\n              precision: PRECISION_DEGREES,\n              value: [orientation.roll, orientation.pitch, orientation.yaw],\n            },\n            scale: {\n              label: \"Scale\",\n              input: \"vec3\",\n              labels: XYZ_LABEL,\n              precision: PRECISION_DISTANCE,\n              step: 0.001,\n              min: 0,\n              value: [childRenderable.scale.x, childRenderable.scale.y, childRenderable.scale.z]\n            },\n            color: {\n              label: \"Color\",\n              input: \"rgba\",\n              value: color,\n            },\n          };\n          break;\n        case \"sphere\":\n          customFields = {\n            frameId: {\n              label: \"Parent Frame\",\n              input: \"select\",\n              value: renderable.userData.frameId,\n              options: frames,\n            },\n            \"pose.position\": {\n              label: \"Position\",\n              input: \"vec3\",\n              labels: XYZ_LABEL,\n              precision: PRECISION_DISTANCE,\n              step: POSITION_STEP,\n              value: position,\n            },\n            \"pose.orientation\": {\n              label: \"Orientation\",\n              input: \"vec3\",\n              labels: RPY_LABEL,\n              precision: PRECISION_DEGREES,\n              value: [orientation.roll, orientation.pitch, orientation.yaw],\n            },\n            radius: {\n              label: \"Radius\",\n              input: \"number\",\n              step: 0.001,\n              min: 0,\n              precision: PRECISION_DISTANCE,\n              value: childRenderable.scale.x,\n            },\n            color: {\n              label: \"Color\",\n              input: \"rgba\",\n              value: color,\n            },\n          };\n          break;\n        case \"cylinder\":\n          customFields = {\n            frameId: {\n              label: \"Parent Frame\",\n              input: \"select\",\n              value: renderable.userData.frameId,\n              options: frames,\n            },\n            \"pose.position\": {\n              label: \"Position\",\n              input: \"vec3\",\n              labels: XYZ_LABEL,\n              precision: PRECISION_DISTANCE,\n              step: POSITION_STEP,\n              value: position,\n            },\n            \"pose.orientation\": {\n              label: \"Orientation\",\n              input: \"vec3\",\n              labels: RPY_LABEL,\n              precision: PRECISION_DEGREES,\n              value: [orientation.roll, orientation.pitch, orientation.yaw],\n            },\n            radius: {\n              label: \"Radius\",\n              input: \"number\",\n              step: 0.001,\n              min: 0,\n              precision: PRECISION_DISTANCE,\n              value: childRenderable.scale.x,\n            },\n            length: {\n              label: \"Length\",\n              input: \"number\",\n              step: 0.001,\n              min: 0,\n              precision: PRECISION_DISTANCE,\n              value: childRenderable.scale.z,\n            },\n            color: {\n              label: \"Color\",\n              input: \"rgba\",\n              value: color,\n            },\n          };\n          break;\n        default:\n          customFields = {};\n          break;\n      };\n\n      children[instanceId] = {\n        label,\n        actions: [\n          { id: \"remove\", type: \"action\", label: \"Remove\" },\n        ],\n        fields: customFields,\n        defaultExpansionState: \"collapsed\",\n      };\n    }\n\n    const urdfList = this.#getUrdfList();\n\n    const fields: SettingsTreeFields = {\n      urdfFileName: {\n        input: \"autocomplete\",\n        label: \"URDF File Name\",\n        value: \"\",\n        items: urdfList,\n      },\n      saveButton: {\n        input: \"button\",\n        label: \"\",\n        value: \"Save\",\n        handler: this.saveUrdfFile,\n      },\n      savedDialog: {\n        input: \"dialog\",\n        label: \"\",\n        title: \"Success\",\n        message: \"Saved URDF file successfully. Please refresh the page to load objects from the new URDF file.\",\n        isOpen: this.userData.savedDialogOpen,\n        dialogActions: [\n          {\n            label: \"Cancel\",\n            color: \"primary\",\n            variant: \"outlined\",\n            handler: () => {\n              this.userData.savedDialogOpen = false;\n              this.updateSettingsTree();\n            },\n          },\n          {\n            label: \"Reload\",\n            color: \"success\",\n            variant: \"contained\",\n            handler: () => {\n              window.location.reload();\n            },\n          },\n        ],\n      },\n      overwriteDialog: {\n        input: \"dialog\",\n        label: \"\",\n        title: \"Warning\",\n        message: \"There are no objects in the scene. Do you want to overwrite the URDF file and delete all objects in it?\",\n        isOpen: this.userData.overwriteDialogOpen,\n        dialogActions: [\n          {\n            label: \"Cancel\",\n            color: \"primary\",\n            variant: \"outlined\",\n            handler: () => {\n              this.userData.overwriteDialogOpen = false;\n              this.updateSettingsTree();\n            },\n          },\n          {\n            label: \"Overwrite\",\n            color: \"error\",\n            variant: \"contained\",\n            handler: () => {\n              this.saveUrdfFile();\n              this.userData.overwriteDialogOpen = false;\n              this.updateSettingsTree();\n            },\n          },\n        ],\n      },\n    };\n\n    return [\n      {\n        path: [\"scene_editor\"],\n        node: {\n          label: \"Scene Editor\",\n          actions:\n            [\n              { id: \"add-box\", type: \"action\", label: \"Add Cube\", icon: \"Cube\" },\n              { id: \"add-sphere\", type: \"action\", label: \"Add Sphere\", icon: \"Circle\" },\n              { id: \"add-cylinder\", type: \"action\", label: \"Add Cylinder\", icon: \"Cylinder\" },\n            ],\n          fields,\n          children,\n          defaultExpansionState: \"collapsed\",\n          handler,\n        },\n      },\n    ];\n  }\n\n  public saveUrdfFile = (): void => {\n    let fileName = this.userData.selectedUrdfFileName;\n    if (!fileName) {\n      return;\n    }\n    if (this.renderables.size === 0 && !this.userData.overwriteDialogOpen) {\n      this.userData.overwriteDialogOpen = true;\n      this.updateSettingsTree();\n      return;\n    }\n    let objects = [];\n    for (const renderable of this.renderables.values()) {\n      const settings = renderable.userData.settings;\n      const childRenderable = renderable.userData.renderables.values().next().value;\n\n      const pose = childRenderable.userData.pose;\n      const orientation = quaternionToEuler(pose.orientation);\n      const position = pose.position;\n      const frameId = renderable.userData.frameId;\n      const color = childRenderable.userData.marker.color;\n\n      let scale;\n      if (settings.shape === \"box\") {\n        scale = childRenderable.scale;\n      } else if (settings.shape === \"sphere\") {\n        scale = { radius: childRenderable.scale.x / 2 };\n      } else if (settings.shape === \"cylinder\") {\n        scale = { radius: childRenderable.scale.x / 2, length: childRenderable.scale.z };\n      }\n\n      objects.push({\n        frameId,\n        shape: settings.shape,\n        position: { x: position.x, y: position.y, z: position.z },\n        orientation: { roll: orientation.roll * DEG2RAD, pitch: orientation.pitch * DEG2RAD, yaw: orientation.yaw * DEG2RAD },\n        scale: scale,\n        colorRGBA: color,\n      });\n\n    }\n\n    const data = JSON.stringify(objects, null, 2);\n\n    const illegalRe = /[\\/\\?<>\\\\:\\*\\|\"]/g;\n    const controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\n    const reservedRe = /^\\.+$/;\n    const windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\n    const windowsTrailingRe = /[\\. ]+$/;\n\n    fileName = fileName.replace(illegalRe, \"\").replace(controlRe, \"\").replace(reservedRe, \"\").replace(windowsReservedRe, \"\").replace(windowsTrailingRe, \"\");\n    // post to server with fetch\n    fetch(URDF_SAVE_API_ENDPOINT, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"filename\": fileName,\n      },\n      body: data,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Failed to save URDF file: ${response.status} ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((json) => {\n        if (json.error) {\n          throw new Error(`Failed to save URDF file: ${json.error}`);\n        }\n        log.info(`Saved URDF file: ${fileName}`);\n        this.userData.savedDialogOpen = true;\n        this.updateSettingsTree();\n      })\n      .catch((error) => {\n        log.error(error);\n      });\n  }\n\n  public override saveSetting(path: Path, value: unknown): void {\n    // Update the configuration\n    const instanceId = path[1]!;\n    const renderable = this.renderables.get(instanceId);\n    const settingKey = path[2]!;\n    // get first child renderable\n    const childRenderable = renderable?.userData.renderables.values().next().value;\n    if (!renderable || !childRenderable) {\n      return;\n    }\n    const shape = renderable.userData.settings.shape;\n\n    if (settingKey === \"color\") {\n      debugger;\n      childRenderable.userData.marker.color = stringToRgba(childRenderable.userData.marker.color, value as string);\n      childRenderable.update(childRenderable.userData.marker, childRenderable.userData.receiveTime);\n    }\n\n    if ([\"scale\", \"radius\", \"length\"].includes(settingKey)) {\n      if (shape === \"box\" && Array.isArray(value)) {\n        const scale = {\n          x: value[0],\n          y: value[1],\n          z: value[2],\n        } as Vector3;\n        debugger;\n        childRenderable.userData.marker.scale = scale;\n        childRenderable.update(childRenderable.userData.marker, childRenderable.userData.receiveTime);\n      }\n      else if (shape === \"sphere\") {\n        const radius = value as number;\n        childRenderable.userData.marker.scale = { x: radius, y: radius, z: radius };\n        childRenderable.update(childRenderable.userData.marker, childRenderable.userData.receiveTime);\n      }\n      else if (shape === \"cylinder\") {\n        if (settingKey === \"radius\") {\n          const radius = value as number;\n          childRenderable.userData.marker.scale = { x: radius, y: radius, z: childRenderable.userData.marker.scale.z };\n          childRenderable.update(childRenderable.userData.marker, childRenderable.userData.receiveTime);\n        } else {\n          const length = value as number;\n          childRenderable.userData.marker.scale = { x: childRenderable.userData.marker.scale.x, y: childRenderable.userData.marker.scale.y, z: length };\n          childRenderable.update(childRenderable.userData.marker, childRenderable.userData.receiveTime);\n        }\n      }\n    }\n\n    if (settingKey.includes(\"pose.\")) {\n      if (!childRenderable.userData.pose) {\n        childRenderable.userData.pose = makePose();\n      }\n      if (settingKey === \"pose.position\" && Array.isArray(value)) {\n        childRenderable.userData.pose.position = xyzrpyToPose(value as vec3, [0, 0, 0]).position;\n      } else if (settingKey === \"pose.orientation\" && Array.isArray(value)) {\n        childRenderable.userData.pose.orientation = xyzrpyToPose([0, 0, 0], value as vec3).orientation;\n      }\n    } else {\n      renderable.userData = {\n        ...renderable.userData,\n        [settingKey]: value\n      };\n    }\n\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  }\n\n  #getUrdfList(): string[] {\n    const urdfs = this.renderer.sceneExtensions.get(\n      \"foxglove.Urdfs\",\n    ) as Urdfs | undefined;\n    if (!urdfs) {\n      return [];\n    }\n    const urdfList = [];\n    for (const urdf of urdfs.renderables.values()) {\n      const fileName = (urdf.userData?.settings as LayerSettingsCustomUrdf)?.url?.split(\"/\").pop();\n      if (!fileName) {\n        continue;\n      }\n      urdfList.push(fileName);\n    }\n    return urdfList;\n  }\n\n  public override handleSettingsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action === \"perform-node-action\") {\n      if (action.payload.id.startsWith(\"add-\")) {\n        this.#handleAddShape(action.payload.id);\n      }\n\n      if (path.length === 2 && action.payload.id === \"remove\") {\n        const instanceId = path[1]!;\n\n        const renderable = this.renderables.get(instanceId);\n        if (!renderable) {\n          return;\n        }\n\n        renderable.userData.renderables.forEach((childRenderable) => {\n          childRenderable.dispose();\n        });\n        this.remove(renderable);\n        this.renderables.delete(instanceId);\n\n        // Update the settings tree\n        this.updateSettingsTree();\n        this.renderer.updateCustomLayersCount();\n      }\n\n      return;\n    }\n\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n    if (action.payload.input) {\n      this.handleUserInput(action, action.payload.input);\n    }\n\n    this.saveSetting(path, action.payload.value);\n    // Update the settings sidebar\n    this.updateSettingsTree();\n  };\n\n  handleUserInput = (action: SettingsTreeAction, input: string): void => {\n    if (action.action !== \"update\" || action.payload.path.length === 0) {\n      return;\n    }\n    if (input === \"autocomplete\" && action.payload.path[1] === \"urdfFileName\") {\n      this.userData.selectedUrdfFileName = action.payload.value as string;\n    }\n  }\n\n  #getCurrentSettings(instanceId: string) {\n    const baseSettings = DEFAULT_CUSTOM_SETTINGS;\n    const userSettings = this.renderer.config.layers[instanceId];\n    const settings = { ...baseSettings, ...userSettings, instanceId };\n    return settings;\n  }\n\n  #handleAddShape(selectedShape: string): void {\n    // create instance id\n    const instanceId = uuidv4();\n    const renderer = this.renderer;\n    // create renderable\n    log.info(`Creating ${LAYER_ID} layer ${instanceId}`);\n    let renderable = this.renderables.get(instanceId);\n    const settingsPath = [\"layers\", instanceId];\n\n    const frames = this.renderer.transformTree.frames();\n    let frame = this.renderer.fixedFrameId || \"\";\n    for (const [fr, _] of frames) {\n      if (fr === \"base\" || fr === \"map\") {\n        frame = fr;\n        break;\n      }\n    }\n\n    const frameId = frame || this.renderer.fixedFrameId || \"\";\n\n    selectedShape = selectedShape.replace(\"add-\", \"\");\n    let numberOfSelectedShape = 1;\n    for (let renderable of this.renderables.values()) {\n      if (renderable.userData.settings.shape === selectedShape) {\n        numberOfSelectedShape++;\n      }\n    }\n\n    if (!renderable) {\n      renderable = new SceneRenderable(instanceId, this.renderer, {\n        renderables: new Map(),\n        receiveTime: 0n,\n        messageTime: 0n,\n        frameId,\n        pose: makePose(),\n        settingsPath,\n        settings: this.#getCurrentSettings(instanceId),\n      });\n      this.add(renderable);\n      this.renderables.set(instanceId, renderable);\n    }\n\n    let shape: UrdfGeometry;\n    let coor = { x: 0, y: 0, z: 0 };\n    if (selectedShape === \"box\") {\n      coor = { x: 0, y: 0, z: 0 };\n      shape = { geometryType: \"box\", size: { x: 0.3, y: 0.3, z: 0.3 } };\n    } else if (selectedShape === \"sphere\") {\n      coor = { x: 0, y: 1, z: 0 };\n      shape = { geometryType: \"sphere\", radius: 0.3 };\n    } else if (selectedShape === \"cylinder\") {\n      coor = { x: 1, y: 1, z: 0 };\n      shape = { geometryType: \"cylinder\", radius: 0.3, length: 0.3 };\n    } else {\n      shape = { geometryType: \"box\", size: { x: 0.3, y: 0.3, z: 0.3 } };\n    }\n\n    const createChild = (frameId: string, i: number, visual: UrdfVisual, shapeLabel: string): void => {\n      const childRenderable = createRenderable(visual, i, frameId, renderer);\n      // Set the childRenderable settingsPath so errors route to the correct place\n      if (renderable) {\n        childRenderable.userData.settingsPath = renderable.userData.settingsPath;\n        renderable.userData.renderables.set(childRenderable.name, childRenderable);\n        renderable.userData.settings = {\n          ...renderable.userData.settings,\n          shape: selectedShape as \"box\" | \"sphere\" | \"cylinder\",\n          shapeLabel: shapeLabel,\n        }\n        renderable.add(childRenderable);\n      } else {\n        log.error(\"renderable is null\");\n      }\n    };\n\n    createChild(frame, 0, {\n      origin: { xyz: coor, rpy: { x: 0, y: 0, z: 0 } },\n      geometry: shape,\n    }, selectedShape.charAt(0).toUpperCase() + selectedShape.slice(1) + \"-\" + numberOfSelectedShape);\n\n    this.updateSettingsTree();\n  }\n}\n\n\nfunction createRenderable(\n  visual: UrdfVisual,\n  id: number,\n  frameId: string,\n  renderer: IRenderer,\n): Renderable {\n  const name = `${frameId}-${id}-${visual.geometry.geometryType}`;\n  const orientation = eulerToQuaternion(visual.origin.rpy);\n  const pose = { position: visual.origin.xyz, orientation };\n  const color = visual.material?.color ?? { r: 0.14, g: 0.56, b: 1.0, a: 1.0 };\n  const type = visual.geometry.geometryType;\n  switch (type) {\n    case \"box\": {\n      const scale = visual.geometry.size;\n      log.info(`Creating box ${name} at ${JSON.stringify(pose)}`);\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableCube(name, marker, undefined, renderer);\n    }\n    case \"cylinder\": {\n      const cylinder = visual.geometry;\n      const scale = { x: cylinder.radius * 2, y: cylinder.radius * 2, z: cylinder.length };\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableCylinder(name, marker, undefined, renderer);\n    }\n    case \"sphere\": {\n      const sphere = visual.geometry;\n      const scale = { x: sphere.radius * 2, y: sphere.radius * 2, z: sphere.radius * 2 };\n      const marker = createMarker(frameId, MarkerType.CUBE, pose, scale, color);\n      return new RenderableSphere(name, marker, undefined, renderer);\n    }\n    default:\n      throw new Error(`Unrecognized visual geometryType: ${type}`);\n  }\n}\n\nfunction createMarker(\n  frameId: string,\n  type: MarkerType,\n  pose: Pose,\n  scale: Vector3,\n  color: ColorRGBA,\n): Marker {\n  return {\n    header: { frame_id: frameId, stamp: { sec: 0, nsec: 0 } },\n    ns: \"\",\n    id: 0,\n    type,\n    action: MarkerAction.ADD,\n    pose,\n    scale,\n    color,\n    lifetime: { sec: 0, nsec: 0 },\n    frame_locked: true,\n    points: [],\n    colors: [],\n    text: \"\",\n    mesh_resource: \"\",\n    mesh_use_embedded_materials: false,\n  };\n}","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport i18next from \"i18next\";\nimport { produce } from \"immer\";\nimport * as THREE from \"three\";\nimport { DeepPartial, assert } from \"ts-essentials\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Logger from \"@foxglove/log\";\nimport { Time, fromNanoSec, isLessThan, toNanoSec } from \"@foxglove/rostime\";\nimport type { FrameTransform, FrameTransforms, SceneUpdate } from \"@foxglove/schemas\";\nimport {\n  Immutable,\n  MessageEvent,\n  ParameterValue,\n  SettingsIcon,\n  SettingsTreeAction,\n  SettingsTreeNodeActionItem,\n  SettingsTreeNodes,\n  Topic,\n  VariableValue,\n} from \"@foxglove/studio\";\nimport { LayerErrors } from \"@foxglove/studio-base/panels/ThreeDeeRender/LayerErrors\";\nimport { FoxgloveGrid } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/FoxgloveGrid\";\nimport { ICameraHandler } from \"@foxglove/studio-base/panels/ThreeDeeRender/renderables/ICameraHandler\";\nimport { dark, light } from \"@foxglove/studio-base/theme/palette\";\nimport { fonts } from \"@foxglove/studio-base/util/sharedStyleConstants\";\nimport { LabelMaterial, LabelPool } from \"@foxglove/three-text\";\n\nimport {\n  IRenderer,\n  InstancedLineMaterial,\n  RendererConfig,\n  RendererEvents,\n  RendererSubscription,\n} from \"./IRenderer\";\nimport { Input } from \"./Input\";\nimport { DEFAULT_MESH_UP_AXIS, ModelCache } from \"./ModelCache\";\nimport { PickedRenderable, Picker } from \"./Picker\";\nimport type { Renderable } from \"./Renderable\";\nimport { SceneExtension } from \"./SceneExtension\";\nimport { ScreenOverlay } from \"./ScreenOverlay\";\nimport { SettingsManager, SettingsTreeEntry } from \"./SettingsManager\";\nimport { SharedGeometry } from \"./SharedGeometry\";\nimport { CameraState } from \"./camera\";\nimport { DARK_OUTLINE, LIGHT_OUTLINE, stringToRgb } from \"./color\";\nimport { FRAME_TRANSFORMS_DATATYPES, FRAME_TRANSFORM_DATATYPES } from \"./foxglove\";\nimport { DetailLevel, msaaSamples } from \"./lod\";\nimport {\n  normalizeFrameTransform,\n  normalizeFrameTransforms,\n  normalizeTFMessage,\n  normalizeTransformStamped,\n} from \"./normalizeMessages\";\nimport { CameraStateSettings } from \"./renderables/CameraStateSettings\";\nimport { Cameras } from \"./renderables/Cameras\";\nimport { FrameAxes } from \"./renderables/FrameAxes\";\nimport { Grids } from \"./renderables/Grids\";\nimport { ImageMode } from \"./renderables/ImageMode/ImageMode\";\nimport { Images } from \"./renderables/Images\";\nimport { DownloadImageInfo } from \"./renderables/Images/ImageTypes\";\nimport { LaserScans } from \"./renderables/LaserScans\";\nimport { Markers } from \"./renderables/Markers\";\nimport { MeasurementTool } from \"./renderables/MeasurementTool\";\nimport { OccupancyGrids } from \"./renderables/OccupancyGrids\";\nimport { PointClouds } from \"./renderables/PointClouds\";\nimport { Polygons } from \"./renderables/Polygons\";\nimport { PoseArrays } from \"./renderables/PoseArrays\";\nimport { Poses } from \"./renderables/Poses\";\nimport { PublishClickTool } from \"./renderables/PublishClickTool\";\nimport { PublishSettings } from \"./renderables/PublishSettings\";\nimport { FoxgloveSceneEntities } from \"./renderables/SceneEntities\";\nimport { SceneSettings } from \"./renderables/SceneSettings\";\nimport { Urdfs } from \"./renderables/Urdfs\";\nimport { VelodyneScans } from \"./renderables/VelodyneScans\";\nimport { MarkerPool } from \"./renderables/markers/MarkerPool\";\nimport {\n  Header,\n  MarkerArray,\n  Quaternion,\n  TFMessage,\n  TF_DATATYPES,\n  TRANSFORM_STAMPED_DATATYPES,\n  TransformStamped,\n  Vector3,\n} from \"./ros\";\nimport { SelectEntry } from \"./settings\";\nimport { AddTransformResult, CoordinateFrame, Transform, TransformTree } from \"./transforms\";\nimport { InterfaceMode } from \"./types\";\nimport { SceneEditor } from \"./renderables/SceneEditor\";\n\nconst log = Logger.getLogger(__filename);\n\n/** Menu item entry and callback for the \"Custom Layers\" menu */\nexport type CustomLayerAction = {\n  action: SettingsTreeNodeActionItem;\n  handler: (instanceId: string) => void;\n};\n\n// Maximum number of objects to present as selection options in a single click\nconst MAX_SELECTIONS = 10;\n\n// NOTE: These do not use .convertSRGBToLinear() since background color is not\n// affected by gamma correction\nconst LIGHT_BACKDROP = new THREE.Color(light.background?.default);\nconst DARK_BACKDROP = new THREE.Color(dark.background?.default);\n\n// Define rendering layers for multipass rendering used for the selection effect\nconst LAYER_DEFAULT = 0;\nconst LAYER_SELECTED = 1;\n\nconst FOLLOW_TF_PATH = [\"general\", \"followTf\"];\nconst NO_FRAME_SELECTED = \"NO_FRAME_SELECTED\";\nconst TF_OVERFLOW = \"TF_OVERFLOW\";\nconst CYCLE_DETECTED = \"CYCLE_DETECTED\";\nconst FOLLOW_FRAME_NOT_FOUND = \"FOLLOW_FRAME_NOT_FOUND\";\n\n// An extensionId for creating the top-level settings nodes such as \"Topics\" and\n// \"Custom Layers\"\nconst RENDERER_ID = \"foxglove.Renderer\";\n\nconst tempColor = new THREE.Color();\nconst tempVec2 = new THREE.Vector2();\n\n// We use a patched version of THREE.js where the internal WebGLShaderCache class has been\n// modified to allow caching based on `vertexShaderKey` and/or `fragmentShaderKey` instead of\n// using the full shader source as a Map key\nObject.defineProperty(LabelMaterial.prototype, \"vertexShaderKey\", {\n  get() {\n    return \"LabelMaterial-VertexShader\";\n  },\n  enumerable: true,\n  configurable: true,\n});\nObject.defineProperty(LabelMaterial.prototype, \"fragmentShaderKey\", {\n  get() {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    return this.picking ? \"LabelMaterial-FragmentShader-picking\" : \"LabelMaterial-FragmentShader\";\n  },\n  enumerable: true,\n  configurable: true,\n});\n\n/**\n * An extensible 3D renderer attached to a `HTMLCanvasElement`,\n * `WebGLRenderingContext`, and `SettingsTree`.\n */\nexport class Renderer extends EventEmitter<RendererEvents> implements IRenderer {\n  public readonly interfaceMode: InterfaceMode;\n  #canvas: HTMLCanvasElement;\n  public readonly gl: THREE.WebGLRenderer;\n  public maxLod = DetailLevel.High;\n  public debugPicking = false;\n  public config: Immutable<RendererConfig>;\n  public settings: SettingsManager;\n  // [{ name, datatype }]\n  public topics: ReadonlyArray<Topic> | undefined;\n  // topicName -> { name, datatype }\n  public topicsByName: ReadonlyMap<string, Topic> | undefined;\n  // parameterKey -> parameterValue\n  public parameters: ReadonlyMap<string, ParameterValue> | undefined;\n  // variableName -> variableValue\n  public variables: ReadonlyMap<string, VariableValue> = new Map();\n  // extensionId -> SceneExtension\n  public sceneExtensions = new Map<string, SceneExtension>();\n  // datatype -> RendererSubscription[]\n  public schemaHandlers = new Map<string, RendererSubscription[]>();\n  // topicName -> RendererSubscription[]\n  public topicHandlers = new Map<string, RendererSubscription[]>();\n  // layerId -> { action, handler }\n  #customLayerActions = new Map<string, CustomLayerAction>();\n  #scene: THREE.Scene;\n  #dirLight: THREE.DirectionalLight;\n  #hemiLight: THREE.HemisphereLight;\n  public input: Input;\n  public readonly outlineMaterial = new THREE.LineBasicMaterial({ dithering: true });\n  public readonly instancedOutlineMaterial = new InstancedLineMaterial({ dithering: true });\n\n  /** only public for testing - prefer to use `getCameraState` instead */\n  public cameraHandler: ICameraHandler;\n\n  #imageModeExtension?: ImageMode;\n\n  public measurementTool: MeasurementTool;\n  public publishClickTool: PublishClickTool;\n\n  // Are we connected to a ROS data source? Normalize coordinate frames if so by\n  // stripping any leading \"/\" prefix. See `normalizeFrameId()` for details.\n  public ros = false;\n\n  #picker: Picker;\n  #selectionBackdrop: ScreenOverlay;\n  #selectedRenderable: PickedRenderable | undefined;\n  public colorScheme: \"dark\" | \"light\" = \"light\";\n  public modelCache: ModelCache;\n  public transformTree = new TransformTree();\n  public coordinateFrameList: SelectEntry[] = [];\n  public currentTime = 0n;\n  public fixedFrameId: string | undefined;\n  public followFrameId: string | undefined;\n\n  public labelPool = new LabelPool({ fontFamily: fonts.MONOSPACE });\n  public markerPool = new MarkerPool(this);\n  public sharedGeometry = new SharedGeometry();\n\n  #prevResolution = new THREE.Vector2();\n  #pickingEnabled = false;\n  #animationFrame?: number;\n  #cameraSyncError: undefined | string;\n  #devicePixelRatioMediaQuery?: MediaQueryList;\n\n  public constructor(\n    canvas: HTMLCanvasElement,\n    config: Immutable<RendererConfig>,\n    interfaceMode: InterfaceMode,\n  ) {\n    super();\n    // NOTE: Global side effect\n    THREE.Object3D.DEFAULT_UP = new THREE.Vector3(0, 0, 1);\n\n    this.interfaceMode = interfaceMode;\n    this.#canvas = canvas;\n    this.config = config;\n\n    this.settings = new SettingsManager(baseSettingsTree(this.interfaceMode));\n    this.settings.on(\"update\", () => this.emit(\"settingsTreeChange\", this));\n    // Add the top-level nodes first so merging happens in the correct order.\n    // Another approach would be to modify SettingsManager to allow merging parent\n    // nodes in after their children\n    this.settings.setNodesForKey(RENDERER_ID, []);\n    this.updateCustomLayersCount();\n\n    this.gl = new THREE.WebGLRenderer({\n      canvas,\n      alpha: true,\n      antialias: true,\n    });\n    if (!this.gl.capabilities.isWebGL2) {\n      throw new Error(\"WebGL2 is not supported\");\n    }\n    this.gl.outputEncoding = THREE.sRGBEncoding;\n    this.gl.toneMapping = THREE.NoToneMapping;\n    this.gl.autoClear = false;\n    this.gl.info.autoReset = false;\n    this.gl.shadowMap.enabled = false;\n    this.gl.shadowMap.type = THREE.VSMShadowMap;\n    this.gl.sortObjects = true;\n    this.gl.setPixelRatio(window.devicePixelRatio);\n\n    let width = canvas.width;\n    let height = canvas.height;\n    if (canvas.parentElement) {\n      width = canvas.parentElement.clientWidth;\n      height = canvas.parentElement.clientHeight;\n      this.gl.setSize(width, height);\n    }\n\n    this.modelCache = new ModelCache({\n      ignoreColladaUpAxis: config.scene.ignoreColladaUpAxis ?? false,\n      meshUpAxis: config.scene.meshUpAxis ?? DEFAULT_MESH_UP_AXIS,\n      edgeMaterial: this.outlineMaterial,\n    });\n\n    this.#scene = new THREE.Scene();\n\n    this.#dirLight = new THREE.DirectionalLight();\n    this.#dirLight.position.set(1, 1, 1);\n    this.#dirLight.castShadow = true;\n    this.#dirLight.layers.enableAll();\n\n    this.#dirLight.shadow.mapSize.width = 2048;\n    this.#dirLight.shadow.mapSize.height = 2048;\n    this.#dirLight.shadow.camera.near = 0.5;\n    this.#dirLight.shadow.camera.far = 500;\n    this.#dirLight.shadow.bias = -0.00001;\n\n    this.#hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\n    this.#hemiLight.layers.enableAll();\n\n    this.#scene.add(this.#dirLight);\n    this.#scene.add(this.#hemiLight);\n\n    this.input = new Input(canvas, () => this.cameraHandler.getActiveCamera());\n    this.input.on(\"resize\", (size) => this.#resizeHandler(size));\n    this.input.on(\"click\", (cursorCoords) => this.#clickHandler(cursorCoords));\n\n    this.#picker = new Picker(this.gl, this.#scene);\n\n    this.#selectionBackdrop = new ScreenOverlay(this);\n    this.#selectionBackdrop.visible = false;\n    this.#scene.add(this.#selectionBackdrop);\n\n    const samples = msaaSamples(this.gl.capabilities);\n    const renderSize = this.gl.getDrawingBufferSize(tempVec2);\n    log.debug(`Initialized ${renderSize.width}x${renderSize.height} renderer (${samples}x MSAA)`);\n\n    this.measurementTool = new MeasurementTool(this);\n    this.publishClickTool = new PublishClickTool(this);\n\n    const aspect = renderSize.width / renderSize.height;\n    switch (interfaceMode) {\n      case \"image\":\n        this.#imageModeExtension = new ImageMode(this, {\n          canvasSize: this.input.canvasSize,\n          // eslint-disable-next-line @foxglove/no-boolean-parameters\n          setHasCalibrationTopic: (hasCameraCalibrationTopic: boolean) => {\n            if (hasCameraCalibrationTopic) {\n              this.#disableImageOnlySubscriptionMode();\n            } else {\n              this.#enableImageOnlySubscriptionMode();\n            }\n          },\n        });\n        this.cameraHandler = this.#imageModeExtension;\n        this.#imageModeExtension.addEventListener(\"hasModifiedViewChanged\", () => {\n          this.emit(\"resetViewChanged\", this);\n        });\n        this.#addSceneExtension(this.cameraHandler);\n        break;\n      case \"3d\":\n        this.cameraHandler = new CameraStateSettings(this, this.#canvas, aspect);\n        this.#addSceneExtension(this.cameraHandler);\n        this.#addSceneExtension(new SceneEditor(this));\n        this.#addSceneExtension(new PublishSettings(this));\n        this.#addSceneExtension(new Images(this));\n        this.#addSceneExtension(new Cameras(this));\n        break;\n    }\n\n    this.#addSceneExtension(new SceneSettings(this));\n    this.#addSceneExtension(new FrameAxes(this, { visible: interfaceMode === \"3d\" }));\n    this.#addSceneExtension(new Grids(this));\n    this.#addSceneExtension(new Markers(this));\n    this.#addSceneExtension(new FoxgloveSceneEntities(this));\n    this.#addSceneExtension(new FoxgloveGrid(this));\n    this.#addSceneExtension(new LaserScans(this));\n    this.#addSceneExtension(new OccupancyGrids(this));\n    this.#addSceneExtension(new PointClouds(this));\n    this.#addSceneExtension(new Polygons(this));\n    this.#addSceneExtension(new Poses(this));\n    this.#addSceneExtension(new PoseArrays(this));\n    this.#addSceneExtension(new Urdfs(this));\n    this.#addSceneExtension(new VelodyneScans(this));\n    this.#addSceneExtension(this.measurementTool);\n    this.#addSceneExtension(this.publishClickTool);\n    if (interfaceMode === \"image\" && config.imageMode.calibrationTopic == undefined) {\n      this.#enableImageOnlySubscriptionMode();\n    } else {\n      this.#addTransformSubscriptions();\n      this.#addSubscriptionsFromSceneExtensions();\n    }\n\n    this.#watchDevicePixelRatio();\n\n    this.setCameraState(config.cameraState);\n    this.animationFrame();\n  }\n\n  #onDevicePixelRatioChange = () => {\n    log.debug(`devicePixelRatio changed to ${window.devicePixelRatio}`);\n    this.#resizeHandler(this.input.canvasSize);\n    this.#watchDevicePixelRatio();\n  };\n\n  #watchDevicePixelRatio() {\n    this.#devicePixelRatioMediaQuery = window.matchMedia(\n      `(resolution: ${window.devicePixelRatio}dppx)`,\n    );\n    this.#devicePixelRatioMediaQuery.addEventListener(\"change\", this.#onDevicePixelRatioChange, {\n      once: true,\n    });\n  }\n\n  public dispose(): void {\n    log.warn(`Disposing renderer`);\n    this.#devicePixelRatioMediaQuery?.removeEventListener(\"change\", this.#onDevicePixelRatioChange);\n    this.removeAllListeners();\n\n    this.settings.removeAllListeners();\n    this.input.removeAllListeners();\n\n    for (const extension of this.sceneExtensions.values()) {\n      extension.dispose();\n    }\n    this.sceneExtensions.clear();\n    this.sharedGeometry.dispose();\n    this.modelCache.dispose();\n\n    this.labelPool.dispose();\n    this.markerPool.dispose();\n    this.#picker.dispose();\n    this.input.dispose();\n    this.gl.dispose();\n  }\n\n  public cameraSyncError(): undefined | string {\n    return this.#cameraSyncError;\n  }\n\n  public setCameraSyncError(error: undefined | string): void {\n    this.#cameraSyncError = error;\n    // Updates the settings tree for camera state settings to account for any changes in the config.\n    this.cameraHandler.updateSettingsTree();\n  }\n\n  public getPixelRatio(): number {\n    return this.gl.getPixelRatio();\n  }\n\n  /**\n   *\n   * @param currentTime what renderer.currentTime will be set to\n   */\n  public setCurrentTime(newTimeNs: bigint): void {\n    this.currentTime = newTimeNs;\n  }\n  /**\n   * Updates renderer state according to seek delta. Handles clearing of future state and resetting of allFrames cursor if seeked backwards\n   * Should be called after `setCurrentTime` as been called\n   * @param oldTime used to determine if seeked backwards\n   */\n  public handleSeek(oldTimeNs: bigint): void {\n    const movedBack = this.currentTime < oldTimeNs;\n    // want to clear transforms and reset the cursor if we seek backwards\n    this.clear({ clearTransforms: movedBack, resetAllFramesCursor: movedBack });\n  }\n\n  /**\n   * Clears:\n   *  - Rendered objects (a backfill is performed to ensure that they are regenerated with new messages from current frame)\n   *  - Errors in settings. Messages that caused errors in the past are cleared, but will be re-added if they are still causing errors when read in.\n   *  - [Optional] Transform tree. This should be set to true when a seek to a previous time is performed in order to flush potential future state to the newly set time.\n   *  - [Optional] allFramesCursor. This is the cursor that iterates through allFrames up to currentTime. It should be reset when seeking backwards to avoid keeping future state.\n   * @param {Object} params - modifiers to the clear operation\n   * @param {boolean} params.clearTransforms - whether to clear the transform tree. This should be set to true when a seek to a previous time is performed in order\n   * order to flush potential future state to the newly set time.\n   * @param {boolean} params.resetAllFramesCursor - whether to reset the cursor for the allFrames array.\n   */\n  public clear(\n    {\n      clearTransforms,\n      resetAllFramesCursor,\n    }: { clearTransforms?: boolean; resetAllFramesCursor?: boolean } = {\n      clearTransforms: false,\n      resetAllFramesCursor: false,\n    },\n  ): void {\n    if (clearTransforms === true) {\n      this.#clearTransformTree();\n    }\n    if (resetAllFramesCursor === true) {\n      this.#resetAllFramesCursor();\n    }\n    this.settings.errors.clear();\n\n    for (const extension of this.sceneExtensions.values()) {\n      extension.removeAllRenderables();\n    }\n    this.queueAnimationFrame();\n  }\n\n  #allFramesCursor: {\n    // index represents where the last read message is in allFrames\n    index: number;\n    lastReadMessage: MessageEvent<unknown> | undefined;\n    cursorTimeReached?: Time;\n  } = {\n    index: -1,\n    lastReadMessage: undefined,\n    cursorTimeReached: undefined,\n  };\n\n  #resetAllFramesCursor() {\n    this.#allFramesCursor = {\n      index: -1,\n      lastReadMessage: undefined,\n      cursorTimeReached: undefined,\n    };\n    this.emit(\"resetAllFramesCursor\", this);\n  }\n\n  /**\n   * Iterates through allFrames and handles messages with a receiveTime <= currentTime\n   * @param allFrames - sorted array of all preloaded messages\n   * @returns {boolean} - whether the allFramesCursor has been updated and new messages were read in\n   */\n  public handleAllFramesMessages(allFrames?: readonly MessageEvent[]): boolean {\n    if (!allFrames || allFrames.length === 0) {\n      return false;\n    }\n\n    const currentTime = fromNanoSec(this.currentTime);\n\n    /**\n     * Assumptions about allFrames needed by allFramesCursor:\n     *  - always sorted by receiveTime\n     *  - allFrame chunks are only ever loaded from beginning to end and does not have any eviction\n     */\n\n    const messageAtCursor = allFrames[this.#allFramesCursor.index];\n\n    // reset cursor if lastReadMessage no longer is the same as the message at the cursor\n    // This means that messages were added or removed from the array and need to be re-read\n    if (\n      this.#allFramesCursor.lastReadMessage != undefined &&\n      messageAtCursor != undefined &&\n      this.#allFramesCursor.lastReadMessage !== messageAtCursor\n    ) {\n      this.#resetAllFramesCursor();\n    }\n\n    let cursor = this.#allFramesCursor.index;\n    let cursorTimeReached = this.#allFramesCursor.cursorTimeReached;\n    let lastReadMessage = this.#allFramesCursor.lastReadMessage;\n\n    // cursor should never be over allFramesLength, if it some how is, it means the cursor was at the end of `allFrames` prior to eviction and eviction shortened allframes\n    // in this case we should set the cursor to the end of allFrames\n    cursor = Math.min(cursor, allFrames.length - 1);\n\n    let message;\n\n    let hasAddedMessageEvents = false;\n    // load preloaded messages up to current time\n    while (cursor < allFrames.length - 1) {\n      cursor++;\n      message = allFrames[cursor]!;\n      // read messages until we reach the current time\n      if (isLessThan(currentTime, message.receiveTime)) {\n        cursorTimeReached = currentTime;\n        // reset cursor to last read message index\n        cursor--;\n        break;\n      }\n      if (!hasAddedMessageEvents) {\n        hasAddedMessageEvents = true;\n      }\n\n      this.addMessageEvent(message);\n      lastReadMessage = message;\n      if (cursor === allFrames.length - 1) {\n        cursorTimeReached = message.receiveTime;\n      }\n    }\n\n    // want to avoid setting anything if nothing has changed\n    if (!hasAddedMessageEvents) {\n      return false;\n    }\n\n    this.#allFramesCursor = { index: cursor, cursorTimeReached, lastReadMessage };\n    return true;\n  }\n\n  #addSceneExtension(extension: SceneExtension): void {\n    if (this.sceneExtensions.has(extension.extensionId)) {\n      throw new Error(`Attempted to add duplicate extensionId \"${extension.extensionId}\"`);\n    }\n    this.sceneExtensions.set(extension.extensionId, extension);\n    this.#scene.add(extension);\n  }\n\n  public updateConfig(updateHandler: (draft: RendererConfig) => void): void {\n    this.config = produce(this.config, updateHandler);\n    this.emit(\"configChange\", this);\n  }\n\n  #addTransformSubscriptions(): void {\n    const config = this.config;\n    const preloadTransforms = config.scene.transforms?.enablePreloading ?? true;\n    // Internal handlers for TF messages to update the transform tree\n    this.#addSchemaSubscriptions(FRAME_TRANSFORM_DATATYPES, {\n      handler: this.#handleFrameTransform,\n      shouldSubscribe: () => true,\n      preload: preloadTransforms,\n    });\n    this.#addSchemaSubscriptions(FRAME_TRANSFORMS_DATATYPES, {\n      handler: this.#handleFrameTransforms,\n      shouldSubscribe: () => true,\n      preload: preloadTransforms,\n    });\n    this.#addSchemaSubscriptions(TF_DATATYPES, {\n      handler: this.#handleTFMessage,\n      shouldSubscribe: () => true,\n      preload: preloadTransforms,\n    });\n    this.#addSchemaSubscriptions(TRANSFORM_STAMPED_DATATYPES, {\n      handler: this.#handleTransformStamped,\n      shouldSubscribe: () => true,\n      preload: preloadTransforms,\n    });\n    this.off(\"resetAllFramesCursor\", this.#clearTransformTree);\n    if (preloadTransforms) {\n      this.on(\"resetAllFramesCursor\", this.#clearTransformTree);\n    }\n  }\n\n  #clearTransformTree = () => {\n    this.transformTree.clear();\n  };\n\n  // Call on scene extensions to add subscriptions to the renderer\n  #addSubscriptionsFromSceneExtensions(filterFn?: (extension: SceneExtension) => boolean): void {\n    const filteredExtensions = filterFn\n      ? Array.from(this.sceneExtensions.values()).filter(filterFn)\n      : this.sceneExtensions.values();\n    for (const extension of filteredExtensions) {\n      const subscriptions = extension.getSubscriptions();\n      for (const subscription of subscriptions) {\n        switch (subscription.type) {\n          case \"schema\":\n            this.#addSchemaSubscriptions(subscription.schemaNames, subscription.subscription);\n            break;\n          case \"topic\":\n            this.#addTopicSubscription(subscription.topicName, subscription.subscription);\n            break;\n        }\n      }\n    }\n  }\n\n  // Clear topic and schema subscriptions and emit change events for both\n  #clearSubscriptions(): void {\n    this.topicHandlers.clear();\n    this.schemaHandlers.clear();\n    this.emit(\"topicHandlersChanged\", this);\n    this.emit(\"schemaHandlersChanged\", this);\n  }\n\n  #addSchemaSubscriptions<T>(\n    schemaNames: Iterable<string>,\n    subscription: RendererSubscription<T>,\n  ): void {\n    for (const schemaName of schemaNames) {\n      let handlers = this.schemaHandlers.get(schemaName);\n      if (!handlers) {\n        handlers = [];\n        this.schemaHandlers.set(schemaName, handlers);\n      }\n      handlers.push(subscription as RendererSubscription);\n    }\n    this.emit(\"schemaHandlersChanged\", this);\n  }\n\n  #addTopicSubscription<T>(topic: string, subscription: RendererSubscription<T>): void {\n    let handlers = this.topicHandlers.get(topic);\n    if (!handlers) {\n      handlers = [];\n      this.topicHandlers.set(topic, handlers);\n    }\n    handlers.push(subscription as RendererSubscription);\n    this.emit(\"topicHandlersChanged\", this);\n  }\n\n  /**\n   * Image Only mode disables all subscriptions for non-ImageMode scene extensions and clears all transform subscriptions.\n   * This mode should only be enabled in ImageMode when there is no calibration topic selected. Disabling these subscriptions\n   * prevents the 3D aspects of the scene from being rendered from an insufficient camera info.\n   */\n  #enableImageOnlySubscriptionMode = (): void => {\n    assert(\n      this.#imageModeExtension,\n      \"Image mode extension should be defined when calling enable Image only mode\",\n    );\n    this.clear({ clearTransforms: true, resetAllFramesCursor: true });\n    this.#clearSubscriptions();\n    this.#addSubscriptionsFromSceneExtensions(\n      (extension) => extension === this.#imageModeExtension,\n    );\n    this.settings.addNodeValidator(this.#imageOnlyModeTopicSettingsValidator);\n  };\n\n  #disableImageOnlySubscriptionMode = (): void => {\n    // .clear() will clean up remaining errors on topics\n    this.settings.removeNodeValidator(this.#imageOnlyModeTopicSettingsValidator);\n    this.clear({ clearTransforms: true, resetAllFramesCursor: true });\n    this.#clearSubscriptions();\n    this.#addSubscriptionsFromSceneExtensions();\n    this.#addTransformSubscriptions();\n  };\n\n  /** Adds errors to visible topic nodes when calibration is undefined */\n  #imageOnlyModeTopicSettingsValidator = (entry: SettingsTreeEntry, errors: LayerErrors) => {\n    const { path, node } = entry;\n    if (path[0] === \"topics\") {\n      if (node.visible === true) {\n        errors.addToTopic(\n          path[1]!,\n          \"IMAGE_ONLY_TOPIC\",\n          \"Camera calibration information is required to display 3D topics\",\n        );\n      } else {\n        errors.removeFromTopic(path[1]!, \"IMAGE_ONLY_TOPIC\");\n      }\n    }\n  };\n\n  public addCustomLayerAction(options: {\n    layerId: string;\n    label: string;\n    icon?: SettingsIcon;\n    handler: (instanceId: string) => void;\n  }): void {\n    const handler = options.handler;\n    // A unique id is assigned to each action to deduplicate selection events\n    // The layerId is used to map selection events back to their handlers\n    const instanceId = uuidv4();\n    const action: SettingsTreeNodeActionItem = {\n      type: \"action\",\n      id: `${options.layerId}-${instanceId}`,\n      label: options.label,\n      icon: options.icon,\n    };\n    this.#customLayerActions.set(options.layerId, { action, handler });\n    this.#updateTopicsAndCustomLayerSettingsNodes();\n  }\n\n  #updateTopicsAndCustomLayerSettingsNodes(): void {\n    this.settings.setNodesForKey(RENDERER_ID, [\n      this.#getTopicsSettingsEntry(),\n      this.#getCustomLayersSettingsEntry(),\n    ]);\n  }\n\n  #getTopicsSettingsEntry(): SettingsTreeEntry {\n    // \"Topics\" settings tree node\n    const topics: SettingsTreeEntry = {\n      path: [\"topics\"],\n      node: {\n        enableVisibilityFilter: true,\n        label: i18next.t(\"threeDee:topics\"),\n        defaultExpansionState: \"expanded\",\n        actions: [\n          { id: \"show-all\", type: \"action\", label: i18next.t(\"threeDee:showAll\") },\n          { id: \"hide-all\", type: \"action\", label: i18next.t(\"threeDee:hideAll\") },\n        ],\n        children: this.settings.tree()[\"topics\"]?.children,\n        handler: this.#handleTopicsAction,\n      },\n    };\n    return topics;\n  }\n\n  #getCustomLayersSettingsEntry(): SettingsTreeEntry {\n    const layerCount = Object.keys(this.config.layers).length;\n    const customLayers: SettingsTreeEntry = {\n      path: [\"layers\"],\n      node: {\n        label: `${i18next.t(\"threeDee:customLayers\")}${layerCount > 0 ? ` (${layerCount})` : \"\"}`,\n        children: this.settings.tree()[\"layers\"]?.children,\n        actions: Array.from(this.#customLayerActions.values()).map((entry) => entry.action),\n        handler: this.#handleCustomLayersAction,\n      },\n    };\n    return customLayers;\n  }\n\n  /** Enable or disable object selection mode */\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  public setPickingEnabled(enabled: boolean): void {\n    this.#pickingEnabled = enabled;\n    if (!enabled) {\n      this.setSelectedRenderable(undefined);\n    }\n  }\n\n  /** Update the color scheme and background color, rebuilding any materials as necessary */\n  public setColorScheme(colorScheme: \"dark\" | \"light\", backgroundColor: string | undefined): void {\n    this.colorScheme = colorScheme;\n\n    const bgColor = backgroundColor ? stringToRgb(tempColor, backgroundColor) : undefined;\n\n    for (const extension of this.sceneExtensions.values()) {\n      extension.setColorScheme(colorScheme, bgColor);\n    }\n\n    if (colorScheme === \"dark\") {\n      this.gl.setClearColor(bgColor ?? DARK_BACKDROP);\n      this.outlineMaterial.color.set(DARK_OUTLINE);\n      this.outlineMaterial.needsUpdate = true;\n      this.instancedOutlineMaterial.color.set(DARK_OUTLINE);\n      this.instancedOutlineMaterial.needsUpdate = true;\n      this.#selectionBackdrop.setColor(DARK_BACKDROP, 0.8);\n    } else {\n      this.gl.setClearColor(bgColor ?? LIGHT_BACKDROP);\n      this.outlineMaterial.color.set(LIGHT_OUTLINE);\n      this.outlineMaterial.needsUpdate = true;\n      this.instancedOutlineMaterial.color.set(LIGHT_OUTLINE);\n      this.instancedOutlineMaterial.needsUpdate = true;\n      this.#selectionBackdrop.setColor(LIGHT_BACKDROP, 0.8);\n    }\n  }\n\n  /** Update the list of topics and rebuild all settings nodes when the identity\n   * of the topics list changes */\n  public setTopics(topics: ReadonlyArray<Topic> | undefined): void {\n    if (this.topics === topics) {\n      return;\n    }\n    this.topics = topics;\n\n    // Rebuild topicsByName\n    this.topicsByName = topics ? new Map(topics.map((topic) => [topic.name, topic])) : undefined;\n\n    this.emit(\"topicsChanged\", this);\n\n    // Rebuild the settings nodes for all scene extensions\n    for (const extension of this.sceneExtensions.values()) {\n      this.settings.setNodesForKey(extension.extensionId, extension.settingsNodes());\n    }\n  }\n\n  public setParameters(parameters: ReadonlyMap<string, ParameterValue> | undefined): void {\n    const changed = this.parameters !== parameters;\n    this.parameters = parameters;\n    if (changed) {\n      this.emit(\"parametersChange\", parameters, this);\n    }\n  }\n\n  public updateCustomLayersCount(): void {\n    const layerCount = Object.keys(this.config.layers).length;\n    const label = `Custom Layers${layerCount > 0 ? ` (${layerCount})` : \"\"}`;\n    this.settings.setLabel([\"layers\"], label);\n  }\n\n  public setCameraState(cameraState: CameraState): void {\n    this.cameraHandler.setCameraState(cameraState);\n  }\n\n  public getCameraState(): CameraState | undefined {\n    return this.cameraHandler.getCameraState();\n  }\n\n  public canResetView(): boolean {\n    return this.#imageModeExtension?.hasModifiedView() ?? false;\n  }\n\n  public resetView(): void {\n    this.#imageModeExtension?.resetViewModifications();\n    this.queueAnimationFrame();\n  }\n\n  public getCurrentImage(): DownloadImageInfo | undefined {\n    return this.#imageModeExtension?.getLatestImage();\n  }\n\n  public setSelectedRenderable(selection: PickedRenderable | undefined): void {\n    if (this.#selectedRenderable === selection) {\n      return;\n    }\n\n    const prevSelected = this.#selectedRenderable;\n    if (prevSelected) {\n      // Deselect the previously selected renderable\n      deselectObject(prevSelected.renderable);\n      log.debug(`Deselected ${prevSelected.renderable.id} (${prevSelected.renderable.name})`);\n    }\n\n    this.#selectedRenderable = selection;\n\n    if (selection) {\n      // Select the newly selected renderable\n      selectObject(selection.renderable);\n      log.debug(\n        `Selected ${selection.renderable.id} (${selection.renderable.name}) (instance=${selection.instanceIndex})`,\n      );\n    }\n\n    this.emit(\"selectedRenderable\", selection, this);\n\n    if (!this.debugPicking) {\n      this.animationFrame();\n    }\n  }\n\n  public addMessageEvent(messageEvent: Readonly<MessageEvent>): void {\n    const { message } = messageEvent;\n\n    const maybeHasHeader = message as DeepPartial<{ header: Header }>;\n    const maybeHasMarkers = message as DeepPartial<MarkerArray>;\n    const maybeHasEntities = message as DeepPartial<SceneUpdate>;\n    const maybeHasFrameId = message as DeepPartial<Header>;\n\n    // Extract coordinate frame IDs from all incoming messages\n    if (maybeHasHeader.header) {\n      // If this message has a Header, scrape the frame_id from it\n      const frameId = maybeHasHeader.header.frame_id ?? \"\";\n      this.addCoordinateFrame(frameId);\n    } else if (Array.isArray(maybeHasMarkers.markers)) {\n      // If this message has an array called markers, scrape frame_id from all markers\n      for (const marker of maybeHasMarkers.markers) {\n        if (marker) {\n          const frameId = marker.header?.frame_id ?? \"\";\n          this.addCoordinateFrame(frameId);\n        }\n      }\n    } else if (Array.isArray(maybeHasEntities.entities)) {\n      // If this message has an array called entities, scrape frame_id from all entities\n      for (const entity of maybeHasEntities.entities) {\n        if (entity) {\n          const frameId = entity.frame_id ?? \"\";\n          this.addCoordinateFrame(frameId);\n        }\n      }\n    } else if (typeof maybeHasFrameId.frame_id === \"string\") {\n      // If this message has a top-level frame_id, scrape it\n      this.addCoordinateFrame(maybeHasFrameId.frame_id);\n    }\n\n    handleMessage(messageEvent, this.topicHandlers.get(messageEvent.topic));\n    handleMessage(messageEvent, this.schemaHandlers.get(messageEvent.schemaName));\n  }\n\n  /** Match the behavior of `tf::Transformer` by stripping leading slashes from\n   * frame_ids. This preserves compatibility with earlier versions of ROS while\n   * not breaking any current versions where:\n   * > tf2 does not accept frame_ids starting with \"/\"\n   * Source: <http://wiki.ros.org/tf2/Migration#tf_prefix_backwards_compatibility>\n   */\n  public normalizeFrameId(frameId: string): string {\n    if (!this.ros || !frameId.startsWith(\"/\")) {\n      return frameId;\n    }\n    return frameId.slice(1);\n  }\n\n  public addCoordinateFrame(frameId: string): void {\n    const normalizedFrameId = this.normalizeFrameId(frameId);\n    if (!this.transformTree.hasFrame(normalizedFrameId)) {\n      this.transformTree.getOrCreateFrame(normalizedFrameId);\n      this.coordinateFrameList = this.transformTree.frameList();\n      // log.debug(`Added coordinate frame \"${normalizedFrameId}\"`);\n      this.emit(\"transformTreeUpdated\", this);\n    }\n  }\n\n  #addFrameTransform(transform: FrameTransform): void {\n    const parentId = transform.parent_frame_id;\n    const childId = transform.child_frame_id;\n    const stamp = toNanoSec(transform.timestamp);\n    const t = transform.translation;\n    const q = transform.rotation;\n\n    this.addTransform(parentId, childId, stamp, t, q);\n  }\n\n  #addTransformMessage(tf: TransformStamped): void {\n    const normalizedParentId = this.normalizeFrameId(tf.header.frame_id);\n    const normalizedChildId = this.normalizeFrameId(tf.child_frame_id);\n    const stamp = toNanoSec(tf.header.stamp);\n    const t = tf.transform.translation;\n    const q = tf.transform.rotation;\n\n    this.addTransform(normalizedParentId, normalizedChildId, stamp, t, q);\n  }\n\n  // Create a new transform and add it to the renderer's TransformTree\n  public addTransform(\n    parentFrameId: string,\n    childFrameId: string,\n    stamp: bigint,\n    translation: Vector3,\n    rotation: Quaternion,\n    errorSettingsPath?: string[],\n  ): void {\n    const t = translation;\n    const q = rotation;\n\n    const transform = new Transform([t.x, t.y, t.z], [q.x, q.y, q.z, q.w]);\n    const status = this.transformTree.addTransform(childFrameId, parentFrameId, stamp, transform);\n\n    if (status === AddTransformResult.UPDATED) {\n      this.coordinateFrameList = this.transformTree.frameList();\n      this.emit(\"transformTreeUpdated\", this);\n    }\n\n    if (status === AddTransformResult.CYCLE_DETECTED) {\n      this.settings.errors.add(\n        [\"transforms\", `frame:${childFrameId}`],\n        CYCLE_DETECTED,\n        `Transform tree cycle detected: Received transform with parent \"${parentFrameId}\" and child \"${childFrameId}\", but \"${childFrameId}\" is already an ancestor of \"${parentFrameId}\". Transform message dropped.`,\n      );\n      if (errorSettingsPath) {\n        this.settings.errors.add(\n          errorSettingsPath,\n          CYCLE_DETECTED,\n          `Attempted to add cyclical transform: Frame \"${parentFrameId}\" cannot be the parent of frame \"${childFrameId}\". Transform message dropped.`,\n        );\n      }\n    }\n\n    // Check if the transform history for this frame is at capacity and show an error if so. This\n    // error can't be cleared until the scene is reloaded\n    const frame = this.transformTree.getOrCreateFrame(childFrameId);\n    if (frame.transformsSize() === frame.maxCapacity) {\n      this.settings.errors.add(\n        [\"transforms\", `frame:${childFrameId}`],\n        TF_OVERFLOW,\n        `[Warning] Transform history is at capacity (${frame.maxCapacity}), old TFs will be dropped`,\n      );\n    }\n  }\n\n  public removeTransform(childFrameId: string, parentFrameId: string, stamp: bigint): void {\n    this.transformTree.removeTransform(childFrameId, parentFrameId, stamp);\n    this.coordinateFrameList = this.transformTree.frameList();\n    this.emit(\"transformTreeUpdated\", this);\n  }\n\n  // Callback handlers\n\n  public animationFrame = (): void => {\n    this.#animationFrame = undefined;\n    this.#frameHandler(this.currentTime);\n  };\n\n  public queueAnimationFrame(): void {\n    if (this.#animationFrame == undefined) {\n      this.#animationFrame = requestAnimationFrame(this.animationFrame);\n    }\n  }\n\n  public setFollowFrameId(frameId: string | undefined): void {\n    if (this.followFrameId !== frameId) {\n      log.debug(`Setting followFrameId to ${frameId}`);\n    }\n    this.followFrameId = frameId;\n  }\n\n  #frameHandler = (currentTime: bigint): void => {\n    this.currentTime = currentTime;\n    this.#updateFrameErrors();\n    this.#updateFixedFrameId();\n    this.#updateResolution();\n\n    this.gl.clear();\n    this.emit(\"startFrame\", currentTime, this);\n\n    const camera = this.cameraHandler.getActiveCamera();\n    camera.layers.set(LAYER_DEFAULT);\n    this.#selectionBackdrop.visible = this.#selectedRenderable != undefined;\n\n    // use the FALLBACK_FRAME_ID if renderFrame is undefined and there are no options for transforms\n    const renderFrameId =\n      this.followFrameId && this.transformTree.frame(this.followFrameId)\n        ? this.followFrameId\n        : CoordinateFrame.FALLBACK_FRAME_ID;\n    const fixedFrameId = this.fixedFrameId ?? CoordinateFrame.FALLBACK_FRAME_ID;\n\n    for (const sceneExtension of this.sceneExtensions.values()) {\n      sceneExtension.startFrame(currentTime, renderFrameId, fixedFrameId);\n    }\n\n    this.gl.render(this.#scene, camera);\n\n    if (this.#selectedRenderable) {\n      this.gl.clearDepth();\n      camera.layers.set(LAYER_SELECTED);\n      this.#selectionBackdrop.visible = false;\n      this.gl.render(this.#scene, camera);\n    }\n\n    this.emit(\"endFrame\", currentTime, this);\n\n    this.gl.info.reset();\n  };\n\n  #updateFixedFrameId(): void {\n    const frame =\n      this.followFrameId != undefined ? this.transformTree.frame(this.followFrameId) : undefined;\n\n    if (frame == undefined) {\n      this.fixedFrameId = undefined;\n      return;\n    }\n    const fixedFrame = frame.root();\n    const fixedFrameId = fixedFrame.id;\n    if (this.fixedFrameId !== fixedFrameId) {\n      if (this.fixedFrameId == undefined) {\n        log.debug(`Setting fixed frame to ${fixedFrameId}`);\n      } else {\n        log.debug(`Changing fixed frame from \"${this.fixedFrameId}\" to \"${fixedFrameId}\"`);\n      }\n      this.fixedFrameId = fixedFrameId;\n    }\n  }\n\n  #resizeHandler = (size: THREE.Vector2): void => {\n    this.gl.setPixelRatio(window.devicePixelRatio);\n    this.gl.setSize(size.width, size.height);\n    this.cameraHandler.handleResize(size.width, size.height, window.devicePixelRatio);\n\n    const renderSize = this.gl.getDrawingBufferSize(tempVec2);\n    log.debug(`Resized renderer to ${renderSize.width}x${renderSize.height}`);\n    this.animationFrame();\n  };\n\n  #clickHandler = (cursorCoords: THREE.Vector2): void => {\n    if (!this.#pickingEnabled) {\n      this.setSelectedRenderable(undefined);\n      return;\n    }\n\n    // Disable picking while a tool is active\n    if (this.measurementTool.state !== \"idle\" || this.publishClickTool.state !== \"idle\") {\n      return;\n    }\n\n    // Deselect the currently selected object, if one is selected and re-render\n    // the scene to update the render lists\n    this.setSelectedRenderable(undefined);\n\n    // Pick a single renderable, hide it, re-render, and run picking again until\n    // the backdrop is hit or we exceed MAX_SELECTIONS\n    const camera = this.cameraHandler.getActiveCamera();\n    const selections: PickedRenderable[] = [];\n    let curSelection: PickedRenderable | undefined;\n    while (\n      (curSelection = this.#pickSingleObject(cursorCoords)) &&\n      selections.length < MAX_SELECTIONS\n    ) {\n      selections.push(curSelection);\n      curSelection.renderable.visible = false;\n      this.gl.render(this.#scene, camera);\n    }\n\n    // Put everything back to normal and render one last frame\n    for (const selection of selections) {\n      selection.renderable.visible = true;\n    }\n    if (!this.debugPicking) {\n      this.animationFrame();\n    }\n\n    log.debug(`Clicked ${selections.length} renderable(s)`);\n    this.emit(\"renderablesClicked\", selections, cursorCoords, this);\n  };\n\n  #handleFrameTransform = ({ message }: MessageEvent<DeepPartial<FrameTransform>>): void => {\n    // foxglove.FrameTransform - Ingest this single transform into our TF tree\n    const transform = normalizeFrameTransform(message);\n    this.#addFrameTransform(transform);\n  };\n\n  #handleFrameTransforms = ({ message }: MessageEvent<DeepPartial<FrameTransforms>>): void => {\n    // foxglove.FrameTransforms - Ingest the list of transforms into our TF tree\n    const frameTransforms = normalizeFrameTransforms(message);\n    for (const transform of frameTransforms.transforms) {\n      this.#addFrameTransform(transform);\n    }\n  };\n\n  #handleTFMessage = ({ message }: MessageEvent<DeepPartial<TFMessage>>): void => {\n    // tf2_msgs/TFMessage - Ingest the list of transforms into our TF tree\n    const tfMessage = normalizeTFMessage(message);\n    for (const tf of tfMessage.transforms) {\n      this.#addTransformMessage(tf);\n    }\n  };\n\n  #handleTransformStamped = ({ message }: MessageEvent<DeepPartial<TransformStamped>>): void => {\n    // geometry_msgs/TransformStamped - Ingest this single transform into our TF tree\n    const tf = normalizeTransformStamped(message);\n    this.#addTransformMessage(tf);\n  };\n\n  #handleTopicsAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"perform-node-action\" || path.length !== 1 || path[0] !== \"topics\") {\n      return;\n    }\n    log.debug(`handleTopicsAction(${action.payload.id})`);\n\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    const toggleTopicVisibility = (value: boolean) => {\n      for (const extension of this.sceneExtensions.values()) {\n        for (const node of extension.settingsNodes()) {\n          if (node.path[0] === \"topics\") {\n            extension.handleSettingsAction({\n              action: \"update\",\n              payload: { path: [...node.path, \"visible\"], input: \"boolean\", value },\n            });\n          }\n        }\n      }\n    };\n\n    if (action.payload.id === \"show-all\") {\n      // Show all topics\n      toggleTopicVisibility(true);\n    } else if (action.payload.id === \"hide-all\") {\n      // Hide all topics\n      toggleTopicVisibility(false);\n    }\n  };\n\n  #handleCustomLayersAction = (action: SettingsTreeAction): void => {\n    const path = action.payload.path;\n    if (action.action !== \"perform-node-action\" || path.length !== 1 || path[0] !== \"layers\") {\n      return;\n    }\n    log.debug(`handleCustomLayersAction(${action.payload.id})`);\n\n    // Remove `-{uuid}` from the actionId to get the layerId\n    const actionId = action.payload.id;\n    const layerId = actionId.slice(0, -37);\n    const instanceId = actionId.slice(-36);\n\n    const entry = this.#customLayerActions.get(layerId);\n    if (!entry) {\n      throw new Error(`No custom layer action found for \"${layerId}\"`);\n    }\n\n    // Regenerate the action menu entry with a new instanceId. The unique instanceId is generated\n    // here so we can deduplicate multiple callbacks for the same menu click event\n    const { label, icon } = entry.action;\n    this.addCustomLayerAction({ layerId, label, icon, handler: entry.handler });\n\n    // Trigger the add custom layer action handler\n    entry.handler(instanceId);\n\n    // Update the Custom Layers node label with the number of custom layers\n    this.updateCustomLayersCount();\n  };\n\n  #pickSingleObject(cursorCoords: THREE.Vector2): PickedRenderable | undefined {\n    // Render a single pixel using a fragment shader that writes object IDs as\n    // colors, then read the value of that single pixel back\n    const objectId = this.#picker.pick(\n      cursorCoords.x,\n      cursorCoords.y,\n      this.cameraHandler.getActiveCamera(),\n      { debug: this.debugPicking, disableSetViewOffset: this.interfaceMode === \"image\" },\n    );\n    if (objectId === -1) {\n      return undefined;\n    }\n\n    // Traverse the scene looking for this objectId\n    const pickedObject = this.#scene.getObjectById(objectId);\n\n    // Find the highest ancestor of the picked object that is a Renderable\n    let renderable: Renderable | undefined;\n    let maybeRenderable = pickedObject as Partial<Renderable> | undefined;\n    while (maybeRenderable) {\n      if (maybeRenderable.pickable === true) {\n        renderable = maybeRenderable as Renderable;\n      }\n      maybeRenderable = (maybeRenderable.parent ?? undefined) as Partial<Renderable> | undefined;\n    }\n\n    if (!renderable) {\n      log.warn(\n        `No Renderable found for objectId ${objectId} (name=\"${pickedObject?.name}\" uuid=${pickedObject?.uuid})`,\n      );\n      return undefined;\n    }\n\n    let instanceIndex: number | undefined;\n    if (renderable.pickableInstances) {\n      instanceIndex = this.#picker.pickInstance(\n        cursorCoords.x,\n        cursorCoords.y,\n        this.cameraHandler.getActiveCamera(),\n        renderable,\n        { debug: this.debugPicking, disableSetViewOffset: this.interfaceMode === \"image\" },\n      );\n      instanceIndex = instanceIndex === -1 ? undefined : instanceIndex;\n    }\n\n    return { renderable, instanceIndex };\n  }\n\n  #updateFrameErrors(): void {\n    if (this.followFrameId == undefined) {\n      // No frames available\n      this.settings.errors.add(\n        FOLLOW_TF_PATH,\n        NO_FRAME_SELECTED,\n        i18next.t(\"threeDee:noCoordinateFramesFound\"),\n      );\n      return;\n    }\n\n    this.settings.errors.remove(FOLLOW_TF_PATH, NO_FRAME_SELECTED);\n\n    const frame = this.transformTree.frame(this.followFrameId);\n\n    // The follow frame id should be chosen from a frameId that exists, but\n    // we still need to watch out for the case that the transform tree was\n    // cleared before that could be updated\n    if (!frame) {\n      this.settings.errors.add(\n        FOLLOW_TF_PATH,\n        FOLLOW_FRAME_NOT_FOUND,\n        i18next.t(\"threeDee:frameNotFound\", {\n          frameId: this.followFrameId,\n        }),\n      );\n      return;\n    }\n\n    this.settings.errors.remove(FOLLOW_TF_PATH, FOLLOW_FRAME_NOT_FOUND);\n  }\n\n  #updateResolution(): void {\n    const resolution = this.input.canvasSize;\n    if (this.#prevResolution.equals(resolution)) {\n      return;\n    }\n    this.#prevResolution.copy(resolution);\n\n    this.#scene.traverse((object) => {\n      if ((object as Partial<THREE.Mesh>).material) {\n        const mesh = object as THREE.Mesh;\n        const material = mesh.material as Partial<THREE.ShaderMaterial>;\n\n        // Update render resolution uniforms\n        if (material.uniforms?.resolution) {\n          material.uniforms.resolution.value.copy(resolution);\n          material.uniformsNeedUpdate = true;\n        }\n      }\n    });\n  }\n}\n\nfunction handleMessage(\n  messageEvent: Readonly<MessageEvent>,\n  subscriptions: RendererSubscription[] | undefined,\n): void {\n  if (subscriptions) {\n    for (const subscription of subscriptions) {\n      subscription.handler(messageEvent);\n    }\n  }\n}\n\nfunction selectObject(object: THREE.Object3D) {\n  object.layers.set(LAYER_SELECTED);\n  object.traverse((child) => {\n    child.layers.set(LAYER_SELECTED);\n  });\n}\n\nfunction deselectObject(object: THREE.Object3D) {\n  object.layers.set(LAYER_DEFAULT);\n  object.traverse((child) => {\n    child.layers.set(LAYER_DEFAULT);\n  });\n}\n\n/**\n * Creates a skeleton settings tree. The tree contents are filled in by scene extensions.\n * This dictates the order in which groups appear in the settings editor.\n */\nfunction baseSettingsTree(interfaceMode: InterfaceMode): SettingsTreeNodes {\n  const keys: string[] = [];\n  keys.push(interfaceMode === \"image\" ? \"imageMode\" : \"general\", \"scene\");\n  if (interfaceMode === \"image\") {\n    keys.push(\"imageAnnotations\");\n  }\n  if (interfaceMode === \"3d\") {\n    keys.push(\"cameraState\");\n  }\n  keys.push(\"transforms\", \"topics\", \"layers\");\n  if (interfaceMode === \"3d\") {\n    keys.push(\"publish\");\n  }\n  return Object.fromEntries(keys.map((key) => [key, {}]));\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport EventEmitter from \"eventemitter3\";\nimport { createContext, useContext, useEffect } from \"react\";\n\nimport type { IRenderer, RendererEvents } from \"./IRenderer\";\n\nexport const RendererContext = createContext<IRenderer | undefined>(undefined);\n\n/**\n * React hook to retrieve the Renderer instance registered with the\n * RendererContext. This will always return undefined from the ThreeDeeRender()\n * component since the context exists below ThreeDeeRender().\n */\nexport function useRenderer(): IRenderer | undefined {\n  const renderer = useContext(RendererContext);\n  return renderer ?? undefined;\n}\n\n/**\n * React hook that subscribes to Renderer events. The optional\n * `rendererInstance` argument must be passed when calling from the\n * ThreeDeeRender() component which is above the RendererContext.\n * @param eventName Event name to subscribe to\n * @param listener Event callback\n * @param rendererInstance Optional Renderer instance to subscribe to instead of\n *   the reference returned by useRenderer()\n */\nexport function useRendererEvent<K extends keyof RendererEvents>(\n  eventName: K,\n  listener: (\n    ...args: EventEmitter.ArgumentMap<RendererEvents>[Extract<K, keyof RendererEvents>]\n  ) => void,\n  rendererInstance?: IRenderer | ReactNull,\n): void {\n  const usedRenderer = useRenderer();\n  const renderer = rendererInstance ?? usedRenderer;\n\n  useEffect(() => {\n    renderer?.addListener(eventName, listener);\n    return () => void renderer?.removeListener(eventName, listener);\n  }, [listener, eventName, renderer]);\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport default function PublishGoalIcon(props: SvgIconProps): JSX.Element {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <circle cx=\"12.03\" cy=\"18.5\" r=\"2\" />\n        <path d=\"M13.28,13.15V5H17L12,0,7.08,5h3.7v8.2a5.5,5.5,0,1,0,2.5,0ZM12,22a3.5,3.5,0,1,1,3.5-3.5A3.5,3.5,0,0,1,12,22Z\" />\n      </g>\n    </SvgIcon>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport default function PublishPointIcon(props: SvgIconProps): JSX.Element {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <circle cx=\"12\" cy=\"12\" r=\"2\" />\n        <path d=\"M12,17.5A5.5,5.5,0,1,1,17.5,12,5.51,5.51,0,0,1,12,17.5Zm0-9A3.5,3.5,0,1,0,15.5,12,3.5,3.5,0,0,0,12,8.5Z\" />\n      </g>\n    </SvgIcon>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nexport default function PublishPoseEstimateIcon(props: SvgIconProps): JSX.Element {\n  return (\n    <SvgIcon {...props}>\n      <g>\n        <path\n          d=\"M.23,8.71l7.85,7.41L12,13.29l4,2.83,7.85-7.41S20.8,4,12,4,.23,8.71.23,8.71Z\"\n          opacity=\"0.2\"\n        />\n        <circle cx=\"12.03\" cy=\"18.5\" r=\"2\" />\n        <path d=\"M13.28,13.15V5H17L12,0,7.08,5h3.7v8.2a5.5,5.5,0,1,0,2.5,0ZM12,22a3.5,3.5,0,1,1,3.5-3.5A3.5,3.5,0,0,1,12,22Z\" />\n        <path d=\"M16,16.12,14.6,14.67l1.46-1.37,1.37,1.45Zm2.18-2.06-1.37-1.45,1.45-1.37,1.37,1.45ZM20.34,12,19,10.55l1.45-1.37,1.38,1.45ZM22.52,10,21.15,8.49l1.31-1.24,1.37,1.46Z\" />\n        <path d=\"M8.08,16.12,6.63,14.75,8,13.3l1.46,1.37ZM5.9,14.06,4.45,12.69l1.37-1.45,1.45,1.37ZM3.72,12,2.27,10.63,3.64,9.18l1.45,1.37ZM1.54,10,.23,8.71,1.6,7.25,2.91,8.49Z\" />\n      </g>\n    </SvgIcon>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { MutableRefObject, useCallback, useEffect, useState } from \"react\";\n\nimport { PANEL_ROOT_CLASS_NAME } from \"@foxglove/studio-base/components/PanelRoot\";\n\n/**\n * Tracks the presence of the mouse in the parent panel.\n *\n * @param ref The element to hide and show on panel hove\n * @returns True if the mouse is currently within the parent panel.\n */\nexport function usePanelMousePresence(ref: MutableRefObject<HTMLElement | ReactNull>): boolean {\n  const [present, setPresent] = useState(false);\n\n  const listener = useCallback(\n    (ev: MouseEvent) => {\n      if (!ref.current) {\n        return;\n      }\n\n      if (ev.type === \"mouseenter\") {\n        setPresent(true);\n      } else {\n        setPresent(false);\n      }\n    },\n    [ref],\n  );\n\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) {\n      return;\n    }\n\n    const parent: HTMLElement | ReactNull = element.closest(`.${PANEL_ROOT_CLASS_NAME}`);\n    parent?.addEventListener(\"mouseenter\", listener);\n    parent?.addEventListener(\"mouseleave\", listener);\n\n    return () => {\n      parent?.removeEventListener(\"mouseenter\", listener);\n      parent?.removeEventListener(\"mouseleave\", listener);\n    };\n  }, [ref, listener]);\n\n  return present;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { first, omit } from \"lodash\";\nimport Tree from \"react-json-tree\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { RosValue } from \"@foxglove/studio-base/players/types\";\nimport { getItemString } from \"@foxglove/studio-base/util/getItemString\";\nimport { useJsonTreeTheme } from \"@foxglove/studio-base/util/globalConstants\";\n\nimport { InteractionData } from \"./types\";\n\ntype Props = {\n  readonly interactionData?: InteractionData;\n  readonly selectedObject?: RosValue;\n  readonly timezone: string | undefined;\n};\n\nfunction maybePlainObject(rawVal: unknown) {\n  if (typeof rawVal === \"object\" && rawVal && \"toJSON\" in rawVal) {\n    return (rawVal as { toJSON: () => unknown }).toJSON();\n  }\n  return rawVal;\n}\n\nfunction ObjectDetails({ interactionData, selectedObject, timezone }: Props): JSX.Element {\n  const jsonTreeTheme = useJsonTreeTheme();\n  const topic = interactionData?.topic ?? \"\";\n\n  // object to display may not be a plain-ole-data\n  // We need a plain object to sort the keys and omit interaction data\n  const plainObject = maybePlainObject(selectedObject);\n  const originalObject = omit(plainObject as Record<string, unknown>, \"interactionData\");\n\n  if (topic.length === 0) {\n    // show the original object directly if there is no interaction data\n    return (\n      <Stack paddingY={1}>\n        <Tree\n          data={selectedObject}\n          shouldExpandNode={(_markerKeyPath, _data, level) => level < 2}\n          invertTheme={false}\n          postprocessValue={maybePlainObject}\n          theme={{ ...jsonTreeTheme, tree: { margin: 0 } }}\n          hideRoot\n        />\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack paddingY={1}>\n      <Tree\n        data={originalObject}\n        shouldExpandNode={() => false}\n        invertTheme={false}\n        theme={{ ...jsonTreeTheme, tree: { margin: 0, whiteSpace: \"pre-line\" } }}\n        hideRoot\n        getItemString={(nodeType, data, itemType, itemString, keyPath) =>\n          getItemString(nodeType, data, itemType, itemString, keyPath, timezone)\n        }\n        postprocessValue={maybePlainObject}\n        labelRenderer={(markerKeyPath, _p1, _p2, _hasChildren) => {\n          const label = first(markerKeyPath);\n          return <span style={{ padding: \"0 4px 0 0\" }}>{label}</span>;\n        }}\n        valueRenderer={(label: string) => {\n          return <span>{label}</span>;\n        }}\n      />\n    </Stack>\n  );\n}\n\nexport default ObjectDetails;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport { CardActionArea, Typography } from \"@mui/material\";\n\nimport type { LayoutActions } from \"@foxglove/studio\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\n\ntype Props = {\n  topic: string;\n  addPanel: LayoutActions[\"addPanel\"];\n};\n\nexport default function TopicLink({ addPanel, topic }: Props): JSX.Element {\n  const openRawMessages = React.useCallback(() => {\n    addPanel({\n      position: \"sibling\",\n      type: \"RawMessages\",\n      updateIfExists: true,\n      getState: (existingState?: unknown) => ({\n        ...(existingState as Record<string, unknown> | undefined),\n        topicPath: topic,\n      }),\n    });\n  }, [addPanel, topic]);\n\n  return (\n    <CardActionArea onClick={openRawMessages} title=\"Open in Raw Message panel\">\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" padding={1}>\n        <Typography variant=\"body2\">{topic}</Typography>\n        <OpenInNewIcon fontSize=\"small\" color=\"primary\" />\n      </Stack>\n    </CardActionArea>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { Cursor24Regular } from \"@fluentui/react-icons\";\nimport { Typography } from \"@mui/material\";\n\nimport type { LayoutActions } from \"@foxglove/studio\";\nimport ExpandingToolbar, {\n  ToolGroup,\n  ToolGroupFixedSizePane,\n} from \"@foxglove/studio-base/components/ExpandingToolbar\";\n\nimport ObjectDetails from \"./ObjectDetails\";\nimport TopicLink from \"./TopicLink\";\nimport { InteractionData } from \"./types\";\nimport { Pose } from \"../transforms\";\n\n// ts-prune-ignore-next\nexport const OBJECT_TAB_TYPE = \"Selected object\";\nexport type TabType = typeof OBJECT_TAB_TYPE;\n\nexport type SelectionObject = {\n  object: {\n    pose: Pose;\n    interactionData?: InteractionData;\n  };\n  instanceIndex: number | undefined;\n};\n\ntype Props = {\n  interactionsTabType?: TabType;\n  setInteractionsTabType: (arg0?: TabType) => void;\n  addPanel: LayoutActions[\"addPanel\"];\n  selectedObject?: SelectionObject;\n  timezone: string | undefined;\n};\n\nconst InteractionsBaseComponent = React.memo<Props>(function InteractionsBaseComponent({\n  addPanel,\n  selectedObject,\n  interactionsTabType,\n  setInteractionsTabType,\n  timezone,\n}: Props) {\n  const selectedInteractionData = selectedObject?.object.interactionData;\n  const originalMessage = selectedInteractionData?.originalMessage;\n  const instanceDetails = selectedInteractionData?.instanceDetails;\n\n  return (\n    <ExpandingToolbar\n      tooltip=\"Inspect objects\"\n      icon={<Cursor24Regular />}\n      selectedTab={interactionsTabType}\n      onSelectTab={(newSelectedTab) => setInteractionsTabType(newSelectedTab)}\n    >\n      <ToolGroup name={OBJECT_TAB_TYPE}>\n        <ToolGroupFixedSizePane>\n          {originalMessage ? (\n            <>\n              {selectedInteractionData.topic && (\n                <TopicLink addPanel={addPanel} topic={selectedInteractionData.topic} />\n              )}\n              {instanceDetails ? (\n                <ObjectDetails selectedObject={instanceDetails} timezone={timezone} />\n              ) : (\n                <></>\n              )}\n              <ObjectDetails\n                selectedObject={originalMessage}\n                interactionData={selectedInteractionData}\n                timezone={timezone}\n              />\n            </>\n          ) : (\n            <Typography variant=\"body2\" color=\"text.disabled\" gutterBottom>\n              Click an object in the 3D view to select it.\n            </Typography>\n          )}\n        </ToolGroupFixedSizePane>\n      </ToolGroup>\n    </ExpandingToolbar>\n  );\n});\n\n// Wrap the Interactions so that we don't rerender every time any part of the PanelContext config changes, but just the\n// one value that we care about.\nexport default function Interactions(props: Props): JSX.Element {\n  return <InteractionsBaseComponent {...props} />;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Menu, MenuItem, MenuProps } from \"@mui/material\";\nimport { useCallback } from \"react\";\n\nimport { BaseMarker, InstancedLineListMarker } from \"@foxglove/studio-base/types/Messages\";\n\nimport { Interactive, SelectedObject } from \"./types\";\nimport { MouseEventObject } from \"../camera\";\n\ntype ClickedPosition = { clientX: number; clientY: number };\n\ntype Props = {\n  clickedPosition: ClickedPosition;\n  clickedObjects: MouseEventObject[];\n  onClose: MenuProps[\"onClose\"];\n  selectObject: (arg0?: MouseEventObject) => void;\n};\n\nconst getInstanceObj = (marker: unknown, idx: number): unknown => {\n  if (marker == undefined) {\n    return;\n  }\n  return (marker as InstancedLineListMarker).metadataByIndex?.[idx];\n};\n\nconst getObject = (selectedObject?: MouseEventObject): unknown => {\n  const object =\n    (selectedObject?.instanceIndex != undefined &&\n      (selectedObject.object as InstancedLineListMarker).metadataByIndex != undefined &&\n      getInstanceObj(selectedObject.object, selectedObject.instanceIndex) != undefined) ||\n    selectedObject?.object;\n  return object;\n};\n\nfunction InteractionContextMenuItem({\n  interactiveObject,\n  selectObject,\n}: {\n  selectObject: (arg0?: SelectedObject) => void;\n  interactiveObject?: MouseEventObject;\n}): JSX.Element {\n  const object = getObject(interactiveObject) as Partial<Interactive<BaseMarker>>;\n\n  const selectItemObject = useCallback(\n    () => selectObject(interactiveObject as SelectedObject),\n    [interactiveObject, selectObject],\n  );\n\n  return (\n    <MenuItem data-test=\"InteractionContextMenuItem\" onClick={selectItemObject}>\n      {object.interactionData?.topic}\n    </MenuItem>\n  );\n}\n\nexport function InteractionContextMenu({\n  clickedObjects = [],\n  clickedPosition = { clientX: 0, clientY: 0 },\n  onClose,\n  selectObject,\n}: Props): JSX.Element {\n  return (\n    <Menu\n      open\n      onClose={onClose}\n      anchorReference=\"anchorPosition\"\n      anchorPosition={{\n        top: clickedPosition.clientY,\n        left: clickedPosition.clientX,\n      }}\n      MenuListProps={{\n        dense: true,\n      }}\n    >\n      {clickedObjects.map((interactiveObject, index) => (\n        <InteractionContextMenuItem\n          key={index}\n          interactiveObject={interactiveObject}\n          selectObject={selectObject}\n        />\n      ))}\n    </Menu>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { useEffect, useState } from \"react\";\n\nimport type { IRenderer } from \"./IRenderer\";\nimport { useRendererEvent } from \"./RendererContext\";\n\nlet stats: THREEStats | undefined;\nlet drawCallsPanel: Panel | undefined;\nlet trianglesPanel: Panel | undefined;\nlet texturesPanel: Panel | undefined;\nlet geometriesPanel: Panel | undefined;\nlet maxDrawCalls = 0;\nlet maxTriangles = 0;\nlet maxTextures = 0;\nlet maxGeometries = 0;\n\nfunction update(renderer: IRenderer) {\n  maxDrawCalls = Math.max(maxDrawCalls, renderer.gl.info.render.calls);\n  maxTriangles = Math.max(maxTriangles, renderer.gl.info.render.triangles);\n  maxTextures = Math.max(maxTextures, renderer.gl.info.memory.textures);\n  maxGeometries = Math.max(maxGeometries, renderer.gl.info.memory.geometries);\n\n  drawCallsPanel?.update(renderer.gl.info.render.calls, maxDrawCalls);\n  trianglesPanel?.update(renderer.gl.info.render.triangles, maxTriangles);\n  texturesPanel?.update(renderer.gl.info.memory.textures, maxTextures);\n  geometriesPanel?.update(renderer.gl.info.memory.geometries, maxGeometries);\n  stats?.update();\n}\n\nexport function Stats(): JSX.Element {\n  const [div, setDiv] = useState<HTMLDivElement | ReactNull>(ReactNull);\n\n  useRendererEvent(\"endFrame\", (_curTime, curRenderer) => update(curRenderer));\n\n  useEffect(() => {\n    if (!div) {\n      return;\n    }\n\n    stats = new THREEStats();\n    stats.dom.style.position = \"relative\";\n    stats.dom.style.zIndex = \"auto\";\n    drawCallsPanel = new Panel(\"draws\", \"red\", \"black\");\n    trianglesPanel = new Panel(\"tris\", \"cyan\", \"black\");\n    texturesPanel = new Panel(\"textures\", \"yellow\", \"black\");\n    geometriesPanel = new Panel(\"geometries\", \"green\", \"black\");\n    stats.addPanel(drawCallsPanel);\n    stats.addPanel(trianglesPanel);\n    stats.addPanel(texturesPanel);\n    stats.addPanel(geometriesPanel);\n    div.appendChild(stats.dom);\n    stats.showPanel(0);\n    return () => {\n      if (stats) {\n        try {\n          div.removeChild(stats.dom);\n        } catch (ex) {\n          // ignore\n        }\n      }\n    };\n  }, [div]);\n\n  return <div ref={setDiv} />;\n}\n\n// Adapted from <https://github.com/mrdoob/stats.js/>. The frame time panel is\n// modified to use a maximum value of ~33ms instead of the default 200ms and\n// the FPS panel is removed\nclass THREEStats {\n  #mode = 0;\n  #container: HTMLDivElement;\n  public dom: HTMLDivElement;\n  #beginTime: number;\n  #prevTime: number;\n  #msPanel: Panel;\n  // fpsPanel: Panel;\n  #memPanel: Panel;\n\n  public constructor() {\n    this.#container = document.createElement(\"div\");\n    this.#container.style.cssText =\n      \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n    this.#container.addEventListener(\n      \"click\",\n      (event) => {\n        event.preventDefault();\n        this.showPanel(++this.#mode % this.#container.children.length);\n      },\n      false,\n    );\n    this.dom = this.#container;\n\n    this.#beginTime = performance.now();\n    this.#prevTime = this.#beginTime;\n\n    this.#msPanel = this.addPanel(new Panel(\"MS\", \"#9480ed\", \"#1e1a2f\"));\n    // this.fpsPanel = this.addPanel(new Panel(\"FPS\", \"#0ff\", \"#002\"));\n    this.#memPanel = this.addPanel(new Panel(\"MB\", \"#f08\", \"#201\"));\n\n    this.showPanel(0);\n  }\n\n  public addPanel(panel: Panel) {\n    this.#container.appendChild(panel.dom);\n    return panel;\n  }\n\n  public showPanel(id: number) {\n    for (let i = 0; i < this.#container.children.length; i++) {\n      const child = this.#container.children[i] as HTMLElement;\n      child.style.display = i === id ? \"block\" : \"none\";\n    }\n\n    this.#mode = id;\n  }\n\n  public begin = () => {\n    this.#beginTime = performance.now();\n  };\n\n  public end = () => {\n    const time = performance.now();\n\n    this.#msPanel.update(time - this.#beginTime, 1000 / 30);\n\n    if (time >= this.#prevTime + 1000) {\n      // this.fpsPanel.update((this.frames * 1000) / (time - this.prevTime), 100);\n\n      this.#prevTime = time;\n\n      const memory = (\n        performance as unknown as { memory: { usedJSHeapSize: number; jsHeapSizeLimit: number } }\n      ).memory;\n      this.#memPanel.update(memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576);\n    }\n\n    return time;\n  };\n\n  public update = () => {\n    this.#beginTime = this.end();\n  };\n}\n\n// Adapted from <https://github.com/mrdoob/stats.js/>. License: MIT.\nclass Panel {\n  public dom: HTMLCanvasElement;\n  #context: CanvasRenderingContext2D;\n  #min = Infinity;\n  #max = 0;\n  #name: string;\n  #fg: string;\n  #bg: string;\n\n  public constructor(name: string, fg: string, bg: string) {\n    this.#name = name;\n    this.#fg = fg;\n    this.#bg = bg;\n\n    const PR = Math.round(window.devicePixelRatio);\n    const WIDTH = 80 * PR,\n      HEIGHT = 48 * PR,\n      TEXT_X = 3 * PR,\n      TEXT_Y = 2 * PR,\n      GRAPH_X = 3 * PR,\n      GRAPH_Y = 15 * PR,\n      GRAPH_WIDTH = 74 * PR,\n      GRAPH_HEIGHT = 30 * PR;\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = WIDTH;\n    canvas.height = HEIGHT;\n    canvas.style.cssText = \"width:80px;height:48px\";\n\n    const context = canvas.getContext(\"2d\")!;\n    context.font = `bold ${9 * PR}px Helvetica,Arial,sans-serif`;\n    context.textBaseline = \"top\";\n\n    context.fillStyle = bg;\n    context.fillRect(0, 0, WIDTH, HEIGHT);\n\n    context.fillStyle = fg;\n    context.fillText(name, TEXT_X, TEXT_Y);\n    context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n    context.fillStyle = bg;\n    context.globalAlpha = 0.9;\n    context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n    this.dom = canvas;\n    this.#context = context;\n  }\n\n  public update(value: number, maxValue: number): void {\n    const PR = Math.round(window.devicePixelRatio);\n    const WIDTH = 80 * PR,\n      TEXT_X = 3 * PR,\n      TEXT_Y = 2 * PR,\n      GRAPH_X = 3 * PR,\n      GRAPH_Y = 15 * PR,\n      GRAPH_WIDTH = 74 * PR,\n      GRAPH_HEIGHT = 30 * PR;\n\n    this.#min = Math.min(this.#min, value);\n    this.#max = Math.max(this.#max, value);\n\n    this.#context.fillStyle = this.#bg;\n    this.#context.globalAlpha = 1;\n    this.#context.fillRect(0, 0, WIDTH, GRAPH_Y);\n    this.#context.fillStyle = this.#fg;\n    this.#context.fillText(\n      `${Math.round(value)} ${this.#name} (${Math.round(this.#min)}-${Math.round(this.#max)})`,\n      TEXT_X,\n      TEXT_Y,\n    );\n\n    this.#context.drawImage(\n      this.dom,\n      GRAPH_X + PR,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n      GRAPH_X,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n    );\n\n    this.#context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\n\n    this.#context.fillStyle = this.#bg;\n    this.#context.globalAlpha = 0.9;\n    this.#context.fillRect(\n      GRAPH_X + GRAPH_WIDTH - PR,\n      GRAPH_Y,\n      PR,\n      Math.round((1 - value / maxValue) * GRAPH_HEIGHT),\n    );\n  }\n}\n","// @ts-nocheck\nimport React from 'react'\nimport saveAs from 'file-saver'\n\ninterface CanvasRecorder {\n    start: <T extends HTMLCanvasElement>(canvas: T) => void\n    stop: () => void\n}\n\n/* eslint-disable */\nconst CanvasRecorder = (): CanvasRecorder => {\n    const start = startRecording\n    const stop = stopRecording\n    let stream\n    var recordedBlobs = []\n    var supportedType = null\n    var mediaRecorder = null\n    let createdBlob = null\n\n    function startRecording(canvas) {\n        stream = canvas.captureStream(30) // 30 FPS\n        let types = [\n            'video/webm;codecs=avc1',\n            'video/webm;codecs=vp9',\n            'video/webm;codecs=vp8',\n            'video/webm',\n        ]\n        for (let i in types) {\n            if (MediaRecorder.isTypeSupported(types[i])) {\n                supportedType = types[i]\n                break\n            }\n        }\n        console.log('Selected MediaRecorder type:', supportedType)\n        if (supportedType == null) {\n            console.log('No supported type found for MediaRecorder')\n        }\n        let options = {\n            mimeType: supportedType,\n            videoBitsPerSecond: 25e6, // 2.5Mbps\n        }\n        recordedBlobs = []\n        try {\n            mediaRecorder = new MediaRecorder(stream, options)\n        } catch (e) {\n            console.error('Exception while creating MediaRecorder:', e)\n            alert('MediaRecorder is not supported by this browser.')\n            return\n        }\n        mediaRecorder.onstop = handleStop\n        mediaRecorder.ondataavailable = handleDataAvailable\n        mediaRecorder.start() // collect 100ms of data blobs\n    }\n    function handleDataAvailable(event) {\n        if (event.data && event.data.size > 0) {\n            recordedBlobs.push(event.data)\n        }\n    }\n    function handleStop(event) {\n        createdBlob = new Blob(recordedBlobs, { type: supportedType })\n        let formatter = Intl.DateTimeFormat('de-DE',\n            {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n            }\n        );\n\n        download('recording_' + formatter.format(new Date()).replace(', ', '_').replaceAll(':', '.') + '.webm')\n    }\n\n    function stopRecording() {\n        mediaRecorder.stop()\n    }\n\n    function download(file_name) {\n        return new Promise((resolve, reject) => {\n            if (!createdBlob) {\n                reject('No blob created')\n            }\n            saveAs(createdBlob, file_name)\n            resolve()\n        });\n    }\n    return {\n        start,\n        stop\n    }\n}\nexport default CanvasRecorder()","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Circle12Filled, Ruler24Filled } from \"@fluentui/react-icons\";\nimport {\n  Button,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Paper,\n  useTheme,\n  Tooltip,\n} from \"@mui/material\";\nimport { useSnackbar } from \"notistack\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLongPress } from \"react-use\";\nimport { makeStyles } from \"tss-react/mui\";\nimport { keyframes } from \"tss-react\";\n\nimport Logger from \"@foxglove/log\";\nimport { LayoutActions } from \"@foxglove/studio\";\nimport {\n  PanelContextMenu,\n  PanelContextMenuItem,\n} from \"@foxglove/studio-base/components/PanelContextMenu\";\nimport PublishGoalIcon from \"@foxglove/studio-base/components/PublishGoalIcon\";\nimport PublishPointIcon from \"@foxglove/studio-base/components/PublishPointIcon\";\nimport PublishPoseEstimateIcon from \"@foxglove/studio-base/components/PublishPoseEstimateIcon\";\nimport { useAnalytics } from \"@foxglove/studio-base/context/AnalyticsContext\";\nimport { usePanelMousePresence } from \"@foxglove/studio-base/hooks/usePanelMousePresence\";\nimport { AppEvent } from \"@foxglove/studio-base/services/IAnalytics\";\nimport { downloadFiles } from \"@foxglove/studio-base/util/download\";\nimport { fonts } from \"@foxglove/studio-base/util/sharedStyleConstants\";\n\nimport { InteractionContextMenu, Interactions, SelectionObject, TabType } from \"./Interactions\";\nimport type { PickedRenderable } from \"./Picker\";\nimport { Renderable } from \"./Renderable\";\nimport { useRenderer, useRendererEvent } from \"./RendererContext\";\nimport { Stats } from \"./Stats\";\nimport { MouseEventObject } from \"./camera\";\nimport { decodeCompressedImageToBitmap, decodeRawImage } from \"./renderables/Images/decodeImage\";\nimport { PublishClickType } from \"./renderables/PublishClickTool\";\nimport { InterfaceMode } from \"./types\";\n\nimport recorder from './CanvasRecorder'\n\n\ndeclare global {\n  interface Window {\n    _canvasRecordingStarted: number;\n  }\n}\n\nconst log = Logger.getLogger(__filename);\n\nconst PublishClickIcons: Record<PublishClickType, React.ReactNode> = {\n  pose: <PublishGoalIcon fontSize=\"inherit\" />,\n  point: <PublishPointIcon fontSize=\"inherit\" />,\n  pose_estimate: <PublishPoseEstimateIcon fontSize=\"inherit\" />,\n};\n\nconst fadeBlinkAnimation = keyframes`\n60%, 100% {\n  opacity: 0;\n}\n0% {\n  opacity: 0;\n}\n40% {\n  opacity: 1;\n}\n`;\n\nconst useStyles = makeStyles()((theme) => ({\n  iconButton: {\n    position: \"relative\",\n    fontSize: \"1rem !important\",\n    pointerEvents: \"auto\",\n    aspectRatio: \"1\",\n\n    \"& svg:not(.MuiSvgIcon-root)\": {\n      fontSize: \"1rem !important\",\n    },\n  },\n  rulerIcon: {\n    transform: \"rotate(45deg)\",\n  },\n  recordButton: {\n    position: \"relative\",\n    fontSize: \"1rem !important\",\n    pointerEvents: \"auto\",\n    aspectRatio: \"1\",\n    \"& svg:not(.MuiSvgIcon-root)\": {\n      fontSize: \"1rem !important\",\n      \"&.recording\": {\n        animation: `${fadeBlinkAnimation} 1s ease-in-out infinite`,\n      },\n    },\n  },\n  threeDeeButton: {\n    fontFamily: fonts.MONOSPACE,\n    fontFeatureSettings: theme.typography.caption.fontFeatureSettings,\n    fontSize: theme.typography.caption.fontSize,\n    fontWeight: theme.typography.fontWeightBold,\n    lineHeight: \"1em\",\n  },\n  resetViewButton: {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    marginBottom: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\n\nfunction durationToTime(duration: number): string {\n  const seconds = Math.floor(duration / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  // return with 0 padding\n  return `${hours.toString().padStart(2, '0')}:${(minutes % 60).toString().padStart(2, '0')}:${(seconds % 60).toString().padStart(2, '0')}`;\n}\n\n/**\n * Provides DOM overlay elements on top of the 3D scene (e.g. stats, debug GUI).\n */\nexport function RendererOverlay(props: {\n  interfaceMode: InterfaceMode;\n  canvas: HTMLCanvasElement | ReactNull;\n  addPanel: LayoutActions[\"addPanel\"];\n  enableStats: boolean;\n  perspective: boolean;\n  onTogglePerspective: () => void;\n  measureActive: boolean;\n  onClickMeasure: () => void;\n  canPublish: boolean;\n  publishActive: boolean;\n  publishClickType: PublishClickType;\n  onChangePublishClickType: (_: PublishClickType) => void;\n  onClickPublish: () => void;\n  timezone: string | undefined;\n  /** Override default downloading behavior, used for Storybook */\n  onDownloadImage?: (blob: Blob, fileName: string) => void;\n}): JSX.Element {\n\n  const analytics = useAnalytics();\n  const { enqueueSnackbar } = useSnackbar();\n  const { t } = useTranslation(\"threeDee\");\n  const { classes } = useStyles();\n  const [clickedPosition, setClickedPosition] = useState<{ clientX: number; clientY: number }>({\n    clientX: 0,\n    clientY: 0,\n  });\n  const [selectedRenderables, setSelectedRenderables] = useState<PickedRenderable[]>([]);\n  const [selectedRenderable, setSelectedRenderable] = useState<PickedRenderable | undefined>(\n    undefined,\n  );\n  const [interactionsTabType, setInteractionsTabType] = useState<TabType | undefined>(undefined);\n  const renderer = useRenderer();\n\n  const [recording, setRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState<number>(0);\n\n  // Toggle object selection mode on/off in the renderer\n  useEffect(() => {\n    if (renderer) {\n      renderer.setPickingEnabled(interactionsTabType != undefined);\n    }\n  }, [interactionsTabType, renderer]);\n\n  useRendererEvent(\"renderablesClicked\", (selections, cursorCoords) => {\n    const rect = props.canvas!.getBoundingClientRect();\n    setClickedPosition({ clientX: rect.left + cursorCoords.x, clientY: rect.top + cursorCoords.y });\n    setSelectedRenderables(selections);\n    setSelectedRenderable(selections.length === 1 ? selections[0] : undefined);\n  });\n\n  const [showResetViewButton, setShowResetViewButton] = useState(renderer?.canResetView() ?? false);\n  useRendererEvent(\n    \"resetViewChanged\",\n    useCallback(() => {\n      setShowResetViewButton(renderer?.canResetView() ?? false);\n    }, [renderer]),\n  );\n  const onResetView = useCallback(() => {\n    renderer?.resetView();\n  }, [renderer]);\n\n  const startRecording = useCallback(() => {\n    if (!props.canvas) {\n      return;\n    }\n    recorder.start(props.canvas);\n    setRecording(true);\n    window._canvasRecordingStarted = Date.now();\n  }, [props.canvas]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRecordingTime(Date.now() - window._canvasRecordingStarted);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n\n  const stopRecording = useCallback(() => {\n    recorder.stop();\n    setRecording(false);\n  }, []);\n\n  const stats = props.enableStats ? (\n    <div id=\"stats\" style={{ position: \"absolute\", top: \"10px\", left: \"10px\" }}>\n      <Stats />\n    </div>\n  ) : undefined;\n\n  // Convert the list of selected renderables (if any) into MouseEventObjects\n  // that can be passed to <InteractionContextMenu>, which shows a context menu\n  // of candidate objects to select\n  const clickedObjects = useMemo<MouseEventObject[]>(\n    () =>\n      selectedRenderables.map((selection) => ({\n        object: {\n          pose: selection.renderable.pose,\n          scale: selection.renderable.scale,\n          color: undefined,\n          interactionData: {\n            topic: selection.renderable.name,\n            highlighted: undefined,\n            renderable: selection.renderable,\n          },\n        },\n        instanceIndex: selection.instanceIndex,\n      })),\n    [selectedRenderables],\n  );\n\n  // Once a single renderable is selected, convert it to the SelectionObject\n  // format to populate the object inspection dialog (<Interactions>)\n  const selectedObject = useMemo<SelectionObject | undefined>(\n    () =>\n      selectedRenderable\n        ? {\n          object: {\n            pose: selectedRenderable.renderable.pose,\n            interactionData: {\n              topic: selectedRenderable.renderable.topic,\n              highlighted: true,\n              originalMessage: selectedRenderable.renderable.details(),\n              instanceDetails:\n                selectedRenderable.instanceIndex != undefined\n                  ? selectedRenderable.renderable.instanceDetails(\n                    selectedRenderable.instanceIndex,\n                  )\n                  : undefined,\n            },\n          },\n          instanceIndex: selectedRenderable.instanceIndex,\n        }\n        : undefined,\n    [selectedRenderable],\n  );\n\n  // Inform the Renderer when a renderable is selected\n  useEffect(() => {\n    renderer?.setSelectedRenderable(selectedRenderable);\n  }, [renderer, selectedRenderable]);\n\n  const publickClickButtonRef = useRef<HTMLButtonElement>(ReactNull);\n  const [publishMenuExpanded, setPublishMenuExpanded] = useState(false);\n  const selectedPublishClickIcon = PublishClickIcons[props.publishClickType];\n\n  const onLongPressPublish = useCallback(() => {\n    setPublishMenuExpanded(true);\n  }, []);\n  const longPressPublishEvent = useLongPress(onLongPressPublish);\n\n  const theme = useTheme();\n\n  // Publish control is only available if the canPublish prop is true and we have a fixed frame in the renderer\n  const showPublishControl =\n    props.interfaceMode === \"3d\" && props.canPublish && renderer?.fixedFrameId != undefined;\n  const publishControls = showPublishControl && (\n    <>\n      <IconButton\n        {...longPressPublishEvent}\n        color={props.publishActive ? \"info\" : \"inherit\"}\n        title={props.publishActive ? \"Click to cancel\" : \"Click to publish\"}\n        ref={publickClickButtonRef}\n        onClick={props.onClickPublish}\n        data-testid=\"publish-button\"\n        style={{ fontSize: \"1rem\", pointerEvents: \"auto\" }}\n      >\n        {selectedPublishClickIcon}\n        <div\n          style={{\n            borderBottom: \"6px solid currentColor\",\n            borderRight: \"6px solid transparent\",\n            bottom: 0,\n            left: 0,\n            height: 0,\n            width: 0,\n            margin: theme.spacing(0.25),\n            position: \"absolute\",\n          }}\n        />\n      </IconButton>\n      <Menu\n        id=\"publish-menu\"\n        anchorEl={publickClickButtonRef.current}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={publishMenuExpanded}\n        onClose={() => setPublishMenuExpanded(false)}\n        MenuListProps={{ dense: true }}\n      >\n        <MenuItem\n          selected={props.publishClickType === \"pose_estimate\"}\n          onClick={() => {\n            props.onChangePublishClickType(\"pose_estimate\");\n            setPublishMenuExpanded(false);\n          }}\n        >\n          <ListItemIcon>{PublishClickIcons.pose_estimate}</ListItemIcon>\n          <ListItemText disableTypography>Publish pose estimate</ListItemText>\n        </MenuItem>\n        <MenuItem\n          selected={props.publishClickType === \"pose\"}\n          onClick={() => {\n            props.onChangePublishClickType(\"pose\");\n            setPublishMenuExpanded(false);\n          }}\n        >\n          <ListItemIcon>{PublishClickIcons.pose}</ListItemIcon>\n          <ListItemText disableTypography>Publish pose</ListItemText>\n        </MenuItem>\n        <MenuItem\n          selected={props.publishClickType === \"point\"}\n          onClick={() => {\n            props.onChangePublishClickType(\"point\");\n            setPublishMenuExpanded(false);\n          }}\n        >\n          <ListItemIcon>{PublishClickIcons.point}</ListItemIcon>\n          <ListItemText disableTypography>Publish point</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  );\n\n  const resetViewButton = showResetViewButton && (\n    <Button\n      className={classes.resetViewButton}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={onResetView}\n      data-testid=\"reset-view\"\n    >\n      {t(\"resetView\")}\n    </Button>\n  );\n\n  const { onDownloadImage } = props;\n  const doDownloadImage = useCallback(async () => {\n    const currentImage = renderer?.getCurrentImage();\n    if (!currentImage) {\n      return;\n    }\n\n    const { topic, image, rotation, flipHorizontal, flipVertical, minValue, maxValue } =\n      currentImage;\n    const stamp = \"header\" in image ? image.header.stamp : image.timestamp;\n    let bitmap: ImageBitmap;\n    try {\n      if (\"format\" in image) {\n        bitmap = await decodeCompressedImageToBitmap(image);\n      } else {\n        const imageData = new ImageData(image.width, image.height);\n        decodeRawImage(image, { minValue, maxValue }, imageData.data);\n        bitmap = await createImageBitmap(imageData);\n      }\n\n      const width = rotation === 90 || rotation === 270 ? bitmap.height : bitmap.width;\n      const height = rotation === 90 || rotation === 270 ? bitmap.width : bitmap.height;\n\n      // re-render the image onto a new canvas to download the original image\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = width;\n      canvas.height = height;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        throw new Error(\"Unable to create rendering context for image download\");\n      }\n\n      // Draw the image in the selected orientation so it aligns with the canvas viewport\n      ctx.translate(width / 2, height / 2);\n      ctx.scale(flipHorizontal ? -1 : 1, flipVertical ? -1 : 1);\n      ctx.rotate((rotation / 180) * Math.PI);\n      ctx.translate(-bitmap.width / 2, -bitmap.height / 2);\n      ctx.drawImage(bitmap, 0, 0);\n\n      // read the canvas data as an image (png)\n      const blob = await new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((result) => {\n          if (result) {\n            resolve(result);\n          } else {\n            reject(`Failed to create an image from ${width}x${height} canvas`);\n          }\n        }, \"image/png\");\n      });\n      // name the image the same name as the topic\n      // note: the / characters in the file name will be replaced with _ by the browser\n      // remove any leading / so the image name doesn't start with _\n      const topicName = topic.replace(/^\\/+/, \"\");\n      const fileName = `${topicName}-${stamp.sec}-${stamp.nsec}`;\n      void analytics.logEvent(AppEvent.IMAGE_DOWNLOAD);\n      if (onDownloadImage) {\n        onDownloadImage(blob, fileName);\n      } else {\n        downloadFiles([{ blob, fileName }]);\n      }\n    } catch (error) {\n      log.error(error);\n      enqueueSnackbar((error as Error).toString(), { variant: \"error\" });\n    }\n  }, [renderer, onDownloadImage, enqueueSnackbar, analytics]);\n\n  const getContextMenuItems = useCallback(\n    (): PanelContextMenuItem[] => [\n      {\n        type: \"item\",\n        label: \"Download image\",\n        onclick: doDownloadImage,\n        disabled: renderer?.getCurrentImage() == undefined,\n      },\n    ],\n    [doDownloadImage, renderer],\n  );\n\n  const mousePresenceRef = useRef<HTMLDivElement>(ReactNull);\n  const mousePresent = usePanelMousePresence(mousePresenceRef);\n\n  return (\n    <>\n      {props.interfaceMode === \"image\" && <PanelContextMenu getItems={getContextMenuItems} />}\n      <div\n        ref={mousePresenceRef}\n        style={{\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\",\n          gap: 10,\n          pointerEvents: \"none\",\n        }}\n      >\n        {\n          // Only show on hover for image panel\n          (props.interfaceMode === \"3d\" || mousePresent) && (\n            <Interactions\n              addPanel={props.addPanel}\n              selectedObject={selectedObject}\n              interactionsTabType={interactionsTabType}\n              setInteractionsTabType={setInteractionsTabType}\n              timezone={props.timezone}\n            />\n          )\n        }\n        {props.interfaceMode === \"3d\" && (\n          <Paper square={false} elevation={4} style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <IconButton\n              className={classes.iconButton}\n              color={props.perspective ? \"info\" : \"inherit\"}\n              title={props.perspective ? \"Switch to 2D camera\" : \"Switch to 3D camera\"}\n              onClick={props.onTogglePerspective}\n            >\n              <span className={classes.threeDeeButton}>3D</span>\n            </IconButton>\n            <IconButton\n              data-testid=\"measure-button\"\n              className={classes.iconButton}\n              color={props.measureActive ? \"info\" : \"inherit\"}\n              title={props.measureActive ? \"Cancel measuring\" : \"Measure distance\"}\n              onClick={props.onClickMeasure}\n            >\n              <Ruler24Filled className={classes.rulerIcon} />\n            </IconButton>\n            <Tooltip arrow title={recording ? \"Stop recording\" + (\" (\" + durationToTime(recordingTime) + \")\") : \"Start recording\"}>\n              <IconButton\n                style={{ color: \"#F00\" }}\n                className={classes.recordButton}\n                onClick={recording ? stopRecording : startRecording}\n              >\n                <Circle12Filled\n                  style={{\n                    color: recording ? \"#F00\" : \"#747474\",\n                  }}\n                  className={recording ? \"recording\" : \"\"}\n                />\n              </IconButton>\n            </Tooltip>\n\n            {publishControls}\n          </Paper>\n        )}\n      </div>\n      {clickedObjects.length > 1 && !selectedObject && (\n        <InteractionContextMenu\n          onClose={() => setSelectedRenderables([])}\n          clickedPosition={clickedPosition}\n          clickedObjects={clickedObjects}\n          selectObject={(selection) => {\n            if (selection) {\n              const renderable = (\n                selection.object as unknown as { interactionData: { renderable: Renderable } }\n              ).interactionData.renderable;\n              const instanceIndex = selection.instanceIndex;\n              setSelectedRenderables([]);\n              setSelectedRenderable({ renderable, instanceIndex });\n            }\n          }}\n        />\n      )}\n      {stats}\n      {resetViewButton}\n    </>\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\nimport { MessageDefinition } from \"@foxglove/message-definition\";\nimport { ros1, ros2galactic } from \"@foxglove/rosmsg-msgs-common\";\nimport { fromDate } from \"@foxglove/rostime\";\nimport { Point, makeCovarianceArray } from \"@foxglove/studio-base/util/geometry\";\n\nimport { Pose } from \"./transforms/geometry\";\n\nexport const PublishRos1Datatypes = new Map<string, MessageDefinition>(\n  (\n    [\n      \"geometry_msgs/Point\",\n      \"geometry_msgs/PointStamped\",\n      \"geometry_msgs/Pose\",\n      \"geometry_msgs/PoseStamped\",\n      \"geometry_msgs/PoseWithCovariance\",\n      \"geometry_msgs/PoseWithCovarianceStamped\",\n      \"geometry_msgs/Quaternion\",\n      \"std_msgs/Header\",\n    ] as Array<keyof typeof ros1>\n  ).map((type) => [type, ros1[type]]),\n);\n\nexport const PublishRos2Datatypes = new Map<string, MessageDefinition>(\n  (\n    [\n      \"geometry_msgs/Point\",\n      \"geometry_msgs/PointStamped\",\n      \"geometry_msgs/Pose\",\n      \"geometry_msgs/PoseStamped\",\n      \"geometry_msgs/PoseWithCovariance\",\n      \"geometry_msgs/PoseWithCovarianceStamped\",\n      \"geometry_msgs/Quaternion\",\n      \"std_msgs/Header\",\n    ] as Array<keyof typeof ros2galactic>\n  ).map((type) => [type, ros2galactic[type]]),\n);\n\nexport function makePointMessage(point: Point, frameId: string): unknown {\n  const time = fromDate(new Date());\n  return {\n    // seq is omitted since it is not present in ros2\n    header: { stamp: time, frame_id: frameId },\n    point: { x: point.x, y: point.y, z: 0 },\n  };\n}\n\nexport function makePoseMessage(pose: Pose, frameId: string): unknown {\n  const time = fromDate(new Date());\n  return {\n    // seq is omitted since it is not present in ros2\n    header: { stamp: time, frame_id: frameId },\n    pose,\n  };\n}\n\nexport function makePoseEstimateMessage(\n  pose: Pose,\n  frameId: string,\n  xDev: number,\n  yDev: number,\n  thetaDev: number,\n): unknown {\n  const time = fromDate(new Date());\n  return {\n    // seq is omitted since it is not present in ros2\n    header: { stamp: time, frame_id: frameId },\n    pose: {\n      covariance: makeCovarianceArray(xDev, yDev, thetaDev),\n      pose,\n    },\n  };\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { cloneDeep, isEqual, merge } from \"lodash\";\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useLatest } from \"react-use\";\nimport { DeepPartial } from \"ts-essentials\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nimport Logger from \"@foxglove/log\";\nimport { Time, toNanoSec } from \"@foxglove/rostime\";\nimport {\n  Immutable,\n  LayoutActions,\n  MessageEvent,\n  PanelExtensionContext,\n  ParameterValue,\n  RenderState,\n  SettingsTreeAction,\n  SettingsTreeNodes,\n  Subscription,\n  Topic,\n} from \"@foxglove/studio\";\nimport { AppSetting } from \"@foxglove/studio-base/AppSetting\";\nimport ThemeProvider from \"@foxglove/studio-base/theme/ThemeProvider\";\n\nimport type {\n  FollowMode,\n  IRenderer,\n  RendererConfig,\n  RendererEvents,\n  RendererSubscription,\n} from \"./IRenderer\";\nimport type { PickedRenderable } from \"./Picker\";\nimport { SELECTED_ID_VARIABLE } from \"./Renderable\";\nimport { Renderer } from \"./Renderer\";\nimport { RendererContext, useRendererEvent } from \"./RendererContext\";\nimport { RendererOverlay } from \"./RendererOverlay\";\nimport { CameraState, DEFAULT_CAMERA_STATE } from \"./camera\";\nimport {\n  PublishRos1Datatypes,\n  PublishRos2Datatypes,\n  makePointMessage,\n  makePoseEstimateMessage,\n  makePoseMessage,\n} from \"./publish\";\nimport type { LayerSettingsTransform } from \"./renderables/FrameAxes\";\nimport { PublishClickEvent } from \"./renderables/PublishClickTool\";\nimport { DEFAULT_PUBLISH_SETTINGS } from \"./renderables/PublishSettings\";\nimport { InterfaceMode } from \"./types\";\n\nconst log = Logger.getLogger(__filename);\n\ntype Shared3DPanelState = {\n  cameraState: CameraState;\n  followMode: FollowMode;\n  followTf: undefined | string;\n};\n\nconst PANEL_STYLE: React.CSSProperties = {\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  position: \"relative\",\n};\n\nfunction useRendererProperty<K extends keyof IRenderer>(\n  renderer: IRenderer | undefined,\n  key: K,\n  event: keyof RendererEvents,\n  fallback: () => IRenderer[K],\n): IRenderer[K] {\n  const [value, setValue] = useState<IRenderer[K]>(() => renderer?.[key] ?? fallback());\n  useEffect(() => {\n    if (!renderer) {\n      return;\n    }\n    const onChange = () => setValue(() => renderer[key]);\n    onChange();\n\n    renderer.addListener(event, onChange);\n    return () => {\n      renderer.removeListener(event, onChange);\n    };\n  }, [renderer, event, key]);\n  return value;\n}\n\n/**\n * A panel that renders a 3D scene. This is a thin wrapper around a `Renderer` instance.\n */\nexport function ThreeDeeRender(props: {\n  context: PanelExtensionContext;\n  interfaceMode: InterfaceMode;\n  /** Override default downloading behavior, used for Storybook */\n  onDownloadImage?: (blob: Blob, fileName: string) => void;\n}): JSX.Element {\n  const { context, interfaceMode, onDownloadImage } = props;\n  const { initialState, saveState } = context;\n\n  // Load and save the persisted panel configuration\n  const [config, setConfig] = useState<Immutable<RendererConfig>>(() => {\n    const partialConfig = initialState as DeepPartial<RendererConfig> | undefined;\n\n    // Initialize the camera from default settings overlaid with persisted settings\n    const cameraState: CameraState = merge(\n      cloneDeep(DEFAULT_CAMERA_STATE),\n      partialConfig?.cameraState,\n    );\n    const publish = merge(cloneDeep(DEFAULT_PUBLISH_SETTINGS), partialConfig?.publish);\n\n    const transforms = (partialConfig?.transforms ?? {}) as Record<\n      string,\n      Partial<LayerSettingsTransform>\n    >;\n\n    return {\n      cameraState,\n      followMode: partialConfig?.followMode ?? \"follow-pose\",\n      followTf: partialConfig?.followTf,\n      scene: partialConfig?.scene ?? {},\n      transforms,\n      topics: partialConfig?.topics ?? {},\n      layers: partialConfig?.layers ?? {},\n      publish,\n      imageMode: partialConfig?.imageMode ?? {},\n    };\n  });\n  const configRef = useLatest(config);\n  const { cameraState } = config;\n  const backgroundColor = config.scene.backgroundColor;\n\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | ReactNull>(ReactNull);\n  const [renderer, setRenderer] = useState<IRenderer | undefined>(undefined);\n  const rendererRef = useRef<IRenderer | undefined>(undefined);\n  useEffect(() => {\n    const newRenderer = canvas ? new Renderer(canvas, configRef.current, interfaceMode) : undefined;\n    setRenderer(newRenderer);\n    rendererRef.current = newRenderer;\n    return () => {\n      rendererRef.current?.dispose();\n      rendererRef.current = undefined;\n    };\n  }, [canvas, configRef, config.scene.transforms?.enablePreloading, interfaceMode]);\n\n  const [colorScheme, setColorScheme] = useState<\"dark\" | \"light\" | undefined>();\n  const [timezone, setTimezone] = useState<string | undefined>();\n  const [topics, setTopics] = useState<ReadonlyArray<Topic> | undefined>();\n  const [parameters, setParameters] = useState<\n    Immutable<Map<string, ParameterValue>> | undefined\n  >();\n  const [currentFrameMessages, setCurrentFrameMessages] = useState<\n    ReadonlyArray<MessageEvent> | undefined\n  >();\n  const [currentTime, setCurrentTime] = useState<Time | undefined>();\n  const [didSeek, setDidSeek] = useState<boolean>(false);\n  const [sharedPanelState, setSharedPanelState] = useState<undefined | Shared3DPanelState>();\n  const [allFrames, setAllFrames] = useState<readonly MessageEvent[] | undefined>(undefined);\n\n  const renderRef = useRef({ needsRender: false });\n  const [renderDone, setRenderDone] = useState<(() => void) | undefined>();\n\n  const schemaHandlers = useRendererProperty(\n    renderer,\n    \"schemaHandlers\",\n    \"schemaHandlersChanged\",\n    () => new Map(),\n  );\n  const topicHandlers = useRendererProperty(\n    renderer,\n    \"topicHandlers\",\n    \"topicHandlersChanged\",\n    () => new Map(),\n  );\n\n  // Config cameraState\n  useEffect(() => {\n    const listener = () => {\n      if (renderer) {\n        const newCameraState = renderer.getCameraState();\n        if (!newCameraState) {\n          return;\n        }\n        // This needs to be before `setConfig` otherwise flickering will occur during\n        // non-follow mode playback\n        renderer.setCameraState(newCameraState);\n        setConfig((prevConfig) => ({ ...prevConfig, cameraState: newCameraState }));\n\n        if (config.scene.syncCamera === true) {\n          context.setSharedPanelState({\n            cameraState: newCameraState,\n            followMode: config.followMode,\n            followTf: renderer.followFrameId,\n          });\n        }\n      }\n    };\n    renderer?.addListener(\"cameraMove\", listener);\n    return () => void renderer?.removeListener(\"cameraMove\", listener);\n  }, [config.scene.syncCamera, config.followMode, context, renderer?.followFrameId, renderer]);\n\n  // Handle user changes in the settings sidebar\n  const actionHandler = useCallback(\n    (action: SettingsTreeAction) =>\n      // Wrapping in unstable_batchedUpdates causes React to run effects _after_ the handleAction\n      // function has finished executing. This allows scene extensions that call\n      // renderer.updateConfig to read out the new config value and configure their renderables\n      // before the render occurs.\n      ReactDOM.unstable_batchedUpdates(() => {\n        if (renderer) {\n          const initialCameraState = renderer.getCameraState();\n          renderer.settings.handleAction(action);\n          const updatedCameraState = renderer.getCameraState();\n          // Communicate camera changes from settings to the global state if syncing.\n          if (updatedCameraState !== initialCameraState && config.scene.syncCamera === true) {\n            context.setSharedPanelState({\n              cameraState: updatedCameraState,\n              followMode: config.followMode,\n              followTf: renderer.followFrameId,\n            });\n          }\n        }\n      }),\n    [config.followMode, config.scene.syncCamera, context, renderer],\n  );\n\n  // Maintain the settings tree\n  const [settingsTree, setSettingsTree] = useState<SettingsTreeNodes | undefined>(undefined);\n  const updateSettingsTree = useCallback(\n    (curRenderer: IRenderer) => setSettingsTree(curRenderer.settings.tree()),\n    [],\n  );\n  useRendererEvent(\"settingsTreeChange\", updateSettingsTree, renderer);\n\n  // Save the panel configuration when it changes\n  const updateConfig = useCallback((curRenderer: IRenderer) => setConfig(curRenderer.config), []);\n  useRendererEvent(\"configChange\", updateConfig, renderer);\n\n  // Write to a global variable when the current selection changes\n  const updateSelectedRenderable = useCallback(\n    (selection: PickedRenderable | undefined) => {\n      const id = selection?.renderable.idFromMessage();\n      const customVariable = selection?.renderable.selectedIdVariable();\n      if (customVariable) {\n        context.setVariable(customVariable, id);\n      }\n      context.setVariable(SELECTED_ID_VARIABLE, id);\n    },\n    [context],\n  );\n  useRendererEvent(\"selectedRenderable\", updateSelectedRenderable, renderer);\n\n  // Rebuild the settings sidebar tree as needed\n  useEffect(() => {\n    context.updatePanelSettingsEditor({\n      actionHandler,\n      enableFilter: true,\n      nodes: settingsTree ?? {},\n    });\n  }, [actionHandler, context, settingsTree]);\n\n  // Update the renderer's reference to `config` when it changes. Note that this does *not*\n  // automatically update the settings tree.\n  useEffect(() => {\n    if (renderer) {\n      renderer.config = config;\n      renderRef.current.needsRender = true;\n    }\n  }, [config, renderer]);\n\n  // Update the renderer's reference to `topics` when it changes\n  useEffect(() => {\n    if (renderer) {\n      renderer.setTopics(topics);\n      renderRef.current.needsRender = true;\n    }\n  }, [topics, renderer]);\n\n  // Tell the renderer if we are connected to a ROS data source\n  useEffect(() => {\n    if (renderer) {\n      renderer.ros = context.dataSourceProfile === \"ros1\" || context.dataSourceProfile === \"ros2\";\n    }\n  }, [context.dataSourceProfile, renderer]);\n\n  // Save panel settings whenever they change\n  const throttledSave = useDebouncedCallback(\n    (newConfig: Immutable<RendererConfig>) => saveState(newConfig),\n    1000,\n    { leading: false, trailing: true, maxWait: 1000 },\n  );\n  useEffect(() => throttledSave(config), [config, throttledSave]);\n\n  // Keep default panel title up to date with selected image topic in image mode\n  useEffect(() => {\n    if (interfaceMode === \"image\") {\n      context.setDefaultPanelTitle(config.imageMode.imageTopic);\n    }\n  }, [interfaceMode, context, config.imageMode.imageTopic]);\n\n  // Establish a connection to the message pipeline with context.watch and context.onRender\n  useLayoutEffect(() => {\n    context.onRender = (renderState: Immutable<RenderState>, done) => {\n      ReactDOM.unstable_batchedUpdates(() => {\n        if (renderState.currentTime) {\n          setCurrentTime(renderState.currentTime);\n        }\n\n        // Check if didSeek is set to true to reset the preloadedMessageTime and\n        // trigger a state flush in Renderer\n        if (renderState.didSeek === true) {\n          setDidSeek(true);\n        }\n\n        // Set the done callback into a state variable to trigger a re-render\n        setRenderDone(() => done);\n\n        // Keep UI elements and the renderer aware of the current color scheme\n        setColorScheme(renderState.colorScheme);\n        if (renderState.appSettings) {\n          const tz = renderState.appSettings.get(AppSetting.TIMEZONE);\n          setTimezone(typeof tz === \"string\" ? tz : undefined);\n        }\n\n        // We may have new topics - since we are also watching for messages in\n        // the current frame, topics may not have changed\n        setTopics(renderState.topics);\n\n        setSharedPanelState(renderState.sharedPanelState as Shared3DPanelState);\n\n        // Watch for any changes in the map of observed parameters\n        setParameters(renderState.parameters);\n\n        // currentFrame has messages on subscribed topics since the last render call\n        deepParseMessageEvents(renderState.currentFrame);\n        setCurrentFrameMessages(renderState.currentFrame);\n\n        // allFrames has messages on preloaded topics across all frames (as they are loaded)\n        deepParseMessageEvents(renderState.allFrames);\n        setAllFrames(renderState.allFrames);\n      });\n    };\n\n    context.watch(\"allFrames\");\n    context.watch(\"colorScheme\");\n    context.watch(\"currentFrame\");\n    context.watch(\"currentTime\");\n    context.watch(\"didSeek\");\n    context.watch(\"parameters\");\n    context.watch(\"sharedPanelState\");\n    context.watch(\"topics\");\n    context.watch(\"appSettings\");\n    context.subscribeAppSettings([AppSetting.TIMEZONE]);\n  }, [context, renderer]);\n\n  // Build a list of topics to subscribe to\n  const [topicsToSubscribe, setTopicsToSubscribe] = useState<Subscription[] | undefined>(undefined);\n  useEffect(() => {\n    if (!topics) {\n      setTopicsToSubscribe(undefined);\n      return;\n    }\n\n    const newSubscriptions: Subscription[] = [];\n\n    const addSubscription = (\n      topic: Topic,\n      rendererSubscription: RendererSubscription,\n      convertTo?: string,\n    ) => {\n      let shouldSubscribe = rendererSubscription.shouldSubscribe?.(topic.name);\n      if (shouldSubscribe == undefined) {\n        if (config.topics[topic.name]?.visible === true) {\n          shouldSubscribe = true;\n        } else if (config.imageMode.annotations?.[topic.name]?.visible === true) {\n          shouldSubscribe = true;\n        } else {\n          shouldSubscribe = false;\n        }\n      }\n      if (shouldSubscribe) {\n        newSubscriptions.push({\n          topic: topic.name,\n          preload: rendererSubscription.preload,\n          convertTo,\n        });\n      }\n    };\n\n    for (const topic of topics) {\n      for (const rendererSubscription of topicHandlers.get(topic.name) ?? []) {\n        addSubscription(topic, rendererSubscription);\n      }\n      for (const rendererSubscription of schemaHandlers.get(topic.schemaName) ?? []) {\n        addSubscription(topic, rendererSubscription);\n      }\n      for (const schemaName of topic.convertibleTo ?? []) {\n        for (const rendererSubscription of schemaHandlers.get(schemaName) ?? []) {\n          addSubscription(topic, rendererSubscription, schemaName);\n        }\n      }\n    }\n\n    // Sort the list to make comparisons stable\n    newSubscriptions.sort((a, b) => a.topic.localeCompare(b.topic));\n    setTopicsToSubscribe((prev) => (isEqual(prev, newSubscriptions) ? prev : newSubscriptions));\n  }, [\n    topics,\n    config.topics,\n    // Need to update subscriptions when imagemode topics change\n    // shouldSubscribe values will be re-evaluated\n    config.imageMode.calibrationTopic,\n    config.imageMode.imageTopic,\n    schemaHandlers,\n    topicHandlers,\n    config.imageMode.annotations,\n  ]);\n\n  // Notify the extension context when our subscription list changes\n  useEffect(() => {\n    if (!topicsToSubscribe) {\n      return;\n    }\n    log.debug(`Subscribing to [${topicsToSubscribe.map((t) => JSON.stringify(t)).join(\", \")}]`);\n    context.subscribe(topicsToSubscribe);\n  }, [context, topicsToSubscribe]);\n\n  // Keep the renderer parameters up to date\n  useEffect(() => {\n    if (renderer) {\n      renderer.setParameters(parameters);\n    }\n  }, [parameters, renderer]);\n\n  // Keep the renderer currentTime up to date and handle seeking\n  useEffect(() => {\n    const newTimeNs = currentTime ? toNanoSec(currentTime) : undefined;\n\n    /*\n     * NOTE AROUND SEEK HANDLING\n     * Seeking MUST be handled even if there is no change in current time.  When there is a subscription\n     * change while paused, the player goes into `seek-backfill` which sets didSeek to true.\n     *\n     * We cannot early return here when there is no change in current time due to that, otherwise it would\n     * handle seek next time the current time changes and clear the backfilled messages and transforms.\n     */\n    if (!renderer || newTimeNs == undefined) {\n      return;\n    }\n    const oldTimeNs = renderer.currentTime;\n\n    renderer.setCurrentTime(newTimeNs);\n    if (didSeek) {\n      renderer.handleSeek(oldTimeNs);\n      setDidSeek(false);\n    }\n  }, [currentTime, renderer, didSeek]);\n\n  // Keep the renderer colorScheme and backgroundColor up to date\n  useEffect(() => {\n    if (colorScheme && renderer) {\n      renderer.setColorScheme(colorScheme, backgroundColor);\n      renderRef.current.needsRender = true;\n    }\n  }, [backgroundColor, colorScheme, renderer]);\n\n  // Handle preloaded messages and render a frame if new messages are available\n  // Should be called before `messages` is handled\n  useEffect(() => {\n    // we want didseek to be handled by the renderer first so that transforms aren't cleared after the cursor has been brought up\n    if (!renderer || !currentTime) {\n      return;\n    }\n    const newMessagesHandled = renderer.handleAllFramesMessages(allFrames);\n    if (newMessagesHandled) {\n      renderRef.current.needsRender = true;\n    }\n  }, [renderer, currentTime, allFrames]);\n\n  // Handle messages and render a frame if new messages are available\n  useEffect(() => {\n    if (!renderer || !currentFrameMessages) {\n      return;\n    }\n\n    for (const message of currentFrameMessages) {\n      renderer.addMessageEvent(message);\n    }\n\n    renderRef.current.needsRender = true;\n  }, [currentFrameMessages, renderer]);\n\n  // Update the renderer when the camera moves\n  useEffect(() => {\n    if (!isEqual(cameraState, renderer?.getCameraState())) {\n      renderer?.setCameraState(cameraState);\n      renderRef.current.needsRender = true;\n    }\n  }, [cameraState, renderer]);\n\n  // Sync camera with shared state, if enabled.\n  useEffect(() => {\n    if (!renderer || sharedPanelState == undefined || config.scene.syncCamera !== true) {\n      return;\n    }\n\n    if (sharedPanelState.followMode !== config.followMode) {\n      renderer.setCameraSyncError(\n        `Follow mode must be ${sharedPanelState.followMode} to sync camera.`,\n      );\n    } else if (sharedPanelState.followTf !== renderer.followFrameId) {\n      renderer.setCameraSyncError(\n        `Display frame must be ${sharedPanelState.followTf} to sync camera.`,\n      );\n    } else {\n      const newCameraState = sharedPanelState.cameraState;\n      renderer.setCameraState(newCameraState);\n      renderRef.current.needsRender = true;\n      setConfig((prevConfig) => ({\n        ...prevConfig,\n        cameraState: newCameraState,\n      }));\n      renderer.setCameraSyncError(undefined);\n    }\n  }, [\n    config.scene.syncCamera,\n    config.followMode,\n    renderer,\n    renderer?.followFrameId,\n    sharedPanelState,\n  ]);\n\n  // Render a new frame if requested\n  useEffect(() => {\n    if (renderer && renderRef.current.needsRender) {\n      renderer.animationFrame();\n      renderRef.current.needsRender = false;\n      // console.log(\n      //   renderer.gl.domElement.toDataURL(\"image/png\"),\n      // );\n    }\n  });\n\n  // Invoke the done callback once the render is complete\n  useEffect(() => {\n    renderDone?.();\n  }, [renderDone]);\n\n  // Create a useCallback wrapper for adding a new panel to the layout, used to open the\n  // \"Raw Messages\" panel from the object inspector\n  const addPanel = useCallback(\n    (params: Parameters<LayoutActions[\"addPanel\"]>[0]) => context.layout.addPanel(params),\n    [context.layout],\n  );\n\n  const [measureActive, setMeasureActive] = useState(false);\n  useEffect(() => {\n    const onStart = () => setMeasureActive(true);\n    const onEnd = () => setMeasureActive(false);\n    renderer?.measurementTool.addEventListener(\"foxglove.measure-start\", onStart);\n    renderer?.measurementTool.addEventListener(\"foxglove.measure-end\", onEnd);\n    return () => {\n      renderer?.measurementTool.removeEventListener(\"foxglove.measure-start\", onStart);\n      renderer?.measurementTool.removeEventListener(\"foxglove.measure-end\", onEnd);\n    };\n  }, [renderer?.measurementTool]);\n\n  const onClickMeasure = useCallback(() => {\n    if (measureActive) {\n      renderer?.measurementTool.stopMeasuring();\n    } else {\n      renderer?.measurementTool.startMeasuring();\n      renderer?.publishClickTool.stop();\n    }\n  }, [measureActive, renderer]);\n\n  const [publishActive, setPublishActive] = useState(false);\n  useEffect(() => {\n    if (renderer?.publishClickTool.publishClickType !== config.publish.type) {\n      renderer?.publishClickTool.setPublishClickType(config.publish.type);\n      // stop if we changed types while a publish action was already in progress\n      renderer?.publishClickTool.stop();\n    }\n  }, [config.publish.type, renderer]);\n\n  const publishTopics = useMemo(() => {\n    return {\n      goal: config.publish.poseTopic,\n      point: config.publish.pointTopic,\n      pose: config.publish.poseEstimateTopic,\n    };\n  }, [config.publish.poseTopic, config.publish.pointTopic, config.publish.poseEstimateTopic]);\n\n  useEffect(() => {\n    const datatypes =\n      context.dataSourceProfile === \"ros2\" ? PublishRos2Datatypes : PublishRos1Datatypes;\n    context.advertise?.(publishTopics.goal, \"geometry_msgs/PoseStamped\", { datatypes });\n    context.advertise?.(publishTopics.point, \"geometry_msgs/PointStamped\", { datatypes });\n    context.advertise?.(publishTopics.pose, \"geometry_msgs/PoseWithCovarianceStamped\", {\n      datatypes,\n    });\n\n    return () => {\n      context.unadvertise?.(publishTopics.goal);\n      context.unadvertise?.(publishTopics.point);\n      context.unadvertise?.(publishTopics.pose);\n    };\n  }, [publishTopics, context, context.dataSourceProfile]);\n\n  const latestPublishConfig = useLatest(config.publish);\n\n  useEffect(() => {\n    const onStart = () => setPublishActive(true);\n    const onSubmit = (event: PublishClickEvent & { type: \"foxglove.publish-submit\" }) => {\n      const frameId = renderer?.followFrameId;\n      if (frameId == undefined) {\n        log.warn(\"Unable to publish, renderFrameId is not set\");\n        return;\n      }\n      if (!context.publish) {\n        log.error(\"Data source does not support publishing\");\n        return;\n      }\n      if (context.dataSourceProfile !== \"ros1\" && context.dataSourceProfile !== \"ros2\") {\n        log.warn(\"Publishing is only supported in ros1 and ros2\");\n        return;\n      }\n\n      try {\n        switch (event.publishClickType) {\n          case \"point\": {\n            const message = makePointMessage(event.point, frameId);\n            context.publish(publishTopics.point, message);\n            break;\n          }\n          case \"pose\": {\n            const message = makePoseMessage(event.pose, frameId);\n            context.publish(publishTopics.goal, message);\n            break;\n          }\n          case \"pose_estimate\": {\n            const message = makePoseEstimateMessage(\n              event.pose,\n              frameId,\n              latestPublishConfig.current.poseEstimateXDeviation,\n              latestPublishConfig.current.poseEstimateYDeviation,\n              latestPublishConfig.current.poseEstimateThetaDeviation,\n            );\n            context.publish(publishTopics.pose, message);\n            break;\n          }\n        }\n      } catch (error) {\n        log.info(error);\n      }\n    };\n    const onEnd = () => setPublishActive(false);\n    renderer?.publishClickTool.addEventListener(\"foxglove.publish-start\", onStart);\n    renderer?.publishClickTool.addEventListener(\"foxglove.publish-submit\", onSubmit);\n    renderer?.publishClickTool.addEventListener(\"foxglove.publish-end\", onEnd);\n    return () => {\n      renderer?.publishClickTool.removeEventListener(\"foxglove.publish-start\", onStart);\n      renderer?.publishClickTool.removeEventListener(\"foxglove.publish-submit\", onSubmit);\n      renderer?.publishClickTool.removeEventListener(\"foxglove.publish-end\", onEnd);\n    };\n  }, [\n    context,\n    latestPublishConfig,\n    publishTopics,\n    renderer?.followFrameId,\n    renderer?.publishClickTool,\n  ]);\n\n  const onClickPublish = useCallback(() => {\n    if (publishActive) {\n      renderer?.publishClickTool.stop();\n    } else {\n      renderer?.publishClickTool.start();\n      renderer?.measurementTool.stopMeasuring();\n    }\n  }, [publishActive, renderer]);\n\n  const onTogglePerspective = useCallback(() => {\n    const currentState = renderer?.getCameraState()?.perspective ?? false;\n    actionHandler({\n      action: \"update\",\n      payload: {\n        input: \"boolean\",\n        path: [\"cameraState\", \"perspective\"],\n        value: !currentState,\n      },\n    });\n  }, [actionHandler, renderer]);\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \"3\") {\n        onTogglePerspective();\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n    [onTogglePerspective],\n  );\n\n  // The 3d panel only supports publishing to ros1 and ros2 data sources\n  const isRosDataSource =\n    context.dataSourceProfile === \"ros1\" || context.dataSourceProfile === \"ros2\";\n  const canPublish = context.publish != undefined && isRosDataSource;\n\n  return (\n    <ThemeProvider isDark={colorScheme === \"dark\"}>\n      <div style={PANEL_STYLE} onKeyDown={onKeyDown}>\n        <canvas\n          ref={setCanvas}\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            ...((measureActive || publishActive) && { cursor: \"crosshair\" }),\n          }}\n        />\n        <RendererContext.Provider value={renderer}>\n          <RendererOverlay\n            interfaceMode={interfaceMode}\n            canvas={canvas}\n            addPanel={addPanel}\n            enableStats={config.scene.enableStats ?? false}\n            perspective={config.cameraState.perspective}\n            onTogglePerspective={onTogglePerspective}\n            measureActive={measureActive}\n            onClickMeasure={onClickMeasure}\n            canPublish={canPublish}\n            publishActive={publishActive}\n            onClickPublish={onClickPublish}\n            publishClickType={renderer?.publishClickTool.publishClickType ?? \"point\"}\n            onChangePublishClickType={(type) => {\n              renderer?.publishClickTool.setPublishClickType(type);\n              renderer?.publishClickTool.start();\n            }}\n            timezone={timezone}\n            onDownloadImage={onDownloadImage}\n          />\n        </RendererContext.Provider>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nfunction deepParseMessageEvents(messageEvents: ReadonlyArray<MessageEvent> | undefined): void {\n  if (!messageEvents) {\n    return;\n  }\n  for (const messageEvent of messageEvents) {\n    const maybeLazy = messageEvent.message as { toJSON?: () => unknown };\n    if (\"toJSON\" in maybeLazy) {\n      (messageEvent as { message: unknown }).message = maybeLazy.toJSON!();\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { StrictMode, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { useCrash } from \"@foxglove/hooks\";\nimport { PanelExtensionContext } from \"@foxglove/studio\";\nimport { CaptureErrorBoundary } from \"@foxglove/studio-base/components/CaptureErrorBoundary\";\nimport {\n  ForwardAnalyticsContextProvider,\n  ForwardedAnalytics,\n  useForwardAnalytics,\n} from \"@foxglove/studio-base/components/ForwardAnalyticsContextProvider\";\nimport Panel from \"@foxglove/studio-base/components/Panel\";\nimport { PanelExtensionAdapter } from \"@foxglove/studio-base/components/PanelExtensionAdapter\";\nimport { SaveConfig } from \"@foxglove/studio-base/types/panels\";\n\nimport { ThreeDeeRender } from \"./ThreeDeeRender\";\nimport { InterfaceMode } from \"./types\";\n\nfunction initPanel(\n  crash: ReturnType<typeof useCrash>,\n  forwardedAnalytics: ForwardedAnalytics,\n  interfaceMode: InterfaceMode,\n  onDownloadImage: ((blob: Blob, fileName: string) => void) | undefined,\n  context: PanelExtensionContext,\n) {\n  ReactDOM.render(\n    <StrictMode>\n      <CaptureErrorBoundary onError={crash}>\n        <ForwardAnalyticsContextProvider forwardedAnalytics={forwardedAnalytics}>\n          <ThreeDeeRender\n            context={context}\n            interfaceMode={interfaceMode}\n            onDownloadImage={onDownloadImage}\n          />\n        </ForwardAnalyticsContextProvider>\n      </CaptureErrorBoundary>\n    </StrictMode>,\n    context.panelElement,\n  );\n  return () => {\n    ReactDOM.unmountComponentAtNode(context.panelElement);\n  };\n}\n\ntype Props = {\n  config: Record<string, unknown>;\n  saveConfig: SaveConfig<Record<string, unknown>>;\n  onDownloadImage?: (blob: Blob, fileName: string) => void;\n};\n\nfunction ThreeDeeRenderAdapter(interfaceMode: InterfaceMode, props: Props) {\n  const crash = useCrash();\n\n  const forwardedAnalytics = useForwardAnalytics();\n  const boundInitPanel = useMemo(\n    () =>\n      initPanel.bind(undefined, crash, forwardedAnalytics, interfaceMode, props.onDownloadImage),\n    [crash, forwardedAnalytics, interfaceMode, props.onDownloadImage],\n  );\n\n  return (\n    <PanelExtensionAdapter\n      config={props.config}\n      highestSupportedConfigVersion={1}\n      saveConfig={props.saveConfig}\n      initPanel={boundInitPanel}\n    />\n  );\n}\n\nexport const ThreeDeePanel = Panel(\n  Object.assign(ThreeDeeRenderAdapter.bind(undefined, \"3d\"), {\n    panelType: \"3D\",\n    defaultConfig: {},\n  }),\n);\n\nexport const ImagePanel = Panel<Record<string, unknown>, Props>(\n  Object.assign(ThreeDeeRenderAdapter.bind(undefined, \"image\"), {\n    panelType: \"Image\",\n    defaultConfig: {},\n  }),\n);\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as THREE from \"three\";\n\nconst tempQuaternion = new THREE.Quaternion();\nconst tempEuler = new THREE.Euler();\n\n/**\n * Convert a quaternion to roll-pitch-yaw Euler angles.\n */\nexport function quatToEuler(\n  x: number,\n  y: number,\n  z: number,\n  w: number,\n): [roll: number, pitch: number, yaw: number] {\n  tempQuaternion.set(x, y, z, w);\n  tempEuler.setFromQuaternion(tempQuaternion, \"XYZ\");\n  return [\n    THREE.MathUtils.radToDeg(tempEuler.x),\n    THREE.MathUtils.radToDeg(tempEuler.y),\n    THREE.MathUtils.radToDeg(tempEuler.z),\n  ];\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { ReactNode } from \"react\";\nimport tinycolor from \"tinycolor2\";\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { isTypicalFilterName } from \"@foxglove/studio-base/components/MessagePathSyntax/isTypicalFilterName\";\nimport { format, formatDuration } from \"@foxglove/studio-base/util/formatTime\";\nimport { quatToEuler } from \"@foxglove/studio-base/util/quatToEuler\";\n\nconst DURATION_20_YEARS_SEC = 20 * 365 * 24 * 60 * 60;\n\nconst PRIMITIVE_TYPES = [\"string\", \"number\", \"bigint\", \"boolean\"];\n\nexport function getItemString(\n  _nodeType: string,\n  data: unknown,\n  itemType: ReactNode,\n  itemString: string,\n  _keyPath: (string | number)[],\n  timezone?: string,\n): ReactNode {\n  if (typeof data !== \"object\" || data == undefined) {\n    return (\n      <span>\n        {itemType} {itemString}\n      </span>\n    );\n  }\n\n  const keys = Object.keys(data);\n  if (keys.length === 2) {\n    const { sec, nsec } = data as { sec?: number; nsec?: number };\n    if (typeof sec === \"number\" && typeof nsec === \"number\") {\n      // Values \"too small\" to be absolute epoch-based times are probably relative durations.\n      return sec < DURATION_20_YEARS_SEC ? (\n        formatDuration({ sec, nsec })\n      ) : (\n        <span>{format({ sec, nsec }, timezone)}</span>\n      );\n    }\n  }\n\n  // for vectors/points display length\n  if (keys.length === 2) {\n    const { x, y } = data as { x?: unknown; y?: unknown };\n    if (typeof x === \"number\" && typeof y === \"number\") {\n      const length = Math.sqrt(x * x + y * y);\n      return (\n        <span>\n          norm = {length.toFixed(2)} {getArrow(x, y)}\n        </span>\n      );\n    }\n\n    const { key, value } = data as { key?: unknown; value?: unknown };\n    if (\n      key != undefined &&\n      value != undefined &&\n      PRIMITIVE_TYPES.includes(typeof key) &&\n      PRIMITIVE_TYPES.includes(typeof value)\n    ) {\n      return `${key}: ${value}`;\n    }\n  } else if (keys.length === 3) {\n    const { x, y, z } = data as { x?: unknown; y?: unknown; z?: unknown };\n    if (typeof x === \"number\" && typeof y === \"number\" && typeof z === \"number\") {\n      const length = Math.sqrt(x * x + y * y + z * z);\n      return (\n        <span>\n          norm = {length.toFixed(2)} {z === 0 ? getArrow(x, y) : undefined}\n        </span>\n      );\n    }\n  } else if (keys.length === 4) {\n    const { x, y, z, w } = data as { x?: unknown; y?: unknown; z?: unknown; w?: unknown };\n    if (\n      typeof x === \"number\" &&\n      typeof y === \"number\" &&\n      typeof z === \"number\" &&\n      typeof w === \"number\"\n    ) {\n      const [roll, pitch, yaw] = quatToEuler(x, y, z, w);\n      return (\n        <span>\n          rpy = [{round(roll)}, {round(pitch)}, {round(yaw)}]\n        </span>\n      );\n    }\n\n    const { r, g, b, a } = data as { r?: unknown; g?: unknown; b?: unknown; a?: unknown };\n    if (\n      typeof r === \"number\" &&\n      typeof g === \"number\" &&\n      typeof b === \"number\" &&\n      typeof a === \"number\"\n    ) {\n      // print the color as hex\n      return <span>{tinycolor({ r: r * 255, g: g * 255, b: b * 255, a }).toHex8String()}</span>;\n    }\n  }\n\n  // Surface typically-used keys directly in the object summary so the user doesn't have to expand it.\n  const filterKeys = filterMap(keys, (key) => {\n    const value = (data as Record<string, unknown>)[key];\n    if (\n      isTypicalFilterName(key) &&\n      (value == undefined || PRIMITIVE_TYPES.includes(typeof value))\n    ) {\n      return `${key}: ${value}`;\n    }\n    return undefined;\n  }).join(\", \");\n  return (\n    <span>\n      {itemType} {filterKeys.length > 0 ? filterKeys : itemString}\n    </span>\n  );\n}\n\nfunction getArrow(x: number, y: number) {\n  if (x === 0 && y === 0) {\n    return;\n  }\n  return (\n    <span style={{ transform: `rotate(${Math.atan2(-y, x)}rad)`, display: \"inline-block\" }}>→</span>\n  );\n}\n\nfunction round(x: number, precision = 2): number {\n  return Number(x.toFixed(precision));\n}\n"],"names":["CaptureErrorBoundary","error","PANE_HEIGHT","useStyles","theme","ToolGroup","children","ToolGroupFixedSizePane","ExpandingToolbar","checked","icon","onSelectTab","selectedTab","tooltip","dataTest","classes","selectedTabLocal","React","child","selectedChild","handleChange","_event","value","PanelContextMenu","props","getItems","rootRef","position","setPosition","handleClose","items","setItems","parent","rightClickState","handleMouseUp","event","handleMouseMove","handleMouseDown","handleContextMenu","item","index","useForwardAnalytics","AnalyticsContext","store","ForwardAnalyticsContextProvider","forwardedAnalytics","SELECTED_ID_VARIABLE","Renderable","name","renderer","userData","instanceId","FRAME_TRANSFORM_DATATYPES","addFoxgloveSchema","FRAME_TRANSFORMS_DATATYPES","POINTCLOUD_DATATYPES","LASERSCAN_DATATYPES","RAW_IMAGE_DATATYPES","COMPRESSED_IMAGE_DATATYPES","CAMERA_CALIBRATION_DATATYPES","SCENE_UPDATE_DATATYPES","POSE_IN_FRAME_DATATYPES","POSES_IN_FRAME_DATATYPES","GRID_DATATYPES","IMAGE_ANNOTATIONS_DATATYPES","output","dataType","parts","leaf","UNIT_X","UNIT_Y","v0","v1","c","getRotationTo","src","dest","q","d","axis","isZeroLength","s","invs","vec","approxEquals","a","b","epsilon","vecEqual","i","vec3TupleApproxEquals","clamp","min","max","lerp","LIGHT_OUTLINE","DARK_OUTLINE","SRGBToLinear","stringToRgba","colorStr","color","tinycolor","rgb","makeRgba","stringToRgb","rgbToThreeColor","rgbaToHexString","rgbaToCssString","r","g","rgbaToLinear","getLuminance","rgbaGradient","t","aR","aG","aB","bR","bG","bB","tempColor1","tempColor2","NEEDS_MIN_MAX","getColorConverter","settings","minValue","maxValue","flatColor","_colorValue","valueDelta","minColor","maxColor","colorValue","turboLinearCached","rainbowLinear","getColorBgra","num","pct","h","f","n","kRedVec4","kGreenVec4","kBlueVec4","kRedVec2","kGreenVec2","kBlueVec2","v2","turboLinear","x","TurboLookup","TURBO_LOOKUP_SIZE","tempColor","offset","RGBA_PACKED_FIELDS","INTENSITY_FIELDS","bestColorByField","fields","supportsPackedRgbModes","field","hasSeparateRgbaFields","baseColorModeSettingsNode","msgFields","config","topic","defaults","supportsRgbaFieldsMode","colorMode","colorField","colorFieldOptions","gradient","colorMap","explicitAlpha","colorHasTransparency","FS_SRGB_TO_LINEAR","MarkerType","MarkerAction","PointFieldType","TIME_ZERO","TRANSFORM_STAMPED_DATATYPES","addRosDataType","TF_DATATYPES","MARKER_DATATYPES","MARKER_ARRAY_DATATYPES","OCCUPANCY_GRID_DATATYPES","VELODYNE_SCAN_DATATYPES","POSE_STAMPED_DATATYPES","POSE_WITH_COVARIANCE_STAMPED_DATATYPES","POSE_ARRAY_DATATYPES","NAV_PATH_DATATYPES","CAMERA_INFO_DATATYPES","IMAGE_DATATYPES","POLYGON_STAMPED_DATATYPES","JOINTSTATE_DATATYPES","IMAGE_MARKER_DATATYPES","IMAGE_MARKER_ARRAY_DATATYPES","base","int8Reader","fieldOffset","normalize","view","pointOffset","uint8Reader","int16Reader","uint16Reader","int32Reader","uint32Reader","float32Reader","float64Reader","isSupportedField","getReader","stride","forceType","numericType","normalizeTime","time","normalizeByteArray","byteArray","normalizeInt8Array","int8Array","normalizeFloat32Array","array","normalizeVector3","vector","normalizeVector3s","vectors","normalizeMatrix6","mat","normalizeQuaternion","quat","normalizeColorRGBA","normalizeColorRGBAs","colors","normalizePose","pose","normalizeHeader","header","normalizeTransform","transform","normalizeTransformStamped","normalizeTFMessage","tfMessage","normalizeFrameTransform","frameTransform","normalizeFrameTransforms","frameTransforms","numericTypeToPointFieldType","type","topicIsConvertibleToSchema","supportedSchemaNames","zeroReader","floatTextureColorModes","INVALID_FOXGLOVE_GRID","DEFAULT_COLOR_MAP","DEFAULT_FLAT_COLOR","DEFAULT_MIN_COLOR","DEFAULT_MAX_COLOR","COLOR_MODE_TO_GLSL","COLOR_MAP_TO_GLSL","DEFAULT_SETTINGS","tempRgbaFieldReaders","numericTypeName","getTextureEncoding","tempMinMaxColor","FoxgloveGridRenderable","pickingMaterial","material","#getRgbaFieldReaders","out","foxgloveGrid","cell_stride","#getColorByFieldReader","fieldReader","typeName","message","invalidFoxgloveGridError","updated","transparent","colorMapOpacity","minGradientColorLinear","maxGradientColorLinear","minMaxColorValues","minColorValue","maxColorValue","texture","cols","row_stride","rows","sizeChanged","floatMode","createTexture","encoding","valueData","y","rgba","hasTransparency","redReader","greenReader","blueReader","alphaReader","rgbaOffset","alpha","colorConverter","FoxgloveGrid","SceneExtension","#fieldsByTopic","#handleFoxgloveGrid","configTopics","handler","entries","node","action","path","topicName","renderable","messageEvent","normalizeFoxgloveGrid","receiveTime","#validateFoxgloveGrid","userSettings","autoSelectColorField","draft","updatedUserSettings","geometry","createGridGeometry","mesh","createMesh","#updateFoxgloveGridRenderable","minBytesPerCell","maxField","byteWidth","numericTypeWidth","size","isFloatType","data","format","createMaterial","createPickingMaterial","originalMaterial","normalizePackedElementField","numericMin","numericMax","NumericTypeMinMaxValueMap","fieldNameLower","firstField","InstancedLineMaterial","args","MAX_DIST","tempVec2","XY_PLANE","Input","#canvas","#resizeObserver","#startClientPos","#cursorCoords","#worldSpaceCursorCoords","#raycaster","canvas","getCamera","parentEl","#onResize","debouncedOnResize","#onMouseDown","#onMouseMove","#onMouseUp","#onClick","#onWheel","#onTouchStart","#onTouchEnd","#onTouchMove","#onTouchCancel","onUpdate","listener","#updateCursorCoords","_entries","newSize","innerSize","dist","touch","canvasRect","offsetX","offsetY","cs","paddingX","paddingY","borderX","borderY","width","height","log","DEFAULT_MESH_UP_AXIS","DEFAULT_COLOR","GLTF_MIME_TYPES","STL_MIME_TYPES","DAE_MIME_TYPES","OBJ_MIME_TYPES","ModelCache","#textDecoder","#models","#edgeMaterial","#dracoLoader","options","url","opts","reportError","promise","#loadModel","model","addEdges","err","response","errMsg","buffer","contentType","#loadGltf","#loadSTL","text","#loadCollada","#loadOBJ","onError","assetUrl","originalUrl","unrewriteUrl","manager","rewriteUrl","gltfLoader","GLTFLoader","#getDracoLoader","gltf","meshUpAxis","bufferGeometry","STLLoader","group","ignoreUpAxis","xml","upAxis","xmlText","daeLoader","ColladaLoader","dae","baseUrl","fixDaeMaterials","objLoader","OBJLoader","fixObjMaterials","dracoLoader","DRACOLoader","responseType","EDGE_LINE_SEGMENTS_NAME","edgeMaterial","edgesToAdd","edgesGeometry","line","toStandard","standard","shininess","maybePhong","PIXEL_WIDTH","tempResolution","WHITE_COLOR","NullScene","Picker","#gl","#scene","#camera","#materialCache","#emptyScene","#pixelBuffer","#currClearColor","#pickingTarget","#isDebugPass","gl","scene","camera","#handleAfterRender","xInView","yInView","#updateCameraForPickAndGetPickCoordsInView","originalRenderState","#prepareGLRendererForPick","#cleanUpGlRendererFromPick","#resetCameraFromPick","val","#makeHandleInstanceAfterRender","w","pixelRatio","hw","xi","yi","originalRenderTarget","originalAlpha","currAlpha","renderList","#processItem","object","maybeRender","renderItem","#processInstancedItem","objId","hashInt","sprite","pickResolution","sizeAttenuation","renderMaterial","#renderMaterial","setObjectId","#instanceRenderMaterial","vertexShader","objectId","iObjectId","A","ScreenOverlay","#material","createGeometry","opacity","colorUniform","TOPIC_PATH","NodeError","segment","clone","LayerErrors","errorId","errorMessage","prevErrorMessage","topicId","#getNode","cleared","SettingsManager","#nodesByKey","#root","#globalSettingsEntryValidators","baseTree","key","nodes","entry","validator","prevNodes","removeNodeAtPath","addNodeAtPath","label","setLabelAtPath","clearChildren","curNode","nextNode","nodeValidator","v","root","hasEntry","lastSegment","SharedGeometry","#geometryMap","DetailLevel","msaaSamples","capabilities","arrowShaftSubdivisions","lod","arrowHeadSubdivisions","cylinderSubdivisions","sphereSubdivisions","PRECISION_DISTANCE","PRECISION_DEGREES","fieldSize","placeholder","fieldScaleVec3","fieldLineWidth","fieldGradient","DISPLAY_FRAME_NOT_FOUND","UNIT_Z","PI_2","snapshotInRenderFrame","tempVec3","tempSpherical","tempEuler","FOLLOW_TF_PATH","CameraStateSettings","#unfollowSnapshotFrameIds","#controls","#isUpdatingCameraState","#cameraGroup","#perspectiveCamera","#orthographicCamera","#aspect","aspect","#handleTransformTreeUpdated","#handleCameraMove","#handleErrorChange","OrbitControls","#cameraSettingsNode","#frameSettingsNode","followTfOptions","followFrameId","#updateFollowTfError","followTfValue","followTfError","followModeOptions","followModeValue","category","followTf","#updateFollowFrameId","followMode","currentTime","renderFrameId","fixedFrameId","poseSnapshot","#getUnfollowPoseSnapshot","transformTree","_pixelRatio","cameraState","#updateCameras","targetOffset","phi","theta","curPolarAngle","yuvToRGBA8","y1","u","y2","decodeYUV","yuv","off","decodeYUYV","yuyv","decodeRGB8","inIdx","outIdx","decodeRGBA8","decodeBGRA8","decodeBGR8","bgr","decodeFloat1c","gray","is_bigendian","decodeMono8","mono8","ch","decodeMono16","mono16","makeSpecializedDecodeBayer","tl","tr","bl","br","decodeBayerRGGB8","decodeBayerBGGR8","decodeBayerGBRG8","decodeBayerGRBG8","PinholeCameraModel","info","binning_x","binning_y","roi","D","K","P","R","fx","fy","D8","binningX","binningY","adjustBinning","adjustRoi","pixel","cx","cy","tx","ty","invNorm","point","iterations","k1","k2","p1","p2","k3","x0","y0","count","r2","k_inv","delta_x","delta_y","x1","X","Y","W","xp","yp","r4","r6","a1","barrel_correction","xpp","ypp","tempTuple4","getMarkerId","ns","id","RenderableMarker","marker","hasLifetime","#renderMarker","pointsLength","callback","srgb","LineMaterialWithAlphaVertex","parameters","markerHasTransparency","makeStandardMaterial","makeStandardVertexColorMaterial","makeStandardInstancedMaterial","makeLinePrepassMaterial","lineWidth","makeLineMaterial","makeLinePickingMaterial","makePointsMaterial","RenderableLineList","#geometry","#linePrepass","#line","#positionBuffer","#colorBuffer","LineSegmentsGeometry","worldUnits","lineOptions","matLinePrepass","LineSegments2","matLine","pickingLineWidth","newMarker","prevMarker","prevPointsLength","#setPositions","#setColors","positions","instanceColorBuffer","colorBuffer","tempVec3a","tempVec3b","projectPixel","uv","cameraModel","lerpVec3","multiplyScalar","cameraInfosEqual","normalizeCameraInfo","Dlen","Klen","Rlen","Plen","normalizeRegionOfInterest","scalar","DEFAULT_DISTANCE","DEFAULT_PLANAR_PROJECTION_FACTOR","DEFAULT_WIDTH","DEFAULT_COLOR_STR","CAMERA_MODEL","CameraInfoRenderable","Cameras","#handleCameraInfo","cameraInfo","originalMessage","#updateCameraInfoRenderable","messageTime","frameId","prevSettings","newSettings","settingsEqual","dataEqual","errUnk","createLineListMarker","vec3","steps","origin","points","horizontalLine","verticalLine","p","SHAFT_LENGTH","SHAFT_DIAMETER","HEAD_LENGTH","HEAD_DIAMETER","AXIS_LENGTH","RED_COLOR","GREEN_COLOR","BLUE_COLOR","COLOR_WHITE","tempMat4","tempVec","Axis","#renderer","#shaftMesh","#headMesh","shaftGeometry","createShaftGeometry","standardMaterial","headGeometry","createHeadGeometry","#UpdateInstances","shaft","head","axisIndex","indexX","indexY","indexZ","subdivs","DEFAULT_LABEL_SCALE_FACTOR","SceneSettings","backgroundColor","labelScaleFactor","PICKING_LINE_SIZE","DEFAULT_EDITABLE","DEFAULT_AXIS_SCALE","DEFAULT_LINE_WIDTH_PX","DEFAULT_LINE_COLOR_STR","DEFAULT_TF_LABEL_SIZE","FrameAxisRenderable","frame","fixed","tempVecB","tempLower","tempUpper","tempQuaternion","tempTfPath","FrameAxes","#lineMaterial","#linePickingMaterial","#labelForegroundColor","#labelBackgroundColor","#lineGeometry","#defaultRenderableSettings","defaultRenderableSettings","linewidth","LineMaterial","createLineGeometry","configTransforms","frameCount","order","frameKey","tfConfig","#getRenderableSettingsWithDefaults","buildSettingsFields","axisScale","axisLength","labelSize","labelScale","labelOffsetZ","parentFrame","worldPosition","parentRenderable","parentWorldPosition","colorScheme","foreground","#setLabelSize","#setAxisScale","scale","#setLineWidth","#setLineColor","toggleFrameVisibility","frameKeySanitized","setting","#updateFrameAxes","lineColor","#updateFrameAxis","partialDefinedSettings","#addFrameAxis","parentLine","Line2","getOffset","lineGeometry","LineGeometry","parentFrameId","historySizeValue","ageValue","xyzValue","rpyValue","transformTime","formatShortDuration","round","xyzOffsetValue","rpyOffsetValue","vec3IsZero","MS_TENTH_NS","MS_NS","SEC_NS","MIN_NS","HOUR_NS","duration","absDuration","abs","precision","eps","maybeOffset","z","LAYER_ID","DEFAULT_SIZE","DEFAULT_DIVISIONS","DEFAULT_LINE_WIDTH","MAX_DIVISIONS","LINE_OPTIONS","GridRenderable","Grids","#handleAddGrid","#updateGrid","layerConfig","frameIdOptions","layer","#createRenderable","markersEqual","createMarker","lineListId","lineList","divisions","step","halfSize","WorkerImageDecoder","#worker","#remote","image","decodeCompressedImageToBitmap","resizeWidth","bitmapData","decodeRawImage","rawData","CREATE_BITMAP_ERR_KEY","IMAGE_TOPIC_PATH","IMAGE_RENDERABLE_DEFAULT_SETTINGS","ImageRenderable","#geometryNeedsUpdate","#meshNeedsUpdate","#textureNeedsUpdate","#materialNeedsUpdate","#renderBehindScene","#isUpdating","#decodedImage","#decoder","#receivedImageSequenceNumber","#displayedImageSequenceNumber","#rawImageOptions","#disposed","rawFrameId","onDecoded","seq","result","#updateTexture","#rebuildGeometry","#updateMaterial","#updateMesh","decodedImage","canvasTexture","bitmapDimensionsEqual","createCanvasTexture","dataTexture","createDataTexture","#initMaterial","bitmap","imageData","gridX1","gridY1","segmentWidth","segmentHeight","EPS","vertices","uvs","iy","ix","vOffset","uvOffset","ALL_CAMERA_INFO_SCHEMAS","getFrameIdFromImage","getTimestampFromImage","DEFAULT_CAMERA_STATE","MIN_USER_ZOOM","MAX_USER_ZOOM","ImageModeCamera","#model","#cameraState","#rotation","#flipHorizontal","#flipVertical","#aspectZoom","#canvasSize","#panOffset","#userZoom","#updateProjection","rotation","flipHorizontal","flipVertical","ratio","cursorCoords","newZoom","finalRatio","halfWidth","halfHeight","#updateAspectZoom","#getProjection","flipPanX","flipPanY","panX","panY","near","far","left","right","top","bottom","xOffset","yOffset","left0","right0","top0","bottom0","temp","canvasWidth","canvasHeight","imgWidth","imgHeight","rendererAspect","imageAspect","normalizeImageData","normalizeRosImage","normalizeRosCompressedImage","normalizeRawImage","normalizeCompressedImage","ImageMarkerType","ImageMarkerAction","DEFAULT_FONT_SIZE","DEFAULT_PADDING","ANNOTATION_DATATYPES","foxglovePointTypeToStyle","normalizeFoxgloveImageAnnotations","annotations","circles","circle","stamp","normalizeTimestamp","style","mightActuallyBePartial","texts","normalizeRosImageMarkerArray","filterMap","normalizeRosImageMarker","imageMarkerTypeToStyle","messagePath","toPOD","normalizeAnnotations","maybeLazyMessage","datatype","normalized","getAnnotationAtPath","MessageHandler","#config","#oldRenderState","#lastReceivedMessages","#tree","#listeners","fn","#handleImage","normalizedImageMessage","#emitState","groups","annotation","arr","stampNsec","newConfig","changed","newVisibleTopics","syncEntry","state","validEntry","findSynchronizedSetAndRemoveOlderItems","#visibleAnnotations","visibleAnnotations","tree","messageState","hasOnlyVisibleAnnotations","minKey","ANNOTATION_FRONT_POSITION","ANNOTATION_RENDER_ORDER","annotationRenderOrderMaterialProps","PickingMaterial","shader","FALLBACK_COLOR","RenderableLineAnnotation","#linePrepassMaterial","#style","#numPoints","#fill","#fillGeometry","#fillMaterial","#scale","#canvasWidth","#canvasHeight","#scaleNeedsUpdate","#originalMessage","#annotation","#annotationNeedsUpdate","#cameraModel","#cameraModelNeedsUpdate","makePointsAnnotationFromCircle","outlineColor","outlineColors","thickness","fillColor","isPolygon","isLineStrip","isLineList","useVertexColors","hasExactColors","shapeFillColor","shape","radius","_","angle","DynamicBufferGeometry","#attributeConstructors","#usage","#itemCapacity","usage","attribute","arrayConstructor","itemSize","itemCount","attributeName","dataConstructor","newAttrib","RenderablePointsAnnotation","#points","#pointsMaterial","#pickingMaterial","#pixelRatio","_canvasWidth","_canvasHeight","positionAttribute","colorAttribute","fallbackColor","RenderableTextAnnotation","#labelPool","#label","labelPool","textColor","fontSize","RenderableTopicAnnotations","#lines","#texts","#annotations","#annotationsNeedsUpdate","#topicName","updateRenderables","unusedPoints","unusedLines","unusedTexts","TOPIC_PREFIX_REGEX","getTopicMatchPrefix","sortPrefixMatchesToFront","imageTopic","prefix","matchesA","matchesB","LEGACY_ANNOTATION_SCHEMAS","ALL_SUPPORTED_SCHEMAS","ImageAnnotations","#context","#renderablesByTopic","context","#updateFromMessageState","newState","#handleMessage","#handleSettingsAction","#handleTopicVisibilityChange","visible","annotationTopics","CALIBRATION_TOPIC_PATH","IMAGE_TOPIC_UNAVAILABLE","CALIBRATION_TOPIC_UNAVAILABLE","MISSING_CAMERA_INFO","IMAGE_TOPIC_DIFFERENT_FRAME","DEFAULT_FOCAL_LENGTH","REMOVE_IMAGE_TIMEOUT_MS","ALL_SUPPORTED_IMAGE_SCHEMAS","ALL_SUPPORTED_CALIBRATION_SCHEMAS","DEFAULT_CONFIG","ImageMode","#imageRenderable","#removeImageTimeout","#messageHandler","#dragStartPanOffset","#dragStartMouseCoords","#hasModifiedView","#latestImage","#setHasCalibrationTopic","canvasSize","setHasCalibrationTopic","#getImageModeSettings","updateHandler","mouseDownCursorCoords","mouseMoveCursorCoords","_worldSpaceCursorCoords","#updateAnnotationsScale","#handleTopicsChanged","#cameraInfoShouldSubscribe","#imageShouldSubscribe","#clearCameraModel","matchingCalibrationTopic","#getMatchingCalibrationTopic","calibrationTopic","synchronize","imageTopics","calibrationTopics","option","imageTopicError","calibrationTopicError","prevImageModeConfig","#updateViewAndRenderables","oldState","#handleImageChange","#handleCameraInfoChange","#updateCameraModel","#getImageRenderable","#fallbackCameraModelActive","#updateFallbackCameraModel","createFallbackCameraInfoForImage","#getCurrentFrameId","imageMode","selectedCameraInfo","selectedImage","cameraInfoFrameId","imageFrameId","imageRenderable","newCameraInfo","currentCameraInfo","#getPinholeCameraModel","focalLength","MultiMap","#map","values","DEFAULT_BITMAP_WIDTH","NO_CAMERA_INFO_ERR","Images","#cameraInfoTopics","#cameraInfoToImageTopics","#cameraInfoByTopic","#handleRosRawImage","#handleRosCompressedImage","#handleRawImage","#handleCompressedImage","cameraInfoOptions","prevCameraInfoTopic","cameraInfoTopic","#recomputeCameraModel","topicConfig","maybeImageConfig","newCameraInfoTopic","DEFAULT_POINT_SIZE","DEFAULT_POINT_SHAPE","DEFAULT_POINT_SETTINGS","POINT_CLOUD_REQUIRED_FIELDS","POINT_SHAPE_OPTIONS","pointSettingsNode","messageFields","defaultSettings","pointSize","pointShape","decayTime","pointCloud","pointCloudColorEncoding","createPoints","instancePickingMaterial","FS_POINTCLOUD_SRGB_TO_LINEAR","FS_POINTCLOUD_CIRCLE","pointCloudMaterial","SEARCH","createInstancePickingMaterial","RenderObjectHistory","#history","#renderable","initial","pointsHistory","expireTime","hadTfError","srcTime","updatePose","emptyPose","LASERSCAN_FIELDS","ALL_LASERSCAN_DATATYPES","INVALID_LASERSCAN","VEC3_ZERO","createLaserScanGeometry","LaserScanRenderable","#pointsHistory","isDecay","range","intensity","laserScan","intensities","ranges","invalidLaserScanError","laserScanMaterial","latestEntry","rangeAttribute","maxRange","LaserScans","#handleLaserScan","normalizeRosLaserScan","normalizeFoxgloveLaserScan","LaserScanMaterial","LaserScanInstancePickingMaterial","#MIN_PICKING_POINT_SIZE","picking","minPointSize","INVALID_CUBE_LIST","INVALID_LINE_LIST","INVALID_LINE_STRIP","INVALID_MARKER_ACTION","INVALID_MARKER_TYPE","INVALID_POINTS_LIST","INVALID_SPHERE_LIST","DEFAULT_NAMESPACE_SETTINGS","MarkersNamespace","namespace","TopicMarkers","#addOrUpdateMarker","#deleteMarker","#deleteAllMarkers","expiresIn","#createMarkerRenderable","clearNamespace","pool","markerId","Markers","#handleMarkerArray","#handleMarker","topicMarkers","namespaces","#handleSettingsActionNamespace","namespaceKey","fieldName","actualPath","nsSettings","markerArray","markerMsg","normalizeMarker","#addMarker","#getTopicMarkers","prevNsCount","firstMarker","LATE_RENDER_ORDER","FixedSizeMeshMaterial","params","MeasurementTool","#circleGeometry","#circleMaterial","#circle1","#circle2","#linePositionAttribute","#lineOccluded","#point1NeedsUpdate","#point2NeedsUpdate","#point1","#point2","#setState","#handleClick","#handleMouseMove","#updateDistance","#render","_cursorCoords","worldSpaceCursorCoords","INVALID_OCCUPANCY_GRID","DEFAULT_UNKNOWN_COLOR","DEFAULT_INVALID_COLOR","DEFAULT_ALPHA","DEFAULT_MIN_COLOR_STR","DEFAULT_MAX_COLOR_STR","DEFAULT_UNKNOWN_COLOR_STR","DEFAULT_INVALID_COLOR_STR","OccupancyGridRenderable","OccupancyGrids","#handleOccupancyGrid","configWithDefaults","customFields","paletteFields","prevTransparent","occupancyGridHasTransparency","newTransparent","#updateOccupancyGridRenderable","occupancyGrid","normalizeOccupancyGrid","invalidOccupancyGridError","resolution","updateTexture","tempUnknownColor","tempInvalidColor","tempMinColor","tempMaxColor","srgbToLinearUint8","paletteColorCached","costmapPalette","mapPalette","rawPalette","paletteColorMode","unsignedValue","palette","createCostmapPalette","createMapPalette","createRawPalette","colorRaw","ALL_POINTCLOUD_DATATYPES","INVALID_POINTCLOUD","tempFieldReaders","PointCloudRenderable","#stixelsHistory","getPose","stixelGeometry","createStixelGeometry","stixels","createStixels","getStride","pointStep","details","reader","getTimestamp","getFrameId","prevIsDecay","stixelMaterial","needsRebuild","stixelsHistory","createStixelMaterial","stixelsEnabledChanged","#validatePointCloud","#getPointCloudFieldReaders","latestPointsEntry","pointCount","latestPoints","latestStixelEntry","stixelPositionAttribute","stixelColorAttribute","#updatePointCloudBuffers","#invalidError","#validateRosPointCloud","#validateFoxglovePointCloud","xReader","yReader","zReader","packedColorReader","minBytesPerPoint","pointFieldTypeName","pointFieldWidth","#minMaxColorValues","colorReader","readers","PointClouds","#handleRosPointCloud","#handleFoxglovePointCloud","normalizePointCloud","#handlePointCloud","normalizePointCloud2","numSupportedFields","numSupported","normalizePointField","maybeRos","RenderableLineStrip","color1","color2","ii","copyTuple4","from","to","PolygonRenderable","Polygons","#handlePolygon","#updatePolygonRenderable","polygonStamped","normalizePolygonStamped","linesMarker","createLineStripMarker","normalizePolygon","polygon","HEAD_LENGTH_PROPORTION","tempStart","tempEnd","tempDirection","RenderableArrow","#shaftOutline","#headOutline","shaftEdgesGeometry","createShaftEdgesGeometry","headEdgesGeometry","createHeadEdgesGeometry","pointA","pointB","distance","headLength","length","shaftLength","shaftDiameter","headDiameter","halfShaftLength","halfHeadLength","positionsAttrib","newCount","newVertices","newPositionsAttrib","RenderableSphere","subdivisions","sphereGeometry","DEFAULT_TYPE","DEFAULT_ARROW_SCALE","DEFAULT_SHOW_COVARIANCE","DEFAULT_COVARIANCE_COLOR","DEFAULT_COVARIANCE_COLOR_STR","TYPE_OPTIONS","PoseRenderable","Poses","#handlePoseStamped","#handlePoseInFrame","#handlePoseWithCovariance","isPoseStamped","isPoseInFrame","isPoseWithCovarianceStamped","showCovariance","covarianceColor","#updatePoseRenderable","poseMessage","normalizePoseStamped","#addPose","normalizePoseInFrameToPoseStamped","normalizePoseWithCovarianceStamped","axisOrArrowSettingsChanged","arrowMarker","createArrowMarker","arrow","sphereMarker","createSphereMarker","arrowScale","normalizePoseWithCovariance","covariance","DEFAULT_GRADIENT","MISMATCHED_FRAME_ID","DEFAULT_GRADIENT_STR","tempColor3","PoseArrayRenderable","PoseArrays","#handlePoseArray","#handlePosesInFrame","#handleNavPath","displayType","getDefaultType","defaultType","#updatePoseArrayRenderable","poseArrayMessage","normalizePoseArray","#addPoseArray","validateNavPath","normalizeNavPathToPoseArray","normalizePosesInFrameToPoseArray","#createAxesToMatchPoses","poseArray","existingUpdateCount","#createArrowsToMatchPoses","colorStart","colorEnd","createArrowMarkerFromIndex","lineStripMarker","lineStrip","setObjectPose","navPath","baseFrameId","curFrameId","makeArrowMarker","makeSphereMarker","PublishClickTool","#sphere","#arrow","PrimitiveType","ALL_PRIMITIVE_TYPES","INVALID_DELETION_TYPE","PRIMITIVE_KEYS","TopicEntities","#renderablesById","primitivePool","#deleteAllEntities","renderables","entity","expiresAt","#deleteEntity","primitiveType","hasPrimitives","deletion","#removeRenderables","primitive","PRIMITIVE_DEFAULT_SETTINGS","RenderablePrimitive","MeshStandardMaterialWithInstanceOpacity","tempVec3_2","tempQuat","tempRgba","RenderableArrows","#shaftGeometry","#headGeometry","#shaftOutlineGeometry","#headOutlineGeometry","#instanceOpacity","#maxInstances","#ensureCapacity","numArrows","newCapacity","arrows","isTransparent","overrideColor","lifetimeNs","RenderableCubes","#mesh","#outlineGeometry","#outline","#sharedEdgesGeometry","createCubeGeometry","createEdgesGeometry","numCubes","cubes","cube","cubeGeometry","cubeEdgesGeometry","RenderableCylinders","#instanceTopScale","#instanceBottomScale","#outlineMaterial","CylinderOutlineMaterial","CylinderMaterial","CylinderPickingMaterial","cylinders","cylinder","cylinderGeometry","cylinderEdgesGeometry","makeCylinderVertexShader","source","RenderableLines","#updateLines","lines","idx","lineRenderable","LinePrimitiveRenderable","#transparent","#primitiveChanged","#primitive","#colorChanged","#color","#lineType","isLoop","isSegments","useIndices","numVertices","necessaryPositionBufferSize","serializePositionsWithIndices","serializePositions","singleColor","necessaryColorBufferSize","serializeColorsWithIndices","serializeColors","positionsOut","indices","colorsOut","disposeMaterial","disposeMeshesRecursive","removeLights","lights","maybeLight","light","replaceMaterials","meshChild","embeddedMaterial","disposeStandardMaterial","MODEL_FETCH_FAILED","byteArraysEqual","RenderableModels","#renderablesByDataCrc","#renderablesByUrl","#updateCount","#createOrUpdateRenderable","prevRenderables","primitivesMatch","getURL","revokeURL","prev","#updateModel","cachedModel","#loadCachedModel","cloneAndPrepareModel","#updateModels","models","originalUpdateCount","prevRenderablesByUrl","prevRenderablesByDataCrc","newRenderables","dataCrc","model1","model2","_url","#disposeModel","#updateOutlineVisibility","showOutlines","lineSegments","RenderableSpheres","numInstances","spheres","sphere","RenderableTexts","#labels","newLength","oldLength","newLabel","#updateTexts","missingColor","COLOR_LENGTH_ERROR_ID","INVALID_POINT_ERROR_ID","RenderableTriangles","#triangleMeshes","triCount","makeTriangleMesh","#updateTriangleMeshes","tris","triMeshIdx","vertChanged","colorChanged","isPointValid","newColor","needsUpdate","pt","CONSTRUCTORS","PrimitivePool","#primitivesByType","primitives","SCENE_ENTITIES_DEFAULT_SETTINGS","FoxgloveSceneEntities","#primitivePool","#handleSceneUpdate","_backgroundColor","sceneUpdates","deletionMsg","normalizeSceneEntityDeletion","#getTopicEntities","entityMsg","normalizeSceneEntity","topicEntities","kv","normalizeArrowPrimitive","normalizeCubePrimitive","normalizeSpherePrimitive","normalizeCylinderPrimitive","normalizeLinePrimitive","normalizeTriangleListPrimitive","normalizeTextPrimitive","normalizeModelPrimitive","triangles","JOINT_TYPES","parseUrdf","parser","urdf","parseRobot","links","joints","materials","childName","parseLink","parseJoint","parseMaterial","link","parseInertial","parseVisual","parseCollision","mass","inertia","parsePose","parseFloatContent","parseInertia","defaultPose","jointType","parentLink","childLink","calibration","dynamics","limit","mimic","safetyController","parseVec3Attribute","parseFloatAttributeOptional","parseFloatAttribute","joint","parseGeometry","parseColorAttribute","ixx","ixy","ixz","iyy","iyz","izz","filename","xyz","rpy","attribName","urdfContents","getFileContents","xacroParser","XacroParser","targetPkg","eulerToQuaternion","roll","pitch","yaw","sy","cr","sr","cp","sp","quaternionToEuler","quaternion","toDegrees","dcm00","dcm10","dcm20","dcm21","dcm22","makeCovarianceArray","xDev","yDev","thetaDev","RenderableCube","RenderableCylinder","MESH_FETCH_FAILED","RenderableMeshResource","#updateId","forceLoad","curUpdateId","errors","TOPIC_NAME","PARAM_KEY","PARAM_NAME","PARAM_DISPLAY_NAME","VALID_URL_ERR","FETCH_URDF_ERR","PARSE_URDF_ERR","DEG2RAD","RAD2DEG","VEC3_ONE","XYZ_LABEL","RPY_LABEL","DEFAULT_CUSTOM_SETTINGS","tempQuaternion1","tempQuaternion2","EmbeddedMaterialUsage","supportsPackageUrl","isDesktopApp","UrdfRenderable","childRenderable","Urdfs","#framesByInstanceId","#transformsByInstanceId","#jointStates","#handleParametersChange","i18next","#handleAddUrdf","#loadUrdf","#handleRobotDescription","#handleJointState","#handleTopicSettingsAction","urdfChildren","#handleLayerSettingsAction","#refreshTransforms","frames","#loadFrames","transforms","#loadTransforms","hasTfError","#handleSettingsUpdate","jointName","transformData","isAngular","degrees","euler","robotDescription","msg","names","timestamp","prevTimestamp","#fetchUrdf","isValidUrl","res","unknown","hasError","errMessage","#getCurrentSettings","isTopicOrParam","baseSettings","settingsPath","loadedRenderable","parsed","#loadRobot","robot","createChild","visual","createRenderable","translation","fileFetcher","getFileFetch","orientation","getColor","embedded","createMeshMarker","embeddedMaterialUsage","VALID_PROTOCOLS","str","jointStates","jointChildren","aX","aY","aZ","manualDegrees","jointStateRadians","eulerDegreesToQuaternion","signedAngleAroundAxis","manualPosition","signedDistanceAlongAxis","jointStatePosition","rising","falling","damping","friction","effort","velocity","upper","lower","upperValue","lowerValue","mimicJoint","multiplier","softUpperLimit","softLowerLimit","kPosition","kVelocity","eulerDegrees","targetAxis","rotationAxis","twist","pointFieldDataTypeToNumericType","VelodyneCloudConverter","#transformers","scan","firstPacketData","maxPoints","cloud","transformer","packet","VelodyneScans","#pointCloudFieldsByTopic","#velodyneCloudConverter","#handleVelodyneScan","INITIAL_CAPACITY","DynamicInstancedMesh","#capacity","initialCapacity","#resize","defaultColor","#setCount","colorArray","#expand","oldMatrixArray","oldColorArray","newMatrixArray","newColorArray","RenderableCubeList","RenderablePoints","rgbaData","RenderableSphereList","RenderableTextViewFacing","NOT_DIVISIBLE_ERR","EMPTY_ERR","COLORS_MISMATCH_ERR","INVALID_POINT_ERR","RenderableTriangleList","vertexCount","dataChanged","MarkerPool","#renderablesByType","URDF_SAVE_API_ENDPOINT","POSITION_STEP","SceneRenderable","SceneEditor","#getUrdfList","fileName","objects","illegalRe","controlRe","reservedRe","windowsReservedRe","windowsTrailingRe","json","settingKey","urdfs","urdfList","#handleAddShape","input","selectedShape","fr","numberOfSelectedShape","coor","shapeLabel","MAX_SELECTIONS","LIGHT_BACKDROP","DARK_BACKDROP","LAYER_DEFAULT","LAYER_SELECTED","NO_FRAME_SELECTED","TF_OVERFLOW","CYCLE_DETECTED","FOLLOW_FRAME_NOT_FOUND","RENDERER_ID","Renderer","#customLayerActions","#dirLight","#hemiLight","#imageModeExtension","#picker","#selectionBackdrop","#selectedRenderable","#prevResolution","#pickingEnabled","#animationFrame","#cameraSyncError","#devicePixelRatioMediaQuery","interfaceMode","baseSettingsTree","#resizeHandler","#clickHandler","samples","renderSize","hasCameraCalibrationTopic","#disableImageOnlySubscriptionMode","#enableImageOnlySubscriptionMode","#addSceneExtension","PublishSettings","#addTransformSubscriptions","#addSubscriptionsFromSceneExtensions","#watchDevicePixelRatio","#onDevicePixelRatioChange","extension","newTimeNs","oldTimeNs","movedBack","clearTransforms","resetAllFramesCursor","#clearTransformTree","#resetAllFramesCursor","#allFramesCursor","allFrames","messageAtCursor","cursor","cursorTimeReached","lastReadMessage","hasAddedMessageEvents","preloadTransforms","#addSchemaSubscriptions","#handleFrameTransform","#handleFrameTransforms","#handleTFMessage","#handleTransformStamped","filterFn","filteredExtensions","subscriptions","subscription","#addTopicSubscription","#clearSubscriptions","schemaNames","schemaName","handlers","#imageOnlyModeTopicSettingsValidator","#updateTopicsAndCustomLayerSettingsNodes","#getTopicsSettingsEntry","#getCustomLayersSettingsEntry","#handleTopicsAction","layerCount","#handleCustomLayersAction","enabled","bgColor","topics","selection","prevSelected","deselectObject","selectObject","maybeHasHeader","maybeHasMarkers","maybeHasEntities","maybeHasFrameId","handleMessage","normalizedFrameId","#addFrameTransform","parentId","childId","#addTransformMessage","tf","normalizedParentId","normalizedChildId","childFrameId","errorSettingsPath","status","#frameHandler","#updateFrameErrors","#updateFixedFrameId","#updateResolution","sceneExtension","selections","curSelection","#pickSingleObject","toggleTopicVisibility","actionId","layerId","pickedObject","maybeRenderable","instanceIndex","keys","RendererContext","useRenderer","useRendererEvent","eventName","rendererInstance","usedRenderer","PublishGoalIcon","SvgIcon","PublishPointIcon","PublishPoseEstimateIcon","usePanelMousePresence","ref","present","setPresent","ev","element","maybePlainObject","rawVal","ObjectDetails","interactionData","selectedObject","timezone","jsonTreeTheme","plainObject","originalObject","Stack","_markerKeyPath","_data","level","nodeType","itemType","itemString","keyPath","getItemString","markerKeyPath","_p1","_p2","_hasChildren","TopicLink","addPanel","openRawMessages","existingState","CardActionArea","Typography","OpenInNew","OBJECT_TAB_TYPE","InteractionsBaseComponent","interactionsTabType","setInteractionsTabType","selectedInteractionData","instanceDetails","newSelectedTab","Interactions","getInstanceObj","getObject","InteractionContextMenuItem","interactiveObject","selectItemObject","MenuItem","InteractionContextMenu","clickedObjects","clickedPosition","onClose","Menu","stats","drawCallsPanel","trianglesPanel","texturesPanel","geometriesPanel","maxDrawCalls","maxTriangles","maxTextures","maxGeometries","update","Stats","div","setDiv","_curTime","curRenderer","THREEStats","#mode","#container","#beginTime","#prevTime","#msPanel","#memPanel","panel","memory","#min","#max","#name","#fg","#bg","fg","bg","PR","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","start","startRecording","stop","stopRecording","stream","recordedBlobs","supportedType","mediaRecorder","createdBlob","types","e","handleStop","handleDataAvailable","formatter","download","file_name","resolve","reject","PublishClickIcons","fadeBlinkAnimation","durationToTime","seconds","minutes","RendererOverlay","analytics","enqueueSnackbar","setClickedPosition","selectedRenderables","setSelectedRenderables","selectedRenderable","setSelectedRenderable","recording","setRecording","recordingTime","setRecordingTime","rect","showResetViewButton","setShowResetViewButton","onResetView","interval","publickClickButtonRef","publishMenuExpanded","setPublishMenuExpanded","selectedPublishClickIcon","onLongPressPublish","longPressPublishEvent","useLongPress","useTheme","publishControls","IconButton","ListItemIcon","ListItemText","resetViewButton","Button","onDownloadImage","doDownloadImage","currentImage","ctx","blob","getContextMenuItems","mousePresenceRef","mousePresent","Paper","Tooltip","PublishRos1Datatypes","PublishRos2Datatypes","makePointMessage","makePoseMessage","makePoseEstimateMessage","PANEL_STYLE","useRendererProperty","fallback","setValue","onChange","ThreeDeeRender","initialState","saveState","setConfig","partialConfig","publish","configRef","useLatest","setCanvas","setRenderer","rendererRef","newRenderer","setColorScheme","setTimezone","setTopics","setParameters","currentFrameMessages","setCurrentFrameMessages","setCurrentTime","didSeek","setDidSeek","sharedPanelState","setSharedPanelState","setAllFrames","renderRef","renderDone","setRenderDone","schemaHandlers","topicHandlers","newCameraState","prevConfig","actionHandler","initialCameraState","updatedCameraState","settingsTree","setSettingsTree","updateSettingsTree","updateConfig","updateSelectedRenderable","customVariable","throttledSave","renderState","done","tz","AppSetting","deepParseMessageEvents","topicsToSubscribe","setTopicsToSubscribe","newSubscriptions","addSubscription","rendererSubscription","convertTo","shouldSubscribe","measureActive","setMeasureActive","onStart","onEnd","onClickMeasure","publishActive","setPublishActive","publishTopics","datatypes","latestPublishConfig","onSubmit","onClickPublish","onTogglePerspective","currentState","onKeyDown","isRosDataSource","canPublish","ThemeProvider","messageEvents","maybeLazy","initPanel","crash","ThreeDeeRenderAdapter","boundInitPanel","PanelExtensionAdapter","ThreeDeePanel","Panel","ImagePanel","quatToEuler","DURATION_20_YEARS_SEC","PRIMITIVE_TYPES","_nodeType","_keyPath","sec","nsec","getArrow","filterKeys","isTypicalFilterName"],"sourceRoot":""}