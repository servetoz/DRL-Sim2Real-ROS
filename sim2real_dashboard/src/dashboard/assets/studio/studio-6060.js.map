{"version":3,"file":"studio-6060.js","mappings":"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","sources":["webpack:///../../node_modules/@mui/material/TableContainer/tableContainerClasses.js","webpack:///../../node_modules/@mui/material/TableContainer/TableContainer.js","webpack:///../../node_modules/@mui/material/TableHead/tableHeadClasses.js","webpack:///../../node_modules/@mui/material/TableHead/TableHead.js","webpack:///../../packages/studio-base/src/panels/Parameters/index.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport {\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { isEqual, isObject, union } from \"lodash\";\nimport { ReactElement, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { makeStyles } from \"tss-react/mui\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nimport { ParameterValue } from \"@foxglove/studio\";\nimport CopyButton from \"@foxglove/studio-base/components/CopyButton\";\nimport EmptyState from \"@foxglove/studio-base/components/EmptyState\";\nimport JsonInput from \"@foxglove/studio-base/components/JsonInput\";\nimport {\n  MessagePipelineContext,\n  useMessagePipeline,\n} from \"@foxglove/studio-base/components/MessagePipeline\";\nimport Panel from \"@foxglove/studio-base/components/Panel\";\nimport PanelToolbar from \"@foxglove/studio-base/components/PanelToolbar\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { PlayerCapabilities } from \"@foxglove/studio-base/players/types\";\n\n// The minimum amount of time to wait between showing the parameter update animation again\nexport const ANIMATION_RESET_DELAY_MS = 3000;\n\nfunction isActiveElementEditable(): boolean {\n  const activeEl = document.activeElement;\n  return (\n    activeEl != undefined &&\n    ((activeEl as HTMLElement).isContentEditable ||\n      activeEl.tagName === \"INPUT\" ||\n      activeEl.tagName === \"TEXTAREA\")\n  );\n}\n\n// Keep a single empty map so selector return value is reference-equal\nconst EMPTY_PARAMETERS = new Map<string, ParameterValue>();\n\nfunction selectCapabilities(ctx: MessagePipelineContext) {\n  return ctx.playerState.capabilities;\n}\nfunction selectSetParameter(ctx: MessagePipelineContext) {\n  return ctx.setParameter;\n}\nfunction selectParameters(ctx: MessagePipelineContext) {\n  return ctx.playerState.activeData?.parameters ?? EMPTY_PARAMETERS;\n}\n\nconst useStyles = makeStyles<void, \"copyIcon\">()((_theme, _params, classes) => ({\n  tableRow: {\n    [`&:hover .${classes.copyIcon}`]: {\n      visibility: \"visible\",\n    },\n  },\n  copyIcon: {\n    visibility: \"hidden\",\n\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n}));\n\n/**\n * Converts a parameter value into a value that can be edited in the JsonInput. Wraps\n * any value JsonInput can't handle in JSON.stringify.\n */\nfunction editableValue(\n  value: unknown,\n): string | number | boolean | unknown[] | Uint8Array | object {\n  if (value instanceof Uint8Array) {\n    return Array.from(value);\n  } else if (\n    typeof value === \"string\" ||\n    typeof value === \"number\" ||\n    typeof value === \"boolean\" ||\n    Array.isArray(value) ||\n    isObject(value)\n  ) {\n    return value;\n  } else {\n    return JSON.stringify(value) ?? \"\";\n  }\n}\n\n/**\n * Converts a parameter value into a string we can display value or use as a title.\n */\nfunction displayableValue(value: unknown): string {\n  if (value == undefined) {\n    return \"\";\n  }\n\n  if (value instanceof Date) {\n    return value.toISOString();\n  } else if (value instanceof Uint8Array) {\n    return JSON.stringify(Array.from(value)) ?? \"\";\n  }\n\n  if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n    return String(value);\n  } else {\n    return JSON.stringify(value) ?? \"\";\n  }\n}\n\nfunction SubmittableJsonInput(props: {\n  value: unknown;\n  onSubmit: (newVal: unknown) => void;\n}): ReactElement {\n  const [value, setValue] = useState<unknown>(editableValue(props.value));\n\n  return (\n    <Stack direction=\"row\">\n      <JsonInput\n        value={value}\n        onChange={(newVal) => {\n          setValue(newVal);\n        }}\n      />\n      {!isEqual(editableValue(value), editableValue(props.value)) && [\n        <Tooltip key=\"submit\" title=\"Submit change\">\n          <IconButton\n            onClick={() => {\n              if (props.value instanceof Uint8Array) {\n                props.onSubmit(new Uint8Array(value as number[]));\n              } else {\n                props.onSubmit(value);\n              }\n            }}\n          >\n            <CheckIcon />\n          </IconButton>\n        </Tooltip>,\n        <Tooltip key=\"reset\" title=\"Reset\">\n          <IconButton key=\"reset\" onClick={() => setValue(editableValue(props.value))}>\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>,\n      ]}\n    </Stack>\n  );\n}\n\nfunction Parameters(): ReactElement {\n  const { classes } = useStyles();\n\n  const capabilities = useMessagePipeline(selectCapabilities);\n  const setParameterUnbounced = useMessagePipeline(selectSetParameter);\n  const parameters = useMessagePipeline(selectParameters);\n\n  const setParameter = useDebouncedCallback(\n    useCallback(\n      (name: string, value: ParameterValue) => setParameterUnbounced(name, value),\n      [setParameterUnbounced],\n    ),\n    500,\n  );\n\n  const [changedParameters, setChangedParameters] = useState<string[]>([]);\n\n  const canGetParams = capabilities.includes(PlayerCapabilities.getParameters);\n  const canSetParams = capabilities.includes(PlayerCapabilities.setParameters);\n\n  const parameterNames = useMemo(() => Array.from(parameters.keys()), [parameters]);\n\n  // Don't run the animation when the Table first renders\n  const skipAnimation = useRef<boolean>(true);\n  const previousParametersRef = useRef<ReadonlyMap<string, unknown> | undefined>(parameters);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => (skipAnimation.current = false), ANIMATION_RESET_DELAY_MS);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  useEffect(() => {\n    if (skipAnimation.current || isActiveElementEditable()) {\n      previousParametersRef.current = parameters;\n      return;\n    }\n    const newChangedParameters = union(\n      Array.from(parameters.keys()),\n      Array.from(previousParametersRef.current?.keys() ?? []),\n    ).filter((name) => {\n      const previousValue = previousParametersRef.current?.get(name);\n      return !isEqual(previousValue, parameters.get(name));\n    });\n\n    setChangedParameters(newChangedParameters);\n    previousParametersRef.current = parameters;\n    const timerId = setTimeout(() => setChangedParameters([]), ANIMATION_RESET_DELAY_MS);\n    return () => clearTimeout(timerId);\n  }, [parameters, skipAnimation]);\n\n  if (!canGetParams) {\n    return (\n      <Stack fullHeight>\n        <PanelToolbar />\n        <EmptyState>Connect to a ROS source to view parameters</EmptyState>\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack fullHeight>\n      <PanelToolbar />\n      <TableContainer style={{ flex: 1 }}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Parameter</TableCell>\n              <TableCell>Value</TableCell>\n              <TableCell>&nbsp;</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {parameterNames.map((name) => {\n              const displayValue = displayableValue(parameters.get(name));\n\n              return (\n                <TableRow\n                  hover\n                  className={classes.tableRow}\n                  key={`parameter-${name}-${displayValue}`}\n                  selected={!skipAnimation.current && changedParameters.includes(name)}\n                >\n                  <TableCell variant=\"head\">\n                    <Typography noWrap title={name} variant=\"inherit\">\n                      {name}\n                    </Typography>\n                  </TableCell>\n\n                  {canSetParams ? (\n                    <TableCell padding=\"none\">\n                      <SubmittableJsonInput\n                        value={parameters.get(name)}\n                        onSubmit={(newVal) => {\n                          setParameter(name, newVal as ParameterValue);\n                        }}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell>\n                      <Typography\n                        noWrap\n                        title={displayValue}\n                        variant=\"inherit\"\n                        color=\"text.secondary\"\n                      >\n                        {displayValue}\n                      </Typography>\n                    </TableCell>\n                  )}\n\n                  <TableCell padding=\"none\" align=\"center\">\n                    <CopyButton\n                      className={classes.copyIcon}\n                      edge=\"end\"\n                      size=\"small\"\n                      iconSize=\"small\"\n                      getText={() => `${name}: ${displayValue}`}\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Stack>\n  );\n}\n\nParameters.panelType = \"Parameters\";\nParameters.defaultConfig = {\n  title: \"Parameters\",\n};\n\nexport default Panel(Parameters);\n"],"names":["getTableContainerUtilityClass","slot","generateUtilityClass","tableContainerClasses","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","slots","composeClasses","TableContainerRoot","styled","props","styles","inProps","ref","useThemeProps","className","component","other","getTableHeadUtilityClass","tableHeadClasses","TableHeadRoot","tablelvl2","defaultComponent","Tablelvl2Context","ANIMATION_RESET_DELAY_MS","isActiveElementEditable","activeEl","EMPTY_PARAMETERS","selectCapabilities","ctx","selectSetParameter","selectParameters","useStyles","_theme","_params","editableValue","value","displayableValue","SubmittableJsonInput","setValue","Stack","JsonInput","newVal","Tooltip","IconButton","Check","Clear","Parameters","capabilities","setParameterUnbounced","parameters","setParameter","name","changedParameters","setChangedParameters","canGetParams","canSetParams","parameterNames","skipAnimation","previousParametersRef","timeoutId","newChangedParameters","previousValue","timerId","PanelToolbar","Table","TableRow","TableCell","TableBody","displayValue","Typography","CopyButton","EmptyState","Panel"],"sourceRoot":""}