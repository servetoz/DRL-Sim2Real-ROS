{"version":3,"file":"studio-2977.js","mappings":"6BAAA;AAAA;AAAA;AAAA;AAAA,GAKA,MAAMA,EAAc,OAAO,eAAe,EACpCC,EAAiB,OAAO,kBAAkB,EAC1CC,EAAe,OAAO,sBAAsB,EAC5CC,EAAY,OAAO,mBAAmB,EACtCC,EAAc,OAAO,gBAAgB,EACrCC,EAAYC,GAAS,OAAOA,GAAQ,UAAYA,IAAQ,MAAS,OAAOA,GAAQ,WAIhFC,EAAuB,CACzB,UAAYD,GAAQD,EAASC,CAAG,GAAKA,EAAIN,CAAW,EACpD,UAAUQ,EAAK,CACX,KAAM,CAAE,MAAAC,EAAO,MAAAC,CAAM,EAAI,IAAI,eAC7B,OAAAC,EAAOH,EAAKC,CAAK,EACV,CAACC,EAAO,CAACA,CAAK,CAAC,CAC1B,EACA,YAAYE,EAAM,CACd,OAAAA,EAAK,MAAM,EACJC,EAAKD,CAAI,CACpB,CACJ,EAIME,EAAuB,CACzB,UAAYC,GAAUV,EAASU,CAAK,GAAKX,KAAeW,EACxD,UAAU,CAAE,MAAAA,CAAM,EAAG,CACjB,IAAIC,EACJ,OAAID,aAAiB,MACjBC,EAAa,CACT,QAAS,GACT,MAAO,CACH,QAASD,EAAM,QACf,KAAMA,EAAM,KACZ,MAAOA,EAAM,KACjB,CACJ,EAGAC,EAAa,CAAE,QAAS,GAAO,MAAAD,CAAM,EAElC,CAACC,EAAY,CAAC,CAAC,CAC1B,EACA,YAAYA,EAAY,CACpB,MAAIA,EAAW,QACL,OAAO,OAAO,IAAI,MAAMA,EAAW,MAAM,OAAO,EAAGA,EAAW,KAAK,EAEvEA,EAAW,KACrB,CACJ,EAIMC,EAAmB,IAAI,IAAI,CAC7B,CAAC,QAASV,CAAoB,EAC9B,CAAC,QAASO,CAAoB,CAClC,CAAC,EACD,SAASI,EAAgBC,EAAgBC,EAAQ,CAC7C,UAAWC,KAAiBF,EAIxB,GAHIC,IAAWC,GAAiBA,IAAkB,KAG9CA,aAAyB,QAAUA,EAAc,KAAKD,CAAM,EAC5D,MAAO,GAGf,MAAO,EACX,CACA,SAAST,EAAOH,EAAKc,EAAK,WAAYH,EAAiB,CAAC,GAAG,EAAG,CAC1DG,EAAG,iBAAiB,UAAW,SAASC,EAASC,EAAI,CACjD,GAAI,CAACA,GAAM,CAACA,EAAG,KACX,OAEJ,GAAI,CAACN,EAAgBC,EAAgBK,EAAG,MAAM,EAAG,CAC7C,QAAQ,KAAK,mBAAmBA,EAAG,2BAA2B,EAC9D,MACJ,CACA,KAAM,CAAE,GAAAC,EAAI,KAAAC,EAAM,KAAAC,CAAK,EAAI,OAAO,OAAO,CAAE,KAAM,CAAC,CAAE,EAAGH,EAAG,IAAI,EACxDI,GAAgBJ,EAAG,KAAK,cAAgB,CAAC,GAAG,IAAIK,CAAa,EACnE,IAAIC,EACJ,GAAI,CACA,MAAMC,EAASJ,EAAK,MAAM,EAAG,EAAE,EAAE,OAAO,CAACnB,EAAKwB,IAASxB,EAAIwB,CAAI,EAAGxB,CAAG,EAC/DyB,EAAWN,EAAK,OAAO,CAACnB,EAAKwB,IAASxB,EAAIwB,CAAI,EAAGxB,CAAG,EAC1D,OAAQkB,EAAM,CACV,IAAK,MAEGI,EAAcG,EAElB,MACJ,IAAK,MAEGF,EAAOJ,EAAK,MAAM,EAAE,EAAE,CAAC,CAAC,EAAIE,EAAcL,EAAG,KAAK,KAAK,EACvDM,EAAc,GAElB,MACJ,IAAK,QAEGA,EAAcG,EAAS,MAAMF,EAAQH,CAAY,EAErD,MACJ,IAAK,YACD,CACI,MAAMb,EAAQ,IAAIkB,EAAS,GAAGL,CAAY,EAC1CE,EAAcI,EAAMnB,CAAK,CAC7B,CACA,MACJ,IAAK,WACD,CACI,KAAM,CAAE,MAAAN,EAAO,MAAAC,CAAM,EAAI,IAAI,eAC7BC,EAAOH,EAAKE,CAAK,EACjBoB,EAAcK,EAAS1B,EAAO,CAACA,CAAK,CAAC,CACzC,CACA,MACJ,IAAK,UAEGqB,EAAc,OAElB,MACJ,QACI,MACR,CACJ,OACOf,EAAP,CACIe,EAAc,CAAE,MAAAf,EAAO,CAACX,CAAW,EAAG,CAAE,CAC5C,CACA,QAAQ,QAAQ0B,CAAW,EACtB,MAAOf,IACD,CAAE,MAAAA,EAAO,CAACX,CAAW,EAAG,CAAE,EACpC,EACI,KAAM0B,GAAgB,CACvB,KAAM,CAACM,EAAWC,CAAa,EAAIC,EAAYR,CAAW,EAC1DR,EAAG,YAAY,OAAO,OAAO,OAAO,OAAO,CAAC,EAAGc,CAAS,EAAG,CAAE,GAAAX,CAAG,CAAC,EAAGY,CAAa,EAC7EX,IAAS,YAETJ,EAAG,oBAAoB,UAAWC,CAAQ,EAC1CgB,EAAcjB,CAAE,EACZnB,KAAaK,GAAO,OAAOA,EAAIL,CAAS,GAAM,YAC9CK,EAAIL,CAAS,EAAE,EAG3B,CAAC,EACI,MAAOqC,GAAU,CAElB,KAAM,CAACJ,EAAWC,CAAa,EAAIC,EAAY,CAC3C,MAAO,IAAI,UAAU,6BAA6B,EAClD,CAAClC,CAAW,EAAG,CACnB,CAAC,EACDkB,EAAG,YAAY,OAAO,OAAO,OAAO,OAAO,CAAC,EAAGc,CAAS,EAAG,CAAE,GAAAX,CAAG,CAAC,EAAGY,CAAa,CACrF,CAAC,CACL,CAAC,EACGf,EAAG,OACHA,EAAG,MAAM,CAEjB,CACA,SAASmB,EAAcC,EAAU,CAC7B,OAAOA,EAAS,YAAY,OAAS,aACzC,CACA,SAASH,EAAcG,EAAU,CACzBD,EAAcC,CAAQ,GACtBA,EAAS,MAAM,CACvB,CACA,SAAS7B,EAAKS,EAAIqB,EAAQ,CACtB,OAAOC,EAAYtB,EAAI,CAAC,EAAGqB,CAAM,CACrC,CACA,SAASE,EAAqBC,EAAY,CACtC,GAAIA,EACA,MAAM,IAAI,MAAM,4CAA4C,CAEpE,CACA,SAASC,EAAgBzB,EAAI,CACzB,OAAO0B,EAAuB1B,EAAI,CAC9B,KAAM,SACV,CAAC,EAAE,KAAK,IAAM,CACViB,EAAcjB,CAAE,CACpB,CAAC,CACL,CACA,MAAM2B,EAAe,IAAI,QACnBC,EAAkB,yBAA0B,YAC9C,IAAI,qBAAsB5B,GAAO,CAC7B,MAAM6B,GAAYF,EAAa,IAAI3B,CAAE,GAAK,GAAK,EAC/C2B,EAAa,IAAI3B,EAAI6B,CAAQ,EACzBA,IAAa,GACbJ,EAAgBzB,CAAE,CAE1B,CAAC,EACL,SAAS8B,EAAclB,EAAOZ,EAAI,CAC9B,MAAM6B,GAAYF,EAAa,IAAI3B,CAAE,GAAK,GAAK,EAC/C2B,EAAa,IAAI3B,EAAI6B,CAAQ,EACzBD,GACAA,EAAgB,SAAShB,EAAOZ,EAAIY,CAAK,CAEjD,CACA,SAASmB,EAAgBnB,EAAO,CACxBgB,GACAA,EAAgB,WAAWhB,CAAK,CAExC,CACA,SAASU,EAAYtB,EAAIK,EAAO,CAAC,EAAGgB,EAAS,UAAY,CAAE,EAAG,CAC1D,IAAIW,EAAkB,GACtB,MAAMpB,EAAQ,IAAI,MAAMS,EAAQ,CAC5B,IAAIY,EAASvB,EAAM,CAEf,GADAa,EAAqBS,CAAe,EAChCtB,IAAS9B,EACT,MAAO,IAAM,CACTmD,EAAgBnB,CAAK,EACrBa,EAAgBzB,CAAE,EAClBgC,EAAkB,EACtB,EAEJ,GAAItB,IAAS,OAAQ,CACjB,GAAIL,EAAK,SAAW,EAChB,MAAO,CAAE,KAAM,IAAMO,CAAM,EAE/B,MAAMsB,EAAIR,EAAuB1B,EAAI,CACjC,KAAM,MACN,KAAMK,EAAK,IAAK8B,GAAMA,EAAE,SAAS,CAAC,CACtC,CAAC,EAAE,KAAK5B,CAAa,EACrB,OAAO2B,EAAE,KAAK,KAAKA,CAAC,CACxB,CACA,OAAOZ,EAAYtB,EAAI,CAAC,GAAGK,EAAMK,CAAI,CAAC,CAC1C,EACA,IAAIuB,EAASvB,EAAMC,EAAU,CACzBY,EAAqBS,CAAe,EAGpC,KAAM,CAACvC,EAAOsB,CAAa,EAAIC,EAAYL,CAAQ,EACnD,OAAOe,EAAuB1B,EAAI,CAC9B,KAAM,MACN,KAAM,CAAC,GAAGK,EAAMK,CAAI,EAAE,IAAKyB,GAAMA,EAAE,SAAS,CAAC,EAC7C,MAAA1C,CACJ,EAAGsB,CAAa,EAAE,KAAKR,CAAa,CACxC,EACA,MAAM0B,EAASG,EAAUC,EAAiB,CACtCd,EAAqBS,CAAe,EACpC,MAAMM,EAAOjC,EAAKA,EAAK,OAAS,CAAC,EACjC,GAAIiC,IAAS3D,EACT,OAAO+C,EAAuB1B,EAAI,CAC9B,KAAM,UACV,CAAC,EAAE,KAAKO,CAAa,EAGzB,GAAI+B,IAAS,OACT,OAAOhB,EAAYtB,EAAIK,EAAK,MAAM,EAAG,EAAE,CAAC,EAE5C,KAAM,CAACC,EAAcS,CAAa,EAAIwB,EAAiBF,CAAe,EACtE,OAAOX,EAAuB1B,EAAI,CAC9B,KAAM,QACN,KAAMK,EAAK,IAAK8B,GAAMA,EAAE,SAAS,CAAC,EAClC,aAAA7B,CACJ,EAAGS,CAAa,EAAE,KAAKR,CAAa,CACxC,EACA,UAAU0B,EAASI,EAAiB,CAChCd,EAAqBS,CAAe,EACpC,KAAM,CAAC1B,EAAcS,CAAa,EAAIwB,EAAiBF,CAAe,EACtE,OAAOX,EAAuB1B,EAAI,CAC9B,KAAM,YACN,KAAMK,EAAK,IAAK8B,GAAMA,EAAE,SAAS,CAAC,EAClC,aAAA7B,CACJ,EAAGS,CAAa,EAAE,KAAKR,CAAa,CACxC,CACJ,CAAC,EACD,OAAAuB,EAAclB,EAAOZ,CAAE,EAChBY,CACX,CACA,SAAS4B,EAAOC,EAAK,CACjB,OAAO,MAAM,UAAU,OAAO,MAAM,CAAC,EAAGA,CAAG,CAC/C,CACA,SAASF,EAAiBjC,EAAc,CACpC,MAAMoC,EAAYpC,EAAa,IAAIU,CAAW,EAC9C,MAAO,CAAC0B,EAAU,IAAKC,GAAMA,EAAE,CAAC,CAAC,EAAGH,EAAOE,EAAU,IAAKC,GAAMA,EAAE,CAAC,CAAC,CAAC,CAAC,CAC1E,CACA,MAAMC,EAAgB,IAAI,QAC1B,SAAS/B,EAAS3B,EAAK2D,EAAW,CAC9B,OAAAD,EAAc,IAAI1D,EAAK2D,CAAS,EACzB3D,CACX,CACA,SAAS0B,EAAM1B,EAAK,CAChB,OAAO,OAAO,OAAOA,EAAK,CAAE,CAACR,CAAW,EAAG,EAAK,CAAC,CACrD,CACA,SAASoE,GAAeC,EAAGC,EAAU,WAAYC,EAAe,IAAK,CACjE,MAAO,CACH,YAAa,CAACC,EAAKnC,IAAkBgC,EAAE,YAAYG,EAAKD,EAAclC,CAAa,EACnF,iBAAkBiC,EAAQ,iBAAiB,KAAKA,CAAO,EACvD,oBAAqBA,EAAQ,oBAAoB,KAAKA,CAAO,CACjE,CACJ,CACA,SAAShC,EAAYvB,EAAO,CACxB,SAAW,CAAC0D,EAAMC,CAAO,IAAKzD,EAC1B,GAAIyD,EAAQ,UAAU3D,CAAK,EAAG,CAC1B,KAAM,CAAC4D,EAAiBtC,CAAa,EAAIqC,EAAQ,UAAU3D,CAAK,EAChE,MAAO,CACH,CACI,KAAM,UACN,KAAA0D,EACA,MAAOE,CACX,EACAtC,CACJ,CACJ,CAEJ,MAAO,CACH,CACI,KAAM,MACN,MAAAtB,CACJ,EACAmD,EAAc,IAAInD,CAAK,GAAK,CAAC,CACjC,CACJ,CACA,SAASc,EAAcd,EAAO,CAC1B,OAAQA,EAAM,KAAM,CAChB,IAAK,UACD,OAAOE,EAAiB,IAAIF,EAAM,IAAI,EAAE,YAAYA,EAAM,KAAK,EACnE,IAAK,MACD,OAAOA,EAAM,KACrB,CACJ,CACA,SAASiC,EAAuB1B,EAAIkD,EAAKL,EAAW,CAChD,OAAO,IAAI,QAASS,GAAY,CAC5B,MAAMnD,EAAKoD,EAAa,EACxBvD,EAAG,iBAAiB,UAAW,SAASwD,EAAEtD,EAAI,CACtC,CAACA,EAAG,MAAQ,CAACA,EAAG,KAAK,IAAMA,EAAG,KAAK,KAAOC,IAG9CH,EAAG,oBAAoB,UAAWwD,CAAC,EACnCF,EAAQpD,EAAG,IAAI,EACnB,CAAC,EACGF,EAAG,OACHA,EAAG,MAAM,EAEbA,EAAG,YAAY,OAAO,OAAO,CAAE,GAAAG,CAAG,EAAG+C,CAAG,EAAGL,CAAS,CACxD,CAAC,CACL,CACA,SAASU,GAAe,CACpB,OAAO,IAAI,MAAM,CAAC,EACb,KAAK,CAAC,EACN,IAAI,IAAM,KAAK,MAAM,KAAK,OAAO,EAAI,OAAO,gBAAgB,EAAE,SAAS,EAAE,CAAC,EAC1E,KAAK,GAAG,CACjB,CCzUA,SAASE,EACPC,EACAC,EACAC,EACAjB,EACAkB,EACAC,EAAyB,CAGzBA,EAAOD,CAAC,EAAIH,EAAK,MAAQf,EACzBmB,EAAOD,EAAI,CAAC,EAAIH,EAAK,OAAUC,EAAI,OAAUhB,EAC7CmB,EAAOD,EAAI,CAAC,EAAIH,EAAK,MAAQC,EAC7BG,EAAOD,EAAI,CAAC,EAAI,IAGhBC,EAAOD,EAAI,CAAC,EAAID,EAAK,MAAQjB,EAC7BmB,EAAOD,EAAI,CAAC,EAAID,EAAK,OAAUD,EAAI,OAAUhB,EAC7CmB,EAAOD,EAAI,CAAC,EAAID,EAAK,MAAQD,EAC7BG,EAAOD,EAAI,CAAC,EAAI,GAClB,CAEO,SAASE,EACdC,EACAC,EACAC,EACAJ,EAAyB,CAEzB,IAAID,EAAI,EACJM,EAAM,EAGV,MAAMC,EAAMF,EAASD,EACrB,QAAS/B,EAAI,EAAGA,GAAKkC,EAAKlC,GAAK,EAAG,CAChC,MAAMyB,EAAIK,EAAIG,CAAG,EAAK,IAChBT,EAAKM,EAAIG,EAAM,CAAC,EAChBxB,EAAIqB,EAAIG,EAAM,CAAC,EAAK,IACpBP,EAAKI,EAAIG,EAAM,CAAC,EACtBV,EAAWC,EAAIC,EAAGC,EAAIjB,EAAGkB,EAAGC,CAAM,EAClCD,GAAK,EACLM,GAAO,C,CAEX,CAGO,SAASE,EACdC,EACAL,EACAC,EACAJ,EAAyB,CAEzB,IAAID,EAAI,EACJM,EAAM,EAGV,MAAMC,EAAMF,EAASD,EACrB,QAAS/B,EAAI,EAAGA,GAAKkC,EAAKlC,GAAK,EAAG,CAChC,MAAMwB,EAAKY,EAAKH,CAAG,EACbR,EAAIW,EAAKH,EAAM,CAAC,EAAK,IACrBP,EAAKU,EAAKH,EAAM,CAAC,EACjBxB,EAAI2B,EAAKH,EAAM,CAAC,EAAK,IAC3BV,EAAWC,EAAIC,EAAGC,EAAIjB,EAAGkB,EAAGC,CAAM,EAClCD,GAAK,EACLM,GAAO,C,CAEX,CAEO,SAASI,EACdC,EACAP,EACAC,EACAJ,EAAyB,CAEzB,IAAIW,EAAQ,EACRC,EAAS,EAEb,QAAS,EAAI,EAAG,EAAIT,EAAQC,EAAQ,IAAK,CACvC,MAAMhC,EAAIsC,EAAIC,GAAO,EACfE,EAAIH,EAAIC,GAAO,EACfG,EAAIJ,EAAIC,GAAO,EAErBX,EAAOY,GAAQ,EAAIxC,EACnB4B,EAAOY,GAAQ,EAAIC,EACnBb,EAAOY,GAAQ,EAAIE,EACnBd,EAAOY,GAAQ,EAAI,G,CAEvB,CAEO,SAASG,EACdC,EACAb,EACAC,EACAJ,EAAyB,CAEzB,IAAIW,EAAQ,EACRC,EAAS,EAEb,QAAS,EAAI,EAAG,EAAIT,EAAQC,EAAQ,IAAK,CACvC,MAAMhC,EAAI4C,EAAKL,GAAO,EAChBE,EAAIG,EAAKL,GAAO,EAChBG,EAAIE,EAAKL,GAAO,EAChBM,EAAID,EAAKL,GAAO,EAEtBX,EAAOY,GAAQ,EAAIxC,EACnB4B,EAAOY,GAAQ,EAAIC,EACnBb,EAAOY,GAAQ,EAAIE,EACnBd,EAAOY,GAAQ,EAAIK,C,CAEvB,CAEO,SAASC,EACdF,EACAb,EACAC,EACAJ,EAAyB,CAEzB,IAAIW,EAAQ,EACRC,EAAS,EAEb,QAAS,EAAI,EAAG,EAAIT,EAAQC,EAAQ,IAAK,CACvC,MAAMU,EAAIE,EAAKL,GAAO,EAChBE,EAAIG,EAAKL,GAAO,EAChBvC,EAAI4C,EAAKL,GAAO,EAChBM,EAAID,EAAKL,GAAO,EAEtBX,EAAOY,GAAQ,EAAIxC,EACnB4B,EAAOY,GAAQ,EAAIC,EACnBb,EAAOY,GAAQ,EAAIE,EACnBd,EAAOY,GAAQ,EAAIK,C,CAEvB,CAEO,SAASE,EACdC,EACAjB,EACAC,EACAJ,EAAyB,CAEzB,IAAIW,EAAQ,EACRC,EAAS,EAEb,QAAS,EAAI,EAAG,EAAIT,EAAQC,EAAQ,IAAK,CACvC,MAAMU,EAAIM,EAAIT,GAAO,EACfE,EAAIO,EAAIT,GAAO,EACfvC,EAAIgD,EAAIT,GAAO,EAErBX,EAAOY,GAAQ,EAAIxC,EACnB4B,EAAOY,GAAQ,EAAIC,EACnBb,EAAOY,GAAQ,EAAIE,EACnBd,EAAOY,GAAQ,EAAI,G,CAEvB,CAEO,SAASS,EACdC,EACAnB,EACAC,EAEAmB,EACAvB,EAAyB,CAEzB,MAAMwB,EAAO,IAAI,SAASF,EAAK,OAAQA,EAAK,UAAU,EAEtD,IAAIV,EAAS,EACb,QAASa,EAAI,EAAGA,EAAItB,EAAQC,EAAS,EAAGqB,GAAK,EAAG,CAC9C,MAAMvG,EAAMsG,EAAK,WAAWC,EAAG,CAACF,CAAY,EAAI,IAChDvB,EAAOY,GAAQ,EAAI1F,EACnB8E,EAAOY,GAAQ,EAAI1F,EACnB8E,EAAOY,GAAQ,EAAI1F,EACnB8E,EAAOY,GAAQ,EAAI,G,CAEvB,CAEO,SAASc,EACdC,EACAxB,EACAC,EACAJ,EAAyB,CAEzB,IAAIW,EAAQ,EACRC,EAAS,EAEb,QAAS,EAAI,EAAG,EAAIT,EAAQC,EAAQ,IAAK,CACvC,MAAMwB,EAAKD,EAAMhB,GAAO,EACxBX,EAAOY,GAAQ,EAAIgB,EACnB5B,EAAOY,GAAQ,EAAIgB,EACnB5B,EAAOY,GAAQ,EAAIgB,EACnB5B,EAAOY,GAAQ,EAAI,G,CAEvB,CAEO,SAASiB,GACdC,EACA3B,EACAC,EAEAmB,EACAvB,EACA+B,EAAkD,CAElD,MAAMP,EAAO,IAAI,SAASM,EAAO,OAAQA,EAAO,UAAU,EAOpDE,EAAWD,GAAS,UAAY,EACtC,IAAIE,EAAWF,GAAS,UAAY,IAChCE,IAAaD,IACfC,EAAWD,EAAW,GAGxB,IAAIpB,EAAS,EACb,QAASa,EAAI,EAAGA,EAAItB,EAAQC,EAAS,EAAGqB,GAAK,EAAG,CAC9C,IAAIvG,EAAMsG,EAAK,UAAUC,EAAG,CAACF,CAAY,EAEzCrG,GAAQA,EAAM8G,IAAaC,EAAWD,GAAa,IAEnDhC,EAAOY,GAAQ,EAAI1F,EACnB8E,EAAOY,GAAQ,EAAI1F,EACnB8E,EAAOY,GAAQ,EAAI1F,EACnB8E,EAAOY,GAAQ,EAAI,G,CAEvB,CAIA,SAASsB,EACPC,EACAC,EACAC,EACAC,EAAU,CAiBV,OAAO,IAAI,SACT,OACA,QACA,SACA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAWUH;AAAA,cACAC;AAAA,cACAC;AAAA,cACAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAwBV,CAEJ,CAEO,MAAMC,GAAmBL,EAA2B,IAAK,KAAM,KAAM,GAAG,EAClEM,GAAmBN,EAA2B,IAAK,KAAM,KAAM,GAAG,EAClEO,GAAmBP,EAA2B,KAAM,IAAK,IAAK,IAAI,EAClEQ,GAAmBR,EAA2B,KAAM,IAAK,IAAK,IAAI,EC/RxE,eAAeS,GACpBC,EACAC,EAAoB,CAEpB,MAAMC,EAAa,IAAI,KAAK,CAACF,EAAM,IAAI,EAAG,CAAE,KAAM,SAASA,EAAM,QAAS,CAAC,EAC3E,OAAO,MAAM,kBAAkBE,EAAY,CAAE,YAAAD,CAAY,CAAC,CAC5D,CAOO,SAASE,GACdH,EACAb,EACA/B,EAAyB,CAEzB,KAAM,CAAE,SAAAgD,EAAU,MAAA7C,EAAO,OAAAC,CAAO,EAAIwC,EAC9BrB,EAAe,iBAAkBqB,EAAQA,EAAM,aAAe,GAC9DK,EAAUL,EAAM,KACtB,OAAQI,EAAU,CAChB,IAAK,SACL,IAAK,OACH/C,EAAU2C,EAAM,KAAmBzC,EAAOC,EAAQJ,CAAM,EACxD,MACF,IAAK,OACHO,EAAWqC,EAAM,KAAmBzC,EAAOC,EAAQJ,CAAM,EACzD,MACF,IAAK,OACHS,EAAWwC,EAAS9C,EAAOC,EAAQJ,CAAM,EACzC,MACF,IAAK,QACHe,EAAYkC,EAAS9C,EAAOC,EAAQJ,CAAM,EAC1C,MACF,IAAK,QACHkB,EAAY+B,EAAS9C,EAAOC,EAAQJ,CAAM,EAC1C,MACF,IAAK,OACL,IAAK,OACHmB,EAAW8B,EAAS9C,EAAOC,EAAQJ,CAAM,EACzC,MACF,IAAK,QACHqB,EAAc4B,EAAS9C,EAAOC,EAAQmB,EAAcvB,CAAM,EAC1D,MACF,IAAK,cACHuC,GAAiBU,EAAS9C,EAAOC,EAAQJ,CAAM,EAC/C,MACF,IAAK,cACHwC,GAAiBS,EAAS9C,EAAOC,EAAQJ,CAAM,EAC/C,MACF,IAAK,cACHyC,GAAiBQ,EAAS9C,EAAOC,EAAQJ,CAAM,EAC/C,MACF,IAAK,cACH0C,GAAiBO,EAAS9C,EAAOC,EAAQJ,CAAM,EAC/C,MACF,IAAK,QACL,IAAK,OACH0B,EAAYuB,EAAS9C,EAAOC,EAAQJ,CAAM,EAC1C,MACF,IAAK,SACL,IAAK,QACH6B,GAAaoB,EAAS9C,EAAOC,EAAQmB,EAAcvB,EAAQ+B,CAAO,EAClE,MACF,QACE,MAAM,IAAI,MAAM,wBAAwBiB,GAAU,C,CAExD,CCjFA,SAASE,GAAON,EAA4Bb,EAAwB,CAClE,MAAMoB,EAAS,IAAI,UAAUP,EAAM,MAAOA,EAAM,MAAM,EACtD,OAAAG,GAAeH,EAAOb,EAASoB,EAAO,IAAI,EACnC,EAAiBA,EAAQ,CAACA,EAAO,KAAK,MAAM,CAAC,CACtD,CAKA,EAHuB,CACrB,OAAAD,E,CAEoB,C","sources":["webpack:///../../node_modules/comlink/dist/esm/comlink.mjs","webpack:///../../packages/den/image/decodings.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images/decodeImage.ts","webpack:///../../packages/studio-base/src/panels/ThreeDeeRender/renderables/Images/WorkerImageDecoder.worker.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nfunction yuvToRGBA8(\n  y1: number,\n  u: number,\n  y2: number,\n  v: number,\n  c: number,\n  output: Uint8ClampedArray,\n): void {\n  // rgba\n  output[c] = y1 + 1.402 * v;\n  output[c + 1] = y1 - 0.34414 * u - 0.71414 * v;\n  output[c + 2] = y1 + 1.772 * u;\n  output[c + 3] = 255;\n\n  // rgba\n  output[c + 4] = y2 + 1.402 * v;\n  output[c + 5] = y2 - 0.34414 * u - 0.71414 * v;\n  output[c + 6] = y2 + 1.772 * u;\n  output[c + 7] = 255;\n}\n\nexport function decodeYUV(\n  yuv: Int8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let c = 0;\n  let off = 0;\n\n  // populate 2 pixels at a time\n  const max = height * width;\n  for (let r = 0; r <= max; r += 2) {\n    const u = yuv[off]! - 128;\n    const y1 = yuv[off + 1]!;\n    const v = yuv[off + 2]! - 128;\n    const y2 = yuv[off + 3]!;\n    yuvToRGBA8(y1, u, y2, v, c, output);\n    c += 8;\n    off += 4;\n  }\n}\n\n// change name in the future do something more distinct\nexport function decodeYUYV(\n  yuyv: Int8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let c = 0;\n  let off = 0;\n\n  // populate 2 pixels at a time\n  const max = height * width;\n  for (let r = 0; r <= max; r += 2) {\n    const y1 = yuyv[off]!;\n    const u = yuyv[off + 1]! - 128;\n    const y2 = yuyv[off + 2]!;\n    const v = yuyv[off + 3]! - 128;\n    yuvToRGBA8(y1, u, y2, v, c, output);\n    c += 8;\n    off += 4;\n  }\n}\n\nexport function decodeRGB8(\n  rgb: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const r = rgb[inIdx++]!;\n    const g = rgb[inIdx++]!;\n    const b = rgb[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeRGBA8(\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const r = rgba[inIdx++]!;\n    const g = rgba[inIdx++]!;\n    const b = rgba[inIdx++]!;\n    const a = rgba[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = a;\n  }\n}\n\nexport function decodeBGRA8(\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const b = rgba[inIdx++]!;\n    const g = rgba[inIdx++]!;\n    const r = rgba[inIdx++]!;\n    const a = rgba[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = a;\n  }\n}\n\nexport function decodeBGR8(\n  bgr: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const b = bgr[inIdx++]!;\n    const g = bgr[inIdx++]!;\n    const r = bgr[inIdx++]!;\n\n    output[outIdx++] = r;\n    output[outIdx++] = g;\n    output[outIdx++] = b;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeFloat1c(\n  gray: Uint8Array,\n  width: number,\n  height: number,\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  is_bigendian: boolean,\n  output: Uint8ClampedArray,\n): void {\n  const view = new DataView(gray.buffer, gray.byteOffset);\n\n  let outIdx = 0;\n  for (let i = 0; i < width * height * 4; i += 4) {\n    const val = view.getFloat32(i, !is_bigendian) * 255;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeMono8(\n  mono8: Uint8Array,\n  width: number,\n  height: number,\n  output: Uint8ClampedArray,\n): void {\n  let inIdx = 0;\n  let outIdx = 0;\n\n  for (let i = 0; i < width * height; i++) {\n    const ch = mono8[inIdx++]!;\n    output[outIdx++] = ch;\n    output[outIdx++] = ch;\n    output[outIdx++] = ch;\n    output[outIdx++] = 255;\n  }\n}\n\nexport function decodeMono16(\n  mono16: Uint8Array,\n  width: number,\n  height: number,\n  // eslint-disable-next-line @foxglove/no-boolean-parameters\n  is_bigendian: boolean,\n  output: Uint8ClampedArray,\n  options?: { minValue?: number; maxValue?: number },\n): void {\n  const view = new DataView(mono16.buffer, mono16.byteOffset);\n\n  // Use user-provided max/min values, or default to 0-10000, consistent with image_view's default.\n  // References:\n  // https://github.com/ros-perception/image_pipeline/blob/42266892502427eb566a4dffa61b009346491ce7/image_view/src/nodes/image_view.cpp#L80-L88\n  // https://github.com/ros-visualization/rqt_image_view/blob/fe076acd265a05c11c04f9d04392fda951878f54/src/rqt_image_view/image_view.cpp#L582\n  // https://github.com/ros-visualization/rviz/blob/68b464fb6571b8760f91e8eca6fb933ba31190bf/src/rviz/image/ros_image_texture.cpp#L114\n  const minValue = options?.minValue ?? 0;\n  let maxValue = options?.maxValue ?? 10000;\n  if (maxValue === minValue) {\n    maxValue = minValue + 1;\n  }\n\n  let outIdx = 0;\n  for (let i = 0; i < width * height * 2; i += 2) {\n    let val = view.getUint16(i, !is_bigendian);\n\n    val = ((val - minValue) / (maxValue - minValue)) * 255;\n\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = val;\n    output[outIdx++] = 255;\n  }\n}\n\n// Specialize the Bayer decode function to a certain encoding. For performance reasons, we use\n// new Function() -- this is about 20% faster than a switch statement and .bind().\nfunction makeSpecializedDecodeBayer(\n  tl: string,\n  tr: string,\n  bl: string,\n  br: string,\n): (data: Uint8Array, width: number, height: number, output: Uint8ClampedArray) => void {\n  // We probably can't afford real debayering/demosaicking, so do something simpler\n  // The input array look like a single-plane array of pixels.  However, each pixel represents a one particular color\n  // for a group of pixels in the 2x2 region.  For 'rggb', there color representatio for the 2x2 region looks like:\n  //\n  // R  | G0\n  // -------\n  // G1 | B\n  //\n  // In other words, a 2x2 region is represented by one R value, one B value, and two G values.  In sophisticated\n  // algorithms, each color will be weighted and interpolated to fill in the missing colors for the pixels.  These\n  // algorithms may reach beyond the local 2x2 region and use values from neighboring regions.\n  //\n  // We'll do something much simpler.  For each group of 2x2, we're replicate the R and B values for all pixels.\n  // For the two row, we'll replicate G0 for the green channels, and replicate G1 for the bottom row.\n  // eslint-disable-next-line no-new-func\n  return new Function(\n    \"data\",\n    \"width\",\n    \"height\",\n    \"output\",\n    `\n  for (let i = 0; i < height / 2; i++) {\n    let inIdx = i * 2 * width;\n    let outTopIdx = i * 2 * width * 4; // Addresses top row\n    let outBottomIdx = (i * 2 + 1) * width * 4; // Addresses bottom row\n    for (let j = 0; j < width / 2; j++) {\n      const tl = data[inIdx++];\n      const tr = data[inIdx++];\n      const bl = data[inIdx + width - 2];\n      const br = data[inIdx + width - 1];\n\n      const ${tl} = tl;\n      const ${tr} = tr;\n      const ${bl} = bl;\n      const ${br} = br;\n\n      // Top row\n      output[outTopIdx++] = r;\n      output[outTopIdx++] = g0;\n      output[outTopIdx++] = b;\n      output[outTopIdx++] = 255;\n\n      output[outTopIdx++] = r;\n      output[outTopIdx++] = g0;\n      output[outTopIdx++] = b;\n      output[outTopIdx++] = 255;\n\n      // Bottom row\n      output[outBottomIdx++] = r;\n      output[outBottomIdx++] = g1;\n      output[outBottomIdx++] = b;\n      output[outBottomIdx++] = 255;\n\n      output[outBottomIdx++] = r;\n      output[outBottomIdx++] = g1;\n      output[outBottomIdx++] = b;\n      output[outBottomIdx++] = 255;\n    }\n  }`,\n  ) as ReturnType<typeof makeSpecializedDecodeBayer>;\n}\n\nexport const decodeBayerRGGB8 = makeSpecializedDecodeBayer(\"r\", \"g0\", \"g1\", \"b\");\nexport const decodeBayerBGGR8 = makeSpecializedDecodeBayer(\"b\", \"g0\", \"g1\", \"r\");\nexport const decodeBayerGBRG8 = makeSpecializedDecodeBayer(\"g0\", \"b\", \"r\", \"g1\");\nexport const decodeBayerGRBG8 = makeSpecializedDecodeBayer(\"g0\", \"r\", \"b\", \"g1\");\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport {\n  decodeBGR8,\n  decodeBGRA8,\n  decodeBayerBGGR8,\n  decodeBayerGBRG8,\n  decodeBayerGRBG8,\n  decodeBayerRGGB8,\n  decodeFloat1c,\n  decodeMono16,\n  decodeMono8,\n  decodeRGB8,\n  decodeRGBA8,\n  decodeYUV,\n  decodeYUYV,\n} from \"@foxglove/den/image\";\nimport { RawImage } from \"@foxglove/schemas\";\n\nimport { CompressedImageTypes } from \"./ImageTypes\";\nimport { Image as RosImage } from \"../../ros\";\n\nexport async function decodeCompressedImageToBitmap(\n  image: CompressedImageTypes,\n  resizeWidth?: number,\n): Promise<ImageBitmap> {\n  const bitmapData = new Blob([image.data], { type: `image/${image.format}` });\n  return await createImageBitmap(bitmapData, { resizeWidth });\n}\n\nexport type RawImageOptions = {\n  minValue?: number;\n  maxValue?: number;\n};\n\nexport function decodeRawImage(\n  image: RosImage | RawImage,\n  options: RawImageOptions,\n  output: Uint8ClampedArray,\n): void {\n  const { encoding, width, height } = image;\n  const is_bigendian = \"is_bigendian\" in image ? image.is_bigendian : false;\n  const rawData = image.data as Uint8Array;\n  switch (encoding) {\n    case \"yuv422\":\n    case \"uyuv\":\n      decodeYUV(image.data as Int8Array, width, height, output);\n      break;\n    case \"yuyv\":\n      decodeYUYV(image.data as Int8Array, width, height, output);\n      break;\n    case \"rgb8\":\n      decodeRGB8(rawData, width, height, output);\n      break;\n    case \"rgba8\":\n      decodeRGBA8(rawData, width, height, output);\n      break;\n    case \"bgra8\":\n      decodeBGRA8(rawData, width, height, output);\n      break;\n    case \"bgr8\":\n    case \"8UC3\":\n      decodeBGR8(rawData, width, height, output);\n      break;\n    case \"32FC1\":\n      decodeFloat1c(rawData, width, height, is_bigendian, output);\n      break;\n    case \"bayer_rggb8\":\n      decodeBayerRGGB8(rawData, width, height, output);\n      break;\n    case \"bayer_bggr8\":\n      decodeBayerBGGR8(rawData, width, height, output);\n      break;\n    case \"bayer_gbrg8\":\n      decodeBayerGBRG8(rawData, width, height, output);\n      break;\n    case \"bayer_grbg8\":\n      decodeBayerGRBG8(rawData, width, height, output);\n      break;\n    case \"mono8\":\n    case \"8UC1\":\n      decodeMono8(rawData, width, height, output);\n      break;\n    case \"mono16\":\n    case \"16UC1\":\n      decodeMono16(rawData, width, height, is_bigendian, output, options);\n      break;\n    default:\n      throw new Error(`Unsupported encoding ${encoding}`);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as Comlink from \"comlink\";\n\nimport type { RawImage } from \"@foxglove/schemas\";\n\nimport { decodeRawImage, RawImageOptions } from \"./decodeImage\";\nimport type { Image as RosImage } from \"../../ros\";\n\nfunction decode(image: RosImage | RawImage, options: RawImageOptions): ImageData {\n  const result = new ImageData(image.width, image.height);\n  decodeRawImage(image, options, result.data);\n  return Comlink.transfer(result, [result.data.buffer]);\n}\n\nexport const service = {\n  decode,\n};\nComlink.expose(service);\n"],"names":["proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","proxyTransferHandler","obj","port1","port2","expose","port","wrap","throwTransferHandler","value","serialized","transferHandlers","isAllowedOrigin","allowedOrigins","origin","allowedOrigin","ep","callback","ev","id","type","path","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfer","wireValue","transferables","toWireValue","closeEndPoint","error","isMessagePort","endpoint","target","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","newCount","registerProxy","unregisterProxy","isProxyReleased","_target","r","p","_thisArg","rawArgumentList","last","processArguments","myFlat","arr","processed","v","transferCache","transfers","windowEndpoint","w","context","targetOrigin","msg","name","handler","serializedValue","resolve","generateUUID","l","yuvToRGBA8","y1","u","y2","c","output","decodeYUV","yuv","width","height","off","max","decodeYUYV","yuyv","decodeRGB8","rgb","inIdx","outIdx","g","b","decodeRGBA8","rgba","a","decodeBGRA8","decodeBGR8","bgr","decodeFloat1c","gray","is_bigendian","view","i","decodeMono8","mono8","ch","decodeMono16","mono16","options","minValue","maxValue","makeSpecializedDecodeBayer","tl","tr","bl","br","decodeBayerRGGB8","decodeBayerBGGR8","decodeBayerGBRG8","decodeBayerGRBG8","decodeCompressedImageToBitmap","image","resizeWidth","bitmapData","decodeRawImage","encoding","rawData","decode","result"],"sourceRoot":""}