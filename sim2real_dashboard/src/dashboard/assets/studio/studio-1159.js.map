{"version":3,"file":"studio-1159.js","mappings":"yiBAgBA,MAAMA,GAAgB,CACpB,QAAM,OAACC,GAAA,EAAQ,CAAC,SAAS,OAAQ,CAAD,EAChC,QAAM,OAACC,GAAA,EAAQ,CAAC,SAAS,QAAQ,MAAM,MAAO,CAAD,EAC7C,WAAS,OAACC,GAAA,EAAW,CAAC,SAAS,QAAQ,MAAM,SAAU,CAAD,EACtD,SAAO,OAACC,GAAA,EAAS,CAAC,SAAS,QAAQ,MAAM,OAAQ,CAAD,C,EAO5CC,MAAY,MAAW,EAAGC,IAAW,CACzC,SAAU,CACR,WAAY,EACZ,cAAe,EACf,YAAaA,EAAM,QAAQ,EAAG,C,EAEhC,aAAc,CACZ,QAAS,OACT,cAAe,MACf,OAAQ,EACR,IAAKA,EAAM,QAAQ,CAAC,C,EAEtB,aAAc,CACZ,UAAW,aACX,SAAUA,EAAM,QAAQ,CAAC,C,GAE3B,EAgDF,GA9C2B,CAAC,CAAE,YAAAC,CAAY,IAA2B,CACnE,KAAM,CAAE,QAAAC,CAAQ,EAAIH,GAAU,EAE9B,OAAIE,EAAY,SAAW,KAEvB,OAACE,EAAA,EAAK,CAAC,IAAK,GAAK,QAAS,EAAC,YACzB,OAACC,EAAA,EAAU,CAAC,QAAQ,QAAQ,MAAM,iBAAgB,oCAErC,MAMjB,OAACC,EAAA,EAAI,CAAC,MAAK,GAAC,eAAc,YACvBJ,EAAY,IAAI,CAAC,CAAE,SAAAK,EAAU,QAAAC,EAAS,OAAAC,EAAQ,YAAAC,EAAa,gBAAAC,CAAgB,EAAGC,IAAM,CACnF,MAAMC,KACH,WAAO,KAAkB,EACxBN,CAAQ,GACL,QAEDO,EACJH,GAAmB,MAAaD,GAAe,KAC3C,IAAIC,EAAkB,KAAKD,EAAc,KACzC,GAEN,SACE,QAACK,EAAA,GAAQ,CAAyB,UAAWZ,EAAQ,SAAQ,aAC3D,OAACa,GAAA,EAAY,CAAC,UAAWb,EAAQ,aAAY,SAC1CR,GAAckB,CAAa,CAAC,MAE/B,OAACI,EAAA,EAAY,CACX,UAAWd,EAAQ,aACnB,QAASK,EACT,UAAW,GAAGC,KAAUK,IACxB,yBAA0B,CACxB,MAAO,gB,CACR,EACD,GAXW,GAAGN,KAAWI,GAAG,CAcpC,CAAC,CAAC,EAGR,E,uCCnBA,SA3DoB,CAAC,CAAE,KAAAM,CAAK,IAAqD,CAC/E,MAAMC,KAAgB,OAAiB,EACjCC,EAAwC,CAC5C,OAAQD,EAAc,OACtB,OAAQA,EAAc,OACtB,QAASA,EAAc,OACvB,OAAQA,EAAc,OACtB,UAAWA,EAAc,M,EAE3B,OAAID,EAAK,SAAW,KAEhB,QAACd,EAAA,EAAK,CAAC,IAAK,GAAK,QAAS,EAAC,aACzB,OAACC,EAAA,EAAU,CAAC,QAAQ,QAAQ,MAAM,iBAAgB,oCAGlD,QAACA,EAAA,EAAU,CAAC,QAAQ,QAAQ,MAAM,iBAAgB,uBACzC,2CAA2B,iEAEvB,OAKjB,OAACC,EAAA,EAAI,CAAC,MAAK,GAAC,eAAc,YACvBY,EAAK,IAAI,CAAC,CAAE,OAAAT,EAAQ,MAAAY,CAAM,EAAGC,IAAQ,CACpC,MAAMC,EAAgBF,GAAS,MAAa,OAAOA,GAAU,SAC7D,SACE,OAACN,EAAA,GAAQ,CACP,eAAc,GAEd,mBACE,OAACS,EAAA,EAAI,CAAC,UAAU,SAAS,QAAQ,QAAQ,MAAM,iBAAgB,SAC5Df,CAAM,GACF,YAGT,OAACgB,EAAA,EAAc,UACZF,KACC,OAAC,MAAI,CAAC,SAAQ,GAAC,KAAMF,EAAO,YAAa,GAAO,MAAOF,CAAa,MAEpE,OAACF,EAAA,EAAY,CACX,QACEI,GAAS,MAAaA,IAAU,GAC5B,OAAOA,CAAK,EACXA,EAEP,uBAAwB,CACtB,MAAOD,EAAc,OAAOC,CAAK,GAAK,c,CACvC,EAEJ,EACc,EAtBZ,GAAGC,IAAMb,GAAQ,CAyB5B,CAAC,CAAC,EAGR,ECxBMiB,GAAa,GAEb,MAAY,MAAW,EAAGzB,IAAW,CACzC,MAAO,CACL,WAAY,SAEZ,CAAC,IAAI0B,EAAA,EAAa,OAAO,EAAG,CAC1B,OAAQ1B,EAAM,QAAQ,KAAO,EAAG,KAAO,CAAC,EACxC,SAAU,WACV,UAAW,OAEX,CAAC,KAAK0B,EAAA,EAAa,WAAW,EAAG,CAC/B,QAAS,M,IAIf,KAAM,CACJ,UAAWD,GACX,SAAU,WACV,OAAQ,GAER,CAAC,IAAIE,EAAA,EAAW,MAAM,EAAG,CACvB,UAAW,OACX,SAAU3B,EAAM,QAAQ,CAAC,EACzB,QAASA,EAAM,QAAQ,IAAK,CAAC,EAC7B,MAAOA,EAAM,QAAQ,KAAK,UAE1B,iBAAkB,CAChB,MAAOA,EAAM,QAAQ,KAAK,O,KAIhC,EA4IF,GA1IkB,CAAC,CAAE,OAAA4B,EAAQ,QAAAC,EAAS,KAAAC,EAAM,YAAA7B,EAAa,KAAAgB,CAAK,IAA2B,CACvF,KAAM,CAAE,QAAAf,CAAQ,EAAI,GAAU,EACxB,CAAC6B,EAAkBC,CAAmB,KAAI,YAAyB,QAAQ,EAC3E,CAACC,EAAYC,CAAa,KAAI,YAAS,EAAI,EAE3C,CAAE,kBAAAC,CAAkB,KAAI,MAAiB,EACzCC,KAAkB,UAAuB,IAAS,EAElDC,EAAe,CAACC,EAA8BlB,IAA0B,CAC5EY,EAAoBZ,CAAK,CAC3B,EAEMmB,EAAenB,GAA0B,CACzCW,IAAqBX,GACvBY,EAAoB,QAAQ,CAEhC,EAEA,sBAAU,IAAM,CACVC,GACEG,EAAgB,UAClBA,EAAgB,QAAQ,UAAYA,EAAgB,QAAQ,aAGlE,EAAG,CAACH,EAAYhB,CAAI,CAAC,KAGnB,iCACE,QAACuB,EAAA,EAAK,CAAC,UAAW,EAAC,aACjB,OAACC,EAAA,EAAO,OACR,QAACtC,EAAA,EAAK,CACJ,UAAU,MACV,WAAW,SACX,eAAe,gBACf,IAAK,EACL,aAAc,EAAC,aAEf,QAACuC,EAAA,EAAI,CACH,UAAWxC,EAAQ,KACnB,UAAU,UACV,MAAO6B,IAAqB,SAAWA,EAAmB,GAC1D,SAAUM,EAAY,aAEtB,OAACM,EAAA,EAAG,CACF,SACE,OAACC,GAAA,EAAK,CACJ,MAAM,QACN,aAAc3C,EAAY,OAC1B,UAAWA,EAAY,SAAW,EAClC,UAAWC,EAAQ,MAAK,sBAK5B,MAAM,cAAa,cACP,YACZ,QAAS,IAAMqC,EAAY,aAAa,CAAC,MAE3C,OAACI,EAAA,EAAG,CACF,SACE,OAACC,GAAA,EAAK,CACJ,MAAM,QACN,UAAW1C,EAAQ,MACnB,aAAce,EAAK,OACnB,UAAWA,EAAK,SAAW,EAAC,kBAKhC,MAAM,OAAM,cACA,UACZ,QAAS,IAAMsB,EAAY,MAAM,CAAC,EAClC,OAEJ,QAACpC,EAAA,EAAK,CAAC,UAAU,MAAM,WAAW,SAAS,IAAK,GAAG,UAChD4B,IAAqB,WACpB,OAACc,EAAA,EAAM,CACL,KAAK,QACL,MAAM,UACN,QAAQ,YAAW,cACP,gBACZ,SAAU5B,EAAK,SAAW,EAC1B,QAAS,IAAM,CACTW,GAAU,MACZO,EAAkBP,CAAM,CAE5B,EAAC,2BAKL,OAACiB,EAAA,EAAM,CACL,KAAK,QACL,MAAM,UACN,QAAQ,YACR,SAAUhB,EACV,MAAM,eACN,QAAS,IAAM,CACTD,GAAU,OACZE,EAAK,EACLK,EAAkBP,CAAM,EAE5B,EAAC,SAEAC,EAAU,QAAU,MAAM,EACpB,GACH,IAETE,IAAqB,aAAY,OAACU,EAAA,EAAO,GAAG,OAE/C,OAACD,EAAA,EAAK,CAAC,UAAW,EAAC,YACjB,OAACrC,EAAA,EAAK,CAAC,WAAU,GAAC,SAAS,WAAU,YACnC,OAAC2C,GAAA,EAAQ,CACP,SAAU,CAAC,CAAE,cAAAC,CAAc,IAAM,CAC/B,MAAMC,EACJD,EAAc,aAAeA,EAAc,UAAYA,EAAc,aACnEC,GAAcf,EAChBC,EAAc,EAAK,EACV,CAACc,GAAc,CAACf,GACzBC,EAAc,EAAI,CAEtB,EACA,IAAKE,EACL,GAAIL,IAAqB,SAAQ,YAEjC,QAAC5B,EAAA,EAAK,CAAC,SAAS,OAAO,MAAO,CAAE,OAAQ,GAAI,EAAC,UAC1C4B,IAAqB,kBACpB,OAAC,GAAkB,CAAC,YAAa9B,CAAW,GAE7C8B,IAAqB,WAAU,OAAC,GAAW,CAAC,KAAMd,CAAI,EAAI,GACrD,EACC,EACL,EACF,GAGd,E,oGCpMA,SAAe,CACb,CACE,KAAM,WACN,YAAa,kBACb,S;;;;;;;;;;GAEF,CACE,KAAM,UACN,YAAa,8CACb,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAEF,CACE,KAAM,kBACN,YAAa,mDACb,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAEF,CACE,KAAM,eACN,YAAa,+CACb,S;;;;;;;;;;;;;;;;;;;;;;;;ICME,MAAY,MAAW,EAAGjB,IAAW,CACzC,KAAM,CACJ,CAAC,IAAI2B,EAAA,EAAW,MAAM,EAAG,CACvB,SAAU,OACV,QAAS3B,EAAM,QAAQ,EAAG,KAAK,C,GAGnC,gBAAiB,CACf,gBAAiBA,EAAM,QAAQ,WAAW,MAC1C,MAAO,IACP,SAAU,M,GAEZ,EAUIiD,GAAY,CAAC,CAAE,MAAAC,EAAO,WAAAC,EAAY,WAAAC,EAAY,SAAAC,EAAU,eAAAC,CAAe,OAEzE,QAACnD,EAAA,EAAK,CAAC,KAAK,OAAM,aAChB,OAACoD,EAAa,CAAC,MAAM,UAAU,SAAUF,CAAQ,MACjD,OAAChD,EAAA,EAAI,CAAC,MAAK,YACR,OAAO,KAAK6C,CAAK,EAAE,IAAKtB,MAErB,OAACd,EAAA,GAAQ,CACP,eAAc,GAEd,mBACE,OAAC0C,EAAA,EAAU,CACT,KAAK,QACL,QAAS,IAAMJ,EAAWxB,CAAM,EAChC,KAAK,MAAK,aACC,SACX,MAAM,SACN,MAAM,QAAO,YAEb,OAAC6B,GAAA,EAAiB,CAAC,SAAS,OAAQ,CAAD,CAAG,GAC3B,YAGf,OAACjC,EAAA,EAAc,CACb,SAAU8B,IAAmB1B,EAC7B,QAAS,IAAMuB,EAAWvB,CAAM,EAAC,YAEjC,OAACZ,EAAA,EAAY,CACX,QAASkC,EAAMtB,CAAM,GAAG,KACxB,uBAAwB,CAAE,QAAS,OAAQ,CAAC,EAC5C,EACa,EAtBZA,CAAM,CAyBhB,CAAC,EACG,IAiBP,CAAE,aAAA8B,EAAa,KAAI,MAAqB,EAExCH,EAAgB,CAAC,CACrB,MAAAI,EACA,UAAAC,EACA,SAAAP,CAAQ,OAMR,OAACQ,GAAA,EAAU,CACT,MAAOF,EACP,qBAAsB,CACpB,QAAS,KACT,aAAc,E,EAEhB,UAAWC,EACX,yBAA0B,CACxB,QAAS,QACT,MAAO,gB,EAET,UACE,OAACJ,EAAA,EAAU,CAAC,KAAK,QAAQ,QAASH,EAAU,MAAM,WAAU,YAC1D,OAACS,GAAA,EAAS,GAAG,EACF,GAsLnB,GAjLgB,CAAC,CACf,UAAAC,EACA,WAAAZ,EACA,WAAAC,EACA,eAAAE,EACA,SAAAU,EACA,eAAAC,EACA,kBAAAC,EACA,OAAAC,EACA,WAAAC,CAAU,IACqB,CAC/B,KAAM,CAAE,QAAAlE,CAAQ,EAAI,GAAU,EACxBmE,EAAgBL,IAAa,QAC7BM,EAAgBN,IAAa,QAC7BO,EAAoBP,IAAa,YAEjCQ,KAAY,eACfC,GAAqB,CACpB,MAAMC,EAAiB,OAAc,MAAM,UAAUD,GAAU,EACzDE,EAAiB,UAAiB,SAASD,CAAc,EAC1DC,GAGLT,EACE,CACE,SAAUS,EAAe,IAAI,KAC7B,KAAMA,EAAe,SAAS,EAC9B,SAAU,GACV,UAAW,M,EAEb,CAAC,CAEL,EACA,CAACT,CAAiB,CAAC,EAGfU,KAAoB,WAAQ,IAAM,CACtC,OAAQZ,EAAU,CAChB,KAAK,OACH,MAAO,GACT,IAAK,QACH,MAAO,QACT,IAAK,YACH,MAAO,YACT,IAAK,QACH,MAAO,O,CAEX,MAAO,EACT,EAAG,CAACA,CAAQ,CAAC,EAEPa,KAAY,WAChB,KAAO,CACL,SACE,OAAC5B,GAAS,CACR,MAAOc,EACP,WAAYZ,EACZ,WAAYC,EACZ,SAAU,IAAMa,EAAe,MAAS,EACxC,eAAgBX,CAAc,GAGlC,SACE,QAACnD,EAAA,EAAK,CAAC,KAAK,OAAO,SAAS,WAAU,aACpC,OAACoD,EAAa,CACZ,SAAU,IAAMU,EAAe,MAAS,EACxC,MAAM,YACN,aACE,QAAC7D,EAAA,EAAU,CAAC,QAAQ,QAAQ,MAAM,iBAAgB,6FACiC,OACjF,uBAAM,yCAAyC,EAAO,GAC3C,MAGjB,QAACC,EAAA,EAAI,CAAC,MAAK,aACRqD,GAAa,IAAI,CAAC,CAAE,SAAAoB,EAAU,SAAAL,CAAS,OACtC,OAAC3D,EAAA,GAAQ,CACP,eAAc,GAEd,QAAS0D,EAAU,KAAK,OAAWC,CAAQ,EAC3C,SAAUN,EAASM,IAAaN,EAAO,SAAW,GAAK,YAEvD,OAAC3C,EAAA,EAAc,aACb,OAACR,EAAA,EAAY,CAAC,QAAS8D,EAAU,uBAAwB,CAAE,QAAS,OAAQ,CAAC,EAAI,EAClE,EANZL,CAAQ,CAQhB,KACD,OAAC3D,EAAA,GAAQ,CACP,eAAc,GACd,QAAS0D,EAAU,KAAK,OAAW,kCAAkC,EACrE,SAAUL,EAASA,EAAO,WAAa,mCAAqC,GAAK,YAEjF,OAAC3C,EAAA,EAAc,aACb,OAACR,EAAA,EAAY,CACX,QAAQ,oBACR,uBAAwB,CAAE,QAAS,OAAQ,CAAC,EAC5C,EACa,EACR,GACN,IAGX,aACE,QAACb,EAAA,EAAK,CAAC,KAAK,OAAM,aAChB,OAACoD,EAAa,CACZ,MAAM,YACN,UAAU,gFACV,SAAU,IAAMU,EAAe,MAAS,CAAC,MAE3C,OAAC5D,EAAA,EAAI,CAAC,MAAK,YACR0E,GAAU,IAAI,CAAC,CAAE,KAAAC,EAAM,YAAAC,EAAa,SAAAC,CAAS,OAC5C,OAACpE,EAAA,GAAQ,CAAC,eAAc,GAAY,QAAS,IAAMsD,EAAWc,CAAQ,EAAC,YACrE,OAAC1D,EAAA,EAAc,aACb,OAACR,EAAA,EAAY,CACX,QAASgE,EACT,uBAAwB,CAAE,QAAS,OAAQ,EAC3C,UAAWC,CAAW,EACtB,EACa,EAPWD,CAAI,CASnC,CAAC,EACG,G,GAIb,CACEZ,EACAhB,EACAoB,EACAL,EACAhB,EACAG,EACAW,EACAF,C,CACD,EAGH,SACE,OAACvB,EAAA,EAAK,CAAC,UAAW,EAAC,YACjB,QAACrC,EAAA,EAAK,CAAC,UAAU,MAAM,WAAU,gBAC/B,QAACuC,EAAA,EAAI,CAAC,UAAWxC,EAAQ,KAAM,YAAY,WAAW,MAAO0E,EAAiB,aAC5E,OAACjC,EAAA,EAAG,CACF,cAAa,GACb,MAAM,QACN,MAAM,UACN,QAAM,OAAC,KAAQ,CAAC,SAAS,OAAQ,CAAD,EAAG,cACvB,gBACZ,QAAS,IAAMsB,EAAeI,EAAgB,OAAY,OAAO,CAAC,MAEpE,OAAC1B,EAAA,EAAG,CACF,cAAa,GACb,MAAM,QACN,MAAM,YACN,QAAM,OAACwC,GAAA,EAAwB,CAAC,SAAS,OAAQ,CAAD,EAAG,cACvC,iBACZ,QAAS,IAAMlB,EAAeK,EAAgB,OAAY,OAAO,CAAC,MAEpE,OAAC3B,EAAA,EAAG,CACF,cAAa,GACb,MAAM,YACN,MAAM,YACN,QAAM,OAAC,KAAY,CAAC,SAAS,OAAQ,CAAD,EAAG,cAC3B,qBACZ,QAAS,IAAMsB,EAAeM,EAAoB,OAAY,WAAW,CAAC,EAC1E,IAEHP,GAAY,SACX,iCACE,OAACvB,EAAA,EAAO,CAAC,SAAQ,GAAC,YAAY,UAAW,CAAD,KACxC,cAAK,UAAWvC,EAAQ,gBAAe,SAAG2E,EAAUb,CAAQ,CAAC,EAAO,OAGxE,OAACvB,EAAA,EAAO,CAAC,SAAQ,GAAC,YAAY,UAAW,CAAD,CAAG,GACrC,EAGd,E,0BCjRA,MAAM2C,GAASC,EAAM,KACnB,SAAY,MAAM,+BAA4D,EAG1EC,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsCf,MAAY,MAAW,EAAGtF,IAAW,CACzC,WAAY,CACV,gBAAiBA,EAAM,QAAQ,WAAW,O,EAE5C,WAAY,CACV,MAAO,EACP,OAAQ,EACR,aAAc,MACd,IAAK,MACL,SAAU,WACV,MAAOA,EAAM,QAAQ,CAAC,EACtB,UAAW,mBACX,gBAAiBA,EAAM,QAAQ,KAAK,S,EAEtC,MAAO,CACL,CAAC,IAAIuF,GAAA,EAAa,OAAO,EAAG,CAC1B,QAASvF,EAAM,QAAQ,CAAC,C,IAG5B,EAIF,SAASwF,GAAkBC,EAAc,CACvC,MAAO,CACL,QAAS,CACP,OAAQ,CACN,iBAAkB,CAChB,MAAO,UACP,MAAO,sBACP,MAAOA,EAAO,gB,IAKxB,CAEA,MAAMC,GAAgB,CAAC,CAAE,WAAAtB,CAAW,IAA+C,CACjF,KAAM,CAAE,QAAAlE,CAAQ,EAAI,GAAU,EAC9B,SACE,OAACyF,GAAA,EAAU,CAAC,UAAWzF,EAAQ,WAAU,YACvC,OAAC0F,GAAA,EAAS,CAAC,SAAS,KAAI,YACtB,QAACzF,EAAA,EAAK,CAAC,eAAe,SAAS,WAAW,SAAS,IAAK,EAAG,WAAU,gBACnE,QAACC,EAAA,EAAU,CAAC,QAAQ,UAAU,aAAY,2CAExC,gBAAM,6BACqB,OAC3B,OAACmB,EAAA,EAAI,CACH,MAAM,UACN,UAAU,QACV,KAAK,uDACL,OAAO,SAAQ,kBAGV,uCAGT,OAACsB,EAAA,EAAM,CACL,MAAM,UACN,QAAQ,YACR,QAAS,IAAMuB,EAAW,EAC1B,aAAW,OAACyB,EAAA,EAAO,IAAG,uBAGf,GACH,EACE,EAGlB,EAEMC,GAA8B,OAAO,OAAO,CAAC,CAAC,EAE9CC,GAAoBC,GACxBA,EAAM,gBAAgB,MAAM,WAAaF,GAE3C,SAASG,GAAeC,EAAc,CACpC,KAAM,CAAE,OAAAT,EAAQ,WAAAU,CAAW,EAAID,EACzB,CAAE,QAAAhG,EAAS,MAAAF,CAAM,EAAI,GAAU,EAC/B,CAAE,iBAAAoG,EAAmB,GAAO,eAAA9C,EAAgB,mBAAA+C,CAAmB,EAAIZ,EACnEa,KAA0B,OAA2B,EAErD,CAACtC,EAAUC,CAAc,EAAIoB,EAAM,SAAmB,MAAS,EAE/DtB,KAAY,MAAyBgC,EAAgB,EACrD,CACJ,MAAO,CAAE,WAAYQ,EAAqB,OAAAC,EAAQ,SAAAC,CAAS,CAAC,KAC1D,MAAiB,EAEf,CAAE,aAAAC,CAAa,KAAI,MAAwB,EAE3CC,GACHrD,GAAkB,KAAYiD,EAAoBjD,CAAc,GAAG,YAAc,SAClF,CAAC,EACGsD,EAAetD,GAAkB,KAAYS,EAAUT,CAAc,EAAI,OACzE,CAACuD,EAAiBC,CAAkB,EAAIzB,EAAM,SAAmB,CAAC,CAAC,EAEnE0B,EACJF,EAAgB,OAAS,EAAIA,EAAgBA,EAAgB,OAAS,CAAC,EAAI,OACvEG,EACJ,CAAC,CAACJ,GAAgB,CAAC,CAACG,GAAiBA,EAAc,WAAaH,EAAa,KACzEK,GACJ,CAACD,GAA+BD,EAAc,OAASH,EAAa,WAChEM,IACH5D,GAAkB,KAAYiD,EAAoBjD,CAAc,GAAG,KAAO,SAAc,CAAC,EAOtF,CAAC6D,GAAYC,EAAa,KAAI,YAAiB,IAC5CL,EACHA,EAAc,UAAYA,EAAc,SAAW,cAAgB,IACnE,aACL,EAEKM,EAAkBrH,EAAM,QAAQ,OAAS,OAEzCsH,GAAa,CACjB,gBAAiBtH,EAAM,QAAQ,WAAWqH,EAAkB,UAAY,OAAO,EAC/E,MAAO,GAAG,KAAK,IAAIF,GAAW,OAAS,EAAG,EAAE,K,EAGxCI,MAAgB,eACnBC,GAA+B,CAC9B,GAAIA,EAAO,SAAW,SACpB,OAGF,KAAM,CAAE,MAAAC,EAAO,MAAArG,EAAO,KAAAsG,EAAK,EAAIF,EAAO,QAClCC,IAAU,WAAaC,GAAK,CAAC,IAAM,oBACrCvB,EAAW,CAAE,iBAAkB/E,CAAM,CAAC,CAE1C,EACA,CAAC+E,CAAU,CAAC,KAGd,aAAU,IAAM,CACdG,EAAwB,CACtB,cAAAiB,GACA,MAAO/B,GAAkBC,CAAM,C,CAChC,CACH,EAAG,CAAC8B,GAAe9B,EAAQa,CAAuB,CAAC,EAEnDjB,EAAM,gBAAgB,IAAM,CAC1B,GAAIuB,EAAc,CAChB,MAAMe,EAAYzB,EAAM,OAAO,0BAA4B,CAAC,EAC5DY,EAAmB,CACjB,CAAE,SAAUF,EAAa,KAAM,KAAMA,EAAa,WAAY,SAAU,EAAM,EAC9E,GAAGe,C,CACJ,C,CAEL,EAAG,CAACzB,EAAM,OAAO,yBAA0BU,CAAY,CAAC,EAExDvB,EAAM,gBAAgB,IAAM,CAC1B+B,GAAc,IACLL,EACHA,EAAc,UAAYA,EAAc,SAAW,cAAgB,IACnE,aACL,CACH,EAAG,CAACA,CAAa,CAAC,EAElB,MAAMa,KAAkB,eAAY,IAAM,CAEtCtE,GAAkB,MAClBsD,GACAG,GACAC,GAEAN,EAAa,CACX,CAACpD,CAAc,EAAG,CAAE,GAAGsD,EAAc,WAAYG,EAAc,IAAK,C,CACrE,CAEL,EAAG,CAACA,EAAeC,EAA6BJ,EAActD,EAAgBoD,CAAY,CAAC,EAErFtC,EAAaiB,EAAM,YACtBwC,GAAkB,CACjBD,EAAgB,EAChB,MAAME,KAAY,MAAO,EACnBC,EAAaF,GAAQvC,GAC3BoB,EAAa,CACX,CAACoB,CAAS,EAAG,CACX,WAAAC,EACA,KAAM,GAAGD,EAAU,MAAM,GAAG,EAAE,CAAC,G,EAElC,EACD3B,EAAW,CAAE,eAAgB2B,CAAU,CAAC,CAC1C,EACA,CAAC3B,EAAYyB,EAAiBlB,CAAY,CAAC,EAGvCsB,GAAW3C,EAAM,YACpBlB,GAA+B,CAC1Bb,GAAkB,MAAaa,GAAU,MAAaA,IAAW,IAAM,CAACyC,GAG5EF,EAAa,CAAE,CAACpD,CAAc,EAAG,CAAE,GAAGsD,EAAc,WAAYzC,CAAO,CAAE,CAAC,CAC5E,EACA,CAACyC,EAActD,EAAgBoD,CAAY,CAAC,EAGxCxC,GAAoBmB,EAAM,YAC9B,CAAClB,EAAgB8D,IAAsB,CACjCA,GAAY,MAAaA,EAAW,GAAKpB,EAAgB,QAAUoB,EACrEnB,EAAmB,CAAC,GAAGD,EAAgB,MAAM,EAAGoB,EAAW,CAAC,EAAG9D,CAAM,CAAC,EAEtE2C,EAAmB,CAAC,GAAGD,EAAiB1C,CAAM,CAAC,CAEnD,EACA,CAAC0C,CAAe,CAAC,EAGbqB,GAAS7C,EAAM,YAAY,IAAM,CACrCyB,EAAmBD,EAAgB,MAAM,EAAGA,EAAgB,OAAS,CAAC,CAAC,CACzE,EAAG,CAACA,CAAe,CAAC,EAEdsB,GAAgB9C,EAAM,YACzBwC,GAAiB,CAEhB,MAAMO,EAAY,CAAC,GAAGvB,CAAe,EACrC,GAAIuB,EAAU,OAAS,EAAG,CACxB,MAAMjE,EAASiE,EAAU,IAAI,EACzBjE,GAAU,CAACA,EAAO,UACpB2C,EAAmB,CAAC,GAAGsB,EAAW,CAAE,GAAGjE,EAAQ,KAAA0D,CAAK,CAAC,CAAC,C,CAG5D,EACA,CAAChB,CAAe,CAAC,EAGnB,SACE,QAAC1G,EAAA,EAAK,CAAC,WAAU,gBACf,OAACkI,GAAA,EAAY,OACb,OAAC5F,EAAA,EAAO,OACR,QAACtC,EAAA,EAAK,CAAC,UAAU,MAAM,WAAU,GAAC,SAAS,SAAQ,aACjD,OAAC,GAAO,CACN,SAAU6D,EACV,eAAgBC,EAChB,WAAarC,GAAW,CACtBgG,EAAgB,EAChBzB,EAAW,CAAE,eAAgBvE,CAAO,CAAC,CACvC,EACA,WAAaA,GAAW,CACtB8E,EAAa,CAAE,GAAG3C,EAAW,CAACnC,CAAM,EAAG,MAAU,CAAC,EAClDuE,EAAW,CAAE,eAAgB,MAAU,CAAC,CAC1C,EACA,eAAgB7C,EAChB,UAAWS,EACX,OAAQgD,EACR,kBAAmB7C,GACnB,WAAYE,CAAU,MAExB,QAACjE,EAAA,EAAK,CACJ,SAAU,EACV,WAAU,GACV,SAAS,SACT,MAAO,CACL,gBAAiBH,EAAM,QAAQ,WAAWqH,EAAkB,QAAU,SAAS,C,EAChF,aAED,QAAClH,EAAA,EAAK,CAAC,UAAU,MAAM,WAAW,SAAQ,UACvC0G,EAAgB,OAAS,MACxB,OAACrD,EAAA,EAAU,CAAC,MAAM,UAAS,cAAa,UAAU,KAAK,QAAQ,QAAS0E,GAAM,YAC5E,OAACI,GAAA,EAAa,GAAG,GAGpBhF,GAAkB,MAAasD,MAC9B,eAAK,MAAO,CAAE,SAAU,UAAW,EAAC,aAClC,OAAC2B,GAAA,EAAK,CACJ,UAAWrI,EAAQ,MACnB,KAAK,QACL,iBAAgB,GAChB,YAAY,cACZ,MAAOiH,GACP,SAAU,CAACJ,GAAiBA,EAAc,SAC1C,SAAWyB,GAAO,CAChB,MAAMC,EAAcD,EAAG,OAAO,MAC9BpB,GAAcqB,CAAW,EACzB/B,EAAa,CACX,GAAG3C,EACH,CAACT,CAAc,EAAG,CAAE,GAAGsD,EAAc,KAAM6B,CAAY,C,CACxD,CACH,EACA,WAAY,CAAE,WAAY,GAAO,MAAOnB,EAAW,CAAC,GAErD,CAACL,OAAe,cAAK,UAAW/G,EAAQ,UAAU,EAAI,OAG3D,OAACsD,EAAA,EAAU,CACT,MAAM,WAAU,cACJ,WACZ,KAAK,QACL,QAAS,IAAMY,EAAW,EAAC,YAE3B,OAACyB,EAAA,EAAO,GAAG,EACA,OAGf,QAAC1F,EAAA,EAAK,CAAC,SAAU,EAAG,SAAS,UAAS,UACnCmD,GAAkB,SAAa,OAACoC,GAAa,CAAC,WAAYtB,CAAU,MACrE,OAACjE,EAAA,EAAK,CACJ,SAAU,EACV,UAAS,GACT,SAAS,SACT,MAAO,CACL,QAASmD,GAAkB,KAAY,OAAS,M,EAEjD,YAED,OAAC,WAAQ,CACP,YACE,OAACnD,EAAA,EAAK,CACJ,UAAU,MACV,KAAK,OACL,WAAW,SACX,eAAe,SACf,WAAU,GACV,UAAS,GACT,MAAO,CACL,gBACEH,EAAM,QAAQ,WAAWqH,EAAkB,UAAY,OAAO,C,EACjE,YAED,OAACqB,GAAA,EAAgB,CAAC,KAAM,EAAE,EAAI,GACxB,SAGTrC,MACC,OAACjB,GAAM,CACL,iBAAkBgB,EAClB,OAAQW,EACR,cAAeoB,GACf,kBAAmBjE,GACnB,OAAQsC,EACR,SAAUC,EACV,KAAMuB,EAAQ,EAEjB,EACQ,MAEb,OAAC7H,EAAA,EAAK,aACJ,OAAC,GAAS,CACR,OAAQmD,EACR,QAAS2D,GACT,KAAM,IAAMe,GAASjB,GAAe,IAAI,EACxC,YAAaJ,EACb,KAAMO,EAAgB,EACtB,EACI,GACF,GACF,GACF,GAGd,CAEA,MAAMyB,GAAwB,CAC5B,eAAgB,OAChB,iBAAkB,E,EAEpB,MAAeC,GAAA,GACb,OAAO,OAAO3C,GAAgB,CAC5B,UAAW,iBACX,cAAA0C,E,CACD,CAAC,C","sources":["webpack:///../../packages/studio-base/src/panels/NodePlayground/BottomBar/DiagnosticsSection.tsx","webpack:///../../packages/studio-base/src/panels/NodePlayground/BottomBar/LogsSection.tsx","webpack:///../../packages/studio-base/src/panels/NodePlayground/BottomBar/index.tsx","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeTransformerWorker/typescript/templates/index.ts","webpack:///../../packages/studio-base/src/panels/NodePlayground/Sidebar.tsx","webpack:///../../packages/studio-base/src/panels/NodePlayground/index.tsx"],"sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\nimport { List, ListItem, ListItemIcon, ListItemText, Typography } from \"@mui/material\";\nimport { invert } from \"lodash\";\nimport { ReactElement } from \"react\";\nimport { makeStyles } from \"tss-react/mui\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { Diagnostic, DiagnosticSeverity } from \"@foxglove/studio-base/players/UserNodePlayer/types\";\n\nconst severityIcons = {\n  Hint: <HelpIcon fontSize=\"small\" />,\n  Info: <InfoIcon fontSize=\"small\" color=\"info\" />,\n  Warning: <WarningIcon fontSize=\"small\" color=\"warning\" />,\n  Error: <ErrorIcon fontSize=\"small\" color=\"error\" />,\n};\n\ntype Props = {\n  diagnostics: readonly Diagnostic[];\n};\n\nconst useStyles = makeStyles()((theme) => ({\n  listItem: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginBlock: theme.spacing(0.5),\n  },\n  listItemText: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: 0,\n    gap: theme.spacing(1),\n  },\n  listItemIcon: {\n    alignSelf: \"flex-start\",\n    minWidth: theme.spacing(3),\n  },\n}));\n\nconst DiagnosticsSection = ({ diagnostics }: Props): ReactElement => {\n  const { classes } = useStyles();\n\n  if (diagnostics.length === 0) {\n    return (\n      <Stack gap={0.5} padding={2}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          No problems to display.\n        </Typography>\n      </Stack>\n    );\n  }\n\n  return (\n    <List dense disablePadding>\n      {diagnostics.map(({ severity, message, source, startColumn, startLineNumber }, i) => {\n        const severityLabel =\n          (invert(DiagnosticSeverity) as Record<string, keyof typeof DiagnosticSeverity>)[\n            severity\n          ] ?? \"Error\";\n\n        const errorLoc =\n          startLineNumber != undefined && startColumn != undefined\n            ? `[${startLineNumber + 1},${startColumn + 1}]`\n            : \"\";\n\n        return (\n          <ListItem key={`${message}_${i}`} className={classes.listItem}>\n            <ListItemIcon className={classes.listItemIcon}>\n              {severityIcons[severityLabel]}\n            </ListItemIcon>\n            <ListItemText\n              className={classes.listItemText}\n              primary={message}\n              secondary={`${source} ${errorLoc}`}\n              secondaryTypographyProps={{\n                color: \"text.secondary\",\n              }}\n            />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default DiagnosticsSection;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Link, List, ListItem, ListItemButton, ListItemText, Typography } from \"@mui/material\";\nimport Tree from \"react-json-tree\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { UserNodeLog } from \"@foxglove/studio-base/players/UserNodePlayer/types\";\nimport { useJsonTreeTheme } from \"@foxglove/studio-base/util/globalConstants\";\n\nconst LogsSection = ({ logs }: { logs: readonly UserNodeLog[] }): JSX.Element => {\n  const jsonTreeTheme = useJsonTreeTheme();\n  const valueColorMap: Record<string, string> = {\n    string: jsonTreeTheme.base0B,\n    number: jsonTreeTheme.base09,\n    boolean: jsonTreeTheme.base09,\n    object: jsonTreeTheme.base08, // null\n    undefined: jsonTreeTheme.base08,\n  };\n  if (logs.length === 0) {\n    return (\n      <Stack gap={0.5} padding={2}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          No logs to display.\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Invoke <code>log(someValue)</code> in your Foxglove Studio node code to see data printed\n          here.\n        </Typography>\n      </Stack>\n    );\n  }\n  return (\n    <List dense disablePadding>\n      {logs.map(({ source, value }, idx) => {\n        const renderTreeObj = value != undefined && typeof value === \"object\";\n        return (\n          <ListItem\n            disablePadding\n            key={`${idx}${source}`}\n            secondaryAction={\n              <Link underline=\"always\" variant=\"body2\" color=\"text.secondary\">\n                {source}\n              </Link>\n            }\n          >\n            <ListItemButton>\n              {renderTreeObj ? (\n                <Tree hideRoot data={value} invertTheme={false} theme={jsonTreeTheme} />\n              ) : (\n                <ListItemText\n                  primary={\n                    value == undefined || value === false\n                      ? String(value)\n                      : (value as React.ReactNode)\n                  }\n                  primaryTypographyProps={{\n                    color: valueColorMap[typeof value] ?? \"text.primary\",\n                  }}\n                />\n              )}\n            </ListItemButton>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default LogsSection;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n//\n\nimport {\n  Badge,\n  Button,\n  Paper,\n  Tab,\n  Tabs,\n  Divider,\n  Collapse,\n  tabClasses,\n  badgeClasses,\n} from \"@mui/material\";\nimport { useState, useRef, useEffect, ReactElement } from \"react\";\nimport { makeStyles } from \"tss-react/mui\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { useUserNodeState } from \"@foxglove/studio-base/context/UserNodeStateContext\";\nimport DiagnosticsSection from \"@foxglove/studio-base/panels/NodePlayground/BottomBar/DiagnosticsSection\";\nimport LogsSection from \"@foxglove/studio-base/panels/NodePlayground/BottomBar/LogsSection\";\nimport { Diagnostic, UserNodeLog } from \"@foxglove/studio-base/players/UserNodePlayer/types\";\n\ntype Props = {\n  nodeId?: string;\n  isSaved: boolean;\n  save: () => void;\n  diagnostics: readonly Diagnostic[];\n  logs: readonly UserNodeLog[];\n};\n\ntype BottomBarModes = \"logs\" | \"diagnostics\" | \"closed\";\n\nconst TAB_HEIGHT = 36;\n\nconst useStyles = makeStyles()((theme) => ({\n  badge: {\n    alignItems: \"center\",\n\n    [`.${badgeClasses.badge}`]: {\n      margin: theme.spacing(-0.25, 0, -0.25, 1),\n      position: \"relative\",\n      transform: \"none\",\n\n      [`&.${badgeClasses.invisible}`]: {\n        display: \"none\",\n      },\n    },\n  },\n  tabs: {\n    minHeight: TAB_HEIGHT,\n    position: \"relative\",\n    bottom: -1,\n\n    [`.${tabClasses.root}`]: {\n      minHeight: \"auto\",\n      minWidth: theme.spacing(8),\n      padding: theme.spacing(1.5, 2),\n      color: theme.palette.text.secondary,\n\n      \"&.Mui-selected\": {\n        color: theme.palette.text.primary,\n      },\n    },\n  },\n}));\n\nconst BottomBar = ({ nodeId, isSaved, save, diagnostics, logs }: Props): ReactElement => {\n  const { classes } = useStyles();\n  const [bottomBarDisplay, setBottomBarDisplay] = useState<BottomBarModes>(\"closed\");\n  const [autoScroll, setAutoScroll] = useState(true);\n\n  const { clearUserNodeLogs } = useUserNodeState();\n  const scrollContainer = useRef<HTMLDivElement>(ReactNull);\n\n  const handleChange = (_event: React.SyntheticEvent, value: BottomBarModes) => {\n    setBottomBarDisplay(value);\n  };\n\n  const handleClick = (value: BottomBarModes) => {\n    if (bottomBarDisplay === value) {\n      setBottomBarDisplay(\"closed\");\n    }\n  };\n\n  useEffect(() => {\n    if (autoScroll) {\n      if (scrollContainer.current) {\n        scrollContainer.current.scrollTop = scrollContainer.current.scrollHeight;\n      }\n    }\n  }, [autoScroll, logs]);\n\n  return (\n    <>\n      <Paper elevation={0}>\n        <Divider />\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          gap={1}\n          paddingRight={1}\n        >\n          <Tabs\n            className={classes.tabs}\n            textColor=\"inherit\"\n            value={bottomBarDisplay !== \"closed\" ? bottomBarDisplay : false}\n            onChange={handleChange}\n          >\n            <Tab\n              label={\n                <Badge\n                  color=\"error\"\n                  badgeContent={diagnostics.length}\n                  invisible={diagnostics.length === 0}\n                  className={classes.badge}\n                >\n                  Problems\n                </Badge>\n              }\n              value=\"diagnostics\"\n              data-testid=\"np-errors\"\n              onClick={() => handleClick(\"diagnostics\")}\n            />\n            <Tab\n              label={\n                <Badge\n                  color=\"error\"\n                  className={classes.badge}\n                  badgeContent={logs.length}\n                  invisible={logs.length === 0}\n                >\n                  Logs\n                </Badge>\n              }\n              value=\"logs\"\n              data-testid=\"np-logs\"\n              onClick={() => handleClick(\"logs\")}\n            />\n          </Tabs>\n          <Stack direction=\"row\" alignItems=\"center\" gap={0.5}>\n            {bottomBarDisplay === \"logs\" && (\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"contained\"\n                data-testid=\"np-logs-clear\"\n                disabled={logs.length === 0}\n                onClick={() => {\n                  if (nodeId != undefined) {\n                    clearUserNodeLogs(nodeId);\n                  }\n                }}\n              >\n                Clear logs\n              </Button>\n            )}\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={isSaved}\n              title=\"Ctrl/Cmd + S\"\n              onClick={() => {\n                if (nodeId != undefined) {\n                  save();\n                  clearUserNodeLogs(nodeId);\n                }\n              }}\n            >\n              {isSaved ? \"Saved\" : \"Save\"}\n            </Button>\n          </Stack>\n        </Stack>\n        {bottomBarDisplay !== \"closed\" && <Divider />}\n      </Paper>\n      <Paper elevation={0}>\n        <Stack fullHeight position=\"relative\">\n          <Collapse\n            onScroll={({ currentTarget }) => {\n              const scrolledUp =\n                currentTarget.scrollHeight - currentTarget.scrollTop > currentTarget.clientHeight;\n              if (scrolledUp && autoScroll) {\n                setAutoScroll(false);\n              } else if (!scrolledUp && !autoScroll) {\n                setAutoScroll(true);\n              }\n            }}\n            ref={scrollContainer}\n            in={bottomBarDisplay !== \"closed\"}\n          >\n            <Stack overflow=\"auto\" style={{ height: 150 }}>\n              {bottomBarDisplay === \"diagnostics\" && (\n                <DiagnosticsSection diagnostics={diagnostics} />\n              )}\n              {bottomBarDisplay === \"logs\" && <LogsSection logs={logs} />}\n            </Stack>\n          </Collapse>\n        </Stack>\n      </Paper>\n    </>\n  );\n};\n\nexport default BottomBar;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport locationFix from \"./locationFix.ts.template\";\nimport marker from \"./marker.ts.template\";\nimport multipleInputs from \"./multipleInputs.ts.template\";\nimport skeleton from \"./skeleton.ts.template\";\n\nexport default [\n  {\n    name: \"Skeleton\",\n    description: \"An empty script\",\n    template: skeleton,\n  },\n  {\n    name: \"Markers\",\n    description: \"A script that publishes one or more markers\",\n    template: marker,\n  },\n  {\n    name: \"Multiple Inputs\",\n    description: \"A script that receives inputs on multiple topics\",\n    template: multipleInputs,\n  },\n  {\n    name: \"GPS Location\",\n    description: \"A script that publishes foxglove.LocationFix\",\n    template: locationFix,\n  },\n];\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ConstructionOutlinedIcon from \"@mui/icons-material/ConstructionOutlined\";\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\nimport TemplateIcon from \"@mui/icons-material/PhotoFilter\";\nimport NoteIcon from \"@mui/icons-material/StickyNote2Outlined\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  IconButton,\n  Tabs,\n  Tab,\n  Paper,\n  CardHeader,\n  Typography,\n  Divider,\n  tabClasses,\n} from \"@mui/material\";\nimport * as monacoApi from \"monaco-editor/esm/vs/editor/editor.api\";\nimport { ReactNode, useCallback, useMemo } from \"react\";\nimport { makeStyles } from \"tss-react/mui\";\n\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { Explorer } from \"@foxglove/studio-base/panels/NodePlayground\";\nimport { Script } from \"@foxglove/studio-base/panels/NodePlayground/script\";\nimport { getNodeProjectConfig } from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/typescript/projectConfig\";\nimport templates from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/typescript/templates\";\nimport { UserNodes } from \"@foxglove/studio-base/types/panels\";\n\nconst useStyles = makeStyles()((theme) => ({\n  tabs: {\n    [`.${tabClasses.root}`]: {\n      minWidth: \"auto\",\n      padding: theme.spacing(1, 1.125),\n    },\n  },\n  explorerWrapper: {\n    backgroundColor: theme.palette.background.paper,\n    width: 350,\n    overflow: \"auto\",\n  },\n}));\n\ntype NodesListProps = {\n  nodes: UserNodes;\n  selectNode: (id: string) => void;\n  deleteNode: (id: string) => void;\n  collapse: () => void;\n  selectedNodeId?: string;\n};\n\nconst NodesList = ({ nodes, selectNode, deleteNode, collapse, selectedNodeId }: NodesListProps) => {\n  return (\n    <Stack flex=\"auto\">\n      <SidebarHeader title=\"Scripts\" collapse={collapse} />\n      <List dense>\n        {Object.keys(nodes).map((nodeId) => {\n          return (\n            <ListItem\n              disablePadding\n              key={nodeId}\n              secondaryAction={\n                <IconButton\n                  size=\"small\"\n                  onClick={() => deleteNode(nodeId)}\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  title=\"Delete\"\n                  color=\"error\"\n                >\n                  <DeleteOutlineIcon fontSize=\"small\" />\n                </IconButton>\n              }\n            >\n              <ListItemButton\n                selected={selectedNodeId === nodeId}\n                onClick={() => selectNode(nodeId)}\n              >\n                <ListItemText\n                  primary={nodes[nodeId]?.name}\n                  primaryTypographyProps={{ variant: \"body1\" }}\n                />\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Stack>\n  );\n};\n\ntype Props = {\n  selectNode: (nodeId: string) => void;\n  deleteNode: (nodeId: string) => void;\n  userNodes: UserNodes;\n  selectedNodeId?: string;\n  explorer: Explorer;\n  updateExplorer: (explorer: Explorer) => void;\n  setScriptOverride: (script: Script, maxDepth?: number) => void;\n  script?: Script;\n  addNewNode: (sourceCode?: string) => void;\n};\n\nconst { utilityFiles } = getNodeProjectConfig();\n\nconst SidebarHeader = ({\n  title,\n  subheader,\n  collapse,\n}: {\n  title: string;\n  subheader?: ReactNode;\n  collapse: () => void;\n}) => (\n  <CardHeader\n    title={title}\n    titleTypographyProps={{\n      variant: \"h5\",\n      gutterBottom: true,\n    }}\n    subheader={subheader}\n    subheaderTypographyProps={{\n      variant: \"body2\",\n      color: \"text.secondary\",\n    }}\n    action={\n      <IconButton size=\"small\" onClick={collapse} title=\"Collapse\">\n        <CloseIcon />\n      </IconButton>\n    }\n  />\n);\n\nconst Sidebar = ({\n  userNodes,\n  selectNode,\n  deleteNode,\n  selectedNodeId,\n  explorer,\n  updateExplorer,\n  setScriptOverride,\n  script,\n  addNewNode,\n}: Props): React.ReactElement => {\n  const { classes } = useStyles();\n  const nodesSelected = explorer === \"nodes\";\n  const utilsSelected = explorer === \"utils\";\n  const templatesSelected = explorer === \"templates\";\n\n  const gotoUtils = useCallback(\n    (filePath: string) => {\n      const monacoFilePath = monacoApi.Uri.parse(`file://${filePath}`);\n      const requestedModel = monacoApi.editor.getModel(monacoFilePath);\n      if (!requestedModel) {\n        return;\n      }\n      setScriptOverride(\n        {\n          filePath: requestedModel.uri.path,\n          code: requestedModel.getValue(),\n          readOnly: true,\n          selection: undefined,\n        },\n        2,\n      );\n    },\n    [setScriptOverride],\n  );\n\n  const activeExplorerTab = useMemo(() => {\n    switch (explorer) {\n      case undefined:\n        return false;\n      case \"nodes\":\n        return \"nodes\";\n      case \"templates\":\n        return \"templates\";\n      case \"utils\":\n        return \"utils\";\n    }\n    return false;\n  }, [explorer]);\n\n  const explorers = useMemo(\n    () => ({\n      nodes: (\n        <NodesList\n          nodes={userNodes}\n          selectNode={selectNode}\n          deleteNode={deleteNode}\n          collapse={() => updateExplorer(undefined)}\n          selectedNodeId={selectedNodeId}\n        />\n      ),\n      utils: (\n        <Stack flex=\"auto\" position=\"relative\">\n          <SidebarHeader\n            collapse={() => updateExplorer(undefined)}\n            title=\"Utilities\"\n            subheader={\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                You can import any of these modules into your script using the following syntax:{\" \"}\n                <pre>{`import { ... } from \"./pointClouds.ts\".`}</pre>\n              </Typography>\n            }\n          />\n          <List dense>\n            {utilityFiles.map(({ fileName, filePath }) => (\n              <ListItem\n                disablePadding\n                key={filePath}\n                onClick={gotoUtils.bind(undefined, filePath)}\n                selected={script ? filePath === script.filePath : false}\n              >\n                <ListItemButton>\n                  <ListItemText primary={fileName} primaryTypographyProps={{ variant: \"body1\" }} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n            <ListItem\n              disablePadding\n              onClick={gotoUtils.bind(undefined, \"/studio_script/generatedTypes.ts\")}\n              selected={script ? script.filePath === \"/studio_script/generatedTypes.ts\" : false}\n            >\n              <ListItemButton>\n                <ListItemText\n                  primary=\"generatedTypes.ts\"\n                  primaryTypographyProps={{ variant: \"body1\" }}\n                />\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </Stack>\n      ),\n      templates: (\n        <Stack flex=\"auto\">\n          <SidebarHeader\n            title=\"Templates\"\n            subheader=\"Create scripts from these templates, click a template to create a new script.\"\n            collapse={() => updateExplorer(undefined)}\n          />\n          <List dense>\n            {templates.map(({ name, description, template }) => (\n              <ListItem disablePadding key={name} onClick={() => addNewNode(template)}>\n                <ListItemButton>\n                  <ListItemText\n                    primary={name}\n                    primaryTypographyProps={{ variant: \"body1\" }}\n                    secondary={description}\n                  />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n        </Stack>\n      ),\n    }),\n    [\n      addNewNode,\n      deleteNode,\n      gotoUtils,\n      script,\n      selectNode,\n      selectedNodeId,\n      updateExplorer,\n      userNodes,\n    ],\n  );\n\n  return (\n    <Paper elevation={0}>\n      <Stack direction=\"row\" fullHeight>\n        <Tabs className={classes.tabs} orientation=\"vertical\" value={activeExplorerTab}>\n          <Tab\n            disableRipple\n            value=\"nodes\"\n            title=\"Scripts\"\n            icon={<NoteIcon fontSize=\"large\" />}\n            data-testid=\"node-explorer\"\n            onClick={() => updateExplorer(nodesSelected ? undefined : \"nodes\")}\n          />\n          <Tab\n            disableRipple\n            value=\"utils\"\n            title=\"Utilities\"\n            icon={<ConstructionOutlinedIcon fontSize=\"large\" />}\n            data-testid=\"utils-explorer\"\n            onClick={() => updateExplorer(utilsSelected ? undefined : \"utils\")}\n          />\n          <Tab\n            disableRipple\n            value=\"templates\"\n            title=\"Templates\"\n            icon={<TemplateIcon fontSize=\"large\" />}\n            data-testid=\"templates-explorer\"\n            onClick={() => updateExplorer(templatesSelected ? undefined : \"templates\")}\n          />\n        </Tabs>\n        {explorer != undefined && (\n          <>\n            <Divider flexItem orientation=\"vertical\" />\n            <div className={classes.explorerWrapper}>{explorers[explorer]}</div>\n          </>\n        )}\n        <Divider flexItem orientation=\"vertical\" />\n      </Stack>\n    </Paper>\n  );\n};\n\nexport default Sidebar;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  Divider,\n  IconButton,\n  Input,\n  Link,\n  Typography,\n  inputClasses,\n} from \"@mui/material\";\nimport { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"tss-react/mui\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { SettingsTreeAction, SettingsTreeNodes } from \"@foxglove/studio\";\nimport EmptyState from \"@foxglove/studio-base/components/EmptyState\";\nimport Panel from \"@foxglove/studio-base/components/Panel\";\nimport PanelToolbar from \"@foxglove/studio-base/components/PanelToolbar\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport {\n  LayoutState,\n  useCurrentLayoutActions,\n  useCurrentLayoutSelector,\n} from \"@foxglove/studio-base/context/CurrentLayoutContext\";\nimport { useUserNodeState } from \"@foxglove/studio-base/context/UserNodeStateContext\";\nimport BottomBar from \"@foxglove/studio-base/panels/NodePlayground/BottomBar\";\nimport Sidebar from \"@foxglove/studio-base/panels/NodePlayground/Sidebar\";\nimport { usePanelSettingsTreeUpdate } from \"@foxglove/studio-base/providers/PanelStateContextProvider\";\nimport { SaveConfig, UserNodes } from \"@foxglove/studio-base/types/panels\";\n\nimport Config from \"./Config\";\nimport { Script } from \"./script\";\n\nconst Editor = React.lazy(\n  async () => await import(\"@foxglove/studio-base/panels/NodePlayground/Editor\"),\n);\n\nconst skeletonBody = `\\\n// The ./types module provides helper types for your Input events and messages.\nimport { Input, Message } from \"./types\";\n\n// Your script can output well-known message types, any of your custom message types, or\n// complete custom message types.\n//\n// Use \\`Message\\` to access your data source types or well-known types:\n// type Twist = Message<\"geometry_msgs/Twist\">;\n//\n// Conventionally, it's common to make a _type alias_ for your script's output type\n// and use that type name as the return type for your script function.\n// Here we've called the type \\`Output\\` but you can pick any type name.\ntype Output = {\n  hello: string;\n};\n\n// These are the topics your script \"subscribes\" to. Studio will invoke your script function\n// when any message is received on one of these topics.\nexport const inputs = [\"/input/topic\"];\n\n// Any output your script produces is \"published\" to this topic. Published messages are only visible within Studio, not to your original data source.\nexport const output = \"/studio_script/output_topic\";\n\n// This function is called with messages from your input topics.\n// The first argument is an event with the topic, receive time, and message.\n// Use the \\`Input<...>\\` helper to get the correct event type for your input topic messages.\nexport default function script(event: Input<\"/input/topic\">): Output {\n  return {\n    hello: \"world!\",\n  };\n};`;\n\ntype Props = {\n  config: Config;\n  saveConfig: SaveConfig<Config>;\n};\n\nconst useStyles = makeStyles()((theme) => ({\n  emptyState: {\n    backgroundColor: theme.palette.background.default,\n  },\n  unsavedDot: {\n    width: 6,\n    height: 6,\n    borderRadius: \"50%\",\n    top: \"50%\",\n    position: \"absolute\",\n    right: theme.spacing(1),\n    transform: \"translateY(-50%)\",\n    backgroundColor: theme.palette.text.secondary,\n  },\n  input: {\n    [`.${inputClasses.input}`]: {\n      padding: theme.spacing(1),\n    },\n  },\n}));\n\nexport type Explorer = undefined | \"nodes\" | \"utils\" | \"templates\";\n\nfunction buildSettingsTree(config: Config): SettingsTreeNodes {\n  return {\n    general: {\n      fields: {\n        autoFormatOnSave: {\n          input: \"boolean\",\n          label: \"Auto-format on save\",\n          value: config.autoFormatOnSave,\n        },\n      },\n    },\n  };\n}\n\nconst WelcomeScreen = ({ addNewNode }: { addNewNode: (code?: string) => void }) => {\n  const { classes } = useStyles();\n  return (\n    <EmptyState className={classes.emptyState}>\n      <Container maxWidth=\"xs\">\n        <Stack justifyContent=\"center\" alignItems=\"center\" gap={1} fullHeight>\n          <Typography variant=\"inherit\" gutterBottom>\n            Welcome to User Scripts!\n            <br />\n            Get started by reading the{\" \"}\n            <Link\n              color=\"primary\"\n              underline=\"hover\"\n              href=\"https://foxglove.dev/docs/studio/panels/user-scripts\"\n              target=\"_blank\"\n            >\n              docs\n            </Link>\n            , or just create a new script.\n          </Typography>\n          <Button\n            color=\"inherit\"\n            variant=\"contained\"\n            onClick={() => addNewNode()}\n            startIcon={<AddIcon />}\n          >\n            New script\n          </Button>\n        </Stack>\n      </Container>\n    </EmptyState>\n  );\n};\n\nconst EMPTY_USER_NODES: UserNodes = Object.freeze({});\n\nconst userNodeSelector = (state: LayoutState) =>\n  state.selectedLayout?.data?.userNodes ?? EMPTY_USER_NODES;\n\nfunction NodePlayground(props: Props) {\n  const { config, saveConfig } = props;\n  const { classes, theme } = useStyles();\n  const { autoFormatOnSave = false, selectedNodeId, editorForStorybook } = config;\n  const updatePanelSettingsTree = usePanelSettingsTreeUpdate();\n\n  const [explorer, updateExplorer] = React.useState<Explorer>(undefined);\n\n  const userNodes = useCurrentLayoutSelector(userNodeSelector);\n  const {\n    state: { nodeStates: userNodeDiagnostics, rosLib, typesLib },\n  } = useUserNodeState();\n\n  const { setUserNodes } = useCurrentLayoutActions();\n\n  const selectedNodeDiagnostics =\n    (selectedNodeId != undefined ? userNodeDiagnostics[selectedNodeId]?.diagnostics : undefined) ??\n    [];\n  const selectedNode = selectedNodeId != undefined ? userNodes[selectedNodeId] : undefined;\n  const [scriptBackStack, setScriptBackStack] = React.useState<Script[]>([]);\n  // Holds the currently active script\n  const currentScript =\n    scriptBackStack.length > 0 ? scriptBackStack[scriptBackStack.length - 1] : undefined;\n  const isCurrentScriptSelectedNode =\n    !!selectedNode && !!currentScript && currentScript.filePath === selectedNode.name;\n  const isNodeSaved =\n    !isCurrentScriptSelectedNode || currentScript.code === selectedNode.sourceCode;\n  const selectedNodeLogs =\n    (selectedNodeId != undefined ? userNodeDiagnostics[selectedNodeId]?.logs : undefined) ?? [];\n\n  // The current node name is editable via the \"tab\". The tab uses a controlled input. React requires\n  // that we render the new text on the next render for the controlled input to retain the cursor position.\n  // For this we use setInputTitle within the onChange event of the input control.\n  //\n  // We also update the input title when the script changes using a layout effect below.\n  const [inputTitle, setInputTitle] = useState<string>(() => {\n    return currentScript\n      ? currentScript.filePath + (currentScript.readOnly ? \" (READONLY)\" : \"\")\n      : \"script name\";\n  });\n\n  const prefersDarkMode = theme.palette.mode === \"dark\";\n\n  const inputStyle = {\n    backgroundColor: theme.palette.background[prefersDarkMode ? \"default\" : \"paper\"],\n    width: `${Math.max(inputTitle.length + 4, 10)}ch`, // Width based on character count of title + padding\n  };\n\n  const actionHandler = useCallback(\n    (action: SettingsTreeAction) => {\n      if (action.action !== \"update\") {\n        return;\n      }\n\n      const { input, value, path } = action.payload;\n      if (input === \"boolean\" && path[1] === \"autoFormatOnSave\") {\n        saveConfig({ autoFormatOnSave: value });\n      }\n    },\n    [saveConfig],\n  );\n\n  useEffect(() => {\n    updatePanelSettingsTree({\n      actionHandler,\n      nodes: buildSettingsTree(config),\n    });\n  }, [actionHandler, config, updatePanelSettingsTree]);\n\n  React.useLayoutEffect(() => {\n    if (selectedNode) {\n      const testItems = props.config.additionalBackStackItems ?? [];\n      setScriptBackStack([\n        { filePath: selectedNode.name, code: selectedNode.sourceCode, readOnly: false },\n        ...testItems,\n      ]);\n    }\n  }, [props.config.additionalBackStackItems, selectedNode]);\n\n  React.useLayoutEffect(() => {\n    setInputTitle(() => {\n      return currentScript\n        ? currentScript.filePath + (currentScript.readOnly ? \" (READONLY)\" : \"\")\n        : \"script name\";\n    });\n  }, [currentScript]);\n\n  const saveCurrentNode = useCallback(() => {\n    if (\n      selectedNodeId != undefined &&\n      selectedNode &&\n      currentScript &&\n      isCurrentScriptSelectedNode\n    ) {\n      setUserNodes({\n        [selectedNodeId]: { ...selectedNode, sourceCode: currentScript.code },\n      });\n    }\n  }, [currentScript, isCurrentScriptSelectedNode, selectedNode, selectedNodeId, setUserNodes]);\n\n  const addNewNode = React.useCallback(\n    (code?: string) => {\n      saveCurrentNode();\n      const newNodeId = uuidv4();\n      const sourceCode = code ?? skeletonBody;\n      setUserNodes({\n        [newNodeId]: {\n          sourceCode,\n          name: `${newNodeId.split(\"-\")[0]}`,\n        },\n      });\n      saveConfig({ selectedNodeId: newNodeId });\n    },\n    [saveConfig, saveCurrentNode, setUserNodes],\n  );\n\n  const saveNode = React.useCallback(\n    (script: string | undefined) => {\n      if (selectedNodeId == undefined || script == undefined || script === \"\" || !selectedNode) {\n        return;\n      }\n      setUserNodes({ [selectedNodeId]: { ...selectedNode, sourceCode: script } });\n    },\n    [selectedNode, selectedNodeId, setUserNodes],\n  );\n\n  const setScriptOverride = React.useCallback(\n    (script: Script, maxDepth?: number) => {\n      if (maxDepth != undefined && maxDepth > 0 && scriptBackStack.length >= maxDepth) {\n        setScriptBackStack([...scriptBackStack.slice(0, maxDepth - 1), script]);\n      } else {\n        setScriptBackStack([...scriptBackStack, script]);\n      }\n    },\n    [scriptBackStack],\n  );\n\n  const goBack = React.useCallback(() => {\n    setScriptBackStack(scriptBackStack.slice(0, scriptBackStack.length - 1));\n  }, [scriptBackStack]);\n\n  const setScriptCode = React.useCallback(\n    (code: string) => {\n      // update code at top of backstack\n      const backStack = [...scriptBackStack];\n      if (backStack.length > 0) {\n        const script = backStack.pop();\n        if (script && !script.readOnly) {\n          setScriptBackStack([...backStack, { ...script, code }]);\n        }\n      }\n    },\n    [scriptBackStack],\n  );\n\n  return (\n    <Stack fullHeight>\n      <PanelToolbar />\n      <Divider />\n      <Stack direction=\"row\" fullHeight overflow=\"hidden\">\n        <Sidebar\n          explorer={explorer}\n          updateExplorer={updateExplorer}\n          selectNode={(nodeId) => {\n            saveCurrentNode();\n            saveConfig({ selectedNodeId: nodeId });\n          }}\n          deleteNode={(nodeId) => {\n            setUserNodes({ ...userNodes, [nodeId]: undefined });\n            saveConfig({ selectedNodeId: undefined });\n          }}\n          selectedNodeId={selectedNodeId}\n          userNodes={userNodes}\n          script={currentScript}\n          setScriptOverride={setScriptOverride}\n          addNewNode={addNewNode}\n        />\n        <Stack\n          flexGrow={1}\n          fullHeight\n          overflow=\"hidden\"\n          style={{\n            backgroundColor: theme.palette.background[prefersDarkMode ? \"paper\" : \"default\"],\n          }}\n        >\n          <Stack direction=\"row\" alignItems=\"center\">\n            {scriptBackStack.length > 1 && (\n              <IconButton title=\"Go back\" data-testid=\"go-back\" size=\"small\" onClick={goBack}>\n                <ArrowBackIcon />\n              </IconButton>\n            )}\n            {selectedNodeId != undefined && selectedNode && (\n              <div style={{ position: \"relative\" }}>\n                <Input\n                  className={classes.input}\n                  size=\"small\"\n                  disableUnderline\n                  placeholder=\"script name\"\n                  value={inputTitle}\n                  disabled={!currentScript || currentScript.readOnly}\n                  onChange={(ev) => {\n                    const newNodeName = ev.target.value;\n                    setInputTitle(newNodeName);\n                    setUserNodes({\n                      ...userNodes,\n                      [selectedNodeId]: { ...selectedNode, name: newNodeName },\n                    });\n                  }}\n                  inputProps={{ spellCheck: false, style: inputStyle }}\n                />\n                {!isNodeSaved && <div className={classes.unsavedDot} />}\n              </div>\n            )}\n            <IconButton\n              title=\"New node\"\n              data-testid=\"new-node\"\n              size=\"small\"\n              onClick={() => addNewNode()}\n            >\n              <AddIcon />\n            </IconButton>\n          </Stack>\n\n          <Stack flexGrow={1} overflow=\"hidden \">\n            {selectedNodeId == undefined && <WelcomeScreen addNewNode={addNewNode} />}\n            <Stack\n              flexGrow={1}\n              fullWidth\n              overflow=\"hidden\"\n              style={{\n                display: selectedNodeId != undefined ? \"flex\" : \"none\",\n                /* Ensures the monaco-editor starts loading before the user opens it */\n              }}\n            >\n              <Suspense\n                fallback={\n                  <Stack\n                    direction=\"row\"\n                    flex=\"auto\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    fullHeight\n                    fullWidth\n                    style={{\n                      backgroundColor:\n                        theme.palette.background[prefersDarkMode ? \"default\" : \"paper\"],\n                    }}\n                  >\n                    <CircularProgress size={28} />\n                  </Stack>\n                }\n              >\n                {editorForStorybook ?? (\n                  <Editor\n                    autoFormatOnSave={autoFormatOnSave}\n                    script={currentScript}\n                    setScriptCode={setScriptCode}\n                    setScriptOverride={setScriptOverride}\n                    rosLib={rosLib}\n                    typesLib={typesLib}\n                    save={saveNode}\n                  />\n                )}\n              </Suspense>\n            </Stack>\n            <Stack>\n              <BottomBar\n                nodeId={selectedNodeId}\n                isSaved={isNodeSaved}\n                save={() => saveNode(currentScript?.code)}\n                diagnostics={selectedNodeDiagnostics}\n                logs={selectedNodeLogs}\n              />\n            </Stack>\n          </Stack>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n\nconst defaultConfig: Config = {\n  selectedNodeId: undefined,\n  autoFormatOnSave: true,\n};\nexport default Panel(\n  Object.assign(NodePlayground, {\n    panelType: \"NodePlayground\",\n    defaultConfig,\n  }),\n);\n"],"names":["severityIcons","Help","Info","Warning","Error","useStyles","theme","diagnostics","classes","Stack","Typography","List","severity","message","source","startColumn","startLineNumber","i","severityLabel","errorLoc","ListItem","ListItemIcon","ListItemText","logs","jsonTreeTheme","valueColorMap","value","idx","renderTreeObj","Link","ListItemButton","TAB_HEIGHT","badgeClasses","tabClasses","nodeId","isSaved","save","bottomBarDisplay","setBottomBarDisplay","autoScroll","setAutoScroll","clearUserNodeLogs","scrollContainer","handleChange","_event","handleClick","Paper","Divider","Tabs","Tab","Badge","Button","Collapse","currentTarget","scrolledUp","NodesList","nodes","selectNode","deleteNode","collapse","selectedNodeId","SidebarHeader","IconButton","DeleteOutline","utilityFiles","title","subheader","CardHeader","Close","userNodes","explorer","updateExplorer","setScriptOverride","script","addNewNode","nodesSelected","utilsSelected","templatesSelected","gotoUtils","filePath","monacoFilePath","requestedModel","activeExplorerTab","explorers","fileName","templates","name","description","template","ConstructionOutlined","Editor","React","skeletonBody","inputClasses","buildSettingsTree","config","WelcomeScreen","EmptyState","Container","Add","EMPTY_USER_NODES","userNodeSelector","state","NodePlayground","props","saveConfig","autoFormatOnSave","editorForStorybook","updatePanelSettingsTree","userNodeDiagnostics","rosLib","typesLib","setUserNodes","selectedNodeDiagnostics","selectedNode","scriptBackStack","setScriptBackStack","currentScript","isCurrentScriptSelectedNode","isNodeSaved","selectedNodeLogs","inputTitle","setInputTitle","prefersDarkMode","inputStyle","actionHandler","action","input","path","testItems","saveCurrentNode","code","newNodeId","sourceCode","saveNode","maxDepth","goBack","setScriptCode","backStack","PanelToolbar","ArrowBack","Input","ev","newNodeName","CircularProgress","defaultConfig","Panel"],"sourceRoot":""}