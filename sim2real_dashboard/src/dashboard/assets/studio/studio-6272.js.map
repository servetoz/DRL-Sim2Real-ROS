{"version":3,"file":"studio-6272.js","mappings":"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","sources":["webpack:///../../node_modules/@protobufjs/aspromise/index.js","webpack:///../../node_modules/@protobufjs/base64/index.js","webpack:///../../node_modules/@protobufjs/codegen/index.js","webpack:///../../node_modules/@protobufjs/eventemitter/index.js","webpack:///../../node_modules/@protobufjs/fetch/index.js","webpack:///../../node_modules/@protobufjs/float/index.js","webpack:///../../node_modules/@protobufjs/inquire/index.js","webpack:///../../node_modules/@protobufjs/path/index.js","webpack:///../../node_modules/@protobufjs/pool/index.js","webpack:///../../node_modules/@protobufjs/utf8/index.js","webpack:///../../node_modules/flatbuffers/mjs/builder.js","webpack:///../../node_modules/flatbuffers/mjs/byte-buffer.js","webpack:///../../node_modules/flatbuffers/mjs/constants.js","webpack:///../../node_modules/flatbuffers/mjs/encoding.js","webpack:///../../node_modules/flatbuffers/mjs/utils.js","webpack:///../../node_modules/protobufjs/index.js","webpack:///../../node_modules/protobufjs/src/common.js","webpack:///../../node_modules/protobufjs/src/converter.js","webpack:///../../node_modules/protobufjs/src/decoder.js","webpack:///../../node_modules/protobufjs/src/encoder.js","webpack:///../../node_modules/protobufjs/src/enum.js","webpack:///../../node_modules/protobufjs/src/field.js","webpack:///../../node_modules/protobufjs/src/index-light.js","webpack:///../../node_modules/protobufjs/src/index-minimal.js","webpack:///../../node_modules/protobufjs/src/index.js","webpack:///../../node_modules/protobufjs/src/mapfield.js","webpack:///../../node_modules/protobufjs/src/message.js","webpack:///../../node_modules/protobufjs/src/method.js","webpack:///../../node_modules/protobufjs/src/namespace.js","webpack:///../../node_modules/protobufjs/src/object.js","webpack:///../../node_modules/protobufjs/src/oneof.js","webpack:///../../node_modules/protobufjs/src/parse.js","webpack:///../../node_modules/protobufjs/src/reader.js","webpack:///../../node_modules/protobufjs/src/reader_buffer.js","webpack:///../../node_modules/protobufjs/src/root.js","webpack:///../../node_modules/protobufjs/src/roots.js","webpack:///../../node_modules/protobufjs/src/rpc.js","webpack:///../../node_modules/protobufjs/src/rpc/service.js","webpack:///../../node_modules/protobufjs/src/service.js","webpack:///../../node_modules/protobufjs/src/tokenize.js","webpack:///../../node_modules/protobufjs/src/type.js","webpack:///../../node_modules/protobufjs/src/types.js","webpack:///../../node_modules/protobufjs/src/util.js","webpack:///../../node_modules/protobufjs/src/util/longbits.js","webpack:///../../node_modules/protobufjs/src/util/minimal.js","webpack:///../../node_modules/protobufjs/src/verifier.js","webpack:///../../node_modules/protobufjs/src/wrappers.js","webpack:///../../node_modules/protobufjs/src/writer.js","webpack:///../../node_modules/protobufjs/src/writer_buffer.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","import { ByteBuffer } from \"./byte-buffer.js\";\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants.js\";\nexport class Builder {\n    /**\n     * Create a FlatBufferBuilder.\n     */\n    constructor(opt_initial_size) {\n        /** Minimum alignment encountered so far. */\n        this.minalign = 1;\n        /** The vtable for the current table. */\n        this.vtable = null;\n        /** The amount of fields we're actually using. */\n        this.vtable_in_use = 0;\n        /** Whether we are currently serializing a table. */\n        this.isNested = false;\n        /** Starting offset of the current struct/table. */\n        this.object_start = 0;\n        /** List of offsets of all vtables. */\n        this.vtables = [];\n        /** For the current vector being built. */\n        this.vector_num_elems = 0;\n        /** False omits default values from the serialized data */\n        this.force_defaults = false;\n        this.string_maps = null;\n        this.text_encoder = new TextEncoder();\n        let initial_size;\n        if (!opt_initial_size) {\n            initial_size = 1024;\n        }\n        else {\n            initial_size = opt_initial_size;\n        }\n        /**\n         * @type {ByteBuffer}\n         * @private\n         */\n        this.bb = ByteBuffer.allocate(initial_size);\n        this.space = initial_size;\n    }\n    clear() {\n        this.bb.clear();\n        this.space = this.bb.capacity();\n        this.minalign = 1;\n        this.vtable = null;\n        this.vtable_in_use = 0;\n        this.isNested = false;\n        this.object_start = 0;\n        this.vtables = [];\n        this.vector_num_elems = 0;\n        this.force_defaults = false;\n        this.string_maps = null;\n    }\n    /**\n     * In order to save space, fields that are set to their default value\n     * don't get serialized into the buffer. Forcing defaults provides a\n     * way to manually disable this optimization.\n     *\n     * @param forceDefaults true always serializes default values\n     */\n    forceDefaults(forceDefaults) {\n        this.force_defaults = forceDefaults;\n    }\n    /**\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n     * called finish(). The actual data starts at the ByteBuffer's current position,\n     * not necessarily at 0.\n     */\n    dataBuffer() {\n        return this.bb;\n    }\n    /**\n     * Get the bytes representing the FlatBuffer. Only call this after you've\n     * called finish().\n     */\n    asUint8Array() {\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n    }\n    /**\n     * Prepare to write an element of `size` after `additional_bytes` have been\n     * written, e.g. if you write a string, you need to align such the int length\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\n     * you need to do is alignment, `additional_bytes` will be 0.\n     *\n     * @param size This is the of the new element to write\n     * @param additional_bytes The padding size\n     */\n    prep(size, additional_bytes) {\n        // Track the biggest thing we've ever aligned to.\n        if (size > this.minalign) {\n            this.minalign = size;\n        }\n        // Find the amount of alignment needed such that `size` is properly\n        // aligned after `additional_bytes`\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n        // Reallocate the buffer if needed.\n        while (this.space < align_size + size + additional_bytes) {\n            const old_buf_size = this.bb.capacity();\n            this.bb = Builder.growByteBuffer(this.bb);\n            this.space += this.bb.capacity() - old_buf_size;\n        }\n        this.pad(align_size);\n    }\n    pad(byte_size) {\n        for (let i = 0; i < byte_size; i++) {\n            this.bb.writeInt8(--this.space, 0);\n        }\n    }\n    writeInt8(value) {\n        this.bb.writeInt8(this.space -= 1, value);\n    }\n    writeInt16(value) {\n        this.bb.writeInt16(this.space -= 2, value);\n    }\n    writeInt32(value) {\n        this.bb.writeInt32(this.space -= 4, value);\n    }\n    writeInt64(value) {\n        this.bb.writeInt64(this.space -= 8, value);\n    }\n    writeFloat32(value) {\n        this.bb.writeFloat32(this.space -= 4, value);\n    }\n    writeFloat64(value) {\n        this.bb.writeFloat64(this.space -= 8, value);\n    }\n    /**\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int8` to add the buffer.\n     */\n    addInt8(value) {\n        this.prep(1, 0);\n        this.writeInt8(value);\n    }\n    /**\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int16` to add the buffer.\n     */\n    addInt16(value) {\n        this.prep(2, 0);\n        this.writeInt16(value);\n    }\n    /**\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int32` to add the buffer.\n     */\n    addInt32(value) {\n        this.prep(4, 0);\n        this.writeInt32(value);\n    }\n    /**\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int64` to add the buffer.\n     */\n    addInt64(value) {\n        this.prep(8, 0);\n        this.writeInt64(value);\n    }\n    /**\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float32` to add the buffer.\n     */\n    addFloat32(value) {\n        this.prep(4, 0);\n        this.writeFloat32(value);\n    }\n    /**\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float64` to add the buffer.\n     */\n    addFloat64(value) {\n        this.prep(8, 0);\n        this.writeFloat64(value);\n    }\n    addFieldInt8(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt8(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt16(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt16(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt64(voffset, value, defaultValue) {\n        if (this.force_defaults || value !== defaultValue) {\n            this.addInt64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat64(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldOffset(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addOffset(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n     */\n    addFieldStruct(voffset, value, defaultValue) {\n        if (value != defaultValue) {\n            this.nested(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structures are always stored inline, they need to be created right\n     * where they're used.  You'll get this assertion failure if you\n     * created it elsewhere.\n     */\n    nested(obj) {\n        if (obj != this.offset()) {\n            throw new TypeError('FlatBuffers: struct must be serialized inline.');\n        }\n    }\n    /**\n     * Should not be creating any other object, string or vector\n     * while an object is being constructed\n     */\n    notNested() {\n        if (this.isNested) {\n            throw new TypeError('FlatBuffers: object serialization must not be nested.');\n        }\n    }\n    /**\n     * Set the current vtable at `voffset` to the current location in the buffer.\n     */\n    slot(voffset) {\n        if (this.vtable !== null)\n            this.vtable[voffset] = this.offset();\n    }\n    /**\n     * @returns Offset relative to the end of the buffer.\n     */\n    offset() {\n        return this.bb.capacity() - this.space;\n    }\n    /**\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\n     * the end of the new buffer (since we build the buffer backwards).\n     *\n     * @param bb The current buffer with the existing data\n     * @returns A new byte buffer with the old data copied\n     * to it. The data is located at the end of the buffer.\n     *\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n     * it a uint8Array we need to suppress the type check:\n     * @suppress {checkTypes}\n     */\n    static growByteBuffer(bb) {\n        const old_buf_size = bb.capacity();\n        // Ensure we don't grow beyond what fits in an int.\n        if (old_buf_size & 0xC0000000) {\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n        }\n        const new_buf_size = old_buf_size << 1;\n        const nbb = ByteBuffer.allocate(new_buf_size);\n        nbb.setPosition(new_buf_size - old_buf_size);\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n        return nbb;\n    }\n    /**\n     * Adds on offset, relative to where it will be written.\n     *\n     * @param offset The offset to add.\n     */\n    addOffset(offset) {\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\n    }\n    /**\n     * Start encoding a new object in the buffer.  Users will not usually need to\n     * call this directly. The FlatBuffers compiler will generate helper methods\n     * that call this method internally.\n     */\n    startObject(numfields) {\n        this.notNested();\n        if (this.vtable == null) {\n            this.vtable = [];\n        }\n        this.vtable_in_use = numfields;\n        for (let i = 0; i < numfields; i++) {\n            this.vtable[i] = 0; // This will push additional elements as needed\n        }\n        this.isNested = true;\n        this.object_start = this.offset();\n    }\n    /**\n     * Finish off writing the object that is under construction.\n     *\n     * @returns The offset to the object inside `dataBuffer`\n     */\n    endObject() {\n        if (this.vtable == null || !this.isNested) {\n            throw new Error('FlatBuffers: endObject called without startObject');\n        }\n        this.addInt32(0);\n        const vtableloc = this.offset();\n        // Trim trailing zeroes.\n        let i = this.vtable_in_use - 1;\n        // eslint-disable-next-line no-empty\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\n        const trimmed_size = i + 1;\n        // Write out the current vtable.\n        for (; i >= 0; i--) {\n            // Offset relative to the start of the table.\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n        }\n        const standard_fields = 2; // The fields below:\n        this.addInt16(vtableloc - this.object_start);\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\n        this.addInt16(len);\n        // Search for an existing vtable that matches the current one.\n        let existing_vtable = 0;\n        const vt1 = this.space;\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\n            const vt2 = this.bb.capacity() - this.vtables[i];\n            if (len == this.bb.readInt16(vt2)) {\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n                        continue outer_loop;\n                    }\n                }\n                existing_vtable = this.vtables[i];\n                break;\n            }\n        }\n        if (existing_vtable) {\n            // Found a match:\n            // Remove the current vtable.\n            this.space = this.bb.capacity() - vtableloc;\n            // Point table to existing vtable.\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n        }\n        else {\n            // No match:\n            // Add the location of the current vtable to the list of vtables.\n            this.vtables.push(this.offset());\n            // Point table to current vtable.\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n        }\n        this.isNested = false;\n        return vtableloc;\n    }\n    /**\n     * Finalize a buffer, poiting to the given `root_table`.\n     */\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\n        if (opt_file_identifier) {\n            const file_identifier = opt_file_identifier;\n            this.prep(this.minalign, SIZEOF_INT +\n                FILE_IDENTIFIER_LENGTH + size_prefix);\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\n                throw new TypeError('FlatBuffers: file identifier must be length ' +\n                    FILE_IDENTIFIER_LENGTH);\n            }\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n                this.writeInt8(file_identifier.charCodeAt(i));\n            }\n        }\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\n        this.addOffset(root_table);\n        if (size_prefix) {\n            this.addInt32(this.bb.capacity() - this.space);\n        }\n        this.bb.setPosition(this.space);\n    }\n    /**\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\n     */\n    finishSizePrefixed(root_table, opt_file_identifier) {\n        this.finish(root_table, opt_file_identifier, true);\n    }\n    /**\n     * This checks a required field has been set in a given table that has\n     * just been constructed.\n     */\n    requiredField(table, field) {\n        const table_start = this.bb.capacity() - table;\n        const vtable_start = table_start - this.bb.readInt32(table_start);\n        const ok = field < this.bb.readInt16(vtable_start) &&\n            this.bb.readInt16(vtable_start + field) != 0;\n        // If this fails, the caller will show what field needs to be set.\n        if (!ok) {\n            throw new TypeError('FlatBuffers: field ' + field + ' must be set');\n        }\n    }\n    /**\n     * Start a new array/vector of objects.  Users usually will not call\n     * this directly. The FlatBuffers compiler will create a start/end\n     * method for vector types in generated code.\n     *\n     * @param elem_size The size of each element in the array\n     * @param num_elems The number of elements in the array\n     * @param alignment The alignment of the array\n     */\n    startVector(elem_size, num_elems, alignment) {\n        this.notNested();\n        this.vector_num_elems = num_elems;\n        this.prep(SIZEOF_INT, elem_size * num_elems);\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n    }\n    /**\n     * Finish off the creation of an array and all its elements. The array must be\n     * created with `startVector`.\n     *\n     * @returns The offset at which the newly created array\n     * starts.\n     */\n    endVector() {\n        this.writeInt32(this.vector_num_elems);\n        return this.offset();\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\n     * already been seen, we return the offset of the already written string\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createSharedString(s) {\n        if (!s) {\n            return 0;\n        }\n        if (!this.string_maps) {\n            this.string_maps = new Map();\n        }\n        if (this.string_maps.has(s)) {\n            return this.string_maps.get(s);\n        }\n        const offset = this.createString(s);\n        this.string_maps.set(s, offset);\n        return offset;\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createString(s) {\n        if (s === null || s === undefined) {\n            return 0;\n        }\n        let utf8;\n        if (s instanceof Uint8Array) {\n            utf8 = s;\n        }\n        else {\n            utf8 = this.text_encoder.encode(s);\n        }\n        this.addInt8(0);\n        this.startVector(1, utf8.length, 1);\n        this.bb.setPosition(this.space -= utf8.length);\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n            bytes[offset++] = utf8[i];\n        }\n        return this.endVector();\n    }\n    /**\n     * A helper function to pack an object\n     *\n     * @returns offset of obj\n     */\n    createObjectOffset(obj) {\n        if (obj === null) {\n            return 0;\n        }\n        if (typeof obj === 'string') {\n            return this.createString(obj);\n        }\n        else {\n            return obj.pack(this);\n        }\n    }\n    /**\n     * A helper function to pack a list of object\n     *\n     * @returns list of offsets of each non null object\n     */\n    createObjectOffsetList(list) {\n        const ret = [];\n        for (let i = 0; i < list.length; ++i) {\n            const val = list[i];\n            if (val !== null) {\n                ret.push(this.createObjectOffset(val));\n            }\n            else {\n                throw new TypeError('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\n            }\n        }\n        return ret;\n    }\n    createStructOffsetList(list, startFunc) {\n        startFunc(this, list.length);\n        this.createObjectOffsetList(list.slice().reverse());\n        return this.endVector();\n    }\n}\n","import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants.js\";\nimport { int32, isLittleEndian, float32, float64 } from \"./utils.js\";\nimport { Encoding } from \"./encoding.js\";\nexport class ByteBuffer {\n    /**\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\n     */\n    constructor(bytes_) {\n        this.bytes_ = bytes_;\n        this.position_ = 0;\n        this.text_decoder_ = new TextDecoder();\n    }\n    /**\n     * Create and allocate a new ByteBuffer with a given size.\n     */\n    static allocate(byte_size) {\n        return new ByteBuffer(new Uint8Array(byte_size));\n    }\n    clear() {\n        this.position_ = 0;\n    }\n    /**\n     * Get the underlying `Uint8Array`.\n     */\n    bytes() {\n        return this.bytes_;\n    }\n    /**\n     * Get the buffer's position.\n     */\n    position() {\n        return this.position_;\n    }\n    /**\n     * Set the buffer's position.\n     */\n    setPosition(position) {\n        this.position_ = position;\n    }\n    /**\n     * Get the buffer's capacity.\n     */\n    capacity() {\n        return this.bytes_.length;\n    }\n    readInt8(offset) {\n        return this.readUint8(offset) << 24 >> 24;\n    }\n    readUint8(offset) {\n        return this.bytes_[offset];\n    }\n    readInt16(offset) {\n        return this.readUint16(offset) << 16 >> 16;\n    }\n    readUint16(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n    }\n    readInt32(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n    }\n    readUint32(offset) {\n        return this.readInt32(offset) >>> 0;\n    }\n    readInt64(offset) {\n        return BigInt.asIntN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readUint64(offset) {\n        return BigInt.asUintN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readFloat32(offset) {\n        int32[0] = this.readInt32(offset);\n        return float32[0];\n    }\n    readFloat64(offset) {\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n        return float64[0];\n    }\n    writeInt8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeUint8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeInt16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeUint16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeInt32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeUint32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeInt64(offset, value) {\n        this.writeInt32(offset, Number(BigInt.asIntN(32, value)));\n        this.writeInt32(offset + 4, Number(BigInt.asIntN(32, value >> BigInt(32))));\n    }\n    writeUint64(offset, value) {\n        this.writeUint32(offset, Number(BigInt.asUintN(32, value)));\n        this.writeUint32(offset + 4, Number(BigInt.asUintN(32, value >> BigInt(32))));\n    }\n    writeFloat32(offset, value) {\n        float32[0] = value;\n        this.writeInt32(offset, int32[0]);\n    }\n    writeFloat64(offset, value) {\n        float64[0] = value;\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\n    }\n    /**\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n     * schema does not include a file_identifier (likely points at padding or the\n     * start of a the root vtable).\n     */\n    getBufferIdentifier() {\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\n            FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\n        }\n        let result = \"\";\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\n        }\n        return result;\n    }\n    /**\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\n     * field is not present.\n     */\n    __offset(bb_pos, vtable_offset) {\n        const vtable = bb_pos - this.readInt32(bb_pos);\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n    }\n    /**\n     * Initialize any Table-derived type to point to the union at the given offset.\n     */\n    __union(t, offset) {\n        t.bb_pos = offset + this.readInt32(offset);\n        t.bb = this;\n        return t;\n    }\n    /**\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n     * This allocates a new string and converts to wide chars upon each access.\n     *\n     * To avoid the conversion to string, pass Encoding.UTF8_BYTES as the\n     * \"optionalEncoding\" argument. This is useful for avoiding conversion when\n     * the data will just be packaged back up in another FlatBuffer later on.\n     *\n     * @param offset\n     * @param opt_encoding Defaults to UTF16_STRING\n     */\n    __string(offset, opt_encoding) {\n        offset += this.readInt32(offset);\n        const length = this.readInt32(offset);\n        offset += SIZEOF_INT;\n        const utf8bytes = this.bytes_.subarray(offset, offset + length);\n        if (opt_encoding === Encoding.UTF8_BYTES)\n            return utf8bytes;\n        else\n            return this.text_decoder_.decode(utf8bytes);\n    }\n    /**\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\n     * if a string then return a new one\n     *\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\n     * makes the behaviour of __union_with_string different compared to __union\n     */\n    __union_with_string(o, offset) {\n        if (typeof o === 'string') {\n            return this.__string(offset);\n        }\n        return this.__union(o, offset);\n    }\n    /**\n     * Retrieve the relative offset stored at \"offset\"\n     */\n    __indirect(offset) {\n        return offset + this.readInt32(offset);\n    }\n    /**\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector(offset) {\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\n    }\n    /**\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector_len(offset) {\n        return this.readInt32(offset + this.readInt32(offset));\n    }\n    __has_identifier(ident) {\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: file identifier must be length ' +\n                FILE_IDENTIFIER_LENGTH);\n        }\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * A helper function for generating list for obj api\n     */\n    createScalarList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val);\n            }\n        }\n        return ret;\n    }\n    /**\n     * A helper function for generating list for obj api\n     * @param listAccessor function that accepts an index and return data at that index\n     * @param listLength listLength\n     * @param res result list\n     */\n    createObjList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val.unpack());\n            }\n        }\n        return ret;\n    }\n}\n","export const SIZEOF_SHORT = 2;\nexport const SIZEOF_INT = 4;\nexport const FILE_IDENTIFIER_LENGTH = 4;\nexport const SIZE_PREFIX_LENGTH = 4;\n","export var Encoding;\n(function (Encoding) {\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\n})(Encoding || (Encoding = {}));\n","export const int32 = new Int32Array(2);\nexport const float32 = new Float32Array(int32.buffer);\nexport const float64 = new Float64Array(int32.buffer);\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"(m%s=d%s)\", prop, prop)\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"d%s=m%s\", prop, prop);\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"d%s=%sn\", prop, field.typeDefault);\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = types.long[type] !== undefined;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        // nothing to do\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = \"toBigInt\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        // look for 1 or 2 slashes since startOffset would already point past\n        // the first slash that started the comment.\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0n,\n    /* uint64   */ 0n,\n    /* sint64   */ 0n,\n    /* fixed64  */ 0n,\n    /* sfixed64 */ 0n,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 1,\n    /* uint64   */ 1,\n    /* sint64   */ 1,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\nconst view = new DataView(new ArrayBuffer(8));\nLongBits.prototype.toBigInt = function toBigInt(unsigned) {\n    view.setUint32(0, this.lo, true);\n    view.setUint32(4, this.hi, true);\n    return unsigned ? view.getBigUint64(0, true) : view.getBigInt64(0, true);\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n"],"names":["module","asPromise","fn","ctx","params","offset","index","pending","resolve","reject","err","base64","exports","string","p","n","b64","s64","i","buffer","start","end","parts","chunk","j","t","b","invalidEncoding","c","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","$0","$1","value","functionNameOverride","EventEmitter","evt","listeners","args","fetch","inquire","fs","filename","options","callback","contents","xhr","factory","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloat_ieee754","writeUint","sign","exponent","mantissa","writeUintLE","writeUintBE","readFloat_ieee754","readUint","uint","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","e","path","isAbsolute","normalize","absolute","prefix","originPath","includePath","alreadyNormalized","pool","alloc","slice","size","SIZE","MAX","slab","utf8","len","c1","c2","Builder","opt_initial_size","initial_size","forceDefaults","additional_bytes","align_size","old_buf_size","byte_size","voffset","defaultValue","obj","bb","new_buf_size","nbb","numfields","vtableloc","trimmed_size","standard_fields","existing_vtable","vt1","outer_loop","vt2","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","table","field","table_start","vtable_start","elem_size","num_elems","alignment","s","bytes","list","ret","startFunc","ByteBuffer","bytes_","position","result","bb_pos","vtable_offset","vtable","opt_encoding","length","utf8bytes","o","ident","listAccessor","listLength","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","int32","float32","float64","isLittleEndian","common","commonRe","name","json","timeType","file","converter","Enum","util","genValuePartial_fromObject","gen","fieldIndex","prop","defaultAlreadyEmitted","values","keys","isUnsigned","mtype","fields","genValuePartial_toObject","repeatedFields","mapFields","normalFields","arrayDefault","hasKs2","decoder","types","missing","type","ref","rfield","encoder","genTypePartial","wireType","ReflectionObject","Namespace","comment","comments","valuesOptions","enm","toJSONOptions","keepComments","id","Field","Type","ruleRe","rule","extend","ifNotSet","fieldId","fieldType","fieldRule","prototype","fieldName","Type_","protobuf","load","root","loadSync","configure","MapField","keyType","fieldKeyType","fieldValueType","Message","properties","message","writer","reader","object","Method","requestType","responseType","requestStream","responseStream","parsedOptions","OneOf","Service","arrayToJSON","array","reserved","clearCache","namespace","nestedJson","ns","names","nested","prev","ptr","part","filterTypes","parentAlreadyChecked","found","Service_","Enum_","Root","parent","propName","opt","newValue","newOpt","className","fullName","Root_","fieldNames","addFieldsToParent","oneof","self","oneofName","parse","tokenize","base10Re","base10NegRe","base16Re","base16NegRe","base8Re","base8NegRe","numberRe","nameRe","typeRefRe","fqTypeRefRe","preferTrailingComment","tn","next","push","peek","skip","cmnt","head","pkg","imports","weakImports","syntax","isProto3","applyCase","illegal","token","insideTryCatch","readString","readValue","acceptTypeRef","parseNumber","readRanges","target","acceptStrings","parseId","acceptNegative","parsePackage","parseImport","whichImports","parseSyntax","parseCommon","parseOption","parseType","parseEnum","parseService","parseExtension","ifBlock","fnIf","fnElse","trailingLine","parseMapField","parseField","parseOneOf","parseGroup","parseInlineOptions","valueType","parseEnumValue","dummy","isCustom","option","optionValue","parseOptionValue","setParsedOption","objectResult","lastValue","setOption","prevValue","simpleValue","service","parseMethod","commentText","method","reference","Reader","BufferReader","LongBits","indexOutOfRange","writeLength","create_array","create","readLongVarint","bits","readFixed32_end","readFixed64","BufferReader_","SYNC","sync","finish","cb","getBundledFileName","idx","altname","process","parsed","resolved","queued","weak","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpc","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","inherited","methods","rpcService","methodName","delimRe","stringDoubleRe","stringSingleRe","setCommentRe","setCommentAltRe","setCommentSplitRe","whitespaceRe","unescapeRe","unescapeMap","unescape","str","alternateCommentMode","line","lastCommentLine","stack","stringDelim","subject","re","match","charAt","setComment","isLeading","lookback","commentOffset","lines","isDoubleSlashCommentLine","startOffset","endOffset","findEndOfLine","lineText","isComment","cursor","repeat","curr","isDoc","isLeadingComment","delim","expected","optional","actual","equals","Writer","verifier","wrappers","ctor","ctorProperties","oneofs","wrapper","originalThis","typeName","bake","roots","key","safePropBackslashRe","safePropQuoteRe","camelCaseRe","a","decorateEnumIndex","dst","setProp","zero","zeroHash","unsigned","view","charCodeAt","hash","mask","part0","part1","part2","Buffer","sizeOrArray","merge","src","newError","CustomError","fieldMap","encoding","invalid","genVerifyValue","genVerifyKey","seenFirstField","oneofProp","type_url","googleApi","messageName","BufferWriter","Op","noop","State","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","writeBytes","tail","BufferWriter_","writeStringBuffer"],"sourceRoot":""}