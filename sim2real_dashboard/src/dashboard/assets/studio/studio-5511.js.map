{"version":3,"file":"studio-5511.js","mappings":"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","sources":["webpack:///../../packages/den/collection/filterMap.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeTransformerWorker/generateRosLib.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/types.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeTransformerWorker/typescript/errors.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeTransformerWorker/typescript/ast.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeTransformerWorker/utils.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeTransformerWorker/transform.ts","webpack:///../../packages/studio-base/src/util/Rpc.ts","webpack:///../../packages/studio-base/src/reportError.ts","webpack:///../../packages/studio-base/src/util/errors.ts","webpack:///../../packages/studio-base/src/util/workers.ts","webpack:///../../packages/studio-base/src/util/sendNotification.ts","webpack:///../../packages/studio-base/src/util/RpcWorkerUtils.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeTransformerWorker/index.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeTransformerWorker/typescript/ros.ts","webpack:///../../packages/studio-base/src/util/globalConstants.ts","webpack:///../../packages/studio-base/src/util/process.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/importScripts chunk loading","webpack:///webpack/runtime/startup chunk dependencies","webpack:///webpack/startup"],"sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\n/**\n * filterMap creates a new array populated with the results of calling a provided function on every\n * element in the calling array. Results which resolve to a javascript \"false\" value are discarded\n * from the array.\n *\n * This is a more efficient version of [...values].map(mapFn).filter(Boolean) that avoids two\n * iterations of the array.\n */\nexport default function filterMap<T, U>(\n  values: Iterable<T>,\n  mapFn: (arg0: T, arg1: number) => U | undefined,\n): U[] {\n  const results: Array<U> = [];\n  let index = 0;\n  for (const item of values) {\n    const mappedItem = mapFn(item, index++);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (mappedItem) {\n      results.push(mappedItem);\n    }\n  }\n  return results;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport ts from \"typescript/lib/typescript\";\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { Topic } from \"@foxglove/studio-base/players/types\";\nimport { RosDatatypes } from \"@foxglove/studio-base/types/RosDatatypes\";\n\nexport type InterfaceDeclarations = {\n  [datatype: string]: ts.InterfaceDeclaration;\n};\n\nconst modifiers = [\n  ts.factory.createModifier(ts.SyntaxKind.ExportKeyword),\n  ts.factory.createModifier(ts.SyntaxKind.DeclareKeyword),\n];\n\nconst createProperty = (name: string | ts.PropertyName, type: ts.TypeNode) => {\n  return ts.factory.createPropertySignature(\n    undefined /* modifiers */,\n    name /* name */,\n    undefined /* questionOrExclamationToken */,\n    type /* type */,\n  );\n};\n\nconst createTimeInterfaceDeclaration = (name: string) => {\n  return ts.factory.createInterfaceDeclaration(\n    modifiers /* modifiers */,\n    name /* name */,\n    undefined /* typeParameters */,\n    undefined /* heritageClauses */,\n    [\n      createProperty(\"sec\", ts.factory.createKeywordTypeNode(ts.SyntaxKind.NumberKeyword)),\n      createProperty(\"nsec\", ts.factory.createKeywordTypeNode(ts.SyntaxKind.NumberKeyword)),\n    ] /* members */,\n  );\n};\n\n// Since rosbagjs treats json as a primitive, we have to shim it in.\nconst jsonInterfaceDeclaration = ts.factory.createInterfaceDeclaration(\n  modifiers,\n  /* modifiers */\n  \"json\",\n  /* name */\n  undefined,\n  /* typeParameters */\n  undefined,\n  /* heritageClauses */\n  [],\n  /* members */\n);\n\nexport const formatInterfaceName = (type: string): string => type.replace(/\\//g, \"__\");\n\n// http://wiki.ros.org/msg\nconst rosPrimitivesToTypeScriptMap = new Map<string, ts.KeywordTypeSyntaxKind>([\n  [\"uint8\", ts.SyntaxKind.NumberKeyword],\n  [\"int8\", ts.SyntaxKind.NumberKeyword],\n  [\"uint16\", ts.SyntaxKind.NumberKeyword],\n  [\"int16\", ts.SyntaxKind.NumberKeyword],\n  [\"uint32\", ts.SyntaxKind.NumberKeyword],\n  [\"int32\", ts.SyntaxKind.NumberKeyword],\n  [\"float32\", ts.SyntaxKind.NumberKeyword],\n  [\"float64\", ts.SyntaxKind.NumberKeyword],\n  [\"int64\", ts.SyntaxKind.NumberKeyword],\n  [\"uint64\", ts.SyntaxKind.NumberKeyword],\n  [\"string\", ts.SyntaxKind.StringKeyword],\n  [\"bool\", ts.SyntaxKind.BooleanKeyword],\n]);\n\n// NOTE: This list should stay in sync with rosbagjs. Exported for tests.\nexport const typedArrayMap = new Map<string, string>([\n  [\"uint8\", \"Uint8Array\"],\n  [\"int8\", \"Int8Array\"],\n]);\n\nconst timeInterface = createTimeInterfaceDeclaration(\"Time\");\nconst durationInterface = createTimeInterfaceDeclaration(\"Duration\");\nconst rosSpecialTypesToTypescriptMap = new Map([\n  [\"time\", timeInterface],\n  [\"duration\", durationInterface],\n]);\n\n// Creates a 1-1 mapping of ROS datatypes to Typescript interface declarations.\nexport const generateTypeDefs = (datatypes: RosDatatypes): InterfaceDeclarations => {\n  const interfaceDeclarations: InterfaceDeclarations = {};\n\n  for (const [datatype, definition] of datatypes) {\n    if (datatype.includes(\".\")) {\n      // Skip newer types that are not supported by generateRosLib; these will have interfaces\n      // generated via generateTypesLib and can be used that way.\n      continue;\n    }\n    if (interfaceDeclarations[datatype]) {\n      continue;\n    }\n\n    const typeMembers = filterMap(definition.definitions, ({ name, type, isArray, isConstant }) => {\n      let node;\n      const typedArray = typedArrayMap.get(type);\n      const rosPrimitive = rosPrimitivesToTypeScriptMap.get(type);\n      const rosSpecial = rosSpecialTypesToTypescriptMap.get(type);\n      if (isConstant === true) {\n        return undefined;\n      } else if (isArray === true && typedArray != undefined) {\n        node = ts.factory.createTypeReferenceNode(typedArray);\n      } else if (rosPrimitive != undefined) {\n        node = ts.factory.createKeywordTypeNode(rosPrimitive);\n      } else if (rosSpecial) {\n        node = ts.factory.createTypeReferenceNode(rosSpecial.name);\n      } else {\n        node = ts.factory.createTypeReferenceNode(formatInterfaceName(type));\n      }\n      if (isArray === true && typedArray == undefined) {\n        node = ts.factory.createArrayTypeNode(node);\n      }\n\n      return createProperty(name, node);\n    });\n\n    interfaceDeclarations[datatype] = ts.factory.createInterfaceDeclaration(\n      [ts.factory.createModifier(ts.SyntaxKind.ExportKeyword)] /* modifiers */,\n      formatInterfaceName(datatype) /* name */,\n      undefined /* typeParameters */,\n      undefined /* heritageClauses */,\n      typeMembers /* members */,\n    );\n  }\n\n  return interfaceDeclarations;\n};\n\n// Creates the entire ros.d.ts declaration file.\nconst generateRosLib = ({\n  topics,\n  datatypes,\n}: {\n  topics: Topic[];\n  datatypes: RosDatatypes;\n}): string => {\n  let TopicsToMessageDefinition = ts.factory.createInterfaceDeclaration(\n    modifiers,\n    \"TopicsToMessageDefinition\",\n    undefined,\n    undefined,\n    [],\n  );\n\n  const typedMessage = ts.factory.createInterfaceDeclaration(\n    modifiers,\n    /* modifiers */\n    \"Input\",\n    /* name */\n    [\n      ts.factory.createTypeParameterDeclaration(\n        [],\n        \"T\",\n        ts.factory.createTypeOperatorNode(\n          ts.SyntaxKind.KeyOfKeyword,\n          ts.factory.createTypeReferenceNode(TopicsToMessageDefinition.name),\n        ),\n      ),\n    ],\n    /* typeParameters */\n    undefined,\n    /* heritageClauses */\n    [\n      createProperty(\"topic\", ts.factory.createTypeReferenceNode(\"T\")),\n      createProperty(\"receiveTime\", ts.factory.createTypeReferenceNode(\"Time\")),\n      createProperty(\"message\", ts.factory.createTypeReferenceNode(\"TopicsToMessageDefinition[T]\")),\n    ],\n    /* members */\n  );\n\n  const DATATYPES_IDENTIFIER = \"Messages\";\n\n  let datatypeInterfaces = generateTypeDefs(datatypes);\n\n  topics.forEach(({ name, schemaName }) => {\n    if (schemaName == undefined) {\n      return;\n    }\n    if (!datatypeInterfaces[schemaName]) {\n      datatypeInterfaces = {\n        ...datatypeInterfaces,\n        ...generateTypeDefs(new Map(Object.entries({ [schemaName]: { definitions: [] } }))),\n      };\n    }\n\n    TopicsToMessageDefinition = ts.factory.updateInterfaceDeclaration(\n      TopicsToMessageDefinition,\n      /* node */\n      modifiers,\n      /* modifiers */\n      TopicsToMessageDefinition.name,\n      undefined,\n      /* typeParameters */\n      undefined,\n      /* heritageClauses */\n      [\n        ...TopicsToMessageDefinition.members,\n        createProperty(\n          ts.factory.createStringLiteral(name),\n          ts.factory.createTypeReferenceNode(\n            `${DATATYPES_IDENTIFIER}.${formatInterfaceName(schemaName)}`,\n          ),\n        ),\n      ],\n      /* members */\n    );\n  });\n\n  const datatypesNamespace = ts.factory.createModuleDeclaration(\n    modifiers,\n    /* modifiers */\n    ts.factory.createIdentifier(DATATYPES_IDENTIFIER),\n    ts.factory.createModuleBlock(\n      Object.values(datatypeInterfaces).map((val) => {\n        return val;\n      }),\n    ),\n    ts.NodeFlags.Namespace,\n  );\n\n  const sourceFile = ts.createSourceFile(\n    \"\", // This argument doesn't really matter.\n    \"\",\n    /* sourceText */\n    ts.ScriptTarget.Latest,\n    false,\n    /* setParentNodes */\n    ts.ScriptKind.TS,\n    /* scriptKind */\n  );\n\n  // The following formatting could be accomplished with `printer.printList`,\n  // however adding inline comments this way was easier.\n  const printer = ts.createPrinter();\n  const result = `\n    ${printer.printNode(ts.EmitHint.Unspecified, jsonInterfaceDeclaration, sourceFile)}\n    ${printer.printNode(ts.EmitHint.Unspecified, TopicsToMessageDefinition, sourceFile)}\n    ${printer.printNode(ts.EmitHint.Unspecified, durationInterface, sourceFile)}\n    ${printer.printNode(ts.EmitHint.Unspecified, timeInterface, sourceFile)}\n\n    /**\n     * This type contains every message declaration in your bag, so that you can\n     * refer to the type \"std_msgs/RGBA\" as \"std_msgs__RGBA\" wherever you like.\n     */\n    ${printer.printNode(ts.EmitHint.Unspecified, datatypesNamespace, sourceFile)}\n\n    /**\n     * To correctly type your inputs, you use this type to refer to specific\n     * input topics, e.g. 'Input<\"/your_input_topic\">'. If you have\n     * multiple input topics, use a union type, e.g.\n     * 'Input<\"/your_input_topic_1\"> |\n     * Input<\"/your_input_topic_2\">'.\n     *\n     * These types are dynamically generated from the bag(s) currently in your\n     * Foxglove Studio session, so if a datatype changes, your User Script\n     * may not compile on the newly formatted bag.\n     */\n    ${printer.printNode(ts.EmitHint.Unspecified, typedMessage, sourceFile)}\n  `;\n\n  return result;\n};\n\nexport default generateRosLib;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport type { SourceFile, TypeChecker } from \"typescript\";\n\nimport { GlobalVariables } from \"@foxglove/studio-base/hooks/useGlobalVariables\";\nimport { Topic, MessageEvent } from \"@foxglove/studio-base/players/types\";\nimport { RosDatatypes } from \"@foxglove/studio-base/types/RosDatatypes\";\n\n// make sure to use import type to avoid bringing in the actual implementations to the bundle\n\nexport const DiagnosticSeverity = {\n  Hint: 1,\n  Info: 2,\n  Warning: 4,\n  Error: 8,\n};\n\nexport const Sources = {\n  Typescript: \"Typescript\",\n  DatatypeExtraction: \"DatatypeExtraction\",\n  InputTopicsChecker: \"InputTopicsChecker\",\n  OutputTopicChecker: \"OutputTopicChecker\",\n  Runtime: \"Runtime\",\n};\n\nexport const ErrorCodes = {\n  RUNTIME: 1,\n  DatatypeExtraction: {\n    NO_DEFAULT_EXPORT: 1,\n    NON_FUNC_DEFAULT_EXPORT: 2,\n    NO_TYPE_RETURN: 3,\n    BAD_TYPE_RETURN: 4,\n    UNKNOWN_ERROR: 5,\n    NO_UNIONS: 6,\n    NO_FUNCTIONS: 7,\n    NO_CLASSES: 8,\n    NO_TYPE_LITERALS: 9,\n    NO_TUPLES: 10,\n    NO_INTERSECTION_TYPES: 11,\n    NO_TYPEOF: 12,\n    PREFER_ARRAY_LITERALS: 13,\n    STRICT_MARKERS_RETURN_TYPE: 14,\n    LIMITED_UNIONS: 15,\n    NO_NESTED_ANY: 16,\n    NO_MAPPED_TYPES: 17,\n    INVALID_PROPERTY: 18,\n    INVALID_INDEXED_ACCESS: 19,\n  },\n  InputTopicsChecker: {\n    NO_TOPIC_AVAIL: 1,\n    NO_INPUTS_EXPORT: 2,\n    EMPTY_INPUTS_EXPORT: 3,\n    BAD_INPUTS_TYPE: 4,\n  },\n  OutputTopicChecker: {\n    NO_OUTPUTS: 1,\n    NOT_UNIQUE: 2,\n    EXISTING_TOPIC: 3,\n  },\n};\n\nexport type Diagnostic = {\n  severity: (typeof DiagnosticSeverity)[keyof typeof DiagnosticSeverity];\n  message: string;\n  source: (typeof Sources)[keyof typeof Sources];\n  startLineNumber?: number;\n  startColumn?: number;\n  endLineNumber?: number;\n  endColumn?: number;\n  code: number;\n};\n\nexport type NodeData = {\n  name: string;\n  sourceCode: string;\n  transpiledCode: string;\n  projectCode: Map<string, string> | undefined;\n  diagnostics: readonly Diagnostic[];\n  inputTopics: readonly string[];\n  outputTopic: string;\n  outputDatatype: string;\n  datatypes: RosDatatypes;\n  sourceFile?: SourceFile;\n  typeChecker?: TypeChecker;\n  rosLib: string;\n  typesLib: string;\n  // An array of globalVariable names\n  globalVariables: readonly string[];\n};\n\nexport type NodeRegistration = {\n  nodeId: string;\n  nodeData: NodeData;\n  inputs: readonly string[];\n  output: Topic;\n  processBlockMessage: (\n    messageEvent: MessageEvent,\n    globalVariables: GlobalVariables,\n  ) => Promise<MessageEvent | undefined>;\n  processMessage: (\n    messageEvent: MessageEvent,\n    globalVariables: GlobalVariables,\n  ) => Promise<MessageEvent | undefined>;\n  terminate: () => void;\n};\n\nexport type NodeDataTransformer = (nodeData: NodeData, topics: Topic[]) => NodeData;\n\nexport type UserNodeLog = {\n  source: \"registerNode\" | \"processMessage\";\n  value: unknown;\n};\n\nexport type RegistrationOutput = {\n  error?: string;\n  userNodeLogs: UserNodeLog[];\n  userNodeDiagnostics: Diagnostic[];\n};\n\nexport type ProcessMessageOutput = {\n  message: Record<string, unknown> | undefined;\n  error?: string;\n  userNodeLogs: UserNodeLog[];\n  userNodeDiagnostics: Diagnostic[];\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport {\n  DiagnosticSeverity,\n  Sources,\n  ErrorCodes,\n} from \"@foxglove/studio-base/players/UserNodePlayer/types\";\n\nexport const noFuncError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"No 'default export' function found.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_DEFAULT_EXPORT,\n};\n\nexport const nonFuncError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"The 'default export' must be assigned to a function.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NON_FUNC_DEFAULT_EXPORT,\n};\n\nexport const badTypeReturnError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"The 'default export' function must return an object type with at least one property.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.BAD_TYPE_RETURN,\n};\n\nexport const limitedUnionsError = {\n  severity: DiagnosticSeverity.Error,\n  message:\n    \"The 'default export' function can only return union types of the form: 'YourType | undefined'.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.LIMITED_UNIONS,\n};\n\nexport const unionsError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"Unions are not allowed in return type.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_UNIONS,\n};\n\nexport const functionError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"Functions are not allowed as or in the return type.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_FUNCTIONS,\n};\n\nexport const noTypeLiteralsError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"Type literals are not allowed as or in the return type.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_TYPE_LITERALS,\n};\n\nexport const noIntersectionTypesError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"Type intersections are not allowed as or in the return type.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_INTERSECTION_TYPES,\n};\n\nexport const preferArrayLiteral = {\n  severity: DiagnosticSeverity.Error,\n  message: \"Please use array literal syntax (e.g. 'number[]') instead of the 'Array<number>'.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.PREFER_ARRAY_LITERALS,\n};\n\nexport const classError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"Classes are not allowed as or in the return type.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_CLASSES,\n};\n\nexport const noTypeOfError = {\n  severity: DiagnosticSeverity.Error,\n  message: \"'typeof' cannot be used as or in the return type\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_TYPEOF,\n};\n\nexport const noTuples = {\n  severity: DiagnosticSeverity.Error,\n  message: \"Tuples are not allowed as types.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_TUPLES,\n};\n\nexport const noNestedAny = {\n  severity: DiagnosticSeverity.Error,\n  message: \"Cannot nest 'any' in the return type.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_NESTED_ANY,\n};\n\nexport const noMappedTypes = {\n  severity: DiagnosticSeverity.Error,\n  message: \"MappedTypes such as Record<Keys,Type> are not supported.\",\n  source: Sources.DatatypeExtraction,\n  code: ErrorCodes.DatatypeExtraction.NO_MAPPED_TYPES,\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport ts from \"typescript/lib/typescript\";\n\nimport { MessageDefinitionField } from \"@foxglove/message-definition\";\nimport {\n  noFuncError,\n  nonFuncError,\n  badTypeReturnError,\n  unionsError,\n  functionError,\n  noTypeLiteralsError,\n  noIntersectionTypesError,\n  preferArrayLiteral,\n  classError,\n  noTypeOfError,\n  noMappedTypes,\n  noTuples,\n  limitedUnionsError,\n  noNestedAny,\n} from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/typescript/errors\";\nimport {\n  DiagnosticSeverity,\n  Sources,\n  ErrorCodes,\n  Diagnostic,\n} from \"@foxglove/studio-base/players/UserNodePlayer/types\";\nimport type { RosDatatypes } from \"@foxglove/studio-base/types/RosDatatypes\";\n\ntype TypeParam = {\n  parent?: TypeParam;\n  current?: ts.TypeParameterDeclaration | ts.TypeNode;\n};\n\ntype TypeMap = {\n  [key: string]: TypeParam;\n};\n\n// Ensures our recursive AST traversals don't too far down.\nconst MAX_DEPTH = 100;\n\n// This class of error is explicitly for users debugging within NodePlayground.\n// In other words, it is the **known** set of errors. Since this error class requires\n// diagnostic information, it will enable users to figure out where their code\n// has broken according to our rules. It should **not** be used in code paths where we cannot\n// provide any helpful debugging information to the user. In the event we come across an unknown\n// error class, just throw a regular error. This error will be reported in the notification tab\n// as a true error, so that users can inform us when things are truly broken.\nexport class DatatypeExtractionError extends Error {\n  public diagnostic: Diagnostic;\n  public constructor(diagnostic: Diagnostic) {\n    super();\n    this.diagnostic = diagnostic;\n  }\n}\n\nexport const findChild = (node: ts.Node, kind: ts.SyntaxKind[]): ts.Node | undefined =>\n  ts.forEachChild(node, (child) => {\n    if (kind.includes(child.kind)) {\n      return child;\n    }\n    return undefined;\n  });\n\n// Symbols can have multiple declarations associated with them. For instance,\n// `const myType = 'my-type';` and `type myType = string` would map to the same\n// symbol. In those instances, we should ideally search through the declarations\n// on a symbol to explicitly find what we are looking for.\nexport const findDeclaration = (symbol: ts.Symbol, kind: ts.SyntaxKind[]): ts.Node | undefined => {\n  for (const declaration of symbol.declarations ?? []) {\n    if (kind.includes(declaration.kind)) {\n      return declaration;\n    }\n  }\n  return undefined;\n};\n\nconst findImportedTypeDeclaration = (\n  checker: ts.TypeChecker,\n  node: ts.Node,\n  kind: ts.SyntaxKind[],\n): ts.Node | undefined => {\n  const symbol = maybeSymbol(node);\n  if (!symbol) {\n    return undefined;\n  }\n\n  const declaredType = checker.getDeclaredTypeOfSymbol(symbol);\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return findDeclaration(declaredType.symbol ?? declaredType.aliasSymbol, kind);\n};\n\n// These functions are used to build up mapping for generic types.\nconst buildTypeMapFromParams = (\n  typeParameters: readonly ts.TypeParameterDeclaration[] = [],\n  typeMap: TypeMap,\n): TypeMap => {\n  const newTypeParamMap: TypeMap = {};\n  for (let i = 0; i < typeParameters.length; i++) {\n    const currentParam = typeParameters[i];\n    if (!currentParam) {\n      continue;\n    }\n    newTypeParamMap[currentParam.name.escapedText.toString()] = {\n      current: currentParam,\n      parent: typeMap[i] ?? { parent: undefined, current: currentParam.default },\n    };\n  }\n  return newTypeParamMap;\n};\n\nconst buildTypeMapFromArgs = (\n  typeArguments: readonly ts.TypeNode[] = [],\n  typeMap: TypeMap,\n): TypeMap => {\n  const newTypeParamMap: TypeMap = {};\n  typeArguments.forEach((typeArg, i) => {\n    const text = typeArg.getText();\n    const parent = typeMap[text] ?? typeMap[i];\n    const current = typeArg;\n    newTypeParamMap[i] = { current, parent };\n  });\n  return newTypeParamMap;\n};\n\nconst isNodeFromRosModule = (node: ts.TypeLiteralNode | ts.InterfaceDeclaration): boolean => {\n  return node.getSourceFile().fileName.endsWith(\"ros/index.d.ts\");\n};\n\nfunction maybeSymbol(node: ts.Node): ts.Symbol | undefined {\n  return (node as unknown as ts.Type | undefined)?.symbol;\n}\n\nexport const findDefaultExportFunction = (\n  source: ts.SourceFile,\n  checker: ts.TypeChecker,\n): ts.Node | undefined => {\n  const symbol = maybeSymbol(source);\n  if (!symbol) {\n    return undefined;\n  }\n\n  const defaultExportSymbol = checker\n    .getExportsOfModule(symbol)\n    .find((node) => node.escapedName === \"default\");\n  if (!defaultExportSymbol) {\n    throw new DatatypeExtractionError(noFuncError);\n  }\n\n  const functionDeclarationNode = findDeclaration(defaultExportSymbol, [\n    ts.SyntaxKind.FunctionDeclaration,\n  ]);\n  if (functionDeclarationNode) {\n    return functionDeclarationNode;\n  }\n\n  const exportAssignmentNode = findDeclaration(defaultExportSymbol, [\n    ts.SyntaxKind.ExportAssignment,\n  ]);\n\n  if (!exportAssignmentNode) {\n    throw new DatatypeExtractionError(noFuncError);\n  }\n\n  const exportedNode = findChild(exportAssignmentNode, [\n    ts.SyntaxKind.FunctionDeclaration,\n    ts.SyntaxKind.FunctionExpression,\n    ts.SyntaxKind.ArrowFunction,\n    ts.SyntaxKind.Identifier,\n  ]);\n\n  if (!exportedNode) {\n    throw new DatatypeExtractionError(nonFuncError);\n  }\n\n  return exportedNode;\n};\n\nexport const findReturnType = (\n  typeChecker: ts.TypeChecker,\n  node: ts.Node,\n): ts.TypeLiteralNode | ts.InterfaceDeclaration => {\n  const resolveType = typeChecker.getTypeAtLocation(node);\n\n  const signatures = resolveType.getCallSignatures();\n  const signature = signatures[0];\n  if (signatures.length !== 1 || !signature) {\n    throw new DatatypeExtractionError(nonFuncError);\n  }\n\n  const fullReturnType = typeChecker.getReturnTypeOfSignature(signature);\n  const nonNullable = fullReturnType.getNonNullableType();\n\n  // In some future we could support intersection types where all the fields are known\n  if (nonNullable.isIntersection()) {\n    throw new DatatypeExtractionError(noIntersectionTypesError);\n  } else if (nonNullable.isClass()) {\n    throw new DatatypeExtractionError(classError);\n  } else if (nonNullable.isUnion()) {\n    throw new DatatypeExtractionError(limitedUnionsError);\n  }\n\n  const symbol = nonNullable.getSymbol();\n  if (!symbol) {\n    throw new DatatypeExtractionError(badTypeReturnError);\n  }\n\n  if (!symbol.declarations || symbol.declarations.length === 0) {\n    throw new DatatypeExtractionError(badTypeReturnError);\n  }\n\n  // If there are multiple declarations for the symbol, filter down to only\n  // the interface ones. However, if there is only one, use that one to provide better errors\n  let declaration: ts.Declaration | undefined;\n  if (symbol.declarations.length === 1) {\n    declaration = symbol.declarations[0];\n  } else {\n    declaration = symbol.declarations.filter(\n      (decl) => decl.kind === ts.SyntaxKind.InterfaceDeclaration,\n    )[0];\n  }\n\n  if (!declaration) {\n    throw new DatatypeExtractionError(badTypeReturnError);\n  }\n\n  if (ts.isTypeLiteralNode(declaration)) {\n    return declaration;\n  } else if (ts.isInterfaceDeclaration(declaration)) {\n    return declaration;\n  } else if (ts.isMappedTypeNode(declaration)) {\n    throw new DatatypeExtractionError(noMappedTypes);\n  } else if (ts.isClassDeclaration(declaration)) {\n    throw new DatatypeExtractionError(classError);\n  } else if (ts.isFunctionLike(declaration)) {\n    throw new DatatypeExtractionError(functionError);\n  }\n\n  throw new DatatypeExtractionError(badTypeReturnError);\n};\n\nexport const constructDatatypes = (\n  checker: ts.TypeChecker,\n  node: ts.TypeLiteralNode | ts.InterfaceDeclaration,\n  currentDatatype: string,\n  messageDefinitionMap: { [formattedDatatype: string]: string },\n  sourceDatatypes: RosDatatypes,\n  depth: number = 1,\n  currentTypeParamMap: TypeMap = {},\n): { outputDatatype: string; datatypes: RosDatatypes } => {\n  if (depth > MAX_DEPTH) {\n    throw new Error(`Max AST traversal depth exceeded.`);\n  }\n\n  // In the case that the user has specified a dynamically generated message\n  // definition, we can check whether it exists in the 'ros' module and just\n  // return the ros-specific definition, e.g. 'std_msgs/ColorRGBA', instead of\n  // our own definition. This allows user nodes to operate much more freely.\n  const interfaceName = ts.isInterfaceDeclaration(node) ? node.name.text : undefined;\n  const messageDef = interfaceName != undefined ? messageDefinitionMap[interfaceName] : undefined;\n  if (isNodeFromRosModule(node) && messageDef != undefined) {\n    return {\n      outputDatatype: messageDef,\n      datatypes: sourceDatatypes,\n    };\n  }\n\n  // In this case, we've detected that the return type comes from the generated types file.\n  // We can look up the datatype name by finding it in the file. The name will be the property name\n  // under which the type exists.\n  if (node.getSourceFile().fileName === \"/studio_script/generatedTypes.ts\") {\n    if (ts.isPropertySignature(node.parent) && ts.isStringLiteral(node.parent.name)) {\n      const datatype = node.parent.name.text;\n      return {\n        outputDatatype: datatype,\n        datatypes: sourceDatatypes,\n      };\n    }\n  }\n\n  let datatypes: RosDatatypes = new Map();\n\n  const getRosMsgField = (\n    name: string,\n    tsNode: ts.Node,\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    isArray: boolean = false,\n    // eslint-disable-next-line @foxglove/no-boolean-parameters\n    isComplex: boolean = false,\n    typeMap: TypeMap = {},\n    innerDepth: number = 1,\n  ): MessageDefinitionField => {\n    if (innerDepth > MAX_DEPTH) {\n      throw new Error(`Max AST traversal depth exceeded.`);\n    }\n\n    switch (tsNode.kind) {\n      case ts.SyntaxKind.InterfaceDeclaration:\n      case ts.SyntaxKind.TypeLiteral: {\n        const typeLiteral = tsNode as ts.TypeLiteralNode;\n        const symbolName = maybeSymbol(tsNode)?.name;\n\n        const messageDefinition =\n          symbolName != undefined ? messageDefinitionMap[symbolName] : undefined;\n\n        const nestedType =\n          isNodeFromRosModule(typeLiteral) && messageDefinition != undefined\n            ? messageDefinition\n            : `${currentDatatype}/${name}`;\n\n        const typeParamMap = ts.isInterfaceDeclaration(tsNode)\n          ? buildTypeMapFromParams(tsNode.typeParameters, typeMap)\n          : typeMap;\n\n        const { datatypes: nestedDatatypes } = constructDatatypes(\n          checker,\n          typeLiteral,\n          nestedType,\n          messageDefinitionMap,\n          sourceDatatypes,\n          depth + 1,\n          typeParamMap,\n        );\n        const childFields = nestedDatatypes.get(nestedType)?.definitions ?? [];\n        if (childFields.length === 2) {\n          const secField = childFields.find((field) => field.name === \"sec\");\n          const nsecField = childFields.find((field) => field.name === \"nsec\");\n          if (\n            secField &&\n            nsecField &&\n            secField.isComplex !== true &&\n            nsecField.isComplex !== true &&\n            secField.isArray !== true &&\n            nsecField.isArray !== true\n          ) {\n            return {\n              name,\n              type: \"time\",\n              isArray: false,\n              isComplex: false,\n              arrayLength: undefined,\n            };\n          }\n        }\n\n        datatypes = new Map([...datatypes, ...nestedDatatypes]);\n        return {\n          name,\n          type: nestedType,\n          isArray,\n          isComplex: true,\n          arrayLength: undefined,\n        };\n      }\n\n      case ts.SyntaxKind.ArrayType: {\n        const arrayNode = tsNode as ts.ArrayTypeNode;\n        return getRosMsgField(name, arrayNode.elementType, true, true, typeMap, innerDepth + 1);\n      }\n\n      case ts.SyntaxKind.BigIntKeyword:\n        // bigint has no distinction for signed or unsigned so we've selected int64 for the datatype\n        return {\n          name,\n          type: \"int64\",\n          isArray,\n          isComplex,\n          arrayLength: undefined,\n        };\n      case ts.SyntaxKind.NumberKeyword:\n        return {\n          name,\n          type: \"float64\",\n          isArray,\n          isComplex,\n          arrayLength: undefined,\n        };\n      case ts.SyntaxKind.StringKeyword:\n        return {\n          name,\n          type: \"string\",\n          isArray,\n          isComplex,\n          arrayLength: undefined,\n        };\n      case ts.SyntaxKind.BooleanKeyword:\n        return {\n          name,\n          type: \"bool\",\n          isArray,\n          isComplex,\n          arrayLength: undefined,\n        };\n\n      case ts.SyntaxKind.TypeAliasDeclaration: {\n        const typeAlias = tsNode as ts.TypeAliasDeclaration;\n        const newTypeParamMap = buildTypeMapFromParams(typeAlias.typeParameters, typeMap);\n        return getRosMsgField(\n          name,\n          typeAlias.type,\n          isArray,\n          isComplex,\n          newTypeParamMap,\n          innerDepth + 1,\n        );\n      }\n\n      case ts.SyntaxKind.TypeReference: {\n        const typeRef = tsNode as ts.TypeReferenceNode;\n        const nextSymbol = checker.getSymbolAtLocation(typeRef.typeName);\n\n        // There is a troubling discrepancy between how Typescript defines\n        // array literals 'number[]' and arrays of the form 'Array<number>'.\n        // In the latter case, as is handled here, 'Array' actually refers to\n        // the 'lib.d.ts' declaration of 'Array', which puts into a bit of a\n        // rabbit hole in terms of coming up with an appropriate ROS datatype.\n        // One solution could potentially to 'cast' this node as an\n        // ArrayTypeNode and recurse. Opting out of using 'Array' keyword for\n        // now.\n        if (nextSymbol?.escapedName === \"Array\") {\n          throw new DatatypeExtractionError(preferArrayLiteral);\n        }\n\n        if (!nextSymbol) {\n          throw new Error(\"Could not find symbol\");\n        }\n\n        const typeParam = findDeclaration(nextSymbol, [ts.SyntaxKind.TypeParameter]) as\n          | ts.TypeParameterDeclaration\n          | undefined;\n\n        if (typeParam) {\n          if (typeMap[typeParam.name.escapedText.toString()]) {\n            let next = typeMap[typeParam.name.escapedText.toString()];\n            while (next?.parent) {\n              next = next.parent;\n            }\n            return getRosMsgField(\n              name,\n              next!.current!,\n              isArray,\n              isComplex,\n              typeMap,\n              innerDepth + 1,\n            );\n          }\n          throw new Error(`Could not find type ${typeParam.getText()} in type map.`);\n        }\n\n        const nextNode = findDeclaration(nextSymbol, [\n          ts.SyntaxKind.TypeAliasDeclaration,\n          ts.SyntaxKind.InterfaceDeclaration,\n          ts.SyntaxKind.ImportSpecifier,\n          ts.SyntaxKind.ClassDeclaration,\n        ]);\n\n        if (!nextNode) {\n          throw new Error(\"Could not find next node\");\n        }\n\n        return getRosMsgField(\n          name,\n          nextNode,\n          isArray,\n          isComplex,\n          buildTypeMapFromArgs(typeRef.typeArguments, typeMap),\n          innerDepth + 1,\n        );\n      }\n      // i.e. 'typeof'\n      case ts.SyntaxKind.TypeQuery: {\n        throw new DatatypeExtractionError(noTypeOfError);\n      }\n\n      case ts.SyntaxKind.ImportSpecifier: {\n        const declaration = findImportedTypeDeclaration(checker, tsNode, [\n          ts.SyntaxKind.TypeLiteral,\n          ts.SyntaxKind.InterfaceDeclaration,\n          ts.SyntaxKind.TypeAliasDeclaration,\n        ]);\n\n        if (!declaration) {\n          throw new Error(\"Failed to find import declaration\");\n        }\n\n        return getRosMsgField(name, declaration, isArray, isComplex, typeMap, innerDepth + 1);\n      }\n      case ts.SyntaxKind.IntersectionType: {\n        throw new DatatypeExtractionError(noIntersectionTypesError);\n      }\n      case ts.SyntaxKind.TupleType: {\n        throw new DatatypeExtractionError(noTuples);\n      }\n      case ts.SyntaxKind.StringLiteral:\n      case ts.SyntaxKind.NumericLiteral:\n      case ts.SyntaxKind.LiteralType: {\n        throw new DatatypeExtractionError(noTypeLiteralsError);\n      }\n      case ts.SyntaxKind.ClassDeclaration: {\n        throw new DatatypeExtractionError(classError);\n      }\n\n      case ts.SyntaxKind.UnionType: {\n        throw new DatatypeExtractionError(unionsError);\n      }\n      case ts.SyntaxKind.FunctionType:\n        throw new DatatypeExtractionError(functionError);\n\n      case ts.SyntaxKind.AnyKeyword:\n        throw new DatatypeExtractionError(noNestedAny);\n\n      default: {\n        const locationType = checker.getTypeAtLocation(tsNode);\n\n        const symbol = locationType.symbol as ts.Symbol | undefined;\n        if (symbol == undefined) {\n          throw new DatatypeExtractionError({\n            severity: DiagnosticSeverity.Error,\n            message: `Unsupported type for member '${name}'.`,\n            source: Sources.DatatypeExtraction,\n            code: ErrorCodes.DatatypeExtraction.BAD_TYPE_RETURN,\n          });\n        }\n        const declaration = symbol.declarations?.[0];\n        if (symbol.declarations?.length !== 1 || !declaration) {\n          throw new DatatypeExtractionError(badTypeReturnError);\n        }\n\n        return getRosMsgField(name, declaration, false, undefined, typeMap, innerDepth + 1);\n      }\n    }\n  };\n\n  const { members = [] } = node;\n  const rosMsgFields = members.map((member) => {\n    if (!member.name) {\n      throw new DatatypeExtractionError({\n        severity: DiagnosticSeverity.Error,\n        message: `Encountered type member with no name in ${interfaceName ?? currentDatatype}`,\n        source: Sources.DatatypeExtraction,\n        code: ErrorCodes.DatatypeExtraction.INVALID_PROPERTY,\n      });\n    }\n    if (!ts.isPropertySignature(member)) {\n      throw new DatatypeExtractionError({\n        severity: DiagnosticSeverity.Error,\n        message: `Unexpected type member (kind ${member.kind}) in ${\n          interfaceName ?? currentDatatype\n        }`,\n        source: Sources.DatatypeExtraction,\n        code: ErrorCodes.DatatypeExtraction.INVALID_PROPERTY,\n      });\n    }\n    if (!member.type) {\n      throw new DatatypeExtractionError({\n        severity: DiagnosticSeverity.Error,\n        message: `Member ${member.name.getText()} has no type in ${\n          interfaceName ?? currentDatatype\n        }`,\n        source: Sources.DatatypeExtraction,\n        code: ErrorCodes.DatatypeExtraction.INVALID_PROPERTY,\n      });\n    }\n    return getRosMsgField(\n      member.name.getText(),\n      member.type,\n      false,\n      false,\n      currentTypeParamMap,\n      depth + 1,\n    );\n  });\n\n  return {\n    outputDatatype: currentDatatype,\n    datatypes: new Map([\n      ...datatypes,\n      ...new Map([[currentDatatype, { definitions: rosMsgFields }]]),\n    ]),\n  };\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport ts from \"typescript/lib/typescript\";\n\nimport { DiagnosticSeverity, Diagnostic } from \"@foxglove/studio-base/players/UserNodePlayer/types\";\n\nconst mapCategoryToDiagnosticSeverity = (\n  category: ts.DiagnosticCategory,\n): (typeof DiagnosticSeverity)[keyof typeof DiagnosticSeverity] => {\n  switch (category) {\n    case ts.DiagnosticCategory.Error:\n      return DiagnosticSeverity.Error;\n    case ts.DiagnosticCategory.Warning:\n      return DiagnosticSeverity.Warning;\n    case ts.DiagnosticCategory.Message:\n      return DiagnosticSeverity.Info;\n    case ts.DiagnosticCategory.Suggestion:\n      return DiagnosticSeverity.Hint;\n    default:\n      throw new Error(\"Diagnostic category not recognized\");\n  }\n};\n\n// Function responsible for transforming diagnostic information into a format\n// the monaco-editor can use.\nexport const transformDiagnosticToMarkerData = (diagnostic: ts.Diagnostic): Diagnostic => {\n  if (!diagnostic.file || diagnostic.start == undefined || diagnostic.length == undefined) {\n    throw new Error(\"Invariant: diagnostic is not initialized\");\n  }\n\n  const { line: startLineNumber, character: startColumn } =\n    diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start);\n\n  const { line: endLineNumber, character: endColumn } =\n    diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start + diagnostic.length);\n\n  return {\n    message: flattenDiagnosticMessageText(diagnostic.messageText, \"\\n\"),\n    severity: mapCategoryToDiagnosticSeverity(diagnostic.category),\n    source: \"Typescript\",\n    startLineNumber,\n    startColumn,\n    endLineNumber,\n    endColumn,\n    code: diagnostic.code,\n  };\n};\n\n// Flatten list of formatted diagnostic messages\n// https://github.com/microsoft/monaco-typescript/blob/126dbe1f6f4b235bac436d580b83696070271f71/src/languageFeatures.ts#L36\nfunction flattenDiagnosticMessageText(\n  diag: string | ts.DiagnosticMessageChain | undefined,\n  newLine: string,\n  indent = 0,\n): string {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag == undefined) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent > 0) {\n    result += newLine;\n\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent + 1);\n    }\n  }\n  return result;\n}\n\n// https://www.typescriptlang.org/docs/handbook/compiler-options.html\nexport const baseCompilerOptions = {\n  strict: true,\n  target: ts.ScriptTarget.ES2022,\n  module: ts.ModuleKind.CommonJS,\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport ts from \"typescript/lib/typescript\";\n\nimport { filterMap } from \"@foxglove/den/collection\";\nimport { formatInterfaceName } from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/generateRosLib\";\nimport {\n  constructDatatypes,\n  findDefaultExportFunction,\n  DatatypeExtractionError,\n  findReturnType,\n} from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/typescript/ast\";\nimport { getNodeProjectConfig } from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/typescript/projectConfig\";\nimport {\n  baseCompilerOptions,\n  transformDiagnosticToMarkerData,\n} from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/utils\";\nimport {\n  DiagnosticSeverity,\n  Sources,\n  ErrorCodes,\n  NodeData,\n  Diagnostic,\n  NodeDataTransformer,\n} from \"@foxglove/studio-base/players/UserNodePlayer/types\";\nimport { Topic } from \"@foxglove/studio-base/players/types\";\nimport { DEFAULT_STUDIO_NODE_PREFIX } from \"@foxglove/studio-base/util/globalConstants\";\n\nimport { TransformArgs } from \"./types\";\nimport generatedTypesLibSrc from \"./typescript/userUtils/generatedTypes.ts?raw\";\n\nexport const hasTransformerErrors = (nodeData: NodeData): boolean =>\n  nodeData.diagnostics.some(({ severity }) => severity === DiagnosticSeverity.Error);\n\nexport const getInputTopics = (nodeData: NodeData): NodeData => {\n  const { sourceFile, typeChecker } = nodeData;\n  if (!sourceFile || !typeChecker) {\n    const error = {\n      severity: DiagnosticSeverity.Error,\n      message:\n        \"Either the 'sourceFile' or 'typeChecker' is absent. There is a problem with the `compile` step.\",\n      source: Sources.InputTopicsChecker,\n      code: ErrorCodes.InputTopicsChecker.BAD_INPUTS_TYPE,\n    };\n\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  const symbol = typeChecker.getSymbolAtLocation(sourceFile);\n  if (!symbol) {\n    const error: Diagnostic = {\n      severity: DiagnosticSeverity.Error,\n      message: \"Must export an input topics array. E.g. 'export const inputs = ['/some_topics']'\",\n      source: Sources.InputTopicsChecker,\n      code: ErrorCodes.InputTopicsChecker.NO_INPUTS_EXPORT,\n    };\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  const inputsExport = typeChecker\n    .getExportsOfModule(symbol)\n    .find((node) => node.escapedName === \"inputs\");\n  if (!inputsExport) {\n    const error: Diagnostic = {\n      severity: DiagnosticSeverity.Error,\n      message: \"Must export a non-empty inputs array.\",\n      source: Sources.InputTopicsChecker,\n      code: ErrorCodes.InputTopicsChecker.EMPTY_INPUTS_EXPORT,\n    };\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  const decl = inputsExport.declarations?.[0];\n  if (!decl || !ts.isVariableDeclaration(decl)) {\n    const error: Diagnostic = {\n      severity: DiagnosticSeverity.Error,\n      message: \"inputs export must be an array variable.\",\n      source: Sources.InputTopicsChecker,\n      code: ErrorCodes.InputTopicsChecker.BAD_INPUTS_TYPE,\n    };\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  if (!decl.initializer || !ts.isArrayLiteralExpression(decl.initializer)) {\n    const error: Diagnostic = {\n      severity: DiagnosticSeverity.Error,\n      message: \"inputs export must be an array variable.\",\n      source: Sources.InputTopicsChecker,\n      code: ErrorCodes.InputTopicsChecker.BAD_INPUTS_TYPE,\n    };\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  const inputTopicElements = decl.initializer.elements;\n  if (inputTopicElements.some(({ kind }) => kind !== ts.SyntaxKind.StringLiteral)) {\n    const error: Diagnostic = {\n      severity: DiagnosticSeverity.Error,\n      message:\n        \"The exported 'inputs' variable must be an array of string literals. E.g. 'export const inputs = ['/some_topics']'\",\n      source: Sources.InputTopicsChecker,\n      code: ErrorCodes.InputTopicsChecker.BAD_INPUTS_TYPE,\n    };\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  const inputTopics = filterMap(inputTopicElements, (expression) => {\n    if (!ts.isStringLiteral(expression)) {\n      return undefined;\n    }\n    return expression.text;\n  });\n\n  if (inputTopics.length === 0) {\n    const error: Diagnostic = {\n      severity: DiagnosticSeverity.Error,\n      message:\n        'Must include non-empty inputs array, e.g. export const inputs = [\"/some_input_topic\"];',\n      source: Sources.InputTopicsChecker,\n      code: ErrorCodes.InputTopicsChecker.EMPTY_INPUTS_EXPORT,\n    };\n\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  return {\n    ...nodeData,\n    inputTopics,\n  };\n};\n\nexport const getOutputTopic = (nodeData: NodeData): NodeData => {\n  const matches = /^\\s*export\\s+const\\s+output\\s*=\\s*(\"([^\"]+)\"|'([^']+)')/gm.exec(\n    nodeData.sourceCode,\n  );\n  // Pick either the first matching group or the second, which corresponds\n  // to single quotes or double quotes respectively.\n  const outputTopic = matches?.[2] ?? matches?.[3];\n\n  if (outputTopic == undefined) {\n    const error = {\n      severity: DiagnosticSeverity.Error,\n      message: `Must include an output, e.g. export const output = \"${DEFAULT_STUDIO_NODE_PREFIX}your_output_topic\";`,\n      source: Sources.OutputTopicChecker,\n      code: ErrorCodes.OutputTopicChecker.NO_OUTPUTS,\n    };\n\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  return {\n    ...nodeData,\n    outputTopic,\n  };\n};\n\nexport const validateInputTopics = (nodeData: NodeData, topics: Topic[]): NodeData => {\n  const { inputTopics } = nodeData;\n  const activeTopics = topics.map(({ name }) => name);\n  const diagnostics = [];\n  for (const inputTopic of inputTopics) {\n    if (!activeTopics.includes(inputTopic)) {\n      diagnostics.push({\n        severity: DiagnosticSeverity.Error,\n        message: `Input \"${inputTopic}\" is not yet available`,\n        source: Sources.InputTopicsChecker,\n        code: ErrorCodes.InputTopicsChecker.NO_TOPIC_AVAIL,\n      });\n    }\n  }\n\n  return {\n    ...nodeData,\n    diagnostics: [...nodeData.diagnostics, ...diagnostics],\n  };\n};\n\n// The compile step is currently used for generating syntactic/semantic errors. In the future, it\n// will be leveraged to:\n// - Generate the AST\n// - Handle external libraries\nexport const compile = (nodeData: NodeData): NodeData => {\n  const { sourceCode, rosLib, typesLib } = nodeData;\n\n  const options: ts.CompilerOptions = baseCompilerOptions;\n  const nodeFileName = \"/studio_script/index.ts\";\n  const projectConfig = getNodeProjectConfig();\n  const projectCode = new Map<string, string>();\n\n  const sourceCodeMap = new Map<string, string>();\n  sourceCodeMap.set(nodeFileName, sourceCode);\n  sourceCodeMap.set(projectConfig.rosLib.filePath, rosLib);\n  sourceCodeMap.set(\"/studio_script/generatedTypes.ts\", typesLib ? typesLib : generatedTypesLibSrc);\n\n  projectConfig.utilityFiles.forEach((file) => sourceCodeMap.set(file.filePath, file.sourceCode));\n  projectConfig.declarations.forEach((lib) => sourceCodeMap.set(lib.filePath, lib.sourceCode));\n\n  let transpiledCode: string = \"\";\n  let codeEmitted: boolean = false;\n\n  // The compiler host is basically the file system API Typescript is funneled\n  // through. All we do is tell Typescript where it can locate files and how to\n  // create source files for the time being.\n\n  // Reference:\n  // Using the compiler api: https://github.com/microsoft/TypeScript/wiki/Using-the-Compiler-API\n  // CompilerHost: https://github.com/microsoft/TypeScript/blob/v3.5.3/lib/typescript.d.ts#L2752\n  // Architectual Overview: https://github.com/Microsoft/TypeScript/wiki/Architectural-Overview#overview-of-the-compilation-process\n\n  const host: ts.CompilerHost = {\n    getDefaultLibFileName: () => projectConfig.defaultLibFileName,\n    getCurrentDirectory: () => \"\",\n    getCanonicalFileName: (fileName) => fileName,\n    useCaseSensitiveFileNames: () => false,\n    readFile: () => {\n      return undefined;\n    },\n    fileExists: (fileName) => {\n      for (const [key] of sourceCodeMap.entries()) {\n        if (fileName === key || fileName.endsWith(key)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    writeFile: (name: string, data: string) => {\n      codeEmitted = true;\n      if (name === \"/studio_script/index.js\") {\n        transpiledCode = data;\n      } else {\n        // It's one of our utility files\n        projectCode.set(name, data);\n      }\n    },\n    getNewLine: () => \"\\n\",\n    getSourceFile: (fileName) => {\n      let code = \"\";\n      for (const [key, value] of sourceCodeMap.entries()) {\n        if (fileName === key || fileName.endsWith(key)) {\n          code = value;\n          break;\n        }\n      }\n      return ts.createSourceFile(fileName, code, baseCompilerOptions.target, true);\n    },\n  };\n\n  const program = ts.createProgram([nodeFileName], options, host);\n  program.emit();\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  if (!codeEmitted) {\n    const error = {\n      severity: DiagnosticSeverity.Error,\n      message: \"Program code was not emitted.\",\n      source: Sources.InputTopicsChecker,\n      code: ErrorCodes.InputTopicsChecker.BAD_INPUTS_TYPE,\n    };\n\n    return {\n      ...nodeData,\n      diagnostics: [...nodeData.diagnostics, error],\n    };\n  }\n\n  const diagnostics = [...program.getSemanticDiagnostics(), ...program.getSyntacticDiagnostics()];\n\n  const newDiagnostics = diagnostics.map(transformDiagnosticToMarkerData);\n\n  const sourceFile = program.getSourceFile(nodeFileName);\n  const typeChecker = program.getTypeChecker();\n\n  return {\n    ...nodeData,\n    sourceFile,\n    typeChecker,\n    transpiledCode,\n    projectCode,\n    diagnostics: [...nodeData.diagnostics, ...newDiagnostics],\n  };\n};\n\n// Currently we only look types matching the exact name \"GlobalVariables\". In the future,\n// we should check the type of the 2nd arg passed to the publisher function in\n// case users have renamed the GlobalVariables type.\nexport const extractGlobalVariables = (nodeData: NodeData): NodeData => {\n  // Do not attempt to run if there were any compile time errors.\n  if (hasTransformerErrors(nodeData)) {\n    return nodeData;\n  }\n\n  const { sourceFile } = nodeData;\n  if (!sourceFile) {\n    throw new Error(\"'sourceFile' is absent'. There is a problem with the `compile` step.\");\n  }\n\n  const globalVariablesMembers = sourceFile.forEachChild((node) => {\n    if (\n      ts.isTypeAliasDeclaration(node) &&\n      ts.isTypeLiteralNode(node.type) &&\n      node.name.text === \"GlobalVariables\"\n    ) {\n      return node.type.members;\n    } else if (ts.isInterfaceDeclaration(node) && node.name.text === \"GlobalVariables\") {\n      return node.members;\n    }\n    return undefined;\n  });\n\n  const globalVariables = filterMap(globalVariablesMembers ?? [], (member) => {\n    if (!member.name) {\n      return undefined;\n    }\n    if (ts.isIdentifier(member.name) || ts.isStringLiteral(member.name)) {\n      return member.name.text;\n    }\n    return undefined;\n  });\n\n  return {\n    ...nodeData,\n    globalVariables,\n  };\n};\n\nexport const extractDatatypes = (nodeData: NodeData): NodeData => {\n  // Do not attempt to run if there were any compile time errors.\n  if (hasTransformerErrors(nodeData)) {\n    return nodeData;\n  }\n\n  const { sourceFile, typeChecker, name, datatypes: sourceDatatypes } = nodeData;\n  if (!sourceFile || !typeChecker) {\n    throw new Error(\n      \"Either the 'sourceFile' or 'typeChecker' is absent'. There is a problem with the `compile` step.\",\n    );\n  }\n\n  // Keys each message definition like { 'std_msg__ColorRGBA': 'std_msg/ColorRGBA' }\n  const messageDefinitionMap: Record<string, string> = {};\n  for (const datatype of sourceDatatypes.keys()) {\n    messageDefinitionMap[formatInterfaceName(datatype)] = datatype;\n  }\n\n  try {\n    const exportNode = findDefaultExportFunction(sourceFile, typeChecker);\n    if (!exportNode) {\n      throw new Error(\"Your node must default export a function\");\n    }\n\n    const typeNode = findReturnType(typeChecker, exportNode);\n\n    const { outputDatatype, datatypes } = constructDatatypes(\n      typeChecker,\n      typeNode,\n      name,\n      messageDefinitionMap,\n      sourceDatatypes,\n    );\n    return { ...nodeData, datatypes, outputDatatype };\n  } catch (error) {\n    if (error instanceof DatatypeExtractionError) {\n      return { ...nodeData, diagnostics: [...nodeData.diagnostics, error.diagnostic] };\n    }\n\n    return {\n      ...nodeData,\n      diagnostics: [\n        ...nodeData.diagnostics,\n        {\n          message: error.message,\n          severity: DiagnosticSeverity.Error,\n          source: Sources.DatatypeExtraction,\n          code: ErrorCodes.DatatypeExtraction.UNKNOWN_ERROR,\n        },\n      ],\n    };\n  }\n};\n\nexport const compose = (...transformers: NodeDataTransformer[]): NodeDataTransformer => {\n  return (nodeData: NodeData, topics: Topic[]) => {\n    let newNodeData = nodeData;\n    for (const transformer of transformers) {\n      newNodeData = transformer(newNodeData, topics);\n    }\n    return newNodeData;\n  };\n};\n\n/*\n\n  TRANSFORM\n\n  Defines the pipeline with which user nodes are processed. Each\n  'NodeDataTransformer' is a pure function that receives NodeData and returns\n  NodeData. In this way, each transformer has the power to inspect previous\n  diagnostics, compiled source code, etc. and to abort the pipeline if there\n  is a fatal error, or continue to pass along information further downstream\n  when errors are not fatal.\n\n*/\nconst transform = (args: TransformArgs): NodeData => {\n  const { name, sourceCode, topics, rosLib, typesLib, datatypes } = args;\n\n  const transformer = compose(\n    getOutputTopic,\n    compile,\n    getInputTopics,\n    validateInputTopics,\n    extractDatatypes,\n    extractGlobalVariables,\n  );\n\n  const result = transformer(\n    {\n      name,\n      sourceCode,\n      rosLib,\n      typesLib,\n      transpiledCode: \"\",\n      projectCode: undefined,\n      inputTopics: [],\n      outputTopic: \"\",\n      outputDatatype: \"\",\n      diagnostics: [],\n      globalVariables: [],\n      datatypes,\n      sourceFile: undefined,\n      typeChecker: undefined,\n    },\n    topics,\n  );\n  return { ...result, sourceFile: undefined, typeChecker: undefined };\n};\n\nexport default transform;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\n// this type mirrors the MessageChannel and MessagePort APIs which are available on\n// instances of web-workers and shared-workers respectively, as well as avaiable on\n// 'global' within them.\nexport interface Channel {\n  postMessage(data: unknown, transfer?: Transferable[]): void;\n  onmessage?: ((ev: MessageEvent) => unknown) | null; // eslint-disable-line no-restricted-syntax\n  terminate: () => void;\n}\n\nconst RESPONSE = \"$$RESPONSE\";\nconst ERROR = \"$$ERROR\";\n\n// helper function to create linked channels for testing\nexport function createLinkedChannels(): { local: Channel; remote: Channel } {\n  const local: Channel = {\n    onmessage: undefined,\n\n    postMessage(data: unknown, _transfer?: Array<ArrayBuffer>) {\n      const ev = new MessageEvent(\"message\", { data });\n      if (remote.onmessage) {\n        remote.onmessage(ev);\n      }\n    },\n    terminate: () => {\n      // no-op\n    },\n  };\n\n  const remote: Channel = {\n    onmessage: undefined,\n\n    postMessage(data: unknown, _transfer?: Array<ArrayBuffer>) {\n      const ev = new MessageEvent(\"message\", { data });\n      if (local.onmessage) {\n        local.onmessage(ev);\n      }\n    },\n    terminate: () => {\n      // no-op\n    },\n  };\n  return { local, remote };\n}\n\n// This class allows you to hook up bi-directional async calls across web-worker\n// boundaries where a single call to or from a worker can 'wait' on the response.\n// Errors in receivers are propigated back to the caller as a rejection.\n// It also supports returning transferables over the web-worker postMessage api,\n// which was the main shortcomming with the worker-rpc npm module.\n// To attach rpc to an instance of a worker in the main thread:\n//   const rpc = new Rpc(workerInstace);\n// To attach rpc within an a web worker:\n//   const rpc = new Rpc(global);\n// Check out the tests for more examples.\nexport default class Rpc {\n  public static transferables = \"$$TRANSFERABLES\";\n  #channel: Omit<Channel, \"terminate\">;\n  #messageId: number = 0;\n  #pendingCallbacks: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: number]: (arg0: any) => void;\n  } = {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  #receivers: Map<string, (arg0: any) => any> = new Map();\n\n  public constructor(channel: Omit<Channel, \"terminate\">) {\n    this.#channel = channel;\n    if (this.#channel.onmessage) {\n      throw new Error(\n        \"channel.onmessage is already set. Can only use one Rpc instance per channel.\",\n      );\n    }\n    this.#channel.onmessage = this.#onChannelMessage;\n  }\n\n  #onChannelMessage = (ev: MessageEvent): void => {\n    const { id, topic, data } = ev.data;\n    if (topic === RESPONSE) {\n      this.#pendingCallbacks[id]?.(ev.data);\n      delete this.#pendingCallbacks[id];\n      return;\n    }\n    // invoke the receive handler in a promise so if it throws synchronously we can reject\n    new Promise<Record<string, Transferable[] | undefined> | undefined>((resolve) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      const handler = this.#receivers.get(topic);\n      if (!handler) {\n        throw new Error(`no receiver registered for ${topic}`);\n      }\n      // This works both when `handler` returns a value or a Promise.\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      resolve(handler(data));\n    })\n      .then((result) => {\n        if (!result) {\n          return this.#channel.postMessage({ topic: RESPONSE, id });\n        }\n        const transferables = result[Rpc.transferables];\n        delete result[Rpc.transferables];\n        const message = {\n          topic: RESPONSE,\n          id,\n          data: result,\n        };\n        this.#channel.postMessage(message, transferables);\n      })\n      .catch((err) => {\n        const message = {\n          topic: RESPONSE,\n          id,\n          data: {\n            [ERROR]: true,\n            name: err.name,\n            message: err.message,\n            stack: err.stack,\n          },\n        };\n        this.#channel.postMessage(message);\n      });\n  };\n\n  /** Call this when the channel has been terminated to reject any outstanding send callbacks. */\n  public terminate(): void {\n    for (const [id, callback] of Object.entries(this.#pendingCallbacks)) {\n      callback({\n        topic: RESPONSE,\n        id,\n        data: {\n          [ERROR]: true,\n          name: \"Error\",\n          message: \"Rpc terminated\",\n          stack: new Error().stack,\n        },\n      });\n    }\n  }\n\n  // send a message across the rpc boundary to a receiver on the other side\n  // this returns a promise for the receiver's response.  If there is no registered\n  // receiver for the given topic, this method throws\n  public async send<TResult, TData = unknown>(\n    topic: string,\n    data?: TData,\n    transfer?: Transferable[],\n  ): Promise<TResult> {\n    const id = this.#messageId++;\n    const message = { topic, id, data };\n    const result = new Promise<TResult>((resolve, reject) => {\n      this.#pendingCallbacks[id] = (info) => {\n        if (info.data?.[ERROR] != undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          const error = new Error(info.data.message);\n          error.name = info.data.name;\n          error.stack = info.data.stack;\n          reject(error);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          resolve(info.data);\n        }\n      };\n    });\n    this.#channel.postMessage(message, transfer);\n    return await result;\n  }\n\n  // register a receiver for a given message on a topic\n  // only one receiver can be registered per topic and currently\n  // 'deregistering' a receiver is not supported since this is not common\n  public receive<T, TOut>(topic: string, handler: (arg0: T) => TOut): void {\n    if (this.#receivers.has(topic)) {\n      throw new Error(`Receiver already registered for topic: ${topic}`);\n    }\n    this.#receivers.set(topic, handler);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\ntype ReportErrorHandler = (error: Error) => void;\n\nconst globalWithHandler = global as { foxgloveStudioReportErrorFn?: ReportErrorHandler };\n\n/**\n * Report an error that has escaped past normal error-handling flows in the app and should be\n * triaged and diagnosed.\n */\nexport function reportError(error: Error): void {\n  globalWithHandler.foxgloveStudioReportErrorFn?.(error);\n}\n\n/**\n * Set the handler function which will be called when an error is passed to `reportError()`. The default is\n * a no-op.\n */\nexport function setReportErrorHandler(fn: ReportErrorHandler): void {\n  globalWithHandler.foxgloveStudioReportErrorFn = fn;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { DetailsType } from \"@foxglove/studio-base/util/sendNotification\";\n\nexport class AppError extends Error {\n  public details: DetailsType;\n  public extraInfo: unknown;\n  public override message: string;\n\n  public constructor(details: DetailsType, extraInfo?: unknown) {\n    super();\n    this.details = details;\n    this.extraInfo = extraInfo;\n    this.name = \"AppError\";\n    this.message = \"\";\n\n    if (details instanceof Error) {\n      this.message = details.stack ?? details.message;\n    } else if (typeof details === \"string\") {\n      this.message = details;\n    }\n\n    if (extraInfo != undefined) {\n      // If `extraInfo` was passed via a componentDidCatch:\n      // https://reactjs.org/docs/react-component.html#componentdidcatch\n      if ((extraInfo as { componentStack: unknown }).componentStack != undefined) {\n        this.message += `\\n\\n${(extraInfo as { componentStack: unknown }).componentStack}`;\n      } else {\n        try {\n          const stringifiedExtraInfo = JSON.stringify(extraInfo);\n          this.message += `\\n\\n${stringifiedExtraInfo}`;\n        } catch (e) {\n          this.message += `\\n\\n[ Either cyclic object or object with BigInt(s) ]`;\n        }\n      }\n    }\n\n    if (this.message === \"\") {\n      this.message = \"Unknown Error\";\n    }\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nexport const inWebWorker = (): boolean => {\n  return (\n    typeof global.postMessage !== \"undefined\" &&\n    typeof WorkerGlobalScope !== \"undefined\" &&\n    self instanceof WorkerGlobalScope\n  );\n};\n\n// To debug shared workers, enter 'chrome://inspect/#workers' into the url bar.\nexport const inSharedWorker = (): boolean =>\n  typeof SharedWorkerGlobalScope !== \"undefined\" && self instanceof SharedWorkerGlobalScope;\n\nexport const enforceFetchIsBlocked = <R, Args extends readonly unknown[]>(\n  fn: (...args: Args) => R,\n): ((...args: Args) => Promise<R>) => {\n  const canFetch =\n    typeof fetch !== \"undefined\" &&\n    fetch(\"data:test\")\n      .then(() => true)\n      .catch(() => false);\n  return async (...args) => {\n    if (await canFetch) {\n      throw new Error(\"Content security policy too loose.\");\n    }\n    return fn(...args);\n  };\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\n// For some handlers it's important to know if the error was due to the application malfunctioning\n// (programming error, dependency being down, etc) or a user mistake (incorrect/malformed data,\n// etc). We should generally prevent users from making mistakes in the first place, but sometimes\n// its unavoidable to bail out with a generic error message (e.g. when dragging in a malformed\n// ROS bag).\nimport { ReactNode } from \"react\";\n\nimport { reportError } from \"@foxglove/studio-base/reportError\";\nimport { AppError } from \"@foxglove/studio-base/util/errors\";\nimport { inWebWorker } from \"@foxglove/studio-base/util/workers\";\n\nexport type NotificationType = \"app\" | \"user\";\nexport type DetailsType = string | Error | ReactNode;\nexport type NotificationSeverity = \"error\" | \"warn\" | \"info\";\nexport type NotificationHandler = (\n  message: string,\n  details: DetailsType,\n  type: NotificationType,\n  severity: NotificationSeverity,\n) => void;\nexport type NotificationMessage = {\n  readonly id?: string;\n  readonly message: string;\n  readonly details: DetailsType;\n  readonly subText?: string;\n  readonly created?: Date;\n  readonly severity: NotificationSeverity;\n};\n\nconst defaultNotificationHandler: NotificationHandler = (\n  message: string,\n  details: DetailsType,\n  type: NotificationType,\n  severity: NotificationSeverity,\n): void => {\n  if (inWebWorker()) {\n    const webWorkerError =\n      \"Web Worker has uninitialized sendNotification function; this means this error message cannot show up in the UI (so we show it here in the console instead).\";\n    if (process.env.NODE_ENV === \"test\") {\n      throw new Error(webWorkerError);\n    } else {\n      const consoleFn =\n        severity === \"error\" ? console.error : severity === \"warn\" ? console.warn : console.info;\n      consoleFn(webWorkerError, message, details, type);\n    }\n    return;\n  } else if (process.env.NODE_ENV === \"test\") {\n    return;\n  }\n  console.error(\"Notification before error display is mounted\", message, details, type);\n};\n\nlet addNotification: NotificationHandler = defaultNotificationHandler;\n\nexport function setNotificationHandler(handler: NotificationHandler): void {\n  if (addNotification !== defaultNotificationHandler) {\n    throw new Error(\"Tried to overwrite existing NotificationHandler\");\n  }\n  addNotification = handler;\n}\n\nexport function unsetNotificationHandler(): void {\n  if (addNotification === defaultNotificationHandler) {\n    throw new Error(\"Tried to unset NotificationHandler but it was already the default\");\n  }\n  addNotification = defaultNotificationHandler;\n}\n\n// Call this to add an notification to the application nav bar error component if mounted.\n// If the component is not mounted, use the console as a fallback.\nexport default function sendNotification(\n  message: string,\n  details: DetailsType,\n  type: NotificationType,\n  severity: NotificationSeverity,\n): void {\n  // We only want to send non-user errors and warnings to Sentry\n  if (type === \"app\") {\n    if (severity === \"warn\" || severity === \"error\") {\n      reportError(new AppError(details, message));\n    }\n  }\n\n  addNotification(message, details, type, severity);\n}\n\nsendNotification.expectCalledDuringTest = (): void => {\n  throw new Error(\"Should be overriden in setupTestFramework.ts\");\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2020-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport {\n  setNotificationHandler,\n  DetailsType,\n  NotificationType,\n  NotificationSeverity,\n} from \"@foxglove/studio-base/util/sendNotification\";\n\nimport Rpc from \"./Rpc\";\nimport overwriteFetch from \"./overwriteFetch\";\n\nexport function setupSendReportNotificationHandler(rpc: Rpc): void {\n  setNotificationHandler(\n    (\n      message: string,\n      details: DetailsType,\n      type: NotificationType,\n      severity: NotificationSeverity,\n    ) => {\n      if (!(details instanceof Error || typeof details === \"string\")) {\n        console.warn(\"Invalid Error type\", details);\n      }\n      void rpc.send(\"sendNotification\", {\n        message,\n        details: details instanceof Error ? details.toString() : details,\n        type,\n        severity,\n      });\n    },\n  );\n}\n\nexport function setupWorker(rpc: Rpc): void {\n  if (process.env.NODE_ENV !== \"test\") {\n    setupSendReportNotificationHandler(rpc);\n    overwriteFetch();\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport generateRosLib from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/generateRosLib\";\nimport transform from \"@foxglove/studio-base/players/UserNodePlayer/nodeTransformerWorker/transform\";\nimport Rpc from \"@foxglove/studio-base/util/Rpc\";\nimport { setupSendReportNotificationHandler } from \"@foxglove/studio-base/util/RpcWorkerUtils\";\nimport { enforceFetchIsBlocked, inSharedWorker } from \"@foxglove/studio-base/util/workers\";\n\nlet unsentErrors: string[] = [];\n(global as unknown as SharedWorkerGlobalScope).onerror = (event: ErrorEvent) => {\n  unsentErrors.push((event.error as Error).toString());\n};\n(global as unknown as SharedWorkerGlobalScope).onunhandledrejection = (\n  event: PromiseRejectionEvent,\n) => {\n  unsentErrors.push(String(event.reason instanceof Error ? event.reason.message : event.reason));\n};\n\nif (!inSharedWorker()) {\n  // In Chrome, web workers currently (as of March 2020) inherit their Content Security Policy from\n  // their associated page, ignoring any policy in the headers of their source file. SharedWorkers\n  // use the headers from their source files, though, and we use a CSP to prohibit user scripts\n  // workers from making web requests (using enforceFetchIsBlocked, below.)\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1012640\n  throw new Error(\"Not in a SharedWorker.\");\n}\n\n(global as unknown as SharedWorkerGlobalScope).onconnect = (connectEvent: MessageEvent) => {\n  const port = connectEvent.ports[0];\n  if (!port) {\n    throw new Error(\"NodeTransformWorker connect requires at least 1 message port.\");\n  }\n\n  const rpc = new Rpc(port);\n\n  // If any errors occurred while nobody was connected, send them now\n  unsentErrors.forEach(async (message) => await rpc.send(\"error\", message));\n  unsentErrors = [];\n  (global as unknown as SharedWorkerGlobalScope).onerror = (event: ErrorEvent) => {\n    void rpc.send(\"error\", event.error.toString());\n  };\n  (global as unknown as SharedWorkerGlobalScope).onunhandledrejection = (\n    event: PromiseRejectionEvent,\n  ) => {\n    void rpc.send(\n      \"error\",\n      String(event.reason instanceof Error ? event.reason.message : event.reason),\n    );\n  };\n\n  setupSendReportNotificationHandler(rpc);\n  // Shared workers need to be closed \"from the inside\" -- they have no terminate() method.\n  rpc.receive(\"close\", () => {\n    global.close();\n  });\n  rpc.receive(\"transform\", enforceFetchIsBlocked(transform));\n  rpc.receive(\"generateRosLib\", generateRosLib);\n  port.start();\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nexport const ros_lib_filename = \"ros/index.d.ts\";\nexport const ros_lib_dts = `\n  export declare interface Duration {\n    sec: number;\n    nsec: number;\n  }\n\n  export declare interface Time {\n    sec: number;\n    nsec: number;\n  }\n\n  // Once a data source Messages will be populated with interfaces matching the data source messages.\n  export declare namespace Messages {}\n\n  // Once a data source TopicsToMessageDefinition will be populated with topic names to message interfaces.\n  export declare interface TopicsToMessageDefinition {}\n\n  /**\n   * To correctly type your inputs, you use this type to refer to specific\n   * input topics, e.g. 'Input<\"/your_input_topic\">'. If you have\n   * multiple input topics, use a union type, e.g.\n   * 'Input<\"/your_input_topic_1\"> |\n   * Input<\"/your_input_topic_2\">'.\n   *\n   * These types are dynamically generated from the bag(s) currently in your\n   * Foxglove Studio session, so if a datatype changes, your User Script\n   * may not compile on the newly formatted bag.\n   */\n  export declare interface Input<T extends keyof TopicsToMessageDefinition> {\n    topic: T;\n    receiveTime: Time;\n    message: TopicsToMessageDefinition[T];\n  }\n\n`;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport { useTheme } from \"@mui/material\";\nimport type { Base16Theme } from \"base16\";\n\nexport const DEFAULT_STUDIO_NODE_PREFIX = \"/studio_script/\";\n\nexport function useJsonTreeTheme(): Pick<\n  Base16Theme,\n  \"base00\" | \"base07\" | \"base0B\" | \"base09\" | \"base08\" | \"base0D\" | \"base03\"\n> {\n  const {\n    palette: { mode, text },\n  } = useTheme();\n\n  return {\n    dark: {\n      base00: \"transparent\", // bg\n      base0B: \"#ffa657\", // string & date, item string\n      base09: \"#7ee787\", // # & boolean\n      base07: \"#79c0ff\", // text\n      base08: \"#ff7b72\", // null, undefined, function, & symbol\n      base0D: \"#79c0ff\", // label & arrow\n      base03: text.secondary, // item string expanded\n    },\n    light: {\n      base00: \"transparent\", // bg\n      base0B: \"#953800\", // string & date, item string\n      base09: \"#116329\", // # & boolean\n      base07: \"#0550ae\", // text\n      base08: \"#cf222e\", // null, undefined, function, & symbol\n      base0D: \"#0550ae\", // label & arrow\n      base03: text.secondary, // item string expanded\n    },\n  }[mode];\n}\n\nexport const TAB_PANEL_TYPE = \"Tab\";\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n// Provide a shim for global process variable users\n// We avoid using the npm process module since it has unfavorable performance for process.nextTick\n// and uses setTimeout(..., 0). Instead we use queueMicrotask which is much faster.\nconst process = {\n  // We want to be able to use Function type for _fn_ param\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  nextTick: (fn: Function, ...args: unknown[]): void => {\n    queueMicrotask(() => {\n      fn(...args);\n    });\n  },\n\n  title: \"browser\",\n  browser: true,\n  env: {},\n  argv: [],\n};\n\n// ts-prune-ignore-next\nexport default process;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [9308,144,4942], () => (__webpack_require__(93986)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"studio-\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t5511: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([9308,144,4942].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["filterMap","values","mapFn","results","index","item","mappedItem","modifiers","createProperty","name","type","createTimeInterfaceDeclaration","jsonInterfaceDeclaration","formatInterfaceName","rosPrimitivesToTypeScriptMap","typedArrayMap","timeInterface","durationInterface","rosSpecialTypesToTypescriptMap","generateTypeDefs","datatypes","interfaceDeclarations","datatype","definition","typeMembers","isArray","isConstant","node","typedArray","rosPrimitive","rosSpecial","topics","TopicsToMessageDefinition","typedMessage","DATATYPES_IDENTIFIER","datatypeInterfaces","schemaName","datatypesNamespace","val","sourceFile","printer","DiagnosticSeverity","Sources","ErrorCodes","noFuncError","nonFuncError","badTypeReturnError","limitedUnionsError","unionsError","functionError","noTypeLiteralsError","noIntersectionTypesError","preferArrayLiteral","classError","noTypeOfError","noTuples","noNestedAny","noMappedTypes","MAX_DEPTH","DatatypeExtractionError","diagnostic","findChild","kind","child","findDeclaration","symbol","declaration","findImportedTypeDeclaration","checker","maybeSymbol","declaredType","buildTypeMapFromParams","typeParameters","typeMap","newTypeParamMap","i","currentParam","buildTypeMapFromArgs","typeArguments","typeArg","text","parent","current","isNodeFromRosModule","findDefaultExportFunction","source","defaultExportSymbol","functionDeclarationNode","exportAssignmentNode","exportedNode","findReturnType","typeChecker","signatures","signature","nonNullable","decl","constructDatatypes","currentDatatype","messageDefinitionMap","sourceDatatypes","depth","currentTypeParamMap","interfaceName","messageDef","getRosMsgField","tsNode","isComplex","innerDepth","typeLiteral","symbolName","messageDefinition","nestedType","typeParamMap","nestedDatatypes","childFields","secField","field","nsecField","typeAlias","typeRef","nextSymbol","typeParam","next","nextNode","members","rosMsgFields","member","mapCategoryToDiagnosticSeverity","category","transformDiagnosticToMarkerData","startLineNumber","startColumn","endLineNumber","endColumn","flattenDiagnosticMessageText","diag","newLine","indent","result","kid","baseCompilerOptions","hasTransformerErrors","nodeData","severity","getInputTopics","error","inputsExport","inputTopicElements","inputTopics","expression","getOutputTopic","matches","outputTopic","validateInputTopics","activeTopics","diagnostics","inputTopic","compile","sourceCode","rosLib","typesLib","options","nodeFileName","projectConfig","projectCode","sourceCodeMap","file","lib","transpiledCode","codeEmitted","host","fileName","key","data","code","value","program","newDiagnostics","extractGlobalVariables","globalVariablesMembers","globalVariables","extractDatatypes","exportNode","typeNode","outputDatatype","compose","transformers","newNodeData","transformer","args","RESPONSE","ERROR","createLinkedChannels","local","_transfer","ev","remote","Rpc","#channel","#messageId","#pendingCallbacks","#receivers","channel","#onChannelMessage","id","topic","resolve","handler","transferables","message","err","callback","transfer","reject","info","globalWithHandler","reportError","setReportErrorHandler","fn","AppError","details","extraInfo","stringifiedExtraInfo","inWebWorker","inSharedWorker","enforceFetchIsBlocked","canFetch","defaultNotificationHandler","addNotification","setNotificationHandler","unsetNotificationHandler","sendNotification","setupSendReportNotificationHandler","rpc","setupWorker","unsentErrors","event","connectEvent","port","ros_lib_filename","ros_lib_dts","DEFAULT_STUDIO_NODE_PREFIX","useJsonTreeTheme","mode","TAB_PANEL_TYPE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","__webpack_exports__","deferred","chunkIds","priority","notFulfilled","fulfilled","j","r","getter","exports","chunkId","promises","obj","prop","scriptUrl","document","scripts","installedChunks","installChunk","moreModules","runtime","parentChunkLoadingFunction","chunkLoadingGlobal"],"sourceRoot":""}