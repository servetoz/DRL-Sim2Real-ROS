{"version":3,"file":"studio-1832.js","mappings":"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","sources":["webpack:///../../packages/studio-base/src/panels/ConfigEditor/ConfigFileList.tsx","webpack:///../../packages/studio-base/src/panels/ConfigEditor/inputs/NumberInput.tsx","webpack:///../../packages/studio-base/src/panels/ConfigEditor/index.tsx"],"sourcesContent":["import { CSSProperties, useCallback, useEffect, useState } from \"react\";\nimport { Backdrop, CircularProgress, Stack } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { makeStyles } from \"tss-react/mui\";\nimport { styled, lighten, darken } from '@mui/system';\n\nconst API_URL = \"/api/sim2real/config/list\";\n\ntype ConfigFileListProps = {\n    index?: number; // Optional index field which gets passed to `onChange` (so you don't have to create anonymous functions)\n    onChange: (value?: string, type?: string) => void;\n    autoSize?: boolean;\n    placeholder?: string;\n    inputStyle?: CSSProperties;\n    disabled?: boolean;\n    disableAutocomplete?: boolean; // Treat this as a normal input, with no autocomplete.\n    readOnly?: boolean;\n};\n\nconst GroupHeader = styled('div')(({ theme }) => ({\n    position: 'sticky',\n    top: '-8px',\n    padding: '4px 10px',\n    color: theme.palette.primary.main,\n    fontWeight: 'bold',\n    backgroundColor:\n        theme.palette.mode === 'light'\n            ? lighten(theme.palette.primary.light, 0.85)\n            : darken(theme.palette.primary.main, 0.8),\n}));\n\nconst GroupItems = styled('ul')({\n    padding: 0,\n});\n\n\nconst useStyles = makeStyles()((theme) => ({\n    input: {\n        \".MuiInputBase-root.MuiInputBase-sizeSmall .MuiAutocomplete-input.MuiInputBase-inputSizeSmall\":\n        {\n            paddingBottom: theme.spacing(0.425),\n            paddingTop: theme.spacing(0.425),\n        },\n        \".MuiInputBase-root.MuiInputBase-sizeSmall\": {\n            padding: theme.spacing(0.125),\n            gap: theme.spacing(0.25),\n        },\n    },\n    chip: {\n        \"&.MuiAutocomplete-tag\": {\n            margin: 0,\n        },\n    },\n}));\n\nexport default React.memo<ConfigFileListProps>(function ConfigFileList(\n    props: ConfigFileListProps,\n) {\n    const { classes } = useStyles();\n\n    const fetchConfigFiles = useCallback(async () => {\n        const response = await fetch(API_URL);\n        const data = await response.json();\n        let configFiles: string[] = [];\n        configFiles.push(\n            ...data[\"trainingFiles\"].map((file: string) => {\n                return {\n                    name: file,\n                    type: \"training\",\n                }\n            }),\n            ...data[\"sim2realFiles\"].map((file: string) => {\n                return {\n                    name: file,\n                    type: \"sim2real\",\n                }\n            }),\n        )\n\n        return configFiles;\n    }, []);\n\n    const [configFiles, setConfigFiles] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n        setLoading(true);\n        fetchConfigFiles().then((data) => {\n            setConfigFiles(data);\n            setLoading(false);\n        }).catch((error) => {\n            console.log(error);\n            setLoading(false);\n        });\n    }, [fetchConfigFiles]);\n\n\n\n\n\n    return (\n        <Stack\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            flexGrow={1}\n            flexShrink={0}\n            spacing={0.25}\n        >\n            <Backdrop\n                sx={{ color: (theme) => theme.palette.text.primary, zIndex: (theme) => theme.zIndex.drawer + 1, position: \"absolute\" }}\n                open={loading}\n            >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <Autocomplete\n                onChange={(_event, value) => props.onChange(value?.name, value?.type)}\n                options={configFiles}\n                freeSolo\n                fullWidth\n                groupBy={(option) => option.type}\n                getOptionLabel={(option) => option.name}\n                ChipProps={{\n                    className: classes.chip,\n                    variant: \"filled\",\n                    size: \"small\",\n                }}\n                renderGroup={(params) => (\n                    <li key={params.key}>\n                        <GroupHeader>{params.group.toUpperCase()}</GroupHeader>\n                        <GroupItems>{params.children}</GroupItems>\n                    </li>\n                )}\n                renderInput={(params) => (\n                    <TextField {...params} size=\"small\" className={classes.input} placeholder=\"Search a file\" />\n                )}\n            />\n        </Stack>\n    );;\n});","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport { IconButton, TextFieldProps, TextField } from \"@mui/material\";\nimport { clamp, isFinite } from \"lodash\";\nimport { ReactNode, useCallback, useRef } from \"react\";\nimport { useLatest } from \"react-use\";\nimport { makeStyles } from \"tss-react/mui\";\n\nimport { fonts } from \"@foxglove/studio-base/util/sharedStyleConstants\";\n\nconst useStyles = makeStyles()((theme) => ({\n  iconButton: {\n    \"&.MuiIconButton-edgeStart\": {\n      marginLeft: theme.spacing(-0.75),\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    \"&.MuiIconButton-edgeEnd\": {\n      marginRight: theme.spacing(-0.75),\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    },\n  },\n\n  textField: {\n    \".MuiInputBase-formControl.MuiInputBase-root\": {\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n    width: \"165px\",\n    \"& .MuiInputBase-root\": {\n      fontFamily: fonts.MONOSPACE,\n      fontSize: \"0.86rem\",\n      lineHeight: 1.5,\n    },\n    \".MuiInputBase-input\": {\n      textAlign: \"center\",\n      fontFamily: fonts.MONOSPACE,\n      cursor: \"ew-resize\",\n\n      \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n        appearance: \"none\",\n        margin: 0,\n      },\n    },\n    \"@media (pointer: fine)\": {\n      \".MuiIconButton-root\": {\n        visibility: \"hidden\",\n      },\n      \"&:hover .MuiIconButton-root\": {\n        visibility: \"visible\",\n      },\n    },\n  },\n  textFieldReadonly: {\n    \".MuiInputBase-input\": {\n      cursor: \"auto\",\n    },\n  },\n}));\n\nexport function NumberInput(\n  props: {\n    iconUp?: ReactNode;\n    iconDown?: ReactNode;\n    max?: number;\n    min?: number;\n    precision?: number;\n    readOnly?: boolean;\n    step?: number;\n    value?: number;\n    onChange: (value?: number) => void;\n  } & Omit<TextFieldProps, \"onChange\">,\n): JSX.Element {\n  const { classes, cx } = useStyles();\n  const {\n    value,\n    iconDown,\n    iconUp,\n    step = 1,\n    min,\n    max,\n    onChange,\n    disabled,\n    readOnly,\n    precision = 2,\n  } = props;\n\n  const inputRef = useRef<HTMLInputElement>(ReactNull);\n\n  // Maintain our own internal scrub value during the scrub to prevent jitter.\n  const scrubValue = useRef(0);\n\n  const latestValue = useLatest(value);\n\n  const placeHolderValue = isFinite(Number(props.placeholder))\n    ? Number(props.placeholder)\n    : undefined;\n\n  const updateValue = useCallback(\n    (newValue: undefined | number) => {\n      if (disabled === true || readOnly === true) {\n        return;\n      }\n\n      const clampedValue =\n        newValue == undefined\n          ? undefined\n          : clamp(newValue, min ?? Number.NEGATIVE_INFINITY, max ?? Number.POSITIVE_INFINITY);\n      onChange(clampedValue != undefined ? Number(clampedValue.toFixed(precision)) : clampedValue);\n    },\n    [disabled, readOnly, min, max, onChange, precision],\n  );\n\n  const onPointerDown = useCallback(\n    (event: React.PointerEvent) => {\n      event.currentTarget.setPointerCapture(event.pointerId);\n      const scrubStart = latestValue.current ?? placeHolderValue ?? 0;\n      scrubValue.current = isFinite(scrubStart) ? scrubStart : 0;\n    },\n    [latestValue, placeHolderValue],\n  );\n\n  const onPointerUp = useCallback((event: React.PointerEvent) => {\n    event.currentTarget.releasePointerCapture(event.pointerId);\n  }, []);\n\n  const onPointerMove = useCallback(\n    (event: React.PointerEvent<HTMLInputElement>) => {\n      if (event.buttons === 1) {\n        event.preventDefault();\n        event.currentTarget.blur();\n        const scale = event.shiftKey ? 10 : 1;\n        const delta =\n          Math.sign(event.movementX) *\n          Math.pow(Math.abs(event.movementX), 1.5) *\n          0.1 *\n          step *\n          scale;\n        scrubValue.current += delta;\n        updateValue(scrubValue.current);\n      }\n    },\n    [step, updateValue],\n  );\n\n  const displayValue =\n    inputRef.current === document.activeElement ? value : value?.toFixed(precision);\n\n  return (\n    <TextField\n      {...props}\n      value={displayValue ?? \"\"}\n      onChange={(event) =>\n        updateValue(event.target.value.length > 0 ? Number(event.target.value) : undefined)\n      }\n      type=\"number\"\n      className={cx(classes.textField, { [classes.textFieldReadonly]: readOnly })}\n      inputProps={{\n        ref: inputRef,\n        step,\n        onPointerDown,\n        onPointerUp,\n        onPointerMove,\n      }}\n      InputProps={{\n        readOnly,\n        startAdornment: (\n          <IconButton\n            className={classes.iconButton}\n            size=\"small\"\n            edge=\"start\"\n            tabIndex={-1} // Disable tabbing to the step buttons.\n            onClick={(event: React.MouseEvent) =>\n              updateValue((value ?? placeHolderValue ?? 0) - (event.shiftKey ? step * 10 : step))\n            }\n          >\n            {iconDown ?? <ChevronLeftIcon fontSize=\"small\" />}\n          </IconButton>\n        ),\n        endAdornment: (\n          <IconButton\n            className={classes.iconButton}\n            size=\"small\"\n            edge=\"end\"\n            tabIndex={-1} // Disable tabbing to the step buttons.\n            onClick={(event: React.MouseEvent) =>\n              updateValue((value ?? placeHolderValue ?? 0) + (event.shiftKey ? step * 10 : step))\n            }\n          >\n            {iconUp ?? <ChevronRightIcon fontSize=\"small\" />}\n          </IconButton>\n        ),\n      }}\n    />\n  );\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2020-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nimport { makeStyles } from \"tss-react/mui\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport TreeView from '@mui/lab/TreeView';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport SaveIcon from '@mui/icons-material/Save';\nimport PlayCircleFilledWhiteIcon from '@mui/icons-material/PlayCircleFilledWhite';\nimport StopIcon from '@mui/icons-material/Stop';\nimport TreeItem from '@mui/lab/TreeItem';\nimport { Alert, Backdrop, Button, CircularProgress, MenuItem, Select, SelectChangeEvent, Snackbar, TextField, Typography } from \"@mui/material\";\n\nimport EmptyState from \"@foxglove/studio-base/components/EmptyState\";\nimport PanelToolbar from \"@foxglove/studio-base/components/PanelToolbar\";\nimport Stack from \"@foxglove/studio-base/components/Stack\";\nimport { fonts } from \"@foxglove/studio-base/util/sharedStyleConstants\";\n\n\nimport ConfigFileList from \"./ConfigFileList\";\nimport { NumberInput } from \"./inputs/NumberInput\";\nimport Panel from \"@foxglove/studio-base/components/Panel\";\n\nconst API_FETCH_FILE = \"/api/sim2real/config/:type/:name\";\nconst API_TRAINING_START = \"/api/sim2real/training/start/:name\";\nconst API_TRAINIG_STATUS = \"/api/sim2real/training/status\";\nconst API_TRAINIG_STOP = \"/api/sim2real/training/stop\";\n\nexport type AlertColor = 'success' | 'info' | 'warning' | 'error';\n\nconst useStyles = makeStyles()((theme) => ({\n  inputWrapper: {\n    width: \"100%\",\n    lineHeight: \"20px\",\n  },\n  monospace: {\n    fontFamily: fonts.MONOSPACE,\n  },\n  fieldGrid: {\n    display: \"flex\",\n    alignItems: \"right\",\n    flexDirection: \"column\",\n    listStyle: \"none\",\n    margin: theme.spacing(0.3, 0),\n    \"& > .MuiTreeItem-content\": {\n      padding: 0,\n      \"& > .MuiTreeItem-label\": {\n        padding: 0,\n      },\n    },\n  },\n  textField: {\n    border: 0,\n    width: \"165px\",\n    \"& .MuiInputBase-root\": {\n      fontFamily: fonts.MONOSPACE,\n      fontSize: \"0.86rem\",\n      lineHeight: 1.5,\n\n      \"& .MuiInputBase-input\": {\n        textAlign: \"center\",\n        borderColor: \"transparent\",\n        width: \"100%\",\n      },\n    },\n  },\n  startAdornment: {\n    display: \"flex\",\n  },\n  fieldLabel: {\n    paddingLeft: theme.spacing(0.2),\n    position: \"relative\",\n    fontFeatureSettings: \"'cv08','cv10','tnum'\",\n    fontFamily: \"Inter\",\n    fontWeight: 400,\n    fontSize: \"0.86rem\",\n    lineHeight: 1.5,\n    cursor: \"pointer\",\n  },\n  fieldWrapper: {\n    minWidth: theme.spacing(14),\n    marginRight: theme.spacing(0.5),\n    justifySelf: \"flex-end\",\n  },\n}));\n\nfunction InputField({\n  onChange,\n  value,\n  type,\n  inputId,\n}: {\n  onChange: (value?: string, type?: string) => void;\n  value: string | number | boolean | undefined;\n  type: string;\n  inputId: string;\n}) {\n  const { classes } = useStyles();\n  const [inputValue, setInputValue] = useState(value);\n\n  const onInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setInputValue(event.target.value);\n    }\n    , [setInputValue]);\n\n  const onNumberInputChange = useCallback(\n    (val?: number) => {\n      if (!val) {\n        setInputValue(\"\");\n        return;\n      }\n      if (isFinite(val)) {\n        setInputValue(val);\n        onChange(val as unknown as string, type);\n      }\n    }\n    , [setInputValue]);\n\n  const onSelectChange = useCallback(\n    (event: SelectChangeEvent<string>) => {\n      setInputValue(event.target.value === \"true\" ? true : false);\n    }\n    , [setInputValue]);\n\n  const onInputBlur = useCallback(\n    () => {\n      onChange(inputValue as string, type);\n    }\n    , [inputValue, onChange, type]);\n\n  switch (type) {\n    case \"number\":\n      return (<NumberInput\n        size=\"small\"\n        variant=\"filled\"\n        value={inputValue as number}\n        readOnly={false}\n        className={classes.textField}\n        id={inputId}\n        fullWidth\n        onChange={onNumberInputChange}\n      />);\n    case \"string\":\n      return (<TextField\n        className={classes.textField}\n        fullWidth\n        size=\"small\"\n        variant=\"filled\"\n        id={inputId}\n        value={inputValue}\n        onChange={onInputChange}\n        onBlur={onInputBlur}\n      />);\n\n    case \"boolean\":\n      return (<Select\n        className={classes.textField}\n        fullWidth\n        id={inputId}\n        size=\"small\"\n        variant=\"filled\"\n        value={inputValue as string}\n        onChange={onSelectChange}\n        onBlur={onInputBlur}\n      >\n        <MenuItem sx={{ textAlign: \"center\" }} key={0} value={\"false\"}>false</MenuItem >\n        <MenuItem sx={{ textAlign: \"center\" }} key={1} value={\"true\"}>true</MenuItem >\n      </Select>\n      );\n    default:\n      return (<TextField\n        className={classes.textField}\n        fullWidth\n        size=\"small\"\n        variant=\"filled\"\n        id={inputId}\n        value={inputValue}\n        onChange={onInputChange}\n        onBlur={onInputBlur}\n      />);\n  }\n}\n\n\nfunction ConfigEditorPanel() {\n  const { classes } = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<{ name?: string; type?: string } | null>(null);\n  const [file, setFile] = useState<any>(null);\n  let fileContentKeys = [] as string[];\n  const [snackbarOptions, setSnackbarOptions] = useState({ message: \"\", severity: \"success\", open: false, autoHideDuration: 3000 } as { message: string, severity: string, open: boolean, autoHideDuration: number | null });\n  const [trainingStatusInterval, setTrainingStatusInterval] = useState<any>(null);\n\n\n  const onFileChange = useCallback(\n    (value?: string, type?: string) => {\n      if (!value) {\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile({ name: value, type });\n    },\n    [setSelectedFile],\n  );\n\n  useEffect(() => {\n    if (selectedFile) {\n      const { name, type } = selectedFile;\n      if (!name || !type) {\n        return;\n      }\n      setLoading(true);\n      const fetchFile = async (name: string, type: string) => {\n        const url = API_FETCH_FILE.replace(\":name\", name).replace(\":type\", type);\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n      };\n\n      fetchFile(name, type).then((data) => {\n        setFile(data);\n        fileContentKeys = [];\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }, [selectedFile]);\n\n  const onFileSave = useCallback(\n    () => {\n      if (!selectedFile) {\n        return;\n      }\n      const { name, type } = selectedFile;\n      if (!name || !type) {\n        return;\n      }\n      setLoading(true);\n      const postFile = async (name: string, type: string) => {\n        const url = API_FETCH_FILE.replace(\":name\", name).replace(\":type\", type);\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(file),\n        });\n        const data = await response.json();\n        return data;\n      };\n\n      postFile(name, type).then((data) => {\n        setFile(data);\n        fileContentKeys = [];\n        setSnackbarOptions({ message: \"File saved succesfully!\", severity: \"success\", open: true, autoHideDuration: 3000 });\n      }).finally(() => {\n        setLoading(false);\n      });\n    },\n    [selectedFile, file, setLoading, setFile, fileContentKeys, setSnackbarOptions],\n  );\n\n  const onFileExecute = useCallback(\n    () => {\n      if (!selectedFile) {\n        return;\n      }\n      const { name, type } = selectedFile;\n      if (!name || !type) {\n        return;\n      }\n\n      if (type !== \"training\") {\n        return;\n      }\n\n      const startTraining = async (name: string) => {\n        const url = API_TRAINING_START.replace(\":name\", name);\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }).then((res) => res.json());\n        return response;\n      };\n\n      startTraining(name).then((data) => {\n        console.log(data);\n      });\n\n      const trainingStatus = async () => {\n        const url = API_TRAINIG_STATUS;\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }).then((res) => res.json());\n        return response;\n      };\n\n\n      setTrainingStatusInterval(setInterval(() => {\n        trainingStatus().then((data) => {\n          if (data.status === \"finished\") {\n            clearInterval(trainingStatusInterval);\n            setTrainingStatusInterval(null);\n            setSnackbarOptions({ message: \"Training finished succesfully!\", severity: \"success\", open: true, autoHideDuration: null });\n          } else if (data.status === \"finished_with_error\") {\n            clearInterval(trainingStatusInterval);\n            setTrainingStatusInterval(null);\n            setSnackbarOptions({ message: \"Training finished with error! Please check ros logs for more information.\", severity: \"error\", open: true, autoHideDuration: null });\n          }\n        });\n      }, 1000));\n\n\n    }, [selectedFile]);\n\n\n  useEffect(() => {\n    return () => {\n      if (trainingStatusInterval) {\n        clearInterval(trainingStatusInterval);\n      }\n    };\n  }, [trainingStatusInterval]);\n\n\n  const onTrainingStop = useCallback(\n    () => {\n      const stopTraining = async () => {\n        const url = API_TRAINIG_STOP;\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }).then((res) => res.json());\n        return response;\n      };\n\n      stopTraining().then((data) => {\n        if (data.status === \"stopped\") {\n          clearInterval(trainingStatusInterval);\n          setTrainingStatusInterval(null);\n          setSnackbarOptions({ message: \"Training stopped!\", severity: \"success\", open: true, autoHideDuration: null });\n        }\n      }).catch((err) => {\n        setSnackbarOptions({ message: \"Error stopping training!\", severity: \"error\", open: true, autoHideDuration: null });\n        console.log(err);\n      });\n\n    }, [trainingStatusInterval, setTrainingStatusInterval, setSnackbarOptions]);\n\n\n\n  const renderTree = (nodes: any) => {\n    if (typeof nodes !== \"object\" || nodes === null) {\n      return null;\n    }\n\n    return Object.keys(nodes).map((key) => {\n      let generatedId = \"\";\n      if (fileContentKeys.indexOf(key) === -1) {\n        fileContentKeys.push(key);\n        generatedId = key;\n      } else {\n        const regex = new RegExp(key + \"-[0-9]+\");\n        const keys = fileContentKeys.filter((k) => regex.test(k));\n        if (keys.length > 0) {\n          const lastKey = keys[keys.length - 1];\n          const lastKeyNumber = Number(lastKey?.split(\"-\")[1]);\n          const newKey = key + \"-\" + (lastKeyNumber + 1);\n          fileContentKeys.push(newKey);\n          generatedId = newKey;\n        } else {\n          fileContentKeys.push(key + \"-1\");\n          generatedId = key + \"-1\";\n        }\n      }\n      if (typeof nodes[key] === \"object\") {\n        return (\n          <TreeItem key={generatedId} nodeId={generatedId} label={key} className={classes.fieldGrid}>\n            {renderTree(nodes[key])}\n          </TreeItem>\n        );\n      } else {\n        return (\n          <li className={classes.fieldGrid} key={generatedId}>\n            <Stack\n              paddingLeft={0.2}\n              fullHeight\n              direction=\"row\"\n              alignItems=\"center\"\n              flex={1}\n              justifyContent=\"space-between\"\n            >\n              <Typography\n                className={classes.fieldLabel}\n                title={key}\n                variant=\"subtitle2\"\n                onClick={() => {\n                  const input = document.getElementById(key + generatedId);\n                  if (input) {\n                    input.focus();\n                  }\n                }}\n              >\n                {key}\n              </Typography>\n              <div className={classes.fieldWrapper}>\n                <InputField\n                  onChange={(value, type) => {\n                    if (type === \"number\") {\n                      nodes[key] = Number(value);\n                    } else if (type === \"boolean\") {\n                      nodes[key] = Boolean(value);\n                    } else {\n                      nodes[key] = value;\n                    }\n                    setFile({ ...file });\n                  }}\n                  inputId={key + generatedId}\n                  value={nodes[key]}\n                  type={typeof nodes[key]}\n                />\n              </div>\n            </Stack>\n          </li>\n        );\n      }\n    });\n  };\n\n  return (\n    <>\n      <Stack flex=\"auto\" overflow=\"hidden\" position=\"relative\">\n        <PanelToolbar>\n          <div className={classes.inputWrapper}>\n            <ConfigFileList onChange={onFileChange} />\n          </div>\n        </PanelToolbar>\n        {!selectedFile && <EmptyState>No file selected</EmptyState>}\n        <Backdrop\n          sx={{ color: (theme) => theme.palette.text.primary, zIndex: (theme) => theme.zIndex.drawer + 1, position: \"absolute\" }}\n          open={loading}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        {file && selectedFile && (\n          <TreeView\n            key={selectedFile.name}\n            aria-label=\"rich object\"\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpanded={['root']}\n            defaultExpandIcon={<ChevronRightIcon />}\n            sx={{ flexGrow: 1, overflow: \"auto\" }}\n          >\n            {renderTree(file)}\n          </TreeView>\n        )}\n      </Stack>\n      {selectedFile && (\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" flexShrink={0} gap={0.5} padding={1} style={{ borderTop: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\n          <Button\n            variant=\"outlined\"\n            startIcon={<SaveIcon />}\n            onClick={onFileSave}>\n            Save\n          </Button>\n          {selectedFile.type === \"training\" && trainingStatusInterval === null &&\n            (\n              <Button\n                variant=\"outlined\"\n                startIcon={<PlayCircleFilledWhiteIcon />}\n                onClick={onFileExecute}>\n                Execute\n              </Button>\n            )}\n          {selectedFile.type === \"training\" && trainingStatusInterval !== null &&\n            (\n              <Button\n                variant=\"outlined\"\n                startIcon={<StopIcon />}\n                color=\"error\"\n                onClick={onTrainingStop}>\n                Stop (Running...)\n              </Button>\n            )}\n        </Stack >)\n      }\n      <Snackbar open={snackbarOptions.open} onClose={() => setSnackbarOptions({ ...snackbarOptions, open: false })}\n        autoHideDuration={snackbarOptions.autoHideDuration}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} sx={{ position: \"absolute\", width: \"80%\" }}>\n        <Alert onClose={() => setSnackbarOptions({ ...snackbarOptions, open: false })}\n          severity={snackbarOptions.severity as AlertColor}\n          sx={{ width: '100%' }}>\n          {snackbarOptions.message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n\nConfigEditorPanel.panelType = \"ConfigEditor\";\nConfigEditorPanel.defaultConfig = {\n  topicPath: \"\",\n};\n\nexport default Panel(ConfigEditorPanel);\n"],"names":["API_URL","GroupHeader","styled","theme","GroupItems","useStyles","React","props","classes","fetchConfigFiles","data","configFiles","file","setConfigFiles","loading","setLoading","error","Backdrop","CircularProgress","Autocomplete","_event","value","option","params","TextField","NumberInput","cx","iconDown","iconUp","step","min","max","onChange","disabled","readOnly","precision","inputRef","scrubValue","latestValue","useLatest","placeHolderValue","updateValue","newValue","clampedValue","onPointerDown","event","scrubStart","onPointerUp","onPointerMove","scale","delta","displayValue","IconButton","ChevronLeft","ChevronRight","API_FETCH_FILE","API_TRAINING_START","API_TRAINIG_STATUS","API_TRAINIG_STOP","InputField","type","inputId","inputValue","setInputValue","onInputChange","onNumberInputChange","val","onSelectChange","onInputBlur","Select","MenuItem","ConfigEditorPanel","selectedFile","setSelectedFile","setFile","fileContentKeys","snackbarOptions","setSnackbarOptions","trainingStatusInterval","setTrainingStatusInterval","onFileChange","name","url","onFileSave","onFileExecute","res","trainingStatus","onTrainingStop","err","renderTree","nodes","key","generatedId","regex","keys","k","lastKey","lastKeyNumber","newKey","TreeItem","Stack","Typography","input","PanelToolbar","ConfigFileList","EmptyState","TreeView","ExpandMore","Button","Save","PlayCircleFilledWhite","Stop","Snackbar","Alert","Panel"],"sourceRoot":""}