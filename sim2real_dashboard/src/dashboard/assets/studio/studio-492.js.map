{"version":3,"file":"studio-492.js","mappings":"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","sources":["webpack:///../../node_modules/path-browserify/index.js","webpack:///../../packages/studio-base/src/util/process.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../../packages/studio-base/src/players/UserNodePlayer/types.ts","webpack:///../../packages/studio-base/src/util/globalConstants.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeRuntimeWorker/registry.ts","webpack:///../../packages/studio-base/src/util/Rpc.ts","webpack:///../../packages/studio-base/src/util/workers.ts","webpack:///../../packages/studio-base/src/players/UserNodePlayer/nodeRuntimeWorker/index.ts"],"sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n// Provide a shim for global process variable users\n// We avoid using the npm process module since it has unfavorable performance for process.nextTick\n// and uses setTimeout(..., 0). Instead we use queueMicrotask which is much faster.\nconst process = {\n  // We want to be able to use Function type for _fn_ param\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  nextTick: (fn: Function, ...args: unknown[]): void => {\n    queueMicrotask(() => {\n      fn(...args);\n    });\n  },\n\n  title: \"browser\",\n  browser: true,\n  env: {},\n  argv: [],\n};\n\n// ts-prune-ignore-next\nexport default process;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport type { SourceFile, TypeChecker } from \"typescript\";\n\nimport { GlobalVariables } from \"@foxglove/studio-base/hooks/useGlobalVariables\";\nimport { Topic, MessageEvent } from \"@foxglove/studio-base/players/types\";\nimport { RosDatatypes } from \"@foxglove/studio-base/types/RosDatatypes\";\n\n// make sure to use import type to avoid bringing in the actual implementations to the bundle\n\nexport const DiagnosticSeverity = {\n  Hint: 1,\n  Info: 2,\n  Warning: 4,\n  Error: 8,\n};\n\nexport const Sources = {\n  Typescript: \"Typescript\",\n  DatatypeExtraction: \"DatatypeExtraction\",\n  InputTopicsChecker: \"InputTopicsChecker\",\n  OutputTopicChecker: \"OutputTopicChecker\",\n  Runtime: \"Runtime\",\n};\n\nexport const ErrorCodes = {\n  RUNTIME: 1,\n  DatatypeExtraction: {\n    NO_DEFAULT_EXPORT: 1,\n    NON_FUNC_DEFAULT_EXPORT: 2,\n    NO_TYPE_RETURN: 3,\n    BAD_TYPE_RETURN: 4,\n    UNKNOWN_ERROR: 5,\n    NO_UNIONS: 6,\n    NO_FUNCTIONS: 7,\n    NO_CLASSES: 8,\n    NO_TYPE_LITERALS: 9,\n    NO_TUPLES: 10,\n    NO_INTERSECTION_TYPES: 11,\n    NO_TYPEOF: 12,\n    PREFER_ARRAY_LITERALS: 13,\n    STRICT_MARKERS_RETURN_TYPE: 14,\n    LIMITED_UNIONS: 15,\n    NO_NESTED_ANY: 16,\n    NO_MAPPED_TYPES: 17,\n    INVALID_PROPERTY: 18,\n    INVALID_INDEXED_ACCESS: 19,\n  },\n  InputTopicsChecker: {\n    NO_TOPIC_AVAIL: 1,\n    NO_INPUTS_EXPORT: 2,\n    EMPTY_INPUTS_EXPORT: 3,\n    BAD_INPUTS_TYPE: 4,\n  },\n  OutputTopicChecker: {\n    NO_OUTPUTS: 1,\n    NOT_UNIQUE: 2,\n    EXISTING_TOPIC: 3,\n  },\n};\n\nexport type Diagnostic = {\n  severity: (typeof DiagnosticSeverity)[keyof typeof DiagnosticSeverity];\n  message: string;\n  source: (typeof Sources)[keyof typeof Sources];\n  startLineNumber?: number;\n  startColumn?: number;\n  endLineNumber?: number;\n  endColumn?: number;\n  code: number;\n};\n\nexport type NodeData = {\n  name: string;\n  sourceCode: string;\n  transpiledCode: string;\n  projectCode: Map<string, string> | undefined;\n  diagnostics: readonly Diagnostic[];\n  inputTopics: readonly string[];\n  outputTopic: string;\n  outputDatatype: string;\n  datatypes: RosDatatypes;\n  sourceFile?: SourceFile;\n  typeChecker?: TypeChecker;\n  rosLib: string;\n  typesLib: string;\n  // An array of globalVariable names\n  globalVariables: readonly string[];\n};\n\nexport type NodeRegistration = {\n  nodeId: string;\n  nodeData: NodeData;\n  inputs: readonly string[];\n  output: Topic;\n  processBlockMessage: (\n    messageEvent: MessageEvent,\n    globalVariables: GlobalVariables,\n  ) => Promise<MessageEvent | undefined>;\n  processMessage: (\n    messageEvent: MessageEvent,\n    globalVariables: GlobalVariables,\n  ) => Promise<MessageEvent | undefined>;\n  terminate: () => void;\n};\n\nexport type NodeDataTransformer = (nodeData: NodeData, topics: Topic[]) => NodeData;\n\nexport type UserNodeLog = {\n  source: \"registerNode\" | \"processMessage\";\n  value: unknown;\n};\n\nexport type RegistrationOutput = {\n  error?: string;\n  userNodeLogs: UserNodeLog[];\n  userNodeDiagnostics: Diagnostic[];\n};\n\nexport type ProcessMessageOutput = {\n  message: Record<string, unknown> | undefined;\n  error?: string;\n  userNodeLogs: UserNodeLog[];\n  userNodeDiagnostics: Diagnostic[];\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport { useTheme } from \"@mui/material\";\nimport type { Base16Theme } from \"base16\";\n\nexport const DEFAULT_STUDIO_NODE_PREFIX = \"/studio_script/\";\n\nexport function useJsonTreeTheme(): Pick<\n  Base16Theme,\n  \"base00\" | \"base07\" | \"base0B\" | \"base09\" | \"base08\" | \"base0D\" | \"base03\"\n> {\n  const {\n    palette: { mode, text },\n  } = useTheme();\n\n  return {\n    dark: {\n      base00: \"transparent\", // bg\n      base0B: \"#ffa657\", // string & date, item string\n      base09: \"#7ee787\", // # & boolean\n      base07: \"#79c0ff\", // text\n      base08: \"#ff7b72\", // null, undefined, function, & symbol\n      base0D: \"#79c0ff\", // label & arrow\n      base03: text.secondary, // item string expanded\n    },\n    light: {\n      base00: \"transparent\", // bg\n      base0B: \"#953800\", // string & date, item string\n      base09: \"#116329\", // # & boolean\n      base07: \"#0550ae\", // text\n      base08: \"#cf222e\", // null, undefined, function, & symbol\n      base0D: \"#0550ae\", // label & arrow\n      base03: text.secondary, // item string expanded\n    },\n  }[mode];\n}\n\nexport const TAB_PANEL_TYPE = \"Tab\";\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport path from \"path\";\n\nimport { GlobalVariables } from \"@foxglove/studio-base/hooks/useGlobalVariables\";\nimport {\n  Diagnostic,\n  DiagnosticSeverity,\n  ErrorCodes,\n  ProcessMessageOutput,\n  RegistrationOutput,\n  Sources,\n  UserNodeLog,\n} from \"@foxglove/studio-base/players/UserNodePlayer/types\";\nimport { DEFAULT_STUDIO_NODE_PREFIX } from \"@foxglove/studio-base/util/globalConstants\";\n\n// Each node runtime worker runs one node at a time, hence why we have one\n// global declaration of 'nodeCallback'.\nlet nodeCallback: (\n  message: unknown,\n  globalVariables: GlobalVariables,\n) => Record<string, unknown> | undefined;\n\nif (process.env.NODE_ENV === \"test\") {\n  // When in tests, clear out the callback between tests.\n  beforeEach(() => {\n    nodeCallback = () => {\n      return undefined;\n    };\n  });\n}\n\nexport const containsFuncDeclaration = (args: unknown[]): boolean => {\n  for (const arg of args) {\n    if (typeof arg === \"function\") {\n      return true;\n    } else if (typeof arg === \"object\" && arg != undefined) {\n      for (const value of Object.values(arg)) {\n        if (containsFuncDeclaration([value])) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const stringifyFuncsInObject = (arg: unknown): unknown => {\n  if (typeof arg === \"function\") {\n    return `${arg}`;\n  } else if (typeof arg === \"object\" && arg != undefined) {\n    const newArg: Record<string, unknown> = { ...arg };\n    for (const [key, value] of Object.entries(arg)) {\n      newArg[key] = stringifyFuncsInObject(value);\n    }\n    return newArg;\n  }\n  return arg;\n};\n\nconst getArgsToPrint = (args: unknown[]) => {\n  return args\n    .map(stringifyFuncsInObject)\n    .map((arg) => (typeof arg === \"object\" ? JSON.stringify(arg) : arg));\n};\n\n// Exported for tests.\nexport const requireImplementation = (id: string, projectCode: Map<string, string>): unknown => {\n  const requestedFile = `${path.join(DEFAULT_STUDIO_NODE_PREFIX, id)}.js`;\n  for (const [file, source] of projectCode.entries()) {\n    if (requestedFile.endsWith(file)) {\n      const sourceExports = {};\n      const require = (reqId: string) => requireImplementation(reqId, projectCode);\n      // eslint-disable-next-line no-new-func\n      new Function(\"exports\", \"require\", source)(sourceExports, require);\n      return sourceExports;\n    }\n  }\n  throw new Error(`User node required unknown module: '${id}'`);\n};\n\nexport const registerNode = ({\n  nodeCode,\n  projectCode,\n}: {\n  nodeCode: string;\n  projectCode: Map<string, string>;\n}): RegistrationOutput => {\n  const userNodeLogs: UserNodeLog[] = [];\n  const userNodeDiagnostics: Diagnostic[] = [];\n  (self as { log?: unknown }).log = function (...args: unknown[]) {\n    // recursively check that args do not contain a function declaration\n    if (containsFuncDeclaration(args)) {\n      const argsToPrint = getArgsToPrint(args);\n      throw new Error(\n        `Cannot invoke log() with a function argument (registerNode) - log(${argsToPrint.join(\n          \", \",\n        )})`,\n      );\n    }\n    userNodeLogs.push(...args.map((value) => ({ source: \"registerNode\" as const, value })));\n  };\n  try {\n    const nodeExports: { default?: typeof nodeCallback } = {};\n\n    const require = (id: string) => requireImplementation(id, projectCode);\n\n    // Using new Function in order to execute user-input text in User Scripts as code\n    // eslint-disable-next-line no-new-func\n    new Function(\"exports\", \"require\", nodeCode)(nodeExports, require);\n    nodeCallback = nodeExports.default!;\n    return {\n      error: undefined,\n      userNodeLogs,\n      userNodeDiagnostics,\n    };\n  } catch (e) {\n    const error: string = e.toString();\n    return {\n      error: error.length > 0 ? error : `Unknown error encountered registering this node.`,\n      userNodeLogs,\n      userNodeDiagnostics,\n    };\n  }\n};\n\nexport const processMessage = ({\n  message,\n  globalVariables,\n}: {\n  message: unknown;\n  globalVariables: GlobalVariables;\n}): ProcessMessageOutput => {\n  const userNodeLogs: UserNodeLog[] = [];\n  const userNodeDiagnostics: Diagnostic[] = [];\n  (self as { log?: unknown }).log = function (...args: unknown[]) {\n    // recursively check that args do not contain a function declaration\n    if (containsFuncDeclaration(args)) {\n      const argsToPrint = getArgsToPrint(args);\n      throw new Error(\n        `Cannot invoke log() with a function argument (processMessage) - log(${argsToPrint.join(\n          \", \",\n        )})`,\n      );\n    }\n    userNodeLogs.push(...args.map((value) => ({ source: \"processMessage\" as const, value })));\n  };\n  try {\n    const newMessage = nodeCallback(message, globalVariables);\n    return { message: newMessage, error: undefined, userNodeLogs, userNodeDiagnostics };\n  } catch (err) {\n    const error: string = err.toString();\n    const diagnostic: Diagnostic = {\n      source: Sources.Runtime,\n      severity: DiagnosticSeverity.Error,\n      message: error.length > 0 ? error : \"Unknown error encountered running this node.\",\n      code: ErrorCodes.RUNTIME,\n    };\n\n    return {\n      message: undefined,\n      error: undefined,\n      userNodeLogs,\n      userNodeDiagnostics: [diagnostic],\n    };\n  }\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\n// this type mirrors the MessageChannel and MessagePort APIs which are available on\n// instances of web-workers and shared-workers respectively, as well as avaiable on\n// 'global' within them.\nexport interface Channel {\n  postMessage(data: unknown, transfer?: Transferable[]): void;\n  onmessage?: ((ev: MessageEvent) => unknown) | null; // eslint-disable-line no-restricted-syntax\n  terminate: () => void;\n}\n\nconst RESPONSE = \"$$RESPONSE\";\nconst ERROR = \"$$ERROR\";\n\n// helper function to create linked channels for testing\nexport function createLinkedChannels(): { local: Channel; remote: Channel } {\n  const local: Channel = {\n    onmessage: undefined,\n\n    postMessage(data: unknown, _transfer?: Array<ArrayBuffer>) {\n      const ev = new MessageEvent(\"message\", { data });\n      if (remote.onmessage) {\n        remote.onmessage(ev);\n      }\n    },\n    terminate: () => {\n      // no-op\n    },\n  };\n\n  const remote: Channel = {\n    onmessage: undefined,\n\n    postMessage(data: unknown, _transfer?: Array<ArrayBuffer>) {\n      const ev = new MessageEvent(\"message\", { data });\n      if (local.onmessage) {\n        local.onmessage(ev);\n      }\n    },\n    terminate: () => {\n      // no-op\n    },\n  };\n  return { local, remote };\n}\n\n// This class allows you to hook up bi-directional async calls across web-worker\n// boundaries where a single call to or from a worker can 'wait' on the response.\n// Errors in receivers are propigated back to the caller as a rejection.\n// It also supports returning transferables over the web-worker postMessage api,\n// which was the main shortcomming with the worker-rpc npm module.\n// To attach rpc to an instance of a worker in the main thread:\n//   const rpc = new Rpc(workerInstace);\n// To attach rpc within an a web worker:\n//   const rpc = new Rpc(global);\n// Check out the tests for more examples.\nexport default class Rpc {\n  public static transferables = \"$$TRANSFERABLES\";\n  #channel: Omit<Channel, \"terminate\">;\n  #messageId: number = 0;\n  #pendingCallbacks: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: number]: (arg0: any) => void;\n  } = {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  #receivers: Map<string, (arg0: any) => any> = new Map();\n\n  public constructor(channel: Omit<Channel, \"terminate\">) {\n    this.#channel = channel;\n    if (this.#channel.onmessage) {\n      throw new Error(\n        \"channel.onmessage is already set. Can only use one Rpc instance per channel.\",\n      );\n    }\n    this.#channel.onmessage = this.#onChannelMessage;\n  }\n\n  #onChannelMessage = (ev: MessageEvent): void => {\n    const { id, topic, data } = ev.data;\n    if (topic === RESPONSE) {\n      this.#pendingCallbacks[id]?.(ev.data);\n      delete this.#pendingCallbacks[id];\n      return;\n    }\n    // invoke the receive handler in a promise so if it throws synchronously we can reject\n    new Promise<Record<string, Transferable[] | undefined> | undefined>((resolve) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      const handler = this.#receivers.get(topic);\n      if (!handler) {\n        throw new Error(`no receiver registered for ${topic}`);\n      }\n      // This works both when `handler` returns a value or a Promise.\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      resolve(handler(data));\n    })\n      .then((result) => {\n        if (!result) {\n          return this.#channel.postMessage({ topic: RESPONSE, id });\n        }\n        const transferables = result[Rpc.transferables];\n        delete result[Rpc.transferables];\n        const message = {\n          topic: RESPONSE,\n          id,\n          data: result,\n        };\n        this.#channel.postMessage(message, transferables);\n      })\n      .catch((err) => {\n        const message = {\n          topic: RESPONSE,\n          id,\n          data: {\n            [ERROR]: true,\n            name: err.name,\n            message: err.message,\n            stack: err.stack,\n          },\n        };\n        this.#channel.postMessage(message);\n      });\n  };\n\n  /** Call this when the channel has been terminated to reject any outstanding send callbacks. */\n  public terminate(): void {\n    for (const [id, callback] of Object.entries(this.#pendingCallbacks)) {\n      callback({\n        topic: RESPONSE,\n        id,\n        data: {\n          [ERROR]: true,\n          name: \"Error\",\n          message: \"Rpc terminated\",\n          stack: new Error().stack,\n        },\n      });\n    }\n  }\n\n  // send a message across the rpc boundary to a receiver on the other side\n  // this returns a promise for the receiver's response.  If there is no registered\n  // receiver for the given topic, this method throws\n  public async send<TResult, TData = unknown>(\n    topic: string,\n    data?: TData,\n    transfer?: Transferable[],\n  ): Promise<TResult> {\n    const id = this.#messageId++;\n    const message = { topic, id, data };\n    const result = new Promise<TResult>((resolve, reject) => {\n      this.#pendingCallbacks[id] = (info) => {\n        if (info.data?.[ERROR] != undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          const error = new Error(info.data.message);\n          error.name = info.data.name;\n          error.stack = info.data.stack;\n          reject(error);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          resolve(info.data);\n        }\n      };\n    });\n    this.#channel.postMessage(message, transfer);\n    return await result;\n  }\n\n  // register a receiver for a given message on a topic\n  // only one receiver can be registered per topic and currently\n  // 'deregistering' a receiver is not supported since this is not common\n  public receive<T, TOut>(topic: string, handler: (arg0: T) => TOut): void {\n    if (this.#receivers.has(topic)) {\n      throw new Error(`Receiver already registered for topic: ${topic}`);\n    }\n    this.#receivers.set(topic, handler);\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\n\nexport const inWebWorker = (): boolean => {\n  return (\n    typeof global.postMessage !== \"undefined\" &&\n    typeof WorkerGlobalScope !== \"undefined\" &&\n    self instanceof WorkerGlobalScope\n  );\n};\n\n// To debug shared workers, enter 'chrome://inspect/#workers' into the url bar.\nexport const inSharedWorker = (): boolean =>\n  typeof SharedWorkerGlobalScope !== \"undefined\" && self instanceof SharedWorkerGlobalScope;\n\nexport const enforceFetchIsBlocked = <R, Args extends readonly unknown[]>(\n  fn: (...args: Args) => R,\n): ((...args: Args) => Promise<R>) => {\n  const canFetch =\n    typeof fetch !== \"undefined\" &&\n    fetch(\"data:test\")\n      .then(() => true)\n      .catch(() => false);\n  return async (...args) => {\n    if (await canFetch) {\n      throw new Error(\"Content security policy too loose.\");\n    }\n    return fn(...args);\n  };\n};\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport {\n  registerNode,\n  processMessage,\n} from \"@foxglove/studio-base/players/UserNodePlayer/nodeRuntimeWorker/registry\";\nimport Rpc from \"@foxglove/studio-base/util/Rpc\";\nimport { enforceFetchIsBlocked, inSharedWorker } from \"@foxglove/studio-base/util/workers\";\n\nlet unsentErrors: string[] = [];\n(global as unknown as SharedWorkerGlobalScope).onerror = (event: ErrorEvent) => {\n  unsentErrors.push((event.error as Error).toString());\n};\n(global as unknown as SharedWorkerGlobalScope).onunhandledrejection = (\n  event: PromiseRejectionEvent,\n) => {\n  unsentErrors.push(String(event.reason instanceof Error ? event.reason.message : event.reason));\n};\n\nif (!inSharedWorker()) {\n  // In Chrome, web workers currently (as of March 2020) inherit their Content Security Policy from\n  // their associated page, ignoring any policy in the headers of their source file. SharedWorkers\n  // use the headers from their source files, though, and we use a CSP to prohibit user scripts\n  // workers from making web requests (using enforceFetchIsBlocked, below.)\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1012640\n  throw new Error(\"Not in a SharedWorker.\");\n}\n\n(global as unknown as SharedWorkerGlobalScope).onconnect = (e) => {\n  const port = e.ports[0]! as MessagePort;\n  const rpc = new Rpc(port);\n\n  // If any errors occurred while nobody was connected, send them now\n  unsentErrors.forEach(async (message) => await rpc.send(\"error\", message));\n  unsentErrors = [];\n  (global as unknown as SharedWorkerGlobalScope).onerror = (event: ErrorEvent) => {\n    void rpc.send(\"error\", event.error.toString());\n  };\n  (global as unknown as SharedWorkerGlobalScope).onunhandledrejection = (\n    event: PromiseRejectionEvent,\n  ) => {\n    void rpc.send(\n      \"error\",\n      String(event.reason instanceof Error ? event.reason.message : event.reason),\n    );\n  };\n\n  // Just check fetch is blocked on registration, don't slow down message processing.\n  rpc.receive(\"registerNode\", enforceFetchIsBlocked(registerNode));\n  rpc.receive(\"processMessage\", processMessage);\n\n  port.start();\n};\n"],"names":["assertPath","path","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","code","i","lastSlashIndex","_format","sep","pathObject","dir","base","posix","resolvedPath","resolvedAbsolute","cwd","process","isAbsolute","trailingSeparator","joined","arg","from","to","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","length","lastCommonSep","fromCode","toCode","out","hasRoot","end","matchedSlash","ext","start","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","module","fn","args","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","exports","definition","key","obj","prop","DiagnosticSeverity","Sources","ErrorCodes","DEFAULT_STUDIO_NODE_PREFIX","useJsonTreeTheme","mode","text","TAB_PANEL_TYPE","nodeCallback","containsFuncDeclaration","value","stringifyFuncsInObject","newArg","getArgsToPrint","requireImplementation","id","projectCode","requestedFile","file","source","sourceExports","require","reqId","registerNode","nodeCode","userNodeLogs","userNodeDiagnostics","argsToPrint","nodeExports","e","error","processMessage","message","globalVariables","err","diagnostic","RESPONSE","ERROR","createLinkedChannels","local","data","_transfer","ev","remote","Rpc","#channel","#messageId","#pendingCallbacks","#receivers","channel","#onChannelMessage","topic","resolve","handler","result","transferables","callback","transfer","reject","info","inWebWorker","inSharedWorker","enforceFetchIsBlocked","canFetch","unsentErrors","event","port","rpc"],"sourceRoot":""}