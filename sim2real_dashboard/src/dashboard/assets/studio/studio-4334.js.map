{"version":3,"file":"studio-4334.js","mappings":"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","sources":["webpack:///../../packages/studio-base/src/util/bags.ts","webpack:///../../packages/studio-base/src/players/IterablePlayer/BagIterableSource.ts","webpack:///../../packages/studio-base/src/players/IterablePlayer/BagIterableSourceWorker.worker.ts","webpack:///../../packages/studio-base/src/util/process.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/importScripts chunk loading","webpack:///webpack/runtime/startup chunk dependencies","webpack:///webpack/startup"],"sourcesContent":["// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2019-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nimport { Time, compare, isLessThan, isGreaterThan } from \"@foxglove/rostime\";\n\nexport function getBagChunksOverlapCount(\n  chunkInfos: readonly { startTime: Time; endTime: Time }[],\n): number {\n  const sorted = chunkInfos.slice().sort((left, right) => compare(left.startTime, right.startTime));\n  let maxEndTime = { sec: -Infinity, nsec: 0 };\n  let overlaps = 0;\n  sorted.forEach(({ startTime, endTime }) => {\n    if (isLessThan(startTime, maxEndTime)) {\n      overlaps += 1;\n    }\n    if (isGreaterThan(endTime, maxEndTime)) {\n      maxEndTime = endTime;\n    }\n  });\n  return overlaps;\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport { Bag, Filelike } from \"@foxglove/rosbag\";\nimport { BlobReader } from \"@foxglove/rosbag/web\";\nimport { parse as parseMessageDefinition } from \"@foxglove/rosmsg\";\nimport { MessageReader } from \"@foxglove/rosmsg-serialization\";\nimport { compare } from \"@foxglove/rostime\";\nimport {\n  PlayerProblem,\n  MessageEvent,\n  Topic,\n  TopicStats,\n} from \"@foxglove/studio-base/players/types\";\nimport { RosDatatypes } from \"@foxglove/studio-base/types/RosDatatypes\";\nimport BrowserHttpReader from \"@foxglove/studio-base/util/BrowserHttpReader\";\nimport CachedFilelike from \"@foxglove/studio-base/util/CachedFilelike\";\nimport { getBagChunksOverlapCount } from \"@foxglove/studio-base/util/bags\";\nimport Bzip2 from \"@foxglove/wasm-bz2\";\nimport decompressLZ4 from \"@foxglove/wasm-lz4\";\n\nimport {\n  IIterableSource,\n  IteratorResult,\n  Initalization,\n  MessageIteratorArgs,\n  GetBackfillMessagesArgs,\n} from \"./IIterableSource\";\n\ntype BagSource = { type: \"file\"; file: File } | { type: \"remote\"; url: string };\n\nexport class BagIterableSource implements IIterableSource {\n  readonly #source: BagSource;\n\n  #bag: Bag | undefined;\n  #readersByConnectionId = new Map<number, MessageReader>();\n  #datatypesByConnectionId = new Map<number, string>();\n\n  public constructor(source: BagSource) {\n    this.#source = source;\n  }\n\n  public async initialize(): Promise<Initalization> {\n    await decompressLZ4.isLoaded;\n    const bzip2 = await Bzip2.init();\n\n    let fileLike: Filelike | undefined;\n    if (this.#source.type === \"remote\") {\n      const bagUrl = this.#source.url;\n      const fileReader = new BrowserHttpReader(bagUrl);\n      const remoteReader = new CachedFilelike({\n        fileReader,\n        cacheSizeInBytes: 1024 * 1024 * 200, // 200MiB\n        keepReconnectingCallback: (_reconnecting) => {\n          // no-op?\n        },\n      });\n\n      // Call open on the remote reader to see if we can access the remote file\n      await remoteReader.open();\n\n      fileLike = remoteReader;\n    } else {\n      fileLike = new BlobReader(this.#source.file);\n    }\n\n    this.#bag = new Bag(fileLike, {\n      parse: false,\n      decompress: {\n        bz2: (buffer: Uint8Array, size: number) => {\n          return bzip2.decompress(buffer, size, { small: false });\n        },\n        lz4: (buffer: Uint8Array, size: number) => {\n          return decompressLZ4(buffer, size);\n        },\n      },\n    });\n\n    await this.#bag.open();\n\n    const problems: PlayerProblem[] = [];\n    const chunksOverlapCount = getBagChunksOverlapCount(this.#bag.chunkInfos);\n    // If >25% of the chunks overlap, show a warning. It's common for a small number of chunks to overlap\n    // since it looks like `rosbag record` has a bit of a race condition, and that's not too terrible, so\n    // only warn when there's a more serious slowdown.\n    if (chunksOverlapCount > this.#bag.chunkInfos.length * 0.25) {\n      const message = `This bag has many overlapping chunks (${chunksOverlapCount} out of ${\n        this.#bag.chunkInfos.length\n      }). This results in more memory use during playback.`;\n      const tip = \"Re-sort the messages in your bag by receive time.\";\n      problems.push({\n        severity: \"warn\",\n        message,\n        tip,\n      });\n    }\n\n    const numMessagesByConnectionIndex: number[] = new Array(this.#bag.connections.size).fill(0);\n    this.#bag.chunkInfos.forEach((info) => {\n      info.connections.forEach(({ conn, count }) => {\n        numMessagesByConnectionIndex[conn] += count;\n      });\n    });\n\n    const datatypes: RosDatatypes = new Map();\n    const topics = new Map<string, Topic>();\n    const topicStats = new Map<string, TopicStats>();\n    const publishersByTopic: Initalization[\"publishersByTopic\"] = new Map();\n    for (const [id, connection] of this.#bag.connections) {\n      const schemaName = connection.type;\n      if (!schemaName) {\n        continue;\n      }\n\n      let publishers = publishersByTopic.get(connection.topic);\n      if (!publishers) {\n        publishers = new Set<string>();\n        publishersByTopic.set(connection.topic, publishers);\n      }\n      publishers.add(connection.callerid ?? String(connection.conn));\n\n      const existingTopic = topics.get(connection.topic);\n      if (existingTopic && existingTopic.schemaName !== schemaName) {\n        problems.push({\n          severity: \"warn\",\n          message: `Conflicting datatypes on topic (${connection.topic}): ${schemaName}, ${existingTopic.schemaName}`,\n          tip: `Studio requires all connections on a topic to have the same datatype. Make sure all your nodes are publishing the same message on ${connection.topic}.`,\n        });\n      }\n\n      if (!existingTopic) {\n        topics.set(connection.topic, { name: connection.topic, schemaName });\n      }\n\n      // Update the message count for this topic\n      const numMessages =\n        (topicStats.get(connection.topic)?.numMessages ?? 0) +\n        (numMessagesByConnectionIndex[connection.conn] ?? 0);\n      topicStats.set(connection.topic, { numMessages });\n\n      const parsedDefinition = parseMessageDefinition(connection.messageDefinition);\n      const reader = new MessageReader(parsedDefinition);\n      this.#readersByConnectionId.set(id, reader);\n      this.#datatypesByConnectionId.set(id, schemaName);\n\n      for (const definition of parsedDefinition) {\n        // In parsed definitions, the first definition (root) does not have a name as is meant to\n        // be the datatype of the topic.\n        if (!definition.name) {\n          datatypes.set(schemaName, definition);\n        } else {\n          datatypes.set(definition.name, definition);\n        }\n      }\n    }\n\n    return {\n      topics: Array.from(topics.values()),\n      topicStats,\n      start: this.#bag.startTime ?? { sec: 0, nsec: 0 },\n      end: this.#bag.endTime ?? { sec: 0, nsec: 0 },\n      problems,\n      profile: \"ros1\",\n      datatypes,\n      publishersByTopic,\n    };\n  }\n\n  public async *messageIterator(\n    opt: MessageIteratorArgs,\n  ): AsyncIterableIterator<Readonly<IteratorResult>> {\n    yield* this.#messageIterator({ ...opt, reverse: false });\n  }\n\n  async *#messageIterator(\n    opt: MessageIteratorArgs & { reverse: boolean },\n  ): AsyncGenerator<Readonly<IteratorResult>> {\n    if (!this.#bag) {\n      throw new Error(\"Invariant: uninitialized\");\n    }\n\n    const end = opt.end;\n\n    const iterator = this.#bag.messageIterator({\n      topics: opt.topics,\n      reverse: opt.reverse,\n      start: opt.start,\n    });\n\n    const readersByConnectionId = this.#readersByConnectionId;\n    for await (const bagMsgEvent of iterator) {\n      const connectionId = bagMsgEvent.connectionId;\n      const reader = readersByConnectionId.get(connectionId);\n\n      if (end && compare(bagMsgEvent.timestamp, end) > 0) {\n        return;\n      }\n\n      const schemaName = this.#datatypesByConnectionId.get(connectionId);\n      if (!schemaName) {\n        yield {\n          type: \"problem\",\n          connectionId,\n          problem: {\n            severity: \"error\",\n            message: `Cannot missing datatype for connection id ${connectionId}`,\n            tip: `Check that your bag file is well-formed. It should have a connection record for every connection id referenced from a message record.`,\n          },\n        };\n        return;\n      }\n\n      if (reader) {\n        // bagMsgEvent.data is a view on top of the entire chunk. To avoid keeping references for\n        // chunks (which will fill up memory space when we cache messages) when make a copy of the\n        // data.\n        const dataCopy = bagMsgEvent.data.slice();\n        const parsedMessage = reader.readMessage(dataCopy);\n\n        yield {\n          type: \"message-event\",\n          connectionId,\n          msgEvent: {\n            topic: bagMsgEvent.topic,\n            receiveTime: bagMsgEvent.timestamp,\n            sizeInBytes: bagMsgEvent.data.byteLength,\n            message: parsedMessage,\n            schemaName,\n          },\n        };\n      } else {\n        yield {\n          type: \"problem\",\n          connectionId,\n          problem: {\n            severity: \"error\",\n            message: `Cannot deserialize message for missing connection id ${connectionId}`,\n            tip: `Check that your bag file is well-formed. It should have a connection record for every connection id referenced from a message record.`,\n          },\n        };\n      }\n    }\n  }\n\n  public async getBackfillMessages({\n    topics,\n    time,\n  }: GetBackfillMessagesArgs): Promise<MessageEvent[]> {\n    const messages: MessageEvent[] = [];\n    for (const topic of topics) {\n      // NOTE: An iterator is made for each topic to get the latest message on that topic.\n      // An single iterator for all the topics could result in iterating through many\n      // irrelevant messages to get to an older message on a topic.\n      for await (const result of this.#messageIterator({\n        topics: [topic],\n        start: time,\n        reverse: true,\n      })) {\n        if (result.type === \"message-event\") {\n          messages.push(result.msgEvent);\n        }\n        break;\n      }\n    }\n    messages.sort((a, b) => compare(a.receiveTime, b.receiveTime));\n    return messages;\n  }\n}\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\nimport * as Comlink from \"comlink\";\n\nimport { IterableSourceInitializeArgs } from \"@foxglove/studio-base/players/IterablePlayer/IIterableSource\";\nimport { WorkerIterableSourceWorker } from \"@foxglove/studio-base/players/IterablePlayer/WorkerIterableSourceWorker\";\n\nimport { BagIterableSource } from \"./BagIterableSource\";\n\nexport function initialize(args: IterableSourceInitializeArgs): WorkerIterableSourceWorker {\n  if (args.file) {\n    const source = new BagIterableSource({ type: \"file\", file: args.file });\n    const wrapped = new WorkerIterableSourceWorker(source);\n    return Comlink.proxy(wrapped);\n  } else if (args.url) {\n    const source = new BagIterableSource({ type: \"remote\", url: args.url });\n    const wrapped = new WorkerIterableSourceWorker(source);\n    return Comlink.proxy(wrapped);\n  }\n\n  throw new Error(\"file or url required\");\n}\n\nComlink.expose(initialize);\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n// Provide a shim for global process variable users\n// We avoid using the npm process module since it has unfavorable performance for process.nextTick\n// and uses setTimeout(..., 0). Instead we use queueMicrotask which is much faster.\nconst process = {\n  // We want to be able to use Function type for _fn_ param\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  nextTick: (fn: Function, ...args: unknown[]): void => {\n    queueMicrotask(() => {\n      fn(...args);\n    });\n  },\n\n  title: \"browser\",\n  browser: true,\n  env: {},\n  argv: [],\n};\n\n// ts-prune-ignore-next\nexport default process;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [8981,7979,4432,7372,2984,1343,4812], () => (__webpack_require__(80859)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"studio-\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t4334: 1,\n\t6548: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([8981,7979,4432,7372,2984,1343,4812].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["getBagChunksOverlapCount","chunkInfos","sorted","left","right","maxEndTime","overlaps","startTime","endTime","BagIterableSource","#source","#bag","#readersByConnectionId","#datatypesByConnectionId","source","bzip2","fileLike","bagUrl","fileReader","BrowserHttpReader","remoteReader","CachedFilelike","_reconnecting","buffer","size","problems","chunksOverlapCount","message","tip","numMessagesByConnectionIndex","info","conn","count","datatypes","topics","topicStats","publishersByTopic","id","connection","schemaName","publishers","existingTopic","numMessages","parsedDefinition","reader","definition","opt","#messageIterator","end","iterator","readersByConnectionId","bagMsgEvent","connectionId","dataCopy","parsedMessage","time","messages","topic","result","a","b","initialize","args","wrapped","WorkerIterableSourceWorker","fn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","__webpack_exports__","deferred","chunkIds","priority","notFulfilled","fulfilled","j","key","r","getter","exports","chunkId","promises","obj","prop","scriptUrl","document","scripts","i","installedChunks","installChunk","data","moreModules","runtime","parentChunkLoadingFunction","chunkLoadingGlobal","next"],"sourceRoot":""}