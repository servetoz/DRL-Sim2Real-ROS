{"version":3,"file":"studio-8981.js","mappings":"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","sources":["webpack:///../../node_modules/@foxglove/rostime/dist/Time.js","webpack:///../../node_modules/@foxglove/rostime/dist/timeUtils.js","webpack:///../../node_modules/eventemitter3/index.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/__.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xall.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/all.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/allPass.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/anyPass.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/ap.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/apply.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/applySpec.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/assocPath.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/both.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/complement.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/compose.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/composeK.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/composeP.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/concat.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/cond.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/contains.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/converge.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/countBy.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_curryN.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/curryN.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/difference.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/dissocPath.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_dropLast.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xdropLast.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/dropLast.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_dropLastWhile.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/dropLastWhile.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/dropRepeats.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/dropRepeatsWith.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/or.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/either.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/endsWith.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/eqBy.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/eqProps.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_containsWith.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_functionName.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/identical.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/type.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_equals.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/equals.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_filter.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xfilter.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/filter.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xfind.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/find.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xfindIndex.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/findIndex.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xfindLast.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/findLast.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xfindLastIndex.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/findLastIndex.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/flatten.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/forEach.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/forEachObjIndexed.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/groupBy.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/groupWith.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/head.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/indexBy.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/indexOf.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/init.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_arity.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_objectAssign.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_assign.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_checkForMethod.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_concat.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_contains.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_curry1.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_curry2.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_curry3.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isTransformer.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_dispatchable.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_has.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_identity.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_indexOf.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isArguments.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isArray.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isArrayLike.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isFunction.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isInteger.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isObject.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_isString.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_map.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xwrap.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/bind.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_reduce.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xdropRepeatsWith.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xfBase.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/intersection.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/intersperse.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/objOf.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_stepCat.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/into.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/invert.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/invertObj.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/invoker.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/join.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/juxt.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/keys.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/lastIndexOf.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/lens.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/lensIndex.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/lensPath.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/lensProp.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/lift.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/liftN.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xmap.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/map.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/mapObjIndexed.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/mathMod.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/max.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/mean.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/median.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/memoize.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/merge.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/mergeAll.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/none.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/nth.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/nthArg.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/partition.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/pathEq.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_pipe.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/pipe.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/pipeK.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/pipeP.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/pluck.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/product.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/identity.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/pickAll.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/useWith.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/project.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/path.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/prop.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/propEq.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/reduce.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xreduceBy.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/reduceBy.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/reduceWhile.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_complement.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/reject.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/sequence.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/slice.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/sortBy.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/split.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/splitAt.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/splitEvery.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/startsWith.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/sum.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/symmetricDifference.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/symmetricDifferenceWith.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/tail.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xtake.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/take.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/takeLast.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/takeLastWhile.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xtakeWhile.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/takeWhile.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_xtap.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/tap.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/test.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/toLower.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_quote.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_toISOString.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_toString.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/toString.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/toUpper.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/transduce.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/traverse.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/trim.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/union.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/uniq.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/internal/_Set.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/uniqBy.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/values.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/whereEq.js","webpack:///../../node_modules/intervals-fn/node_modules/ramda/es/without.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Time.js.map","\"use strict\";\n// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n//\n// This file incorporates work covered by the following copyright and\n// permission notice:\n//\n//   Copyright 2018-2021 Cruise LLC\n//\n//   This source code is licensed under the Apache License, Version 2.0,\n//   found at http://www.apache.org/licenses/LICENSE-2.0\n//   You may not use this file except in compliance with the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.areEqual = exports.isGreaterThan = exports.isLessThan = exports.compare = exports.isTimeInRangeInclusive = exports.clampTime = exports.fromMicros = exports.fromMillis = exports.toMillis = exports.fromNanoSec = exports.fromSec = exports.toSec = exports.toMicroSec = exports.toNanoSec = exports.subtract = exports.add = exports.fixTime = exports.interpolate = exports.percentOf = exports.fromDate = exports.toDate = exports.fromRFC3339String = exports.toRFC3339String = exports.fromString = exports.toString = exports.isTime = void 0;\n/**\n * Test if a given object matches the signature of { sec: number; nsec: number }\n * @param obj Object to test\n * @returns True if the object is equivalent to a Time object, otherwise false\n */\nfunction isTime(obj) {\n    return (typeof obj === \"object\" &&\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        !!obj &&\n        \"sec\" in obj &&\n        \"nsec\" in obj &&\n        Object.getOwnPropertyNames(obj).length === 2);\n}\nexports.isTime = isTime;\n/**\n * Converts a Time to a string containing a floating point number of seconds\n * @param stamp Time to convert\n * @param allowNegative Allow negative times to be converted\n * @returns String timestamp containing a floating point number of seconds\n */\nfunction toString(stamp, allowNegative = false) {\n    if (!allowNegative && (stamp.sec < 0 || stamp.nsec < 0)) {\n        throw new Error(`Invalid negative time { sec: ${stamp.sec}, nsec: ${stamp.nsec} }`);\n    }\n    const sec = Math.floor(stamp.sec);\n    const nsec = Math.floor(stamp.nsec);\n    return `${sec}.${nsec.toFixed().padStart(9, \"0\")}`;\n}\nexports.toString = toString;\n/**\n * Parse fractional seconds (digits following a decimal separator \".\") and interpret them as an\n * integer number of nanoseconds. Because of the rounding behavior, this function may return 1e9 (a\n * value that would be too large for the `nsec` field).\n */\nfunction parseNanoseconds(digits) {\n    // There can be 9 digits of nanoseconds. If the fractional part is \"1\", we need to add eight\n    // zeros. Also, make sure we round to an integer if we need to _remove_ digits.\n    const digitsShort = 9 - digits.length;\n    return Math.round(parseInt(digits, 10) * 10 ** digitsShort);\n}\n/**\n * Converts a string containing floating point number of seconds to a Time. We use a string because\n * nanosecond precision cannot be stored in a 64-bit float for large values (e.g. UNIX timestamps).\n * @param stamp UNIX timestamp containing a whole or floating point number of seconds\n * @returns Time object on success, undefined on failure\n */\nfunction fromString(stamp) {\n    if (/^\\d+\\.?$/.test(stamp)) {\n        // Whole number with optional \".\" at the end.\n        const sec = parseInt(stamp, 10);\n        return { sec: isNaN(sec) ? 0 : sec, nsec: 0 };\n    }\n    if (!/^\\d+\\.\\d+$/.test(stamp)) {\n        // Not digits.digits -- invalid.\n        return undefined;\n    }\n    const partials = stamp.split(\".\");\n    if (partials.length === 0) {\n        return undefined;\n    }\n    const [first, second] = partials;\n    if (first == undefined || second == undefined) {\n        return undefined;\n    }\n    // It's possible we rounded to { sec: 1, nsec: 1e9 }, which is invalid, so fixTime.\n    const sec = parseInt(first, 10);\n    const nsec = parseNanoseconds(second);\n    return fixTime({ sec: isNaN(sec) ? 0 : sec, nsec });\n}\nexports.fromString = fromString;\n/**\n * Converts a Time to a string compatible with RFC3339/ISO8601. Similar to\n * `toDate(stamp).toISOString()`, but with nanosecond precision.\n * @param stamp Time to convert\n */\nfunction toRFC3339String(stamp) {\n    if (stamp.sec < 0 || stamp.nsec < 0) {\n        throw new Error(`Invalid negative time { sec: ${stamp.sec}, nsec: ${stamp.nsec} }`);\n    }\n    if (stamp.nsec >= 1e9) {\n        throw new Error(`Invalid nanosecond value ${stamp.nsec}`);\n    }\n    const date = new Date(stamp.sec * 1000);\n    const year = date.getUTCFullYear();\n    const month = (date.getUTCMonth() + 1).toFixed().padStart(2, \"0\");\n    const day = date.getUTCDate().toFixed().padStart(2, \"0\");\n    const hour = date.getUTCHours().toFixed().padStart(2, \"0\");\n    const minute = date.getUTCMinutes().toFixed().padStart(2, \"0\");\n    const second = date.getUTCSeconds().toFixed().padStart(2, \"0\");\n    const nanosecond = stamp.nsec.toFixed().padStart(9, \"0\");\n    return `${year}-${month}-${day}T${hour}:${minute}:${second}.${nanosecond}Z`;\n}\nexports.toRFC3339String = toRFC3339String;\n/**\n * Parses a Time from a string compatible with a subset of ISO8601/RFC3339. Similar to\n * `fromDate(new Date(string))`, but with nanosecond precision.\n * @param stamp Time to convert\n */\nfunction fromRFC3339String(stamp) {\n    const match = /^(\\d{4,})-(\\d\\d)-(\\d\\d)[Tt](\\d\\d):(\\d\\d):(\\d\\d)(?:\\.(\\d+))?(?:[Zz]|([+-])(\\d\\d):(\\d\\d))$/.exec(stamp);\n    if (match == null) {\n        return undefined;\n    }\n    const [, year, month, day, hour, minute, second, frac, plusMinus, offHours, offMinutes] = match;\n    const offSign = plusMinus === \"-\" ? -1 : 1;\n    const utcMillis = Date.UTC(+year, +month - 1, +day, +hour - offSign * +(offHours ?? 0), +minute - offSign * +(offMinutes ?? 0), +second);\n    if (utcMillis % 1000 !== 0) {\n        return undefined;\n    }\n    // It's possible we rounded to { sec: 1, nsec: 1e9 }, which is invalid, so fixTime.\n    return fixTime({\n        sec: utcMillis / 1000,\n        nsec: frac != undefined ? parseNanoseconds(frac) : 0,\n    });\n}\nexports.fromRFC3339String = fromRFC3339String;\n/**\n * Convert a Time to a JavaScript Date object. NOTE: sub-millisecond precision is lost.\n * @param stamp Time to convert\n * @returns Date representing the given Time as accurately as it can\n */\nfunction toDate(stamp) {\n    const { sec, nsec } = stamp;\n    return new Date(sec * 1000 + nsec / 1e6);\n}\nexports.toDate = toDate;\n/**\n * Conver a JavaScript Date object to a Time.\n * @param date Date to convert\n * @returns Time representing the given Date\n */\nfunction fromDate(date) {\n    const millis = date.getTime();\n    const remainder = millis % 1000;\n    return { sec: Math.floor(millis / 1000), nsec: remainder * 1e6 };\n}\nexports.fromDate = fromDate;\n/**\n * Returns the fraction representing target's position in the range between start and end.\n * e.g. start = { sec: 0 }, end = { sec: 10 }, target = { sec: 5 } = 0.5\n * This is the reverse of the `interpolate()` method\n * @param start Start timestamp of the interpolation range\n * @param end End timestamp of the interpolation range\n * @param target Timestamp that will be measured relative to the interpolation range\n * @returns If target falls in between start and end (inclusive), it will be in the range [0.0-1.0].\n *   Otherwise, it is unbounded\n */\nfunction percentOf(start, end, target) {\n    const totalDuration = subtract(end, start);\n    const targetDuration = subtract(target, start);\n    return toSec(targetDuration) / toSec(totalDuration);\n}\nexports.percentOf = percentOf;\n/**\n * Linearly interpolate the range between start and end by a given fraction.\n * e.g. start = { sec: 0 }, end = { sec: 10 }, fraction = 0.5 = { sec: 5 }\n * This is the reverse of the `percentOf` method\n * @param start Start timestamp of the interpolation range\n * @param end End timestamp of the interpolation range\n * @param fraction Percent to interpolate along the range\n * @returns If fraction is in the range [0.0-1.0], the target will fall in between start and end\\\n *   (inclusive). Otherwise, it is unbounded\n */\nfunction interpolate(start, end, fraction) {\n    const duration = subtract(end, start);\n    return add(start, fromSec(fraction * toSec(duration)));\n}\nexports.interpolate = interpolate;\n/**\n * Equivalent to fromNanoSec(toNanoSec(t)), but no chance of precision loss. nsec should be\n * non-negative, and less than 1e9.\n * @param t Potentially un-normalized time with the nsec (nanoseconds) value containing a value\n *   higher than one second (1e9)\n * @param allowNegative Allow negative times to be normalized\n * @returns A normalized Time\n */\nfunction fixTime(t, allowNegative = false) {\n    const durationNanos = t.nsec;\n    const secsFromNanos = Math.floor(durationNanos / 1e9);\n    const newSecs = t.sec + secsFromNanos;\n    const remainingDurationNanos = durationNanos % 1e9;\n    // use Math.abs here to prevent -0 when there is exactly 1 second of negative nanoseconds passed in\n    const newNanos = Math.abs(Math.sign(remainingDurationNanos) === -1\n        ? 1e9 + remainingDurationNanos\n        : remainingDurationNanos);\n    const result = { sec: newSecs, nsec: newNanos };\n    if ((!allowNegative && result.sec < 0) || result.nsec < 0) {\n        throw new Error(`Cannot normalize invalid time ${toString(result, true)}`);\n    }\n    return result;\n}\nexports.fixTime = fixTime;\n/**\n * Add two Times together\n * @param param0 First Time\n * @param param1 Second Time\n * @returns A normalized representation of the two Time objects added together\n */\nfunction add({ sec: sec1, nsec: nsec1 }, { sec: sec2, nsec: nsec2 }) {\n    return fixTime({ sec: sec1 + sec2, nsec: nsec1 + nsec2 });\n}\nexports.add = add;\n/**\n * Subtract one Time from another\n * @param param0 First Time\n * @param param1 Time to subtract from the first Time\n * @returns A normalized representation of the second Time subtracted from the first\n */\nfunction subtract({ sec: sec1, nsec: nsec1 }, { sec: sec2, nsec: nsec2 }) {\n    return fixTime({ sec: sec1 - sec2, nsec: nsec1 - nsec2 }, true);\n}\nexports.subtract = subtract;\n/**\n * Convert Time to an integer number of nanoseconds\n * @param param0 Time to convert\n * @returns A bigint integer number of nanoseconds\n */\nfunction toNanoSec({ sec, nsec }) {\n    return BigInt(sec) * 1000000000n + BigInt(nsec);\n}\nexports.toNanoSec = toNanoSec;\n/**\n * Convert Time to a floating point number of microseconds\n * @param param0 Time to convert\n * @returns A floating point number of microseconds\n */\nfunction toMicroSec({ sec, nsec }) {\n    return (sec * 1e9 + nsec) / 1000;\n}\nexports.toMicroSec = toMicroSec;\n/**\n * Convert Time to a floating point number of seconds\n * @param param0 Time to convert\n * @returns A floating point number of seconds\n */\nfunction toSec({ sec, nsec }) {\n    return sec + nsec * 1e-9;\n}\nexports.toSec = toSec;\n/**\n * Convert a floating point number of seconds to Time\n * @param value Number of seconds\n * @returns Time object\n */\nfunction fromSec(value) {\n    // From https://github.com/ros/roscpp_core/blob/indigo-devel/rostime/include/ros/time.h#L153\n    let sec = Math.trunc(value);\n    let nsec = Math.round((value - sec) * 1e9);\n    sec += Math.trunc(nsec / 1e9);\n    nsec %= 1e9;\n    return { sec, nsec };\n}\nexports.fromSec = fromSec;\n/**\n * Convert an integer number of nanoseconds to Time\n * @param nsec Nanoseconds integer\n * @returns Time object\n */\nfunction fromNanoSec(nsec) {\n    // From https://github.com/ros/roscpp_core/blob/86720717c0e1200234cc0a3545a255b60fb541ec/rostime/include/ros/impl/time.h#L63\n    // and https://github.com/ros/roscpp_core/blob/7583b7d38c6e1c2e8623f6d98559c483f7a64c83/rostime/src/time.cpp#L536\n    //\n    // Note: BigInt(1e9) is slower than writing out the number\n    return { sec: Number(nsec / 1000000000n), nsec: Number(nsec % 1000000000n) };\n}\nexports.fromNanoSec = fromNanoSec;\n/**\n * Convert Time to an integer number of milliseconds\n * @param time Time to convert\n * @param roundUp Round up to nearest millisecond if true, otherwise round down. Defaults to true\n * @returns Integer number of milliseconds\n */\nfunction toMillis(time, roundUp = true) {\n    const secondsMillis = time.sec * 1e3;\n    const nsecMillis = time.nsec / 1e6;\n    return roundUp ? secondsMillis + Math.ceil(nsecMillis) : secondsMillis + Math.floor(nsecMillis);\n}\nexports.toMillis = toMillis;\n/**\n * Convert milliseconds to Time\n * @param value Milliseconds number\n * @returns Time object\n */\nfunction fromMillis(value) {\n    let sec = Math.trunc(value / 1000);\n    let nsec = Math.round((value - sec * 1000) * 1e6);\n    sec += Math.trunc(nsec / 1e9);\n    nsec %= 1e9;\n    return { sec, nsec };\n}\nexports.fromMillis = fromMillis;\n/**\n * Convert microseconds to Time\n * @param value Microseconds number\n * @returns Time object\n */\nfunction fromMicros(value) {\n    let sec = Math.trunc(value / 1e6);\n    let nsec = Math.round((value - sec * 1e6) * 1e3);\n    sec += Math.trunc(nsec / 1e9);\n    nsec %= 1e9;\n    return { sec, nsec };\n}\nexports.fromMicros = fromMicros;\n/**\n * Clamp a given time value in the range from start to end (inclusive)\n * @param time Time to clamp\n * @param start Start of the target range\n * @param end End of the target range\n * @returns Clamped Time\n */\nfunction clampTime(time, start, end) {\n    if (compare(start, time) > 0) {\n        return { sec: start.sec, nsec: start.nsec };\n    }\n    if (compare(end, time) < 0) {\n        return { sec: end.sec, nsec: end.nsec };\n    }\n    return { sec: time.sec, nsec: time.nsec };\n}\nexports.clampTime = clampTime;\n/**\n * Test if a given time is inside a test range\n * @param time Time to test\n * @param start Start of the test range\n * @param end End of the test range\n * @returns True if time falls in between start and end (inclusive)\n */\nfunction isTimeInRangeInclusive(time, start, end) {\n    if (compare(start, time) > 0 || compare(end, time) < 0) {\n        return false;\n    }\n    return true;\n}\nexports.isTimeInRangeInclusive = isTimeInRangeInclusive;\n/**\n * Comparison function for Time object that can be used for sorting\n * @param left First Time to compare\n * @param right Second Time to compare\n * @returns A positive value if left is larger than right, a negative value if right is larger than\n *   left, or zero if both times are equal\n */\nfunction compare(left, right) {\n    const secDiff = left.sec - right.sec;\n    return secDiff !== 0 ? secDiff : left.nsec - right.nsec;\n}\nexports.compare = compare;\n/**\n * Returns true if the left time is less than the right time, otherwise false\n * @param left Left side of comparison\n * @param right Right side of comparison\n * @returns Comparison result\n */\nfunction isLessThan(left, right) {\n    return compare(left, right) < 0;\n}\nexports.isLessThan = isLessThan;\n/**\n * Returns true if the left time is greater than the right time, otherwise false\n * @param left Left side of the comparison\n * @param right Right side of the comparison\n * @returns Comparison result\n */\nfunction isGreaterThan(left, right) {\n    return compare(left, right) > 0;\n}\nexports.isGreaterThan = isGreaterThan;\n/**\n * Returns true if both times have the same number of seconds and nanoseconds\n * @param left Left side of the comparison\n * @param right Right side of the comparison\n * @returns Equality result\n */\nfunction areEqual(left, right) {\n    return left.sec === right.sec && left.nsec === right.nsec;\n}\nexports.areEqual = areEqual;\n//# sourceMappingURL=timeUtils.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","import _curry2 from './internal/_curry2';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","import pipeP from './pipeP';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import reduceBy from './reduceBy';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import take from '../take';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import nth from './nth';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","export default function _identity(x) {\n  return x;\n}","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1';\nimport mean from './mean';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoize = /*#__PURE__*/memoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2( /*#__PURE__*/_complement( /*#__PURE__*/_dispatchable(['any'], _xany, any)));\nexport default none;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _curry2 from './internal/_curry2';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import invoker from './invoker';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import invoker from './invoker';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;"],"names":["exports","isTime","obj","toString","stamp","allowNegative","sec","nsec","parseNanoseconds","digits","digitsShort","fromString","partials","first","second","fixTime","toRFC3339String","date","year","month","day","hour","minute","nanosecond","fromRFC3339String","match","frac","plusMinus","offHours","offMinutes","offSign","utcMillis","toDate","fromDate","millis","remainder","percentOf","start","end","target","totalDuration","subtract","targetDuration","toSec","interpolate","fraction","duration","add","fromSec","t","durationNanos","secsFromNanos","newSecs","remainingDurationNanos","newNanos","result","sec1","nsec1","sec2","nsec2","toNanoSec","toMicroSec","value","fromNanoSec","toMillis","time","roundUp","secondsMillis","nsecMillis","fromMillis","fromMicros","clampTime","compare","isTimeInRangeInclusive","left","right","secDiff","isLessThan","isGreaterThan","areEqual","has","prefix","Events","EE","fn","context","once","addListener","emitter","event","listener","evt","clearEvent","EventEmitter","names","events","name","handlers","i","l","ee","listeners","a1","a2","a3","a4","a5","len","args","length","j","module","XAll","allPass","anyPass","ap","applyF","applyX","x","acc","f","apply","_curry2","applySpec","_curry1","spec","map","v","curryN","reduce","max","pluck","values","assocPath","both","complement","compose","composeK","init","last","composeP","concat","a","b","cond","contains","converge","after","fns","countBy","_curryN","received","combined","argsIdx","combinedIdx","_isPlaceholder","_arity","difference","dissocPath","dropLast","n","xs","XDropLast","dropLastWhile","pred","idx","XDropLastWhile","dropRepeats","dropRepeatsWith","or","either","g","_isFunction","lift","endsWith","eqBy","eqProps","_arrayFromIterator","iter","list","next","_containsWith","_functionName","identical","type","val","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_a","_b","_equals","aItem","typeA","keysA","keys","extendedStackA","extendedStackB","key","_has","equals","_filter","XFilter","xf","_xfBase","input","_xfilter","filter","_dispatchable","filterable","_isObject","_reduce","XFind","find","XFindIndex","findIndex","XFindLast","findLast","XFindLastIndex","findLastIndex","flatten","forEach","forEachObjIndexed","groupBy","groupWith","res","nextidx","head","indexBy","indexOf","a0","a6","a7","a8","a9","_objectAssign","output","source","nextKey","_checkForMethod","methodname","_concat","set1","set2","len1","len2","_contains","f1","f2","_curry3","f3","c","_c","_isTransformer","methodNames","_isArray","transducer","prop","_identity","_indexOf","inf","item","_isArguments","_isArrayLike","_isString","_map","functor","XWrap","_xwrap","bind","thisObj","_arrayReduce","_iterableReduce","step","_methodReduce","methodName","symIterator","XDropRepeatsWith","_xdropRepeatsWith","intersection","intersperse","objOf","_stepCatArray","_stepCatString","_stepCatObject","_assign","into","invert","invertObj","invoker","join","juxt","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","_keys","nIdx","ks","checkArgsLength","lastIndexOf","lens","lensIndex","lensPath","lensProp","liftN","arity","lifted","XMap","_xmap","mapObjIndexed","mathMod","mean","median","memoize","merge","mergeAll","none","nth","offset","nthArg","partition","pathEq","_pipe","pipe","tail","pipeK","pipeP","p","product","identity","pickAll","useWith","transformers","project","path","paths","propEq","XReduceBy","reduceBy","reduceWhile","_complement","reject","sequence","slice","fromIndex","toIndex","sortBy","aa","bb","split","splitAt","splitEvery","startsWith","sum","symmetricDifference","symmetricDifferenceWith","XTake","take","takeLast","takeLastWhile","XTakeWhile","takeWhile","XTap","tap","test","toLower","_quote","s","escaped","pad","_toISOString","_toString","seen","recur","y","mapPairs","k","repr","toUpper","transduce","traverse","ws","zeroWidth","hasProtoTrim","_trim","str","beginRx","endRx","trim","union","uniq","hasOrAdd","shouldAdd","set","prevSize","newSize","bIdx","uniqBy","props","vals","whereEq","without"],"sourceRoot":""}